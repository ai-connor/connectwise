/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the AgreementApplicationParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgreementApplicationParameters{}

// AgreementApplicationParameters struct for AgreementApplicationParameters
type AgreementApplicationParameters struct {
	ApplicationUnit        *AgreementApplicationUnit         `json:"applicationUnit,omitempty"`
	ApplicationLimit       *AgreementApplicationLimit        `json:"applicationLimit,omitempty"`
	ApplicationLimitAmount *float64                          `json:"applicationLimitAmount,omitempty"`
	AvailablePer           *AgreementApplicationAviablePer   `json:"availablePer,omitempty"`
	CoversTimeFlag         *bool                             `json:"coversTimeFlag,omitempty"`
	CoversExpensesFlag     *bool                             `json:"coversExpensesFlag,omitempty"`
	CoversProductsFlag     *bool                             `json:"coversProductsFlag,omitempty"`
	CoversTaxFlag          *bool                             `json:"coversTaxFlag,omitempty"`
	CarryoverUnusedFlag    *bool                             `json:"carryoverUnusedFlag,omitempty"`
	CarryOverDays          NullableInt32                     `json:"carryOverDays,omitempty"`
	AllowOverrunsFlag      *bool                             `json:"allowOverrunsFlag,omitempty"`
	OverrunLimit           NullableInt32                     `json:"overrunLimit,omitempty"`
	AgreementExpiresFlag   *bool                             `json:"agreementExpiresFlag,omitempty"`
	ChargeAdjustmentsFlag  *bool                             `json:"chargeAdjustmentsFlag,omitempty"`
	PrepayFlag             *bool                             `json:"prepayFlag,omitempty"`
	AgrBillingCycle        *AgreementApplicationBillingCycle `json:"agrBillingCycle,omitempty"`
	UserDefinedFieldValues []UserDefinedFieldValueModel      `json:"userDefinedFieldValues,omitempty"`
}

// NewAgreementApplicationParameters instantiates a new AgreementApplicationParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgreementApplicationParameters() *AgreementApplicationParameters {
	this := AgreementApplicationParameters{}
	return &this
}

// NewAgreementApplicationParametersWithDefaults instantiates a new AgreementApplicationParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgreementApplicationParametersWithDefaults() *AgreementApplicationParameters {
	this := AgreementApplicationParameters{}
	return &this
}

// GetApplicationUnit returns the ApplicationUnit field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetApplicationUnit() AgreementApplicationUnit {
	if o == nil || IsNil(o.ApplicationUnit) {
		var ret AgreementApplicationUnit
		return ret
	}
	return *o.ApplicationUnit
}

// GetApplicationUnitOk returns a tuple with the ApplicationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetApplicationUnitOk() (*AgreementApplicationUnit, bool) {
	if o == nil || IsNil(o.ApplicationUnit) {
		return nil, false
	}
	return o.ApplicationUnit, true
}

// HasApplicationUnit returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasApplicationUnit() bool {
	if o != nil && !IsNil(o.ApplicationUnit) {
		return true
	}

	return false
}

// SetApplicationUnit gets a reference to the given AgreementApplicationUnit and assigns it to the ApplicationUnit field.
func (o *AgreementApplicationParameters) SetApplicationUnit(v AgreementApplicationUnit) {
	o.ApplicationUnit = &v
}

// GetApplicationLimit returns the ApplicationLimit field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetApplicationLimit() AgreementApplicationLimit {
	if o == nil || IsNil(o.ApplicationLimit) {
		var ret AgreementApplicationLimit
		return ret
	}
	return *o.ApplicationLimit
}

// GetApplicationLimitOk returns a tuple with the ApplicationLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetApplicationLimitOk() (*AgreementApplicationLimit, bool) {
	if o == nil || IsNil(o.ApplicationLimit) {
		return nil, false
	}
	return o.ApplicationLimit, true
}

// HasApplicationLimit returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasApplicationLimit() bool {
	if o != nil && !IsNil(o.ApplicationLimit) {
		return true
	}

	return false
}

// SetApplicationLimit gets a reference to the given AgreementApplicationLimit and assigns it to the ApplicationLimit field.
func (o *AgreementApplicationParameters) SetApplicationLimit(v AgreementApplicationLimit) {
	o.ApplicationLimit = &v
}

// GetApplicationLimitAmount returns the ApplicationLimitAmount field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetApplicationLimitAmount() float64 {
	if o == nil || IsNil(o.ApplicationLimitAmount) {
		var ret float64
		return ret
	}
	return *o.ApplicationLimitAmount
}

// GetApplicationLimitAmountOk returns a tuple with the ApplicationLimitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetApplicationLimitAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.ApplicationLimitAmount) {
		return nil, false
	}
	return o.ApplicationLimitAmount, true
}

// HasApplicationLimitAmount returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasApplicationLimitAmount() bool {
	if o != nil && !IsNil(o.ApplicationLimitAmount) {
		return true
	}

	return false
}

// SetApplicationLimitAmount gets a reference to the given float64 and assigns it to the ApplicationLimitAmount field.
func (o *AgreementApplicationParameters) SetApplicationLimitAmount(v float64) {
	o.ApplicationLimitAmount = &v
}

// GetAvailablePer returns the AvailablePer field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetAvailablePer() AgreementApplicationAviablePer {
	if o == nil || IsNil(o.AvailablePer) {
		var ret AgreementApplicationAviablePer
		return ret
	}
	return *o.AvailablePer
}

// GetAvailablePerOk returns a tuple with the AvailablePer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetAvailablePerOk() (*AgreementApplicationAviablePer, bool) {
	if o == nil || IsNil(o.AvailablePer) {
		return nil, false
	}
	return o.AvailablePer, true
}

// HasAvailablePer returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasAvailablePer() bool {
	if o != nil && !IsNil(o.AvailablePer) {
		return true
	}

	return false
}

// SetAvailablePer gets a reference to the given AgreementApplicationAviablePer and assigns it to the AvailablePer field.
func (o *AgreementApplicationParameters) SetAvailablePer(v AgreementApplicationAviablePer) {
	o.AvailablePer = &v
}

// GetCoversTimeFlag returns the CoversTimeFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetCoversTimeFlag() bool {
	if o == nil || IsNil(o.CoversTimeFlag) {
		var ret bool
		return ret
	}
	return *o.CoversTimeFlag
}

// GetCoversTimeFlagOk returns a tuple with the CoversTimeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetCoversTimeFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.CoversTimeFlag) {
		return nil, false
	}
	return o.CoversTimeFlag, true
}

// HasCoversTimeFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasCoversTimeFlag() bool {
	if o != nil && !IsNil(o.CoversTimeFlag) {
		return true
	}

	return false
}

// SetCoversTimeFlag gets a reference to the given bool and assigns it to the CoversTimeFlag field.
func (o *AgreementApplicationParameters) SetCoversTimeFlag(v bool) {
	o.CoversTimeFlag = &v
}

// GetCoversExpensesFlag returns the CoversExpensesFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetCoversExpensesFlag() bool {
	if o == nil || IsNil(o.CoversExpensesFlag) {
		var ret bool
		return ret
	}
	return *o.CoversExpensesFlag
}

// GetCoversExpensesFlagOk returns a tuple with the CoversExpensesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetCoversExpensesFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.CoversExpensesFlag) {
		return nil, false
	}
	return o.CoversExpensesFlag, true
}

// HasCoversExpensesFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasCoversExpensesFlag() bool {
	if o != nil && !IsNil(o.CoversExpensesFlag) {
		return true
	}

	return false
}

// SetCoversExpensesFlag gets a reference to the given bool and assigns it to the CoversExpensesFlag field.
func (o *AgreementApplicationParameters) SetCoversExpensesFlag(v bool) {
	o.CoversExpensesFlag = &v
}

// GetCoversProductsFlag returns the CoversProductsFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetCoversProductsFlag() bool {
	if o == nil || IsNil(o.CoversProductsFlag) {
		var ret bool
		return ret
	}
	return *o.CoversProductsFlag
}

// GetCoversProductsFlagOk returns a tuple with the CoversProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetCoversProductsFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.CoversProductsFlag) {
		return nil, false
	}
	return o.CoversProductsFlag, true
}

// HasCoversProductsFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasCoversProductsFlag() bool {
	if o != nil && !IsNil(o.CoversProductsFlag) {
		return true
	}

	return false
}

// SetCoversProductsFlag gets a reference to the given bool and assigns it to the CoversProductsFlag field.
func (o *AgreementApplicationParameters) SetCoversProductsFlag(v bool) {
	o.CoversProductsFlag = &v
}

// GetCoversTaxFlag returns the CoversTaxFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetCoversTaxFlag() bool {
	if o == nil || IsNil(o.CoversTaxFlag) {
		var ret bool
		return ret
	}
	return *o.CoversTaxFlag
}

// GetCoversTaxFlagOk returns a tuple with the CoversTaxFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetCoversTaxFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.CoversTaxFlag) {
		return nil, false
	}
	return o.CoversTaxFlag, true
}

// HasCoversTaxFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasCoversTaxFlag() bool {
	if o != nil && !IsNil(o.CoversTaxFlag) {
		return true
	}

	return false
}

// SetCoversTaxFlag gets a reference to the given bool and assigns it to the CoversTaxFlag field.
func (o *AgreementApplicationParameters) SetCoversTaxFlag(v bool) {
	o.CoversTaxFlag = &v
}

// GetCarryoverUnusedFlag returns the CarryoverUnusedFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetCarryoverUnusedFlag() bool {
	if o == nil || IsNil(o.CarryoverUnusedFlag) {
		var ret bool
		return ret
	}
	return *o.CarryoverUnusedFlag
}

// GetCarryoverUnusedFlagOk returns a tuple with the CarryoverUnusedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetCarryoverUnusedFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.CarryoverUnusedFlag) {
		return nil, false
	}
	return o.CarryoverUnusedFlag, true
}

// HasCarryoverUnusedFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasCarryoverUnusedFlag() bool {
	if o != nil && !IsNil(o.CarryoverUnusedFlag) {
		return true
	}

	return false
}

// SetCarryoverUnusedFlag gets a reference to the given bool and assigns it to the CarryoverUnusedFlag field.
func (o *AgreementApplicationParameters) SetCarryoverUnusedFlag(v bool) {
	o.CarryoverUnusedFlag = &v
}

// GetCarryOverDays returns the CarryOverDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgreementApplicationParameters) GetCarryOverDays() int32 {
	if o == nil || IsNil(o.CarryOverDays.Get()) {
		var ret int32
		return ret
	}
	return *o.CarryOverDays.Get()
}

// GetCarryOverDaysOk returns a tuple with the CarryOverDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgreementApplicationParameters) GetCarryOverDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CarryOverDays.Get(), o.CarryOverDays.IsSet()
}

// HasCarryOverDays returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasCarryOverDays() bool {
	if o != nil && o.CarryOverDays.IsSet() {
		return true
	}

	return false
}

// SetCarryOverDays gets a reference to the given NullableInt32 and assigns it to the CarryOverDays field.
func (o *AgreementApplicationParameters) SetCarryOverDays(v int32) {
	o.CarryOverDays.Set(&v)
}

// SetCarryOverDaysNil sets the value for CarryOverDays to be an explicit nil
func (o *AgreementApplicationParameters) SetCarryOverDaysNil() {
	o.CarryOverDays.Set(nil)
}

// UnsetCarryOverDays ensures that no value is present for CarryOverDays, not even an explicit nil
func (o *AgreementApplicationParameters) UnsetCarryOverDays() {
	o.CarryOverDays.Unset()
}

// GetAllowOverrunsFlag returns the AllowOverrunsFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetAllowOverrunsFlag() bool {
	if o == nil || IsNil(o.AllowOverrunsFlag) {
		var ret bool
		return ret
	}
	return *o.AllowOverrunsFlag
}

// GetAllowOverrunsFlagOk returns a tuple with the AllowOverrunsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetAllowOverrunsFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowOverrunsFlag) {
		return nil, false
	}
	return o.AllowOverrunsFlag, true
}

// HasAllowOverrunsFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasAllowOverrunsFlag() bool {
	if o != nil && !IsNil(o.AllowOverrunsFlag) {
		return true
	}

	return false
}

// SetAllowOverrunsFlag gets a reference to the given bool and assigns it to the AllowOverrunsFlag field.
func (o *AgreementApplicationParameters) SetAllowOverrunsFlag(v bool) {
	o.AllowOverrunsFlag = &v
}

// GetOverrunLimit returns the OverrunLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgreementApplicationParameters) GetOverrunLimit() int32 {
	if o == nil || IsNil(o.OverrunLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.OverrunLimit.Get()
}

// GetOverrunLimitOk returns a tuple with the OverrunLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgreementApplicationParameters) GetOverrunLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverrunLimit.Get(), o.OverrunLimit.IsSet()
}

// HasOverrunLimit returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasOverrunLimit() bool {
	if o != nil && o.OverrunLimit.IsSet() {
		return true
	}

	return false
}

// SetOverrunLimit gets a reference to the given NullableInt32 and assigns it to the OverrunLimit field.
func (o *AgreementApplicationParameters) SetOverrunLimit(v int32) {
	o.OverrunLimit.Set(&v)
}

// SetOverrunLimitNil sets the value for OverrunLimit to be an explicit nil
func (o *AgreementApplicationParameters) SetOverrunLimitNil() {
	o.OverrunLimit.Set(nil)
}

// UnsetOverrunLimit ensures that no value is present for OverrunLimit, not even an explicit nil
func (o *AgreementApplicationParameters) UnsetOverrunLimit() {
	o.OverrunLimit.Unset()
}

// GetAgreementExpiresFlag returns the AgreementExpiresFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetAgreementExpiresFlag() bool {
	if o == nil || IsNil(o.AgreementExpiresFlag) {
		var ret bool
		return ret
	}
	return *o.AgreementExpiresFlag
}

// GetAgreementExpiresFlagOk returns a tuple with the AgreementExpiresFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetAgreementExpiresFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.AgreementExpiresFlag) {
		return nil, false
	}
	return o.AgreementExpiresFlag, true
}

// HasAgreementExpiresFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasAgreementExpiresFlag() bool {
	if o != nil && !IsNil(o.AgreementExpiresFlag) {
		return true
	}

	return false
}

// SetAgreementExpiresFlag gets a reference to the given bool and assigns it to the AgreementExpiresFlag field.
func (o *AgreementApplicationParameters) SetAgreementExpiresFlag(v bool) {
	o.AgreementExpiresFlag = &v
}

// GetChargeAdjustmentsFlag returns the ChargeAdjustmentsFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetChargeAdjustmentsFlag() bool {
	if o == nil || IsNil(o.ChargeAdjustmentsFlag) {
		var ret bool
		return ret
	}
	return *o.ChargeAdjustmentsFlag
}

// GetChargeAdjustmentsFlagOk returns a tuple with the ChargeAdjustmentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetChargeAdjustmentsFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ChargeAdjustmentsFlag) {
		return nil, false
	}
	return o.ChargeAdjustmentsFlag, true
}

// HasChargeAdjustmentsFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasChargeAdjustmentsFlag() bool {
	if o != nil && !IsNil(o.ChargeAdjustmentsFlag) {
		return true
	}

	return false
}

// SetChargeAdjustmentsFlag gets a reference to the given bool and assigns it to the ChargeAdjustmentsFlag field.
func (o *AgreementApplicationParameters) SetChargeAdjustmentsFlag(v bool) {
	o.ChargeAdjustmentsFlag = &v
}

// GetPrepayFlag returns the PrepayFlag field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetPrepayFlag() bool {
	if o == nil || IsNil(o.PrepayFlag) {
		var ret bool
		return ret
	}
	return *o.PrepayFlag
}

// GetPrepayFlagOk returns a tuple with the PrepayFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetPrepayFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.PrepayFlag) {
		return nil, false
	}
	return o.PrepayFlag, true
}

// HasPrepayFlag returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasPrepayFlag() bool {
	if o != nil && !IsNil(o.PrepayFlag) {
		return true
	}

	return false
}

// SetPrepayFlag gets a reference to the given bool and assigns it to the PrepayFlag field.
func (o *AgreementApplicationParameters) SetPrepayFlag(v bool) {
	o.PrepayFlag = &v
}

// GetAgrBillingCycle returns the AgrBillingCycle field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetAgrBillingCycle() AgreementApplicationBillingCycle {
	if o == nil || IsNil(o.AgrBillingCycle) {
		var ret AgreementApplicationBillingCycle
		return ret
	}
	return *o.AgrBillingCycle
}

// GetAgrBillingCycleOk returns a tuple with the AgrBillingCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetAgrBillingCycleOk() (*AgreementApplicationBillingCycle, bool) {
	if o == nil || IsNil(o.AgrBillingCycle) {
		return nil, false
	}
	return o.AgrBillingCycle, true
}

// HasAgrBillingCycle returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasAgrBillingCycle() bool {
	if o != nil && !IsNil(o.AgrBillingCycle) {
		return true
	}

	return false
}

// SetAgrBillingCycle gets a reference to the given AgreementApplicationBillingCycle and assigns it to the AgrBillingCycle field.
func (o *AgreementApplicationParameters) SetAgrBillingCycle(v AgreementApplicationBillingCycle) {
	o.AgrBillingCycle = &v
}

// GetUserDefinedFieldValues returns the UserDefinedFieldValues field value if set, zero value otherwise.
func (o *AgreementApplicationParameters) GetUserDefinedFieldValues() []UserDefinedFieldValueModel {
	if o == nil || IsNil(o.UserDefinedFieldValues) {
		var ret []UserDefinedFieldValueModel
		return ret
	}
	return o.UserDefinedFieldValues
}

// GetUserDefinedFieldValuesOk returns a tuple with the UserDefinedFieldValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementApplicationParameters) GetUserDefinedFieldValuesOk() ([]UserDefinedFieldValueModel, bool) {
	if o == nil || IsNil(o.UserDefinedFieldValues) {
		return nil, false
	}
	return o.UserDefinedFieldValues, true
}

// HasUserDefinedFieldValues returns a boolean if a field has been set.
func (o *AgreementApplicationParameters) HasUserDefinedFieldValues() bool {
	if o != nil && !IsNil(o.UserDefinedFieldValues) {
		return true
	}

	return false
}

// SetUserDefinedFieldValues gets a reference to the given []UserDefinedFieldValueModel and assigns it to the UserDefinedFieldValues field.
func (o *AgreementApplicationParameters) SetUserDefinedFieldValues(v []UserDefinedFieldValueModel) {
	o.UserDefinedFieldValues = v
}

func (o AgreementApplicationParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgreementApplicationParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationUnit) {
		toSerialize["applicationUnit"] = o.ApplicationUnit
	}
	if !IsNil(o.ApplicationLimit) {
		toSerialize["applicationLimit"] = o.ApplicationLimit
	}
	if !IsNil(o.ApplicationLimitAmount) {
		toSerialize["applicationLimitAmount"] = o.ApplicationLimitAmount
	}
	if !IsNil(o.AvailablePer) {
		toSerialize["availablePer"] = o.AvailablePer
	}
	if !IsNil(o.CoversTimeFlag) {
		toSerialize["coversTimeFlag"] = o.CoversTimeFlag
	}
	if !IsNil(o.CoversExpensesFlag) {
		toSerialize["coversExpensesFlag"] = o.CoversExpensesFlag
	}
	if !IsNil(o.CoversProductsFlag) {
		toSerialize["coversProductsFlag"] = o.CoversProductsFlag
	}
	if !IsNil(o.CoversTaxFlag) {
		toSerialize["coversTaxFlag"] = o.CoversTaxFlag
	}
	if !IsNil(o.CarryoverUnusedFlag) {
		toSerialize["carryoverUnusedFlag"] = o.CarryoverUnusedFlag
	}
	if o.CarryOverDays.IsSet() {
		toSerialize["carryOverDays"] = o.CarryOverDays.Get()
	}
	if !IsNil(o.AllowOverrunsFlag) {
		toSerialize["allowOverrunsFlag"] = o.AllowOverrunsFlag
	}
	if o.OverrunLimit.IsSet() {
		toSerialize["overrunLimit"] = o.OverrunLimit.Get()
	}
	if !IsNil(o.AgreementExpiresFlag) {
		toSerialize["agreementExpiresFlag"] = o.AgreementExpiresFlag
	}
	if !IsNil(o.ChargeAdjustmentsFlag) {
		toSerialize["chargeAdjustmentsFlag"] = o.ChargeAdjustmentsFlag
	}
	if !IsNil(o.PrepayFlag) {
		toSerialize["prepayFlag"] = o.PrepayFlag
	}
	if !IsNil(o.AgrBillingCycle) {
		toSerialize["agrBillingCycle"] = o.AgrBillingCycle
	}
	if !IsNil(o.UserDefinedFieldValues) {
		toSerialize["userDefinedFieldValues"] = o.UserDefinedFieldValues
	}
	return toSerialize, nil
}

type NullableAgreementApplicationParameters struct {
	value *AgreementApplicationParameters
	isSet bool
}

func (v NullableAgreementApplicationParameters) Get() *AgreementApplicationParameters {
	return v.value
}

func (v *NullableAgreementApplicationParameters) Set(val *AgreementApplicationParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAgreementApplicationParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAgreementApplicationParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgreementApplicationParameters(val *AgreementApplicationParameters) *NullableAgreementApplicationParameters {
	return &NullableAgreementApplicationParameters{value: val, isSet: true}
}

func (v NullableAgreementApplicationParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgreementApplicationParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
