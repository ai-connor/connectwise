/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the AgreementBillingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgreementBillingInfo{}

// AgreementBillingInfo struct for AgreementBillingInfo
type AgreementBillingInfo struct {
	AgreementName   *string  `json:"agreementName,omitempty"`
	AgreementType   *string  `json:"agreementType,omitempty"`
	AgreementAmount *float64 `json:"agreementAmount,omitempty"`
	AgreementRecId  *int32   `json:"agreementRecId,omitempty"`
	ParentRecId     *int32   `json:"parentRecId,omitempty"`
}

// NewAgreementBillingInfo instantiates a new AgreementBillingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgreementBillingInfo() *AgreementBillingInfo {
	this := AgreementBillingInfo{}
	return &this
}

// NewAgreementBillingInfoWithDefaults instantiates a new AgreementBillingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgreementBillingInfoWithDefaults() *AgreementBillingInfo {
	this := AgreementBillingInfo{}
	return &this
}

// GetAgreementName returns the AgreementName field value if set, zero value otherwise.
func (o *AgreementBillingInfo) GetAgreementName() string {
	if o == nil || IsNil(o.AgreementName) {
		var ret string
		return ret
	}
	return *o.AgreementName
}

// GetAgreementNameOk returns a tuple with the AgreementName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementBillingInfo) GetAgreementNameOk() (*string, bool) {
	if o == nil || IsNil(o.AgreementName) {
		return nil, false
	}
	return o.AgreementName, true
}

// HasAgreementName returns a boolean if a field has been set.
func (o *AgreementBillingInfo) HasAgreementName() bool {
	if o != nil && !IsNil(o.AgreementName) {
		return true
	}

	return false
}

// SetAgreementName gets a reference to the given string and assigns it to the AgreementName field.
func (o *AgreementBillingInfo) SetAgreementName(v string) {
	o.AgreementName = &v
}

// GetAgreementType returns the AgreementType field value if set, zero value otherwise.
func (o *AgreementBillingInfo) GetAgreementType() string {
	if o == nil || IsNil(o.AgreementType) {
		var ret string
		return ret
	}
	return *o.AgreementType
}

// GetAgreementTypeOk returns a tuple with the AgreementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementBillingInfo) GetAgreementTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AgreementType) {
		return nil, false
	}
	return o.AgreementType, true
}

// HasAgreementType returns a boolean if a field has been set.
func (o *AgreementBillingInfo) HasAgreementType() bool {
	if o != nil && !IsNil(o.AgreementType) {
		return true
	}

	return false
}

// SetAgreementType gets a reference to the given string and assigns it to the AgreementType field.
func (o *AgreementBillingInfo) SetAgreementType(v string) {
	o.AgreementType = &v
}

// GetAgreementAmount returns the AgreementAmount field value if set, zero value otherwise.
func (o *AgreementBillingInfo) GetAgreementAmount() float64 {
	if o == nil || IsNil(o.AgreementAmount) {
		var ret float64
		return ret
	}
	return *o.AgreementAmount
}

// GetAgreementAmountOk returns a tuple with the AgreementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementBillingInfo) GetAgreementAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.AgreementAmount) {
		return nil, false
	}
	return o.AgreementAmount, true
}

// HasAgreementAmount returns a boolean if a field has been set.
func (o *AgreementBillingInfo) HasAgreementAmount() bool {
	if o != nil && !IsNil(o.AgreementAmount) {
		return true
	}

	return false
}

// SetAgreementAmount gets a reference to the given float64 and assigns it to the AgreementAmount field.
func (o *AgreementBillingInfo) SetAgreementAmount(v float64) {
	o.AgreementAmount = &v
}

// GetAgreementRecId returns the AgreementRecId field value if set, zero value otherwise.
func (o *AgreementBillingInfo) GetAgreementRecId() int32 {
	if o == nil || IsNil(o.AgreementRecId) {
		var ret int32
		return ret
	}
	return *o.AgreementRecId
}

// GetAgreementRecIdOk returns a tuple with the AgreementRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementBillingInfo) GetAgreementRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AgreementRecId) {
		return nil, false
	}
	return o.AgreementRecId, true
}

// HasAgreementRecId returns a boolean if a field has been set.
func (o *AgreementBillingInfo) HasAgreementRecId() bool {
	if o != nil && !IsNil(o.AgreementRecId) {
		return true
	}

	return false
}

// SetAgreementRecId gets a reference to the given int32 and assigns it to the AgreementRecId field.
func (o *AgreementBillingInfo) SetAgreementRecId(v int32) {
	o.AgreementRecId = &v
}

// GetParentRecId returns the ParentRecId field value if set, zero value otherwise.
func (o *AgreementBillingInfo) GetParentRecId() int32 {
	if o == nil || IsNil(o.ParentRecId) {
		var ret int32
		return ret
	}
	return *o.ParentRecId
}

// GetParentRecIdOk returns a tuple with the ParentRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementBillingInfo) GetParentRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentRecId) {
		return nil, false
	}
	return o.ParentRecId, true
}

// HasParentRecId returns a boolean if a field has been set.
func (o *AgreementBillingInfo) HasParentRecId() bool {
	if o != nil && !IsNil(o.ParentRecId) {
		return true
	}

	return false
}

// SetParentRecId gets a reference to the given int32 and assigns it to the ParentRecId field.
func (o *AgreementBillingInfo) SetParentRecId(v int32) {
	o.ParentRecId = &v
}

func (o AgreementBillingInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgreementBillingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgreementName) {
		toSerialize["agreementName"] = o.AgreementName
	}
	if !IsNil(o.AgreementType) {
		toSerialize["agreementType"] = o.AgreementType
	}
	if !IsNil(o.AgreementAmount) {
		toSerialize["agreementAmount"] = o.AgreementAmount
	}
	if !IsNil(o.AgreementRecId) {
		toSerialize["agreementRecId"] = o.AgreementRecId
	}
	if !IsNil(o.ParentRecId) {
		toSerialize["parentRecId"] = o.ParentRecId
	}
	return toSerialize, nil
}

type NullableAgreementBillingInfo struct {
	value *AgreementBillingInfo
	isSet bool
}

func (v NullableAgreementBillingInfo) Get() *AgreementBillingInfo {
	return v.value
}

func (v *NullableAgreementBillingInfo) Set(val *AgreementBillingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAgreementBillingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAgreementBillingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgreementBillingInfo(val *AgreementBillingInfo) *NullableAgreementBillingInfo {
	return &NullableAgreementBillingInfo{value: val, isSet: true}
}

func (v NullableAgreementBillingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgreementBillingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
