/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ApiMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMember{}

// ApiMember struct for ApiMember
type ApiMember struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 15;
	Identifier string `json:"identifier"`
	//  Max length: 30; Required On Updates;
	Name *string `json:"name,omitempty"`
	//  Max length: 250;
	EmailAddress            *string                    `json:"emailAddress,omitempty"`
	InactiveFlag            NullableBool               `json:"inactiveFlag,omitempty"`
	InactiveDate            *time.Time                 `json:"inactiveDate,omitempty"`
	TimeZone                *TimeZoneSetupReference    `json:"timeZone,omitempty"`
	SecurityRole            *SecurityRoleReference     `json:"securityRole,omitempty"`
	StructureLevel          *StructureReference        `json:"structureLevel,omitempty"`
	SecurityLocation        *SystemLocationReference   `json:"securityLocation,omitempty"`
	DefaultLocation         *SystemLocationReference   `json:"defaultLocation,omitempty"`
	DefaultDepartment       *SystemDepartmentReference `json:"defaultDepartment,omitempty"`
	SalesDefaultLocation    *SystemLocationReference   `json:"salesDefaultLocation,omitempty"`
	ServiceDefaultBoard     *BoardReference            `json:"serviceDefaultBoard,omitempty"`
	Notes                   *string                    `json:"notes,omitempty"`
	ExcludedServiceBoardIds []int32                    `json:"excludedServiceBoardIds,omitempty"`
	BlockPriceFlag          NullableBool               `json:"blockPriceFlag,omitempty"`
	BlockCostFlag           NullableBool               `json:"blockCostFlag,omitempty"`
	Info                    *map[string]string         `json:"_info,omitempty"`
}

type _ApiMember ApiMember

// NewApiMember instantiates a new ApiMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMember(identifier string) *ApiMember {
	this := ApiMember{}
	this.Identifier = identifier
	return &this
}

// NewApiMemberWithDefaults instantiates a new ApiMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMemberWithDefaults() *ApiMember {
	this := ApiMember{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiMember) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiMember) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ApiMember) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value
func (o *ApiMember) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *ApiMember) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *ApiMember) SetIdentifier(v string) {
	o.Identifier = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiMember) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiMember) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiMember) SetName(v string) {
	o.Name = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *ApiMember) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *ApiMember) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *ApiMember) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMember) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMember) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *ApiMember) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *ApiMember) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}

// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *ApiMember) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *ApiMember) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *ApiMember) GetInactiveDate() time.Time {
	if o == nil || IsNil(o.InactiveDate) {
		var ret time.Time
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetInactiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *ApiMember) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given time.Time and assigns it to the InactiveDate field.
func (o *ApiMember) SetInactiveDate(v time.Time) {
	o.InactiveDate = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *ApiMember) GetTimeZone() TimeZoneSetupReference {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimeZoneSetupReference
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetTimeZoneOk() (*TimeZoneSetupReference, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *ApiMember) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZoneSetupReference and assigns it to the TimeZone field.
func (o *ApiMember) SetTimeZone(v TimeZoneSetupReference) {
	o.TimeZone = &v
}

// GetSecurityRole returns the SecurityRole field value if set, zero value otherwise.
func (o *ApiMember) GetSecurityRole() SecurityRoleReference {
	if o == nil || IsNil(o.SecurityRole) {
		var ret SecurityRoleReference
		return ret
	}
	return *o.SecurityRole
}

// GetSecurityRoleOk returns a tuple with the SecurityRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetSecurityRoleOk() (*SecurityRoleReference, bool) {
	if o == nil || IsNil(o.SecurityRole) {
		return nil, false
	}
	return o.SecurityRole, true
}

// HasSecurityRole returns a boolean if a field has been set.
func (o *ApiMember) HasSecurityRole() bool {
	if o != nil && !IsNil(o.SecurityRole) {
		return true
	}

	return false
}

// SetSecurityRole gets a reference to the given SecurityRoleReference and assigns it to the SecurityRole field.
func (o *ApiMember) SetSecurityRole(v SecurityRoleReference) {
	o.SecurityRole = &v
}

// GetStructureLevel returns the StructureLevel field value if set, zero value otherwise.
func (o *ApiMember) GetStructureLevel() StructureReference {
	if o == nil || IsNil(o.StructureLevel) {
		var ret StructureReference
		return ret
	}
	return *o.StructureLevel
}

// GetStructureLevelOk returns a tuple with the StructureLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetStructureLevelOk() (*StructureReference, bool) {
	if o == nil || IsNil(o.StructureLevel) {
		return nil, false
	}
	return o.StructureLevel, true
}

// HasStructureLevel returns a boolean if a field has been set.
func (o *ApiMember) HasStructureLevel() bool {
	if o != nil && !IsNil(o.StructureLevel) {
		return true
	}

	return false
}

// SetStructureLevel gets a reference to the given StructureReference and assigns it to the StructureLevel field.
func (o *ApiMember) SetStructureLevel(v StructureReference) {
	o.StructureLevel = &v
}

// GetSecurityLocation returns the SecurityLocation field value if set, zero value otherwise.
func (o *ApiMember) GetSecurityLocation() SystemLocationReference {
	if o == nil || IsNil(o.SecurityLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SecurityLocation
}

// GetSecurityLocationOk returns a tuple with the SecurityLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetSecurityLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SecurityLocation) {
		return nil, false
	}
	return o.SecurityLocation, true
}

// HasSecurityLocation returns a boolean if a field has been set.
func (o *ApiMember) HasSecurityLocation() bool {
	if o != nil && !IsNil(o.SecurityLocation) {
		return true
	}

	return false
}

// SetSecurityLocation gets a reference to the given SystemLocationReference and assigns it to the SecurityLocation field.
func (o *ApiMember) SetSecurityLocation(v SystemLocationReference) {
	o.SecurityLocation = &v
}

// GetDefaultLocation returns the DefaultLocation field value if set, zero value otherwise.
func (o *ApiMember) GetDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.DefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.DefaultLocation) {
		return nil, false
	}
	return o.DefaultLocation, true
}

// HasDefaultLocation returns a boolean if a field has been set.
func (o *ApiMember) HasDefaultLocation() bool {
	if o != nil && !IsNil(o.DefaultLocation) {
		return true
	}

	return false
}

// SetDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the DefaultLocation field.
func (o *ApiMember) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = &v
}

// GetDefaultDepartment returns the DefaultDepartment field value if set, zero value otherwise.
func (o *ApiMember) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.DefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.DefaultDepartment) {
		return nil, false
	}
	return o.DefaultDepartment, true
}

// HasDefaultDepartment returns a boolean if a field has been set.
func (o *ApiMember) HasDefaultDepartment() bool {
	if o != nil && !IsNil(o.DefaultDepartment) {
		return true
	}

	return false
}

// SetDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the DefaultDepartment field.
func (o *ApiMember) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = &v
}

// GetSalesDefaultLocation returns the SalesDefaultLocation field value if set, zero value otherwise.
func (o *ApiMember) GetSalesDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SalesDefaultLocation
}

// GetSalesDefaultLocationOk returns a tuple with the SalesDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetSalesDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		return nil, false
	}
	return o.SalesDefaultLocation, true
}

// HasSalesDefaultLocation returns a boolean if a field has been set.
func (o *ApiMember) HasSalesDefaultLocation() bool {
	if o != nil && !IsNil(o.SalesDefaultLocation) {
		return true
	}

	return false
}

// SetSalesDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the SalesDefaultLocation field.
func (o *ApiMember) SetSalesDefaultLocation(v SystemLocationReference) {
	o.SalesDefaultLocation = &v
}

// GetServiceDefaultBoard returns the ServiceDefaultBoard field value if set, zero value otherwise.
func (o *ApiMember) GetServiceDefaultBoard() BoardReference {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceDefaultBoard
}

// GetServiceDefaultBoardOk returns a tuple with the ServiceDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetServiceDefaultBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		return nil, false
	}
	return o.ServiceDefaultBoard, true
}

// HasServiceDefaultBoard returns a boolean if a field has been set.
func (o *ApiMember) HasServiceDefaultBoard() bool {
	if o != nil && !IsNil(o.ServiceDefaultBoard) {
		return true
	}

	return false
}

// SetServiceDefaultBoard gets a reference to the given BoardReference and assigns it to the ServiceDefaultBoard field.
func (o *ApiMember) SetServiceDefaultBoard(v BoardReference) {
	o.ServiceDefaultBoard = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ApiMember) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *ApiMember) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *ApiMember) SetNotes(v string) {
	o.Notes = &v
}

// GetExcludedServiceBoardIds returns the ExcludedServiceBoardIds field value if set, zero value otherwise.
func (o *ApiMember) GetExcludedServiceBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedServiceBoardIds
}

// GetExcludedServiceBoardIdsOk returns a tuple with the ExcludedServiceBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetExcludedServiceBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		return nil, false
	}
	return o.ExcludedServiceBoardIds, true
}

// HasExcludedServiceBoardIds returns a boolean if a field has been set.
func (o *ApiMember) HasExcludedServiceBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedServiceBoardIds) {
		return true
	}

	return false
}

// SetExcludedServiceBoardIds gets a reference to the given []int32 and assigns it to the ExcludedServiceBoardIds field.
func (o *ApiMember) SetExcludedServiceBoardIds(v []int32) {
	o.ExcludedServiceBoardIds = v
}

// GetBlockPriceFlag returns the BlockPriceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMember) GetBlockPriceFlag() bool {
	if o == nil || IsNil(o.BlockPriceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BlockPriceFlag.Get()
}

// GetBlockPriceFlagOk returns a tuple with the BlockPriceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMember) GetBlockPriceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockPriceFlag.Get(), o.BlockPriceFlag.IsSet()
}

// HasBlockPriceFlag returns a boolean if a field has been set.
func (o *ApiMember) HasBlockPriceFlag() bool {
	if o != nil && o.BlockPriceFlag.IsSet() {
		return true
	}

	return false
}

// SetBlockPriceFlag gets a reference to the given NullableBool and assigns it to the BlockPriceFlag field.
func (o *ApiMember) SetBlockPriceFlag(v bool) {
	o.BlockPriceFlag.Set(&v)
}

// SetBlockPriceFlagNil sets the value for BlockPriceFlag to be an explicit nil
func (o *ApiMember) SetBlockPriceFlagNil() {
	o.BlockPriceFlag.Set(nil)
}

// UnsetBlockPriceFlag ensures that no value is present for BlockPriceFlag, not even an explicit nil
func (o *ApiMember) UnsetBlockPriceFlag() {
	o.BlockPriceFlag.Unset()
}

// GetBlockCostFlag returns the BlockCostFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMember) GetBlockCostFlag() bool {
	if o == nil || IsNil(o.BlockCostFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BlockCostFlag.Get()
}

// GetBlockCostFlagOk returns a tuple with the BlockCostFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMember) GetBlockCostFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockCostFlag.Get(), o.BlockCostFlag.IsSet()
}

// HasBlockCostFlag returns a boolean if a field has been set.
func (o *ApiMember) HasBlockCostFlag() bool {
	if o != nil && o.BlockCostFlag.IsSet() {
		return true
	}

	return false
}

// SetBlockCostFlag gets a reference to the given NullableBool and assigns it to the BlockCostFlag field.
func (o *ApiMember) SetBlockCostFlag(v bool) {
	o.BlockCostFlag.Set(&v)
}

// SetBlockCostFlagNil sets the value for BlockCostFlag to be an explicit nil
func (o *ApiMember) SetBlockCostFlagNil() {
	o.BlockCostFlag.Set(nil)
}

// UnsetBlockCostFlag ensures that no value is present for BlockCostFlag, not even an explicit nil
func (o *ApiMember) UnsetBlockCostFlag() {
	o.BlockCostFlag.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ApiMember) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMember) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ApiMember) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ApiMember) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ApiMember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["identifier"] = o.Identifier
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.SecurityRole) {
		toSerialize["securityRole"] = o.SecurityRole
	}
	if !IsNil(o.StructureLevel) {
		toSerialize["structureLevel"] = o.StructureLevel
	}
	if !IsNil(o.SecurityLocation) {
		toSerialize["securityLocation"] = o.SecurityLocation
	}
	if !IsNil(o.DefaultLocation) {
		toSerialize["defaultLocation"] = o.DefaultLocation
	}
	if !IsNil(o.DefaultDepartment) {
		toSerialize["defaultDepartment"] = o.DefaultDepartment
	}
	if !IsNil(o.SalesDefaultLocation) {
		toSerialize["salesDefaultLocation"] = o.SalesDefaultLocation
	}
	if !IsNil(o.ServiceDefaultBoard) {
		toSerialize["serviceDefaultBoard"] = o.ServiceDefaultBoard
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ExcludedServiceBoardIds) {
		toSerialize["excludedServiceBoardIds"] = o.ExcludedServiceBoardIds
	}
	if o.BlockPriceFlag.IsSet() {
		toSerialize["blockPriceFlag"] = o.BlockPriceFlag.Get()
	}
	if o.BlockCostFlag.IsSet() {
		toSerialize["blockCostFlag"] = o.BlockCostFlag.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ApiMember) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiMember := _ApiMember{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiMember)

	if err != nil {
		return err
	}

	*o = ApiMember(varApiMember)

	return err
}

type NullableApiMember struct {
	value *ApiMember
	isSet bool
}

func (v NullableApiMember) Get() *ApiMember {
	return v.value
}

func (v *NullableApiMember) Set(val *ApiMember) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMember) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMember(val *ApiMember) *NullableApiMember {
	return &NullableApiMember{value: val, isSet: true}
}

func (v NullableApiMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
