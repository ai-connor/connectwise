/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the BillingSetupInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingSetupInfo{}

// BillingSetupInfo struct for BillingSetupInfo
type BillingSetupInfo struct {
	Id        *int32                   `json:"id,omitempty"`
	RemitName *string                  `json:"remitName,omitempty"`
	Location  *SystemLocationReference `json:"location,omitempty"`
	Currency  *CurrencyReference       `json:"currency,omitempty"`
	Info      *map[string]string       `json:"_info,omitempty"`
}

// NewBillingSetupInfo instantiates a new BillingSetupInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingSetupInfo() *BillingSetupInfo {
	this := BillingSetupInfo{}
	return &this
}

// NewBillingSetupInfoWithDefaults instantiates a new BillingSetupInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingSetupInfoWithDefaults() *BillingSetupInfo {
	this := BillingSetupInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BillingSetupInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BillingSetupInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BillingSetupInfo) SetId(v int32) {
	o.Id = &v
}

// GetRemitName returns the RemitName field value if set, zero value otherwise.
func (o *BillingSetupInfo) GetRemitName() string {
	if o == nil || IsNil(o.RemitName) {
		var ret string
		return ret
	}
	return *o.RemitName
}

// GetRemitNameOk returns a tuple with the RemitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupInfo) GetRemitNameOk() (*string, bool) {
	if o == nil || IsNil(o.RemitName) {
		return nil, false
	}
	return o.RemitName, true
}

// HasRemitName returns a boolean if a field has been set.
func (o *BillingSetupInfo) HasRemitName() bool {
	if o != nil && !IsNil(o.RemitName) {
		return true
	}

	return false
}

// SetRemitName gets a reference to the given string and assigns it to the RemitName field.
func (o *BillingSetupInfo) SetRemitName(v string) {
	o.RemitName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *BillingSetupInfo) GetLocation() SystemLocationReference {
	if o == nil || IsNil(o.Location) {
		var ret SystemLocationReference
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupInfo) GetLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *BillingSetupInfo) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given SystemLocationReference and assigns it to the Location field.
func (o *BillingSetupInfo) SetLocation(v SystemLocationReference) {
	o.Location = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BillingSetupInfo) GetCurrency() CurrencyReference {
	if o == nil || IsNil(o.Currency) {
		var ret CurrencyReference
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupInfo) GetCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BillingSetupInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given CurrencyReference and assigns it to the Currency field.
func (o *BillingSetupInfo) SetCurrency(v CurrencyReference) {
	o.Currency = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *BillingSetupInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *BillingSetupInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *BillingSetupInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o BillingSetupInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingSetupInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RemitName) {
		toSerialize["remitName"] = o.RemitName
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableBillingSetupInfo struct {
	value *BillingSetupInfo
	isSet bool
}

func (v NullableBillingSetupInfo) Get() *BillingSetupInfo {
	return v.value
}

func (v *NullableBillingSetupInfo) Set(val *BillingSetupInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingSetupInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingSetupInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingSetupInfo(val *BillingSetupInfo) *NullableBillingSetupInfo {
	return &NullableBillingSetupInfo{value: val, isSet: true}
}

func (v NullableBillingSetupInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingSetupInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
