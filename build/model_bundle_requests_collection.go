/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BundleRequestsCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleRequestsCollection{}

// BundleRequestsCollection struct for BundleRequestsCollection
type BundleRequestsCollection struct {
	Requests []BundleRequest `json:"requests"`
}

type _BundleRequestsCollection BundleRequestsCollection

// NewBundleRequestsCollection instantiates a new BundleRequestsCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleRequestsCollection(requests []BundleRequest) *BundleRequestsCollection {
	this := BundleRequestsCollection{}
	this.Requests = requests
	return &this
}

// NewBundleRequestsCollectionWithDefaults instantiates a new BundleRequestsCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleRequestsCollectionWithDefaults() *BundleRequestsCollection {
	this := BundleRequestsCollection{}
	return &this
}

// GetRequests returns the Requests field value
func (o *BundleRequestsCollection) GetRequests() []BundleRequest {
	if o == nil {
		var ret []BundleRequest
		return ret
	}

	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value
// and a boolean to check if the value has been set.
func (o *BundleRequestsCollection) GetRequestsOk() ([]BundleRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requests, true
}

// SetRequests sets field value
func (o *BundleRequestsCollection) SetRequests(v []BundleRequest) {
	o.Requests = v
}

func (o BundleRequestsCollection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleRequestsCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requests"] = o.Requests
	return toSerialize, nil
}

func (o *BundleRequestsCollection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requests",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBundleRequestsCollection := _BundleRequestsCollection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBundleRequestsCollection)

	if err != nil {
		return err
	}

	*o = BundleRequestsCollection(varBundleRequestsCollection)

	return err
}

type NullableBundleRequestsCollection struct {
	value *BundleRequestsCollection
	isSet bool
}

func (v NullableBundleRequestsCollection) Get() *BundleRequestsCollection {
	return v.value
}

func (v *NullableBundleRequestsCollection) Set(val *BundleRequestsCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleRequestsCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleRequestsCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleRequestsCollection(val *BundleRequestsCollection) *NullableBundleRequestsCollection {
	return &NullableBundleRequestsCollection{value: val, isSet: true}
}

func (v NullableBundleRequestsCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleRequestsCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
