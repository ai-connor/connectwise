/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the BundleResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleResult{}

// BundleResult struct for BundleResult
type BundleResult struct {
	SequenceNumber *int32                `json:"sequenceNumber,omitempty"`
	ResourceType   *string               `json:"resourceType,omitempty"`
	Entities       []IRestIdentifiedItem `json:"entities,omitempty"`
	Count          *int32                `json:"count,omitempty"`
	Version        *string               `json:"version,omitempty"`
	Success        *bool                 `json:"success,omitempty"`
	StatusCode     *int32                `json:"statusCode,omitempty"`
	Error          *ErrorResponseMessage `json:"error,omitempty"`
}

// NewBundleResult instantiates a new BundleResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleResult() *BundleResult {
	this := BundleResult{}
	return &this
}

// NewBundleResultWithDefaults instantiates a new BundleResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleResultWithDefaults() *BundleResult {
	this := BundleResult{}
	return &this
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *BundleResult) GetSequenceNumber() int32 {
	if o == nil || IsNil(o.SequenceNumber) {
		var ret int32
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetSequenceNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SequenceNumber) {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *BundleResult) HasSequenceNumber() bool {
	if o != nil && !IsNil(o.SequenceNumber) {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int32 and assigns it to the SequenceNumber field.
func (o *BundleResult) SetSequenceNumber(v int32) {
	o.SequenceNumber = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *BundleResult) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *BundleResult) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *BundleResult) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *BundleResult) GetEntities() []IRestIdentifiedItem {
	if o == nil || IsNil(o.Entities) {
		var ret []IRestIdentifiedItem
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetEntitiesOk() ([]IRestIdentifiedItem, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *BundleResult) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []IRestIdentifiedItem and assigns it to the Entities field.
func (o *BundleResult) SetEntities(v []IRestIdentifiedItem) {
	o.Entities = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *BundleResult) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *BundleResult) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *BundleResult) SetCount(v int32) {
	o.Count = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BundleResult) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BundleResult) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *BundleResult) SetVersion(v string) {
	o.Version = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *BundleResult) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *BundleResult) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *BundleResult) SetSuccess(v bool) {
	o.Success = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *BundleResult) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *BundleResult) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *BundleResult) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *BundleResult) GetError() ErrorResponseMessage {
	if o == nil || IsNil(o.Error) {
		var ret ErrorResponseMessage
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResult) GetErrorOk() (*ErrorResponseMessage, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *BundleResult) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorResponseMessage and assigns it to the Error field.
func (o *BundleResult) SetError(v ErrorResponseMessage) {
	o.Error = &v
}

func (o BundleResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SequenceNumber) {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableBundleResult struct {
	value *BundleResult
	isSet bool
}

func (v NullableBundleResult) Get() *BundleResult {
	return v.value
}

func (v *NullableBundleResult) Set(val *BundleResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleResult(val *BundleResult) *NullableBundleResult {
	return &NullableBundleResult{value: val, isSet: true}
}

func (v NullableBundleResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
