/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ClosedInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClosedInvoice{}

// ClosedInvoice struct for ClosedInvoice
type ClosedInvoice struct {
	Id            *int32                  `json:"id,omitempty"`
	Status        *BillingStatusReference `json:"status,omitempty"`
	InternalNotes *string                 `json:"internalNotes,omitempty"`
	Info          *map[string]string      `json:"_info,omitempty"`
}

// NewClosedInvoice instantiates a new ClosedInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClosedInvoice() *ClosedInvoice {
	this := ClosedInvoice{}
	return &this
}

// NewClosedInvoiceWithDefaults instantiates a new ClosedInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClosedInvoiceWithDefaults() *ClosedInvoice {
	this := ClosedInvoice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClosedInvoice) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClosedInvoice) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClosedInvoice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClosedInvoice) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClosedInvoice) GetStatus() BillingStatusReference {
	if o == nil || IsNil(o.Status) {
		var ret BillingStatusReference
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClosedInvoice) GetStatusOk() (*BillingStatusReference, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClosedInvoice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BillingStatusReference and assigns it to the Status field.
func (o *ClosedInvoice) SetStatus(v BillingStatusReference) {
	o.Status = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *ClosedInvoice) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClosedInvoice) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *ClosedInvoice) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *ClosedInvoice) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ClosedInvoice) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClosedInvoice) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ClosedInvoice) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ClosedInvoice) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ClosedInvoice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClosedInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.InternalNotes) {
		toSerialize["internalNotes"] = o.InternalNotes
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableClosedInvoice struct {
	value *ClosedInvoice
	isSet bool
}

func (v NullableClosedInvoice) Get() *ClosedInvoice {
	return v.value
}

func (v *NullableClosedInvoice) Set(val *ClosedInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableClosedInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableClosedInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClosedInvoice(val *ClosedInvoice) *NullableClosedInvoice {
	return &NullableClosedInvoice{value: val, isSet: true}
}

func (v NullableClosedInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClosedInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
