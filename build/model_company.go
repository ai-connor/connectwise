/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Company type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Company{}

// Company struct for Company
type Company struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 30;
	Identifier string `json:"identifier"`
	//  Max length: 50;
	Name   string                  `json:"name"`
	Status *CompanyStatusReference `json:"status,omitempty"`
	// Gets or sets at least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country. Max length: 50;
	AddressLine1 *string `json:"addressLine1,omitempty"`
	// Gets or sets at least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country. Max length: 50;
	AddressLine2 *string `json:"addressLine2,omitempty"`
	// Gets or sets at least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country. Max length: 50;
	City *string `json:"city,omitempty"`
	// Gets or sets at least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country. Max length: 50;
	State *string `json:"state,omitempty"`
	// Gets or sets at least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country. Max length: 12;
	Zip     *string           `json:"zip,omitempty"`
	Country *CountryReference `json:"country,omitempty"`
	//  Max length: 30;
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	//  Max length: 30;
	FaxNumber *string `json:"faxNumber,omitempty"`
	//  Max length: 255;
	Website           *string                     `json:"website,omitempty"`
	Territory         *SystemLocationReference    `json:"territory,omitempty"`
	Market            *MarketDescriptionReference `json:"market,omitempty"`
	AccountNumber     *string                     `json:"accountNumber,omitempty"`
	DefaultContact    *ContactReference           `json:"defaultContact,omitempty"`
	DateAcquired      *time.Time                  `json:"dateAcquired,omitempty"`
	SicCode           *SicCodeReference           `json:"sicCode,omitempty"`
	ParentCompany     *CompanyReference           `json:"parentCompany,omitempty"`
	AnnualRevenue     NullableFloat64             `json:"annualRevenue,omitempty"`
	NumberOfEmployees NullableInt32               `json:"numberOfEmployees,omitempty"`
	YearEstablished   NullableInt32               `json:"yearEstablished,omitempty"`
	RevenueYear       NullableInt32               `json:"revenueYear,omitempty"`
	OwnershipType     *OwnershipTypeReference     `json:"ownershipType,omitempty"`
	TimeZoneSetup     *TimeZoneSetupReference     `json:"timeZoneSetup,omitempty"`
	//  Max length: 50;
	LeadSource      *string            `json:"leadSource,omitempty"`
	LeadFlag        NullableBool       `json:"leadFlag,omitempty"`
	UnsubscribeFlag NullableBool       `json:"unsubscribeFlag,omitempty"`
	Calendar        *CalendarReference `json:"calendar,omitempty"`
	//  Max length: 50;
	UserDefinedField1 *string `json:"userDefinedField1,omitempty"`
	//  Max length: 50;
	UserDefinedField2 *string `json:"userDefinedField2,omitempty"`
	//  Max length: 50;
	UserDefinedField3 *string `json:"userDefinedField3,omitempty"`
	//  Max length: 50;
	UserDefinedField4 *string `json:"userDefinedField4,omitempty"`
	//  Max length: 50;
	UserDefinedField5 *string `json:"userDefinedField5,omitempty"`
	//  Max length: 50;
	UserDefinedField6 *string `json:"userDefinedField6,omitempty"`
	//  Max length: 50;
	UserDefinedField7 *string `json:"userDefinedField7,omitempty"`
	//  Max length: 50;
	UserDefinedField8 *string `json:"userDefinedField8,omitempty"`
	//  Max length: 50;
	UserDefinedField9 *string `json:"userDefinedField9,omitempty"`
	//  Max length: 50;
	UserDefinedField10    *string                   `json:"userDefinedField10,omitempty"`
	VendorIdentifier      *string                   `json:"vendorIdentifier,omitempty"`
	TaxIdentifier         *string                   `json:"taxIdentifier,omitempty"`
	TaxCode               *TaxCodeReference         `json:"taxCode,omitempty"`
	BillingTerms          *BillingTermsReference    `json:"billingTerms,omitempty"`
	InvoiceTemplate       *InvoiceTemplateReference `json:"invoiceTemplate,omitempty"`
	PricingSchedule       *PricingScheduleReference `json:"pricingSchedule,omitempty"`
	CompanyEntityType     *EntityTypeReference      `json:"companyEntityType,omitempty"`
	BillToCompany         *CompanyReference         `json:"billToCompany,omitempty"`
	BillingSite           *SiteReference            `json:"billingSite,omitempty"`
	BillingContact        *ContactReference         `json:"billingContact,omitempty"`
	InvoiceDeliveryMethod *BillingDeliveryReference `json:"invoiceDeliveryMethod,omitempty"`
	InvoiceToEmailAddress *string                   `json:"invoiceToEmailAddress,omitempty"`
	InvoiceCCEmailAddress *string                   `json:"invoiceCCEmailAddress,omitempty"`
	DeletedFlag           NullableBool              `json:"deletedFlag,omitempty"`
	DateDeleted           *time.Time                `json:"dateDeleted,omitempty"`
	DeletedBy             *string                   `json:"deletedBy,omitempty"`
	MobileGuid            NullableString            `json:"mobileGuid,omitempty"`
	FacebookUrl           *string                   `json:"facebookUrl,omitempty"`
	TwitterUrl            *string                   `json:"twitterUrl,omitempty"`
	LinkedInUrl           *string                   `json:"linkedInUrl,omitempty"`
	Currency              *CurrencyReference        `json:"currency,omitempty"`
	TerritoryManager      *MemberReference          `json:"territoryManager,omitempty"`
	ResellerIdentifier    *string                   `json:"resellerIdentifier,omitempty"`
	IsVendorFlag          NullableBool              `json:"isVendorFlag,omitempty"`
	// Gets or sets integrer array of Company_Type_Recids to be assigned to company that can be passed in only during new company creation (post)             To update existing companies type, use the /company/companyTypeAssociations or /company/companies/{ID}/typeAssociations endpoints.
	Types          []CompanyTypeReference `json:"types,omitempty"`
	Site           *SiteReference         `json:"site,omitempty"`
	IntegratorTags []string               `json:"integratorTags,omitempty"`
	Info           *map[string]string     `json:"_info,omitempty"`
	CustomFields   []CustomFieldValue     `json:"customFields,omitempty"`
}

type _Company Company

// NewCompany instantiates a new Company object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompany(identifier string, name string) *Company {
	this := Company{}
	this.Identifier = identifier
	this.Name = name
	return &this
}

// NewCompanyWithDefaults instantiates a new Company object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyWithDefaults() *Company {
	this := Company{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Company) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Company) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Company) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value
func (o *Company) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *Company) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *Company) SetIdentifier(v string) {
	o.Identifier = v
}

// GetName returns the Name field value
func (o *Company) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Company) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Company) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Company) GetStatus() CompanyStatusReference {
	if o == nil || IsNil(o.Status) {
		var ret CompanyStatusReference
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetStatusOk() (*CompanyStatusReference, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Company) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CompanyStatusReference and assigns it to the Status field.
func (o *Company) SetStatus(v CompanyStatusReference) {
	o.Status = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *Company) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *Company) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *Company) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *Company) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *Company) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *Company) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *Company) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *Company) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *Company) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Company) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Company) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Company) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *Company) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *Company) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *Company) SetZip(v string) {
	o.Zip = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Company) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Company) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *Company) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Company) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Company) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Company) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise.
func (o *Company) GetFaxNumber() string {
	if o == nil || IsNil(o.FaxNumber) {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetFaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FaxNumber) {
		return nil, false
	}
	return o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *Company) HasFaxNumber() bool {
	if o != nil && !IsNil(o.FaxNumber) {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *Company) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *Company) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *Company) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *Company) SetWebsite(v string) {
	o.Website = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *Company) GetTerritory() SystemLocationReference {
	if o == nil || IsNil(o.Territory) {
		var ret SystemLocationReference
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTerritoryOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *Company) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given SystemLocationReference and assigns it to the Territory field.
func (o *Company) SetTerritory(v SystemLocationReference) {
	o.Territory = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *Company) GetMarket() MarketDescriptionReference {
	if o == nil || IsNil(o.Market) {
		var ret MarketDescriptionReference
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetMarketOk() (*MarketDescriptionReference, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *Company) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given MarketDescriptionReference and assigns it to the Market field.
func (o *Company) SetMarket(v MarketDescriptionReference) {
	o.Market = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *Company) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *Company) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *Company) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetDefaultContact returns the DefaultContact field value if set, zero value otherwise.
func (o *Company) GetDefaultContact() ContactReference {
	if o == nil || IsNil(o.DefaultContact) {
		var ret ContactReference
		return ret
	}
	return *o.DefaultContact
}

// GetDefaultContactOk returns a tuple with the DefaultContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetDefaultContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.DefaultContact) {
		return nil, false
	}
	return o.DefaultContact, true
}

// HasDefaultContact returns a boolean if a field has been set.
func (o *Company) HasDefaultContact() bool {
	if o != nil && !IsNil(o.DefaultContact) {
		return true
	}

	return false
}

// SetDefaultContact gets a reference to the given ContactReference and assigns it to the DefaultContact field.
func (o *Company) SetDefaultContact(v ContactReference) {
	o.DefaultContact = &v
}

// GetDateAcquired returns the DateAcquired field value if set, zero value otherwise.
func (o *Company) GetDateAcquired() time.Time {
	if o == nil || IsNil(o.DateAcquired) {
		var ret time.Time
		return ret
	}
	return *o.DateAcquired
}

// GetDateAcquiredOk returns a tuple with the DateAcquired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetDateAcquiredOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateAcquired) {
		return nil, false
	}
	return o.DateAcquired, true
}

// HasDateAcquired returns a boolean if a field has been set.
func (o *Company) HasDateAcquired() bool {
	if o != nil && !IsNil(o.DateAcquired) {
		return true
	}

	return false
}

// SetDateAcquired gets a reference to the given time.Time and assigns it to the DateAcquired field.
func (o *Company) SetDateAcquired(v time.Time) {
	o.DateAcquired = &v
}

// GetSicCode returns the SicCode field value if set, zero value otherwise.
func (o *Company) GetSicCode() SicCodeReference {
	if o == nil || IsNil(o.SicCode) {
		var ret SicCodeReference
		return ret
	}
	return *o.SicCode
}

// GetSicCodeOk returns a tuple with the SicCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetSicCodeOk() (*SicCodeReference, bool) {
	if o == nil || IsNil(o.SicCode) {
		return nil, false
	}
	return o.SicCode, true
}

// HasSicCode returns a boolean if a field has been set.
func (o *Company) HasSicCode() bool {
	if o != nil && !IsNil(o.SicCode) {
		return true
	}

	return false
}

// SetSicCode gets a reference to the given SicCodeReference and assigns it to the SicCode field.
func (o *Company) SetSicCode(v SicCodeReference) {
	o.SicCode = &v
}

// GetParentCompany returns the ParentCompany field value if set, zero value otherwise.
func (o *Company) GetParentCompany() CompanyReference {
	if o == nil || IsNil(o.ParentCompany) {
		var ret CompanyReference
		return ret
	}
	return *o.ParentCompany
}

// GetParentCompanyOk returns a tuple with the ParentCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetParentCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.ParentCompany) {
		return nil, false
	}
	return o.ParentCompany, true
}

// HasParentCompany returns a boolean if a field has been set.
func (o *Company) HasParentCompany() bool {
	if o != nil && !IsNil(o.ParentCompany) {
		return true
	}

	return false
}

// SetParentCompany gets a reference to the given CompanyReference and assigns it to the ParentCompany field.
func (o *Company) SetParentCompany(v CompanyReference) {
	o.ParentCompany = &v
}

// GetAnnualRevenue returns the AnnualRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetAnnualRevenue() float64 {
	if o == nil || IsNil(o.AnnualRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.AnnualRevenue.Get()
}

// GetAnnualRevenueOk returns a tuple with the AnnualRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetAnnualRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AnnualRevenue.Get(), o.AnnualRevenue.IsSet()
}

// HasAnnualRevenue returns a boolean if a field has been set.
func (o *Company) HasAnnualRevenue() bool {
	if o != nil && o.AnnualRevenue.IsSet() {
		return true
	}

	return false
}

// SetAnnualRevenue gets a reference to the given NullableFloat64 and assigns it to the AnnualRevenue field.
func (o *Company) SetAnnualRevenue(v float64) {
	o.AnnualRevenue.Set(&v)
}

// SetAnnualRevenueNil sets the value for AnnualRevenue to be an explicit nil
func (o *Company) SetAnnualRevenueNil() {
	o.AnnualRevenue.Set(nil)
}

// UnsetAnnualRevenue ensures that no value is present for AnnualRevenue, not even an explicit nil
func (o *Company) UnsetAnnualRevenue() {
	o.AnnualRevenue.Unset()
}

// GetNumberOfEmployees returns the NumberOfEmployees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetNumberOfEmployees() int32 {
	if o == nil || IsNil(o.NumberOfEmployees.Get()) {
		var ret int32
		return ret
	}
	return *o.NumberOfEmployees.Get()
}

// GetNumberOfEmployeesOk returns a tuple with the NumberOfEmployees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetNumberOfEmployeesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberOfEmployees.Get(), o.NumberOfEmployees.IsSet()
}

// HasNumberOfEmployees returns a boolean if a field has been set.
func (o *Company) HasNumberOfEmployees() bool {
	if o != nil && o.NumberOfEmployees.IsSet() {
		return true
	}

	return false
}

// SetNumberOfEmployees gets a reference to the given NullableInt32 and assigns it to the NumberOfEmployees field.
func (o *Company) SetNumberOfEmployees(v int32) {
	o.NumberOfEmployees.Set(&v)
}

// SetNumberOfEmployeesNil sets the value for NumberOfEmployees to be an explicit nil
func (o *Company) SetNumberOfEmployeesNil() {
	o.NumberOfEmployees.Set(nil)
}

// UnsetNumberOfEmployees ensures that no value is present for NumberOfEmployees, not even an explicit nil
func (o *Company) UnsetNumberOfEmployees() {
	o.NumberOfEmployees.Unset()
}

// GetYearEstablished returns the YearEstablished field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetYearEstablished() int32 {
	if o == nil || IsNil(o.YearEstablished.Get()) {
		var ret int32
		return ret
	}
	return *o.YearEstablished.Get()
}

// GetYearEstablishedOk returns a tuple with the YearEstablished field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetYearEstablishedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.YearEstablished.Get(), o.YearEstablished.IsSet()
}

// HasYearEstablished returns a boolean if a field has been set.
func (o *Company) HasYearEstablished() bool {
	if o != nil && o.YearEstablished.IsSet() {
		return true
	}

	return false
}

// SetYearEstablished gets a reference to the given NullableInt32 and assigns it to the YearEstablished field.
func (o *Company) SetYearEstablished(v int32) {
	o.YearEstablished.Set(&v)
}

// SetYearEstablishedNil sets the value for YearEstablished to be an explicit nil
func (o *Company) SetYearEstablishedNil() {
	o.YearEstablished.Set(nil)
}

// UnsetYearEstablished ensures that no value is present for YearEstablished, not even an explicit nil
func (o *Company) UnsetYearEstablished() {
	o.YearEstablished.Unset()
}

// GetRevenueYear returns the RevenueYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetRevenueYear() int32 {
	if o == nil || IsNil(o.RevenueYear.Get()) {
		var ret int32
		return ret
	}
	return *o.RevenueYear.Get()
}

// GetRevenueYearOk returns a tuple with the RevenueYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetRevenueYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevenueYear.Get(), o.RevenueYear.IsSet()
}

// HasRevenueYear returns a boolean if a field has been set.
func (o *Company) HasRevenueYear() bool {
	if o != nil && o.RevenueYear.IsSet() {
		return true
	}

	return false
}

// SetRevenueYear gets a reference to the given NullableInt32 and assigns it to the RevenueYear field.
func (o *Company) SetRevenueYear(v int32) {
	o.RevenueYear.Set(&v)
}

// SetRevenueYearNil sets the value for RevenueYear to be an explicit nil
func (o *Company) SetRevenueYearNil() {
	o.RevenueYear.Set(nil)
}

// UnsetRevenueYear ensures that no value is present for RevenueYear, not even an explicit nil
func (o *Company) UnsetRevenueYear() {
	o.RevenueYear.Unset()
}

// GetOwnershipType returns the OwnershipType field value if set, zero value otherwise.
func (o *Company) GetOwnershipType() OwnershipTypeReference {
	if o == nil || IsNil(o.OwnershipType) {
		var ret OwnershipTypeReference
		return ret
	}
	return *o.OwnershipType
}

// GetOwnershipTypeOk returns a tuple with the OwnershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetOwnershipTypeOk() (*OwnershipTypeReference, bool) {
	if o == nil || IsNil(o.OwnershipType) {
		return nil, false
	}
	return o.OwnershipType, true
}

// HasOwnershipType returns a boolean if a field has been set.
func (o *Company) HasOwnershipType() bool {
	if o != nil && !IsNil(o.OwnershipType) {
		return true
	}

	return false
}

// SetOwnershipType gets a reference to the given OwnershipTypeReference and assigns it to the OwnershipType field.
func (o *Company) SetOwnershipType(v OwnershipTypeReference) {
	o.OwnershipType = &v
}

// GetTimeZoneSetup returns the TimeZoneSetup field value if set, zero value otherwise.
func (o *Company) GetTimeZoneSetup() TimeZoneSetupReference {
	if o == nil || IsNil(o.TimeZoneSetup) {
		var ret TimeZoneSetupReference
		return ret
	}
	return *o.TimeZoneSetup
}

// GetTimeZoneSetupOk returns a tuple with the TimeZoneSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTimeZoneSetupOk() (*TimeZoneSetupReference, bool) {
	if o == nil || IsNil(o.TimeZoneSetup) {
		return nil, false
	}
	return o.TimeZoneSetup, true
}

// HasTimeZoneSetup returns a boolean if a field has been set.
func (o *Company) HasTimeZoneSetup() bool {
	if o != nil && !IsNil(o.TimeZoneSetup) {
		return true
	}

	return false
}

// SetTimeZoneSetup gets a reference to the given TimeZoneSetupReference and assigns it to the TimeZoneSetup field.
func (o *Company) SetTimeZoneSetup(v TimeZoneSetupReference) {
	o.TimeZoneSetup = &v
}

// GetLeadSource returns the LeadSource field value if set, zero value otherwise.
func (o *Company) GetLeadSource() string {
	if o == nil || IsNil(o.LeadSource) {
		var ret string
		return ret
	}
	return *o.LeadSource
}

// GetLeadSourceOk returns a tuple with the LeadSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetLeadSourceOk() (*string, bool) {
	if o == nil || IsNil(o.LeadSource) {
		return nil, false
	}
	return o.LeadSource, true
}

// HasLeadSource returns a boolean if a field has been set.
func (o *Company) HasLeadSource() bool {
	if o != nil && !IsNil(o.LeadSource) {
		return true
	}

	return false
}

// SetLeadSource gets a reference to the given string and assigns it to the LeadSource field.
func (o *Company) SetLeadSource(v string) {
	o.LeadSource = &v
}

// GetLeadFlag returns the LeadFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetLeadFlag() bool {
	if o == nil || IsNil(o.LeadFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LeadFlag.Get()
}

// GetLeadFlagOk returns a tuple with the LeadFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetLeadFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LeadFlag.Get(), o.LeadFlag.IsSet()
}

// HasLeadFlag returns a boolean if a field has been set.
func (o *Company) HasLeadFlag() bool {
	if o != nil && o.LeadFlag.IsSet() {
		return true
	}

	return false
}

// SetLeadFlag gets a reference to the given NullableBool and assigns it to the LeadFlag field.
func (o *Company) SetLeadFlag(v bool) {
	o.LeadFlag.Set(&v)
}

// SetLeadFlagNil sets the value for LeadFlag to be an explicit nil
func (o *Company) SetLeadFlagNil() {
	o.LeadFlag.Set(nil)
}

// UnsetLeadFlag ensures that no value is present for LeadFlag, not even an explicit nil
func (o *Company) UnsetLeadFlag() {
	o.LeadFlag.Unset()
}

// GetUnsubscribeFlag returns the UnsubscribeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetUnsubscribeFlag() bool {
	if o == nil || IsNil(o.UnsubscribeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UnsubscribeFlag.Get()
}

// GetUnsubscribeFlagOk returns a tuple with the UnsubscribeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetUnsubscribeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnsubscribeFlag.Get(), o.UnsubscribeFlag.IsSet()
}

// HasUnsubscribeFlag returns a boolean if a field has been set.
func (o *Company) HasUnsubscribeFlag() bool {
	if o != nil && o.UnsubscribeFlag.IsSet() {
		return true
	}

	return false
}

// SetUnsubscribeFlag gets a reference to the given NullableBool and assigns it to the UnsubscribeFlag field.
func (o *Company) SetUnsubscribeFlag(v bool) {
	o.UnsubscribeFlag.Set(&v)
}

// SetUnsubscribeFlagNil sets the value for UnsubscribeFlag to be an explicit nil
func (o *Company) SetUnsubscribeFlagNil() {
	o.UnsubscribeFlag.Set(nil)
}

// UnsetUnsubscribeFlag ensures that no value is present for UnsubscribeFlag, not even an explicit nil
func (o *Company) UnsetUnsubscribeFlag() {
	o.UnsubscribeFlag.Unset()
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *Company) GetCalendar() CalendarReference {
	if o == nil || IsNil(o.Calendar) {
		var ret CalendarReference
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetCalendarOk() (*CalendarReference, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *Company) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given CalendarReference and assigns it to the Calendar field.
func (o *Company) SetCalendar(v CalendarReference) {
	o.Calendar = &v
}

// GetUserDefinedField1 returns the UserDefinedField1 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField1() string {
	if o == nil || IsNil(o.UserDefinedField1) {
		var ret string
		return ret
	}
	return *o.UserDefinedField1
}

// GetUserDefinedField1Ok returns a tuple with the UserDefinedField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField1Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField1) {
		return nil, false
	}
	return o.UserDefinedField1, true
}

// HasUserDefinedField1 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField1() bool {
	if o != nil && !IsNil(o.UserDefinedField1) {
		return true
	}

	return false
}

// SetUserDefinedField1 gets a reference to the given string and assigns it to the UserDefinedField1 field.
func (o *Company) SetUserDefinedField1(v string) {
	o.UserDefinedField1 = &v
}

// GetUserDefinedField2 returns the UserDefinedField2 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField2() string {
	if o == nil || IsNil(o.UserDefinedField2) {
		var ret string
		return ret
	}
	return *o.UserDefinedField2
}

// GetUserDefinedField2Ok returns a tuple with the UserDefinedField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField2Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField2) {
		return nil, false
	}
	return o.UserDefinedField2, true
}

// HasUserDefinedField2 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField2() bool {
	if o != nil && !IsNil(o.UserDefinedField2) {
		return true
	}

	return false
}

// SetUserDefinedField2 gets a reference to the given string and assigns it to the UserDefinedField2 field.
func (o *Company) SetUserDefinedField2(v string) {
	o.UserDefinedField2 = &v
}

// GetUserDefinedField3 returns the UserDefinedField3 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField3() string {
	if o == nil || IsNil(o.UserDefinedField3) {
		var ret string
		return ret
	}
	return *o.UserDefinedField3
}

// GetUserDefinedField3Ok returns a tuple with the UserDefinedField3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField3Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField3) {
		return nil, false
	}
	return o.UserDefinedField3, true
}

// HasUserDefinedField3 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField3() bool {
	if o != nil && !IsNil(o.UserDefinedField3) {
		return true
	}

	return false
}

// SetUserDefinedField3 gets a reference to the given string and assigns it to the UserDefinedField3 field.
func (o *Company) SetUserDefinedField3(v string) {
	o.UserDefinedField3 = &v
}

// GetUserDefinedField4 returns the UserDefinedField4 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField4() string {
	if o == nil || IsNil(o.UserDefinedField4) {
		var ret string
		return ret
	}
	return *o.UserDefinedField4
}

// GetUserDefinedField4Ok returns a tuple with the UserDefinedField4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField4Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField4) {
		return nil, false
	}
	return o.UserDefinedField4, true
}

// HasUserDefinedField4 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField4() bool {
	if o != nil && !IsNil(o.UserDefinedField4) {
		return true
	}

	return false
}

// SetUserDefinedField4 gets a reference to the given string and assigns it to the UserDefinedField4 field.
func (o *Company) SetUserDefinedField4(v string) {
	o.UserDefinedField4 = &v
}

// GetUserDefinedField5 returns the UserDefinedField5 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField5() string {
	if o == nil || IsNil(o.UserDefinedField5) {
		var ret string
		return ret
	}
	return *o.UserDefinedField5
}

// GetUserDefinedField5Ok returns a tuple with the UserDefinedField5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField5Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField5) {
		return nil, false
	}
	return o.UserDefinedField5, true
}

// HasUserDefinedField5 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField5() bool {
	if o != nil && !IsNil(o.UserDefinedField5) {
		return true
	}

	return false
}

// SetUserDefinedField5 gets a reference to the given string and assigns it to the UserDefinedField5 field.
func (o *Company) SetUserDefinedField5(v string) {
	o.UserDefinedField5 = &v
}

// GetUserDefinedField6 returns the UserDefinedField6 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField6() string {
	if o == nil || IsNil(o.UserDefinedField6) {
		var ret string
		return ret
	}
	return *o.UserDefinedField6
}

// GetUserDefinedField6Ok returns a tuple with the UserDefinedField6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField6Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField6) {
		return nil, false
	}
	return o.UserDefinedField6, true
}

// HasUserDefinedField6 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField6() bool {
	if o != nil && !IsNil(o.UserDefinedField6) {
		return true
	}

	return false
}

// SetUserDefinedField6 gets a reference to the given string and assigns it to the UserDefinedField6 field.
func (o *Company) SetUserDefinedField6(v string) {
	o.UserDefinedField6 = &v
}

// GetUserDefinedField7 returns the UserDefinedField7 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField7() string {
	if o == nil || IsNil(o.UserDefinedField7) {
		var ret string
		return ret
	}
	return *o.UserDefinedField7
}

// GetUserDefinedField7Ok returns a tuple with the UserDefinedField7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField7Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField7) {
		return nil, false
	}
	return o.UserDefinedField7, true
}

// HasUserDefinedField7 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField7() bool {
	if o != nil && !IsNil(o.UserDefinedField7) {
		return true
	}

	return false
}

// SetUserDefinedField7 gets a reference to the given string and assigns it to the UserDefinedField7 field.
func (o *Company) SetUserDefinedField7(v string) {
	o.UserDefinedField7 = &v
}

// GetUserDefinedField8 returns the UserDefinedField8 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField8() string {
	if o == nil || IsNil(o.UserDefinedField8) {
		var ret string
		return ret
	}
	return *o.UserDefinedField8
}

// GetUserDefinedField8Ok returns a tuple with the UserDefinedField8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField8Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField8) {
		return nil, false
	}
	return o.UserDefinedField8, true
}

// HasUserDefinedField8 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField8() bool {
	if o != nil && !IsNil(o.UserDefinedField8) {
		return true
	}

	return false
}

// SetUserDefinedField8 gets a reference to the given string and assigns it to the UserDefinedField8 field.
func (o *Company) SetUserDefinedField8(v string) {
	o.UserDefinedField8 = &v
}

// GetUserDefinedField9 returns the UserDefinedField9 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField9() string {
	if o == nil || IsNil(o.UserDefinedField9) {
		var ret string
		return ret
	}
	return *o.UserDefinedField9
}

// GetUserDefinedField9Ok returns a tuple with the UserDefinedField9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField9Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField9) {
		return nil, false
	}
	return o.UserDefinedField9, true
}

// HasUserDefinedField9 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField9() bool {
	if o != nil && !IsNil(o.UserDefinedField9) {
		return true
	}

	return false
}

// SetUserDefinedField9 gets a reference to the given string and assigns it to the UserDefinedField9 field.
func (o *Company) SetUserDefinedField9(v string) {
	o.UserDefinedField9 = &v
}

// GetUserDefinedField10 returns the UserDefinedField10 field value if set, zero value otherwise.
func (o *Company) GetUserDefinedField10() string {
	if o == nil || IsNil(o.UserDefinedField10) {
		var ret string
		return ret
	}
	return *o.UserDefinedField10
}

// GetUserDefinedField10Ok returns a tuple with the UserDefinedField10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetUserDefinedField10Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField10) {
		return nil, false
	}
	return o.UserDefinedField10, true
}

// HasUserDefinedField10 returns a boolean if a field has been set.
func (o *Company) HasUserDefinedField10() bool {
	if o != nil && !IsNil(o.UserDefinedField10) {
		return true
	}

	return false
}

// SetUserDefinedField10 gets a reference to the given string and assigns it to the UserDefinedField10 field.
func (o *Company) SetUserDefinedField10(v string) {
	o.UserDefinedField10 = &v
}

// GetVendorIdentifier returns the VendorIdentifier field value if set, zero value otherwise.
func (o *Company) GetVendorIdentifier() string {
	if o == nil || IsNil(o.VendorIdentifier) {
		var ret string
		return ret
	}
	return *o.VendorIdentifier
}

// GetVendorIdentifierOk returns a tuple with the VendorIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetVendorIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.VendorIdentifier) {
		return nil, false
	}
	return o.VendorIdentifier, true
}

// HasVendorIdentifier returns a boolean if a field has been set.
func (o *Company) HasVendorIdentifier() bool {
	if o != nil && !IsNil(o.VendorIdentifier) {
		return true
	}

	return false
}

// SetVendorIdentifier gets a reference to the given string and assigns it to the VendorIdentifier field.
func (o *Company) SetVendorIdentifier(v string) {
	o.VendorIdentifier = &v
}

// GetTaxIdentifier returns the TaxIdentifier field value if set, zero value otherwise.
func (o *Company) GetTaxIdentifier() string {
	if o == nil || IsNil(o.TaxIdentifier) {
		var ret string
		return ret
	}
	return *o.TaxIdentifier
}

// GetTaxIdentifierOk returns a tuple with the TaxIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTaxIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.TaxIdentifier) {
		return nil, false
	}
	return o.TaxIdentifier, true
}

// HasTaxIdentifier returns a boolean if a field has been set.
func (o *Company) HasTaxIdentifier() bool {
	if o != nil && !IsNil(o.TaxIdentifier) {
		return true
	}

	return false
}

// SetTaxIdentifier gets a reference to the given string and assigns it to the TaxIdentifier field.
func (o *Company) SetTaxIdentifier(v string) {
	o.TaxIdentifier = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *Company) GetTaxCode() TaxCodeReference {
	if o == nil || IsNil(o.TaxCode) {
		var ret TaxCodeReference
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTaxCodeOk() (*TaxCodeReference, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *Company) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given TaxCodeReference and assigns it to the TaxCode field.
func (o *Company) SetTaxCode(v TaxCodeReference) {
	o.TaxCode = &v
}

// GetBillingTerms returns the BillingTerms field value if set, zero value otherwise.
func (o *Company) GetBillingTerms() BillingTermsReference {
	if o == nil || IsNil(o.BillingTerms) {
		var ret BillingTermsReference
		return ret
	}
	return *o.BillingTerms
}

// GetBillingTermsOk returns a tuple with the BillingTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetBillingTermsOk() (*BillingTermsReference, bool) {
	if o == nil || IsNil(o.BillingTerms) {
		return nil, false
	}
	return o.BillingTerms, true
}

// HasBillingTerms returns a boolean if a field has been set.
func (o *Company) HasBillingTerms() bool {
	if o != nil && !IsNil(o.BillingTerms) {
		return true
	}

	return false
}

// SetBillingTerms gets a reference to the given BillingTermsReference and assigns it to the BillingTerms field.
func (o *Company) SetBillingTerms(v BillingTermsReference) {
	o.BillingTerms = &v
}

// GetInvoiceTemplate returns the InvoiceTemplate field value if set, zero value otherwise.
func (o *Company) GetInvoiceTemplate() InvoiceTemplateReference {
	if o == nil || IsNil(o.InvoiceTemplate) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.InvoiceTemplate
}

// GetInvoiceTemplateOk returns a tuple with the InvoiceTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetInvoiceTemplateOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.InvoiceTemplate) {
		return nil, false
	}
	return o.InvoiceTemplate, true
}

// HasInvoiceTemplate returns a boolean if a field has been set.
func (o *Company) HasInvoiceTemplate() bool {
	if o != nil && !IsNil(o.InvoiceTemplate) {
		return true
	}

	return false
}

// SetInvoiceTemplate gets a reference to the given InvoiceTemplateReference and assigns it to the InvoiceTemplate field.
func (o *Company) SetInvoiceTemplate(v InvoiceTemplateReference) {
	o.InvoiceTemplate = &v
}

// GetPricingSchedule returns the PricingSchedule field value if set, zero value otherwise.
func (o *Company) GetPricingSchedule() PricingScheduleReference {
	if o == nil || IsNil(o.PricingSchedule) {
		var ret PricingScheduleReference
		return ret
	}
	return *o.PricingSchedule
}

// GetPricingScheduleOk returns a tuple with the PricingSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetPricingScheduleOk() (*PricingScheduleReference, bool) {
	if o == nil || IsNil(o.PricingSchedule) {
		return nil, false
	}
	return o.PricingSchedule, true
}

// HasPricingSchedule returns a boolean if a field has been set.
func (o *Company) HasPricingSchedule() bool {
	if o != nil && !IsNil(o.PricingSchedule) {
		return true
	}

	return false
}

// SetPricingSchedule gets a reference to the given PricingScheduleReference and assigns it to the PricingSchedule field.
func (o *Company) SetPricingSchedule(v PricingScheduleReference) {
	o.PricingSchedule = &v
}

// GetCompanyEntityType returns the CompanyEntityType field value if set, zero value otherwise.
func (o *Company) GetCompanyEntityType() EntityTypeReference {
	if o == nil || IsNil(o.CompanyEntityType) {
		var ret EntityTypeReference
		return ret
	}
	return *o.CompanyEntityType
}

// GetCompanyEntityTypeOk returns a tuple with the CompanyEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetCompanyEntityTypeOk() (*EntityTypeReference, bool) {
	if o == nil || IsNil(o.CompanyEntityType) {
		return nil, false
	}
	return o.CompanyEntityType, true
}

// HasCompanyEntityType returns a boolean if a field has been set.
func (o *Company) HasCompanyEntityType() bool {
	if o != nil && !IsNil(o.CompanyEntityType) {
		return true
	}

	return false
}

// SetCompanyEntityType gets a reference to the given EntityTypeReference and assigns it to the CompanyEntityType field.
func (o *Company) SetCompanyEntityType(v EntityTypeReference) {
	o.CompanyEntityType = &v
}

// GetBillToCompany returns the BillToCompany field value if set, zero value otherwise.
func (o *Company) GetBillToCompany() CompanyReference {
	if o == nil || IsNil(o.BillToCompany) {
		var ret CompanyReference
		return ret
	}
	return *o.BillToCompany
}

// GetBillToCompanyOk returns a tuple with the BillToCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetBillToCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.BillToCompany) {
		return nil, false
	}
	return o.BillToCompany, true
}

// HasBillToCompany returns a boolean if a field has been set.
func (o *Company) HasBillToCompany() bool {
	if o != nil && !IsNil(o.BillToCompany) {
		return true
	}

	return false
}

// SetBillToCompany gets a reference to the given CompanyReference and assigns it to the BillToCompany field.
func (o *Company) SetBillToCompany(v CompanyReference) {
	o.BillToCompany = &v
}

// GetBillingSite returns the BillingSite field value if set, zero value otherwise.
func (o *Company) GetBillingSite() SiteReference {
	if o == nil || IsNil(o.BillingSite) {
		var ret SiteReference
		return ret
	}
	return *o.BillingSite
}

// GetBillingSiteOk returns a tuple with the BillingSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetBillingSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.BillingSite) {
		return nil, false
	}
	return o.BillingSite, true
}

// HasBillingSite returns a boolean if a field has been set.
func (o *Company) HasBillingSite() bool {
	if o != nil && !IsNil(o.BillingSite) {
		return true
	}

	return false
}

// SetBillingSite gets a reference to the given SiteReference and assigns it to the BillingSite field.
func (o *Company) SetBillingSite(v SiteReference) {
	o.BillingSite = &v
}

// GetBillingContact returns the BillingContact field value if set, zero value otherwise.
func (o *Company) GetBillingContact() ContactReference {
	if o == nil || IsNil(o.BillingContact) {
		var ret ContactReference
		return ret
	}
	return *o.BillingContact
}

// GetBillingContactOk returns a tuple with the BillingContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetBillingContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.BillingContact) {
		return nil, false
	}
	return o.BillingContact, true
}

// HasBillingContact returns a boolean if a field has been set.
func (o *Company) HasBillingContact() bool {
	if o != nil && !IsNil(o.BillingContact) {
		return true
	}

	return false
}

// SetBillingContact gets a reference to the given ContactReference and assigns it to the BillingContact field.
func (o *Company) SetBillingContact(v ContactReference) {
	o.BillingContact = &v
}

// GetInvoiceDeliveryMethod returns the InvoiceDeliveryMethod field value if set, zero value otherwise.
func (o *Company) GetInvoiceDeliveryMethod() BillingDeliveryReference {
	if o == nil || IsNil(o.InvoiceDeliveryMethod) {
		var ret BillingDeliveryReference
		return ret
	}
	return *o.InvoiceDeliveryMethod
}

// GetInvoiceDeliveryMethodOk returns a tuple with the InvoiceDeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetInvoiceDeliveryMethodOk() (*BillingDeliveryReference, bool) {
	if o == nil || IsNil(o.InvoiceDeliveryMethod) {
		return nil, false
	}
	return o.InvoiceDeliveryMethod, true
}

// HasInvoiceDeliveryMethod returns a boolean if a field has been set.
func (o *Company) HasInvoiceDeliveryMethod() bool {
	if o != nil && !IsNil(o.InvoiceDeliveryMethod) {
		return true
	}

	return false
}

// SetInvoiceDeliveryMethod gets a reference to the given BillingDeliveryReference and assigns it to the InvoiceDeliveryMethod field.
func (o *Company) SetInvoiceDeliveryMethod(v BillingDeliveryReference) {
	o.InvoiceDeliveryMethod = &v
}

// GetInvoiceToEmailAddress returns the InvoiceToEmailAddress field value if set, zero value otherwise.
func (o *Company) GetInvoiceToEmailAddress() string {
	if o == nil || IsNil(o.InvoiceToEmailAddress) {
		var ret string
		return ret
	}
	return *o.InvoiceToEmailAddress
}

// GetInvoiceToEmailAddressOk returns a tuple with the InvoiceToEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetInvoiceToEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceToEmailAddress) {
		return nil, false
	}
	return o.InvoiceToEmailAddress, true
}

// HasInvoiceToEmailAddress returns a boolean if a field has been set.
func (o *Company) HasInvoiceToEmailAddress() bool {
	if o != nil && !IsNil(o.InvoiceToEmailAddress) {
		return true
	}

	return false
}

// SetInvoiceToEmailAddress gets a reference to the given string and assigns it to the InvoiceToEmailAddress field.
func (o *Company) SetInvoiceToEmailAddress(v string) {
	o.InvoiceToEmailAddress = &v
}

// GetInvoiceCCEmailAddress returns the InvoiceCCEmailAddress field value if set, zero value otherwise.
func (o *Company) GetInvoiceCCEmailAddress() string {
	if o == nil || IsNil(o.InvoiceCCEmailAddress) {
		var ret string
		return ret
	}
	return *o.InvoiceCCEmailAddress
}

// GetInvoiceCCEmailAddressOk returns a tuple with the InvoiceCCEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetInvoiceCCEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceCCEmailAddress) {
		return nil, false
	}
	return o.InvoiceCCEmailAddress, true
}

// HasInvoiceCCEmailAddress returns a boolean if a field has been set.
func (o *Company) HasInvoiceCCEmailAddress() bool {
	if o != nil && !IsNil(o.InvoiceCCEmailAddress) {
		return true
	}

	return false
}

// SetInvoiceCCEmailAddress gets a reference to the given string and assigns it to the InvoiceCCEmailAddress field.
func (o *Company) SetInvoiceCCEmailAddress(v string) {
	o.InvoiceCCEmailAddress = &v
}

// GetDeletedFlag returns the DeletedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetDeletedFlag() bool {
	if o == nil || IsNil(o.DeletedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DeletedFlag.Get()
}

// GetDeletedFlagOk returns a tuple with the DeletedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetDeletedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedFlag.Get(), o.DeletedFlag.IsSet()
}

// HasDeletedFlag returns a boolean if a field has been set.
func (o *Company) HasDeletedFlag() bool {
	if o != nil && o.DeletedFlag.IsSet() {
		return true
	}

	return false
}

// SetDeletedFlag gets a reference to the given NullableBool and assigns it to the DeletedFlag field.
func (o *Company) SetDeletedFlag(v bool) {
	o.DeletedFlag.Set(&v)
}

// SetDeletedFlagNil sets the value for DeletedFlag to be an explicit nil
func (o *Company) SetDeletedFlagNil() {
	o.DeletedFlag.Set(nil)
}

// UnsetDeletedFlag ensures that no value is present for DeletedFlag, not even an explicit nil
func (o *Company) UnsetDeletedFlag() {
	o.DeletedFlag.Unset()
}

// GetDateDeleted returns the DateDeleted field value if set, zero value otherwise.
func (o *Company) GetDateDeleted() time.Time {
	if o == nil || IsNil(o.DateDeleted) {
		var ret time.Time
		return ret
	}
	return *o.DateDeleted
}

// GetDateDeletedOk returns a tuple with the DateDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetDateDeletedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateDeleted) {
		return nil, false
	}
	return o.DateDeleted, true
}

// HasDateDeleted returns a boolean if a field has been set.
func (o *Company) HasDateDeleted() bool {
	if o != nil && !IsNil(o.DateDeleted) {
		return true
	}

	return false
}

// SetDateDeleted gets a reference to the given time.Time and assigns it to the DateDeleted field.
func (o *Company) SetDateDeleted(v time.Time) {
	o.DateDeleted = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *Company) GetDeletedBy() string {
	if o == nil || IsNil(o.DeletedBy) {
		var ret string
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetDeletedByOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedBy) {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *Company) HasDeletedBy() bool {
	if o != nil && !IsNil(o.DeletedBy) {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given string and assigns it to the DeletedBy field.
func (o *Company) SetDeletedBy(v string) {
	o.DeletedBy = &v
}

// GetMobileGuid returns the MobileGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetMobileGuid() string {
	if o == nil || IsNil(o.MobileGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MobileGuid.Get()
}

// GetMobileGuidOk returns a tuple with the MobileGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetMobileGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileGuid.Get(), o.MobileGuid.IsSet()
}

// HasMobileGuid returns a boolean if a field has been set.
func (o *Company) HasMobileGuid() bool {
	if o != nil && o.MobileGuid.IsSet() {
		return true
	}

	return false
}

// SetMobileGuid gets a reference to the given NullableString and assigns it to the MobileGuid field.
func (o *Company) SetMobileGuid(v string) {
	o.MobileGuid.Set(&v)
}

// SetMobileGuidNil sets the value for MobileGuid to be an explicit nil
func (o *Company) SetMobileGuidNil() {
	o.MobileGuid.Set(nil)
}

// UnsetMobileGuid ensures that no value is present for MobileGuid, not even an explicit nil
func (o *Company) UnsetMobileGuid() {
	o.MobileGuid.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise.
func (o *Company) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl) {
		var ret string
		return ret
	}
	return *o.FacebookUrl
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetFacebookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FacebookUrl) {
		return nil, false
	}
	return o.FacebookUrl, true
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *Company) HasFacebookUrl() bool {
	if o != nil && !IsNil(o.FacebookUrl) {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given string and assigns it to the FacebookUrl field.
func (o *Company) SetFacebookUrl(v string) {
	o.FacebookUrl = &v
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise.
func (o *Company) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl) {
		var ret string
		return ret
	}
	return *o.TwitterUrl
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTwitterUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterUrl) {
		return nil, false
	}
	return o.TwitterUrl, true
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *Company) HasTwitterUrl() bool {
	if o != nil && !IsNil(o.TwitterUrl) {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given string and assigns it to the TwitterUrl field.
func (o *Company) SetTwitterUrl(v string) {
	o.TwitterUrl = &v
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise.
func (o *Company) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetLinkedInUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedInUrl) {
		return nil, false
	}
	return o.LinkedInUrl, true
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *Company) HasLinkedInUrl() bool {
	if o != nil && !IsNil(o.LinkedInUrl) {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given string and assigns it to the LinkedInUrl field.
func (o *Company) SetLinkedInUrl(v string) {
	o.LinkedInUrl = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Company) GetCurrency() CurrencyReference {
	if o == nil || IsNil(o.Currency) {
		var ret CurrencyReference
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Company) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given CurrencyReference and assigns it to the Currency field.
func (o *Company) SetCurrency(v CurrencyReference) {
	o.Currency = &v
}

// GetTerritoryManager returns the TerritoryManager field value if set, zero value otherwise.
func (o *Company) GetTerritoryManager() MemberReference {
	if o == nil || IsNil(o.TerritoryManager) {
		var ret MemberReference
		return ret
	}
	return *o.TerritoryManager
}

// GetTerritoryManagerOk returns a tuple with the TerritoryManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTerritoryManagerOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.TerritoryManager) {
		return nil, false
	}
	return o.TerritoryManager, true
}

// HasTerritoryManager returns a boolean if a field has been set.
func (o *Company) HasTerritoryManager() bool {
	if o != nil && !IsNil(o.TerritoryManager) {
		return true
	}

	return false
}

// SetTerritoryManager gets a reference to the given MemberReference and assigns it to the TerritoryManager field.
func (o *Company) SetTerritoryManager(v MemberReference) {
	o.TerritoryManager = &v
}

// GetResellerIdentifier returns the ResellerIdentifier field value if set, zero value otherwise.
func (o *Company) GetResellerIdentifier() string {
	if o == nil || IsNil(o.ResellerIdentifier) {
		var ret string
		return ret
	}
	return *o.ResellerIdentifier
}

// GetResellerIdentifierOk returns a tuple with the ResellerIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetResellerIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ResellerIdentifier) {
		return nil, false
	}
	return o.ResellerIdentifier, true
}

// HasResellerIdentifier returns a boolean if a field has been set.
func (o *Company) HasResellerIdentifier() bool {
	if o != nil && !IsNil(o.ResellerIdentifier) {
		return true
	}

	return false
}

// SetResellerIdentifier gets a reference to the given string and assigns it to the ResellerIdentifier field.
func (o *Company) SetResellerIdentifier(v string) {
	o.ResellerIdentifier = &v
}

// GetIsVendorFlag returns the IsVendorFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Company) GetIsVendorFlag() bool {
	if o == nil || IsNil(o.IsVendorFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IsVendorFlag.Get()
}

// GetIsVendorFlagOk returns a tuple with the IsVendorFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Company) GetIsVendorFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsVendorFlag.Get(), o.IsVendorFlag.IsSet()
}

// HasIsVendorFlag returns a boolean if a field has been set.
func (o *Company) HasIsVendorFlag() bool {
	if o != nil && o.IsVendorFlag.IsSet() {
		return true
	}

	return false
}

// SetIsVendorFlag gets a reference to the given NullableBool and assigns it to the IsVendorFlag field.
func (o *Company) SetIsVendorFlag(v bool) {
	o.IsVendorFlag.Set(&v)
}

// SetIsVendorFlagNil sets the value for IsVendorFlag to be an explicit nil
func (o *Company) SetIsVendorFlagNil() {
	o.IsVendorFlag.Set(nil)
}

// UnsetIsVendorFlag ensures that no value is present for IsVendorFlag, not even an explicit nil
func (o *Company) UnsetIsVendorFlag() {
	o.IsVendorFlag.Unset()
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *Company) GetTypes() []CompanyTypeReference {
	if o == nil || IsNil(o.Types) {
		var ret []CompanyTypeReference
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetTypesOk() ([]CompanyTypeReference, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *Company) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []CompanyTypeReference and assigns it to the Types field.
func (o *Company) SetTypes(v []CompanyTypeReference) {
	o.Types = v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *Company) GetSite() SiteReference {
	if o == nil || IsNil(o.Site) {
		var ret SiteReference
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Company) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given SiteReference and assigns it to the Site field.
func (o *Company) SetSite(v SiteReference) {
	o.Site = &v
}

// GetIntegratorTags returns the IntegratorTags field value if set, zero value otherwise.
func (o *Company) GetIntegratorTags() []string {
	if o == nil || IsNil(o.IntegratorTags) {
		var ret []string
		return ret
	}
	return o.IntegratorTags
}

// GetIntegratorTagsOk returns a tuple with the IntegratorTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetIntegratorTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.IntegratorTags) {
		return nil, false
	}
	return o.IntegratorTags, true
}

// HasIntegratorTags returns a boolean if a field has been set.
func (o *Company) HasIntegratorTags() bool {
	if o != nil && !IsNil(o.IntegratorTags) {
		return true
	}

	return false
}

// SetIntegratorTags gets a reference to the given []string and assigns it to the IntegratorTags field.
func (o *Company) SetIntegratorTags(v []string) {
	o.IntegratorTags = v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *Company) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *Company) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *Company) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Company) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Company) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Company) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *Company) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o Company) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Company) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["identifier"] = o.Identifier
	toSerialize["name"] = o.Name
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.FaxNumber) {
		toSerialize["faxNumber"] = o.FaxNumber
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.DefaultContact) {
		toSerialize["defaultContact"] = o.DefaultContact
	}
	if !IsNil(o.DateAcquired) {
		toSerialize["dateAcquired"] = o.DateAcquired
	}
	if !IsNil(o.SicCode) {
		toSerialize["sicCode"] = o.SicCode
	}
	if !IsNil(o.ParentCompany) {
		toSerialize["parentCompany"] = o.ParentCompany
	}
	if o.AnnualRevenue.IsSet() {
		toSerialize["annualRevenue"] = o.AnnualRevenue.Get()
	}
	if o.NumberOfEmployees.IsSet() {
		toSerialize["numberOfEmployees"] = o.NumberOfEmployees.Get()
	}
	if o.YearEstablished.IsSet() {
		toSerialize["yearEstablished"] = o.YearEstablished.Get()
	}
	if o.RevenueYear.IsSet() {
		toSerialize["revenueYear"] = o.RevenueYear.Get()
	}
	if !IsNil(o.OwnershipType) {
		toSerialize["ownershipType"] = o.OwnershipType
	}
	if !IsNil(o.TimeZoneSetup) {
		toSerialize["timeZoneSetup"] = o.TimeZoneSetup
	}
	if !IsNil(o.LeadSource) {
		toSerialize["leadSource"] = o.LeadSource
	}
	if o.LeadFlag.IsSet() {
		toSerialize["leadFlag"] = o.LeadFlag.Get()
	}
	if o.UnsubscribeFlag.IsSet() {
		toSerialize["unsubscribeFlag"] = o.UnsubscribeFlag.Get()
	}
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	if !IsNil(o.UserDefinedField1) {
		toSerialize["userDefinedField1"] = o.UserDefinedField1
	}
	if !IsNil(o.UserDefinedField2) {
		toSerialize["userDefinedField2"] = o.UserDefinedField2
	}
	if !IsNil(o.UserDefinedField3) {
		toSerialize["userDefinedField3"] = o.UserDefinedField3
	}
	if !IsNil(o.UserDefinedField4) {
		toSerialize["userDefinedField4"] = o.UserDefinedField4
	}
	if !IsNil(o.UserDefinedField5) {
		toSerialize["userDefinedField5"] = o.UserDefinedField5
	}
	if !IsNil(o.UserDefinedField6) {
		toSerialize["userDefinedField6"] = o.UserDefinedField6
	}
	if !IsNil(o.UserDefinedField7) {
		toSerialize["userDefinedField7"] = o.UserDefinedField7
	}
	if !IsNil(o.UserDefinedField8) {
		toSerialize["userDefinedField8"] = o.UserDefinedField8
	}
	if !IsNil(o.UserDefinedField9) {
		toSerialize["userDefinedField9"] = o.UserDefinedField9
	}
	if !IsNil(o.UserDefinedField10) {
		toSerialize["userDefinedField10"] = o.UserDefinedField10
	}
	if !IsNil(o.VendorIdentifier) {
		toSerialize["vendorIdentifier"] = o.VendorIdentifier
	}
	if !IsNil(o.TaxIdentifier) {
		toSerialize["taxIdentifier"] = o.TaxIdentifier
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.BillingTerms) {
		toSerialize["billingTerms"] = o.BillingTerms
	}
	if !IsNil(o.InvoiceTemplate) {
		toSerialize["invoiceTemplate"] = o.InvoiceTemplate
	}
	if !IsNil(o.PricingSchedule) {
		toSerialize["pricingSchedule"] = o.PricingSchedule
	}
	if !IsNil(o.CompanyEntityType) {
		toSerialize["companyEntityType"] = o.CompanyEntityType
	}
	if !IsNil(o.BillToCompany) {
		toSerialize["billToCompany"] = o.BillToCompany
	}
	if !IsNil(o.BillingSite) {
		toSerialize["billingSite"] = o.BillingSite
	}
	if !IsNil(o.BillingContact) {
		toSerialize["billingContact"] = o.BillingContact
	}
	if !IsNil(o.InvoiceDeliveryMethod) {
		toSerialize["invoiceDeliveryMethod"] = o.InvoiceDeliveryMethod
	}
	if !IsNil(o.InvoiceToEmailAddress) {
		toSerialize["invoiceToEmailAddress"] = o.InvoiceToEmailAddress
	}
	if !IsNil(o.InvoiceCCEmailAddress) {
		toSerialize["invoiceCCEmailAddress"] = o.InvoiceCCEmailAddress
	}
	if o.DeletedFlag.IsSet() {
		toSerialize["deletedFlag"] = o.DeletedFlag.Get()
	}
	if !IsNil(o.DateDeleted) {
		toSerialize["dateDeleted"] = o.DateDeleted
	}
	if !IsNil(o.DeletedBy) {
		toSerialize["deletedBy"] = o.DeletedBy
	}
	if o.MobileGuid.IsSet() {
		toSerialize["mobileGuid"] = o.MobileGuid.Get()
	}
	if !IsNil(o.FacebookUrl) {
		toSerialize["facebookUrl"] = o.FacebookUrl
	}
	if !IsNil(o.TwitterUrl) {
		toSerialize["twitterUrl"] = o.TwitterUrl
	}
	if !IsNil(o.LinkedInUrl) {
		toSerialize["linkedInUrl"] = o.LinkedInUrl
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.TerritoryManager) {
		toSerialize["territoryManager"] = o.TerritoryManager
	}
	if !IsNil(o.ResellerIdentifier) {
		toSerialize["resellerIdentifier"] = o.ResellerIdentifier
	}
	if o.IsVendorFlag.IsSet() {
		toSerialize["isVendorFlag"] = o.IsVendorFlag.Get()
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.IntegratorTags) {
		toSerialize["integratorTags"] = o.IntegratorTags
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *Company) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompany := _Company{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompany)

	if err != nil {
		return err
	}

	*o = Company(varCompany)

	return err
}

type NullableCompany struct {
	value *Company
	isSet bool
}

func (v NullableCompany) Get() *Company {
	return v.value
}

func (v *NullableCompany) Set(val *Company) {
	v.value = val
	v.isSet = true
}

func (v NullableCompany) IsSet() bool {
	return v.isSet
}

func (v *NullableCompany) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompany(val *Company) *NullableCompany {
	return &NullableCompany{value: val, isSet: true}
}

func (v NullableCompany) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompany) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
