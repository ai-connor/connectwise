/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CompanyMerge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyMerge{}

// CompanyMerge struct for CompanyMerge
type CompanyMerge struct {
	ToCompanyId        int32          `json:"toCompanyId"`
	Name               NullableString `json:"name,omitempty"`
	Identifier         NullableString `json:"identifier,omitempty"`
	Status             NullableString `json:"status,omitempty"`
	Type               NullableString `json:"type,omitempty"`
	PrimaryAddress     NullableString `json:"primaryAddress,omitempty"`
	PrimaryContact     NullableString `json:"primaryContact,omitempty"`
	Phone              NullableString `json:"phone,omitempty"`
	Fax                NullableString `json:"fax,omitempty"`
	Website            NullableString `json:"website,omitempty"`
	Market             NullableString `json:"market,omitempty"`
	Territory          NullableString `json:"territory,omitempty"`
	Revenue            NullableString `json:"revenue,omitempty"`
	RevenueYear        NullableString `json:"revenueYear,omitempty"`
	NumberOfEmployees  NullableString `json:"numberOfEmployees,omitempty"`
	SicCode            NullableString `json:"sicCode,omitempty"`
	DateAcquired       NullableString `json:"dateAcquired,omitempty"`
	TimeZone           NullableString `json:"timeZone,omitempty"`
	SourceList         NullableString `json:"sourceList,omitempty"`
	UserDefinedField1  NullableString `json:"userDefinedField1,omitempty"`
	UserDefinedField2  NullableString `json:"userDefinedField2,omitempty"`
	UserDefinedField3  NullableString `json:"userDefinedField3,omitempty"`
	UserDefinedField4  NullableString `json:"userDefinedField4,omitempty"`
	UserDefinedField5  NullableString `json:"userDefinedField5,omitempty"`
	UserDefinedField6  NullableString `json:"userDefinedField6,omitempty"`
	UserDefinedField7  NullableString `json:"userDefinedField7,omitempty"`
	UserDefinedField8  NullableString `json:"userDefinedField8,omitempty"`
	UserDefinedField9  NullableString `json:"userDefinedField9,omitempty"`
	UserDefinedField10 NullableString `json:"userDefinedField10,omitempty"`
	BillingAddress     NullableString `json:"billingAddress,omitempty"`
	BillingContact     NullableString `json:"billingContact,omitempty"`
	TaxCode            NullableString `json:"taxCode,omitempty"`
	AccountNumber      NullableString `json:"accountNumber,omitempty"`
	BillingTerms       NullableString `json:"billingTerms,omitempty"`
	Notes              NullableString `json:"notes,omitempty"`
	Sites              NullableString `json:"sites,omitempty"`
	Activities         NullableString `json:"activities,omitempty"`
	Opportunities      NullableString `json:"opportunities,omitempty"`
	Services           NullableString `json:"services,omitempty"`
	Projects           NullableString `json:"projects,omitempty"`
	Contacts           NullableString `json:"contacts,omitempty"`
	Documents          NullableString `json:"documents,omitempty"`
}

type _CompanyMerge CompanyMerge

// NewCompanyMerge instantiates a new CompanyMerge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyMerge(toCompanyId int32) *CompanyMerge {
	this := CompanyMerge{}
	this.ToCompanyId = toCompanyId
	return &this
}

// NewCompanyMergeWithDefaults instantiates a new CompanyMerge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyMergeWithDefaults() *CompanyMerge {
	this := CompanyMerge{}
	return &this
}

// GetToCompanyId returns the ToCompanyId field value
func (o *CompanyMerge) GetToCompanyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToCompanyId
}

// GetToCompanyIdOk returns a tuple with the ToCompanyId field value
// and a boolean to check if the value has been set.
func (o *CompanyMerge) GetToCompanyIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToCompanyId, true
}

// SetToCompanyId sets field value
func (o *CompanyMerge) SetToCompanyId(v int32) {
	o.ToCompanyId = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CompanyMerge) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CompanyMerge) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CompanyMerge) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CompanyMerge) UnsetName() {
	o.Name.Unset()
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier.Get()) {
		var ret string
		return ret
	}
	return *o.Identifier.Get()
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identifier.Get(), o.Identifier.IsSet()
}

// HasIdentifier returns a boolean if a field has been set.
func (o *CompanyMerge) HasIdentifier() bool {
	if o != nil && o.Identifier.IsSet() {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given NullableString and assigns it to the Identifier field.
func (o *CompanyMerge) SetIdentifier(v string) {
	o.Identifier.Set(&v)
}

// SetIdentifierNil sets the value for Identifier to be an explicit nil
func (o *CompanyMerge) SetIdentifierNil() {
	o.Identifier.Set(nil)
}

// UnsetIdentifier ensures that no value is present for Identifier, not even an explicit nil
func (o *CompanyMerge) UnsetIdentifier() {
	o.Identifier.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *CompanyMerge) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *CompanyMerge) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *CompanyMerge) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *CompanyMerge) UnsetStatus() {
	o.Status.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *CompanyMerge) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *CompanyMerge) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *CompanyMerge) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *CompanyMerge) UnsetType() {
	o.Type.Unset()
}

// GetPrimaryAddress returns the PrimaryAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetPrimaryAddress() string {
	if o == nil || IsNil(o.PrimaryAddress.Get()) {
		var ret string
		return ret
	}
	return *o.PrimaryAddress.Get()
}

// GetPrimaryAddressOk returns a tuple with the PrimaryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetPrimaryAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryAddress.Get(), o.PrimaryAddress.IsSet()
}

// HasPrimaryAddress returns a boolean if a field has been set.
func (o *CompanyMerge) HasPrimaryAddress() bool {
	if o != nil && o.PrimaryAddress.IsSet() {
		return true
	}

	return false
}

// SetPrimaryAddress gets a reference to the given NullableString and assigns it to the PrimaryAddress field.
func (o *CompanyMerge) SetPrimaryAddress(v string) {
	o.PrimaryAddress.Set(&v)
}

// SetPrimaryAddressNil sets the value for PrimaryAddress to be an explicit nil
func (o *CompanyMerge) SetPrimaryAddressNil() {
	o.PrimaryAddress.Set(nil)
}

// UnsetPrimaryAddress ensures that no value is present for PrimaryAddress, not even an explicit nil
func (o *CompanyMerge) UnsetPrimaryAddress() {
	o.PrimaryAddress.Unset()
}

// GetPrimaryContact returns the PrimaryContact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetPrimaryContact() string {
	if o == nil || IsNil(o.PrimaryContact.Get()) {
		var ret string
		return ret
	}
	return *o.PrimaryContact.Get()
}

// GetPrimaryContactOk returns a tuple with the PrimaryContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetPrimaryContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryContact.Get(), o.PrimaryContact.IsSet()
}

// HasPrimaryContact returns a boolean if a field has been set.
func (o *CompanyMerge) HasPrimaryContact() bool {
	if o != nil && o.PrimaryContact.IsSet() {
		return true
	}

	return false
}

// SetPrimaryContact gets a reference to the given NullableString and assigns it to the PrimaryContact field.
func (o *CompanyMerge) SetPrimaryContact(v string) {
	o.PrimaryContact.Set(&v)
}

// SetPrimaryContactNil sets the value for PrimaryContact to be an explicit nil
func (o *CompanyMerge) SetPrimaryContactNil() {
	o.PrimaryContact.Set(nil)
}

// UnsetPrimaryContact ensures that no value is present for PrimaryContact, not even an explicit nil
func (o *CompanyMerge) UnsetPrimaryContact() {
	o.PrimaryContact.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *CompanyMerge) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *CompanyMerge) SetPhone(v string) {
	o.Phone.Set(&v)
}

// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *CompanyMerge) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *CompanyMerge) UnsetPhone() {
	o.Phone.Unset()
}

// GetFax returns the Fax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetFax() string {
	if o == nil || IsNil(o.Fax.Get()) {
		var ret string
		return ret
	}
	return *o.Fax.Get()
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetFaxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fax.Get(), o.Fax.IsSet()
}

// HasFax returns a boolean if a field has been set.
func (o *CompanyMerge) HasFax() bool {
	if o != nil && o.Fax.IsSet() {
		return true
	}

	return false
}

// SetFax gets a reference to the given NullableString and assigns it to the Fax field.
func (o *CompanyMerge) SetFax(v string) {
	o.Fax.Set(&v)
}

// SetFaxNil sets the value for Fax to be an explicit nil
func (o *CompanyMerge) SetFaxNil() {
	o.Fax.Set(nil)
}

// UnsetFax ensures that no value is present for Fax, not even an explicit nil
func (o *CompanyMerge) UnsetFax() {
	o.Fax.Unset()
}

// GetWebsite returns the Website field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetWebsite() string {
	if o == nil || IsNil(o.Website.Get()) {
		var ret string
		return ret
	}
	return *o.Website.Get()
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetWebsiteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Website.Get(), o.Website.IsSet()
}

// HasWebsite returns a boolean if a field has been set.
func (o *CompanyMerge) HasWebsite() bool {
	if o != nil && o.Website.IsSet() {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given NullableString and assigns it to the Website field.
func (o *CompanyMerge) SetWebsite(v string) {
	o.Website.Set(&v)
}

// SetWebsiteNil sets the value for Website to be an explicit nil
func (o *CompanyMerge) SetWebsiteNil() {
	o.Website.Set(nil)
}

// UnsetWebsite ensures that no value is present for Website, not even an explicit nil
func (o *CompanyMerge) UnsetWebsite() {
	o.Website.Unset()
}

// GetMarket returns the Market field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetMarket() string {
	if o == nil || IsNil(o.Market.Get()) {
		var ret string
		return ret
	}
	return *o.Market.Get()
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetMarketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Market.Get(), o.Market.IsSet()
}

// HasMarket returns a boolean if a field has been set.
func (o *CompanyMerge) HasMarket() bool {
	if o != nil && o.Market.IsSet() {
		return true
	}

	return false
}

// SetMarket gets a reference to the given NullableString and assigns it to the Market field.
func (o *CompanyMerge) SetMarket(v string) {
	o.Market.Set(&v)
}

// SetMarketNil sets the value for Market to be an explicit nil
func (o *CompanyMerge) SetMarketNil() {
	o.Market.Set(nil)
}

// UnsetMarket ensures that no value is present for Market, not even an explicit nil
func (o *CompanyMerge) UnsetMarket() {
	o.Market.Unset()
}

// GetTerritory returns the Territory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetTerritory() string {
	if o == nil || IsNil(o.Territory.Get()) {
		var ret string
		return ret
	}
	return *o.Territory.Get()
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetTerritoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Territory.Get(), o.Territory.IsSet()
}

// HasTerritory returns a boolean if a field has been set.
func (o *CompanyMerge) HasTerritory() bool {
	if o != nil && o.Territory.IsSet() {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given NullableString and assigns it to the Territory field.
func (o *CompanyMerge) SetTerritory(v string) {
	o.Territory.Set(&v)
}

// SetTerritoryNil sets the value for Territory to be an explicit nil
func (o *CompanyMerge) SetTerritoryNil() {
	o.Territory.Set(nil)
}

// UnsetTerritory ensures that no value is present for Territory, not even an explicit nil
func (o *CompanyMerge) UnsetTerritory() {
	o.Territory.Unset()
}

// GetRevenue returns the Revenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetRevenue() string {
	if o == nil || IsNil(o.Revenue.Get()) {
		var ret string
		return ret
	}
	return *o.Revenue.Get()
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetRevenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revenue.Get(), o.Revenue.IsSet()
}

// HasRevenue returns a boolean if a field has been set.
func (o *CompanyMerge) HasRevenue() bool {
	if o != nil && o.Revenue.IsSet() {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given NullableString and assigns it to the Revenue field.
func (o *CompanyMerge) SetRevenue(v string) {
	o.Revenue.Set(&v)
}

// SetRevenueNil sets the value for Revenue to be an explicit nil
func (o *CompanyMerge) SetRevenueNil() {
	o.Revenue.Set(nil)
}

// UnsetRevenue ensures that no value is present for Revenue, not even an explicit nil
func (o *CompanyMerge) UnsetRevenue() {
	o.Revenue.Unset()
}

// GetRevenueYear returns the RevenueYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetRevenueYear() string {
	if o == nil || IsNil(o.RevenueYear.Get()) {
		var ret string
		return ret
	}
	return *o.RevenueYear.Get()
}

// GetRevenueYearOk returns a tuple with the RevenueYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetRevenueYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevenueYear.Get(), o.RevenueYear.IsSet()
}

// HasRevenueYear returns a boolean if a field has been set.
func (o *CompanyMerge) HasRevenueYear() bool {
	if o != nil && o.RevenueYear.IsSet() {
		return true
	}

	return false
}

// SetRevenueYear gets a reference to the given NullableString and assigns it to the RevenueYear field.
func (o *CompanyMerge) SetRevenueYear(v string) {
	o.RevenueYear.Set(&v)
}

// SetRevenueYearNil sets the value for RevenueYear to be an explicit nil
func (o *CompanyMerge) SetRevenueYearNil() {
	o.RevenueYear.Set(nil)
}

// UnsetRevenueYear ensures that no value is present for RevenueYear, not even an explicit nil
func (o *CompanyMerge) UnsetRevenueYear() {
	o.RevenueYear.Unset()
}

// GetNumberOfEmployees returns the NumberOfEmployees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetNumberOfEmployees() string {
	if o == nil || IsNil(o.NumberOfEmployees.Get()) {
		var ret string
		return ret
	}
	return *o.NumberOfEmployees.Get()
}

// GetNumberOfEmployeesOk returns a tuple with the NumberOfEmployees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetNumberOfEmployeesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberOfEmployees.Get(), o.NumberOfEmployees.IsSet()
}

// HasNumberOfEmployees returns a boolean if a field has been set.
func (o *CompanyMerge) HasNumberOfEmployees() bool {
	if o != nil && o.NumberOfEmployees.IsSet() {
		return true
	}

	return false
}

// SetNumberOfEmployees gets a reference to the given NullableString and assigns it to the NumberOfEmployees field.
func (o *CompanyMerge) SetNumberOfEmployees(v string) {
	o.NumberOfEmployees.Set(&v)
}

// SetNumberOfEmployeesNil sets the value for NumberOfEmployees to be an explicit nil
func (o *CompanyMerge) SetNumberOfEmployeesNil() {
	o.NumberOfEmployees.Set(nil)
}

// UnsetNumberOfEmployees ensures that no value is present for NumberOfEmployees, not even an explicit nil
func (o *CompanyMerge) UnsetNumberOfEmployees() {
	o.NumberOfEmployees.Unset()
}

// GetSicCode returns the SicCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetSicCode() string {
	if o == nil || IsNil(o.SicCode.Get()) {
		var ret string
		return ret
	}
	return *o.SicCode.Get()
}

// GetSicCodeOk returns a tuple with the SicCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetSicCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SicCode.Get(), o.SicCode.IsSet()
}

// HasSicCode returns a boolean if a field has been set.
func (o *CompanyMerge) HasSicCode() bool {
	if o != nil && o.SicCode.IsSet() {
		return true
	}

	return false
}

// SetSicCode gets a reference to the given NullableString and assigns it to the SicCode field.
func (o *CompanyMerge) SetSicCode(v string) {
	o.SicCode.Set(&v)
}

// SetSicCodeNil sets the value for SicCode to be an explicit nil
func (o *CompanyMerge) SetSicCodeNil() {
	o.SicCode.Set(nil)
}

// UnsetSicCode ensures that no value is present for SicCode, not even an explicit nil
func (o *CompanyMerge) UnsetSicCode() {
	o.SicCode.Unset()
}

// GetDateAcquired returns the DateAcquired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetDateAcquired() string {
	if o == nil || IsNil(o.DateAcquired.Get()) {
		var ret string
		return ret
	}
	return *o.DateAcquired.Get()
}

// GetDateAcquiredOk returns a tuple with the DateAcquired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetDateAcquiredOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateAcquired.Get(), o.DateAcquired.IsSet()
}

// HasDateAcquired returns a boolean if a field has been set.
func (o *CompanyMerge) HasDateAcquired() bool {
	if o != nil && o.DateAcquired.IsSet() {
		return true
	}

	return false
}

// SetDateAcquired gets a reference to the given NullableString and assigns it to the DateAcquired field.
func (o *CompanyMerge) SetDateAcquired(v string) {
	o.DateAcquired.Set(&v)
}

// SetDateAcquiredNil sets the value for DateAcquired to be an explicit nil
func (o *CompanyMerge) SetDateAcquiredNil() {
	o.DateAcquired.Set(nil)
}

// UnsetDateAcquired ensures that no value is present for DateAcquired, not even an explicit nil
func (o *CompanyMerge) UnsetDateAcquired() {
	o.DateAcquired.Unset()
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone.Get()) {
		var ret string
		return ret
	}
	return *o.TimeZone.Get()
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeZone.Get(), o.TimeZone.IsSet()
}

// HasTimeZone returns a boolean if a field has been set.
func (o *CompanyMerge) HasTimeZone() bool {
	if o != nil && o.TimeZone.IsSet() {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given NullableString and assigns it to the TimeZone field.
func (o *CompanyMerge) SetTimeZone(v string) {
	o.TimeZone.Set(&v)
}

// SetTimeZoneNil sets the value for TimeZone to be an explicit nil
func (o *CompanyMerge) SetTimeZoneNil() {
	o.TimeZone.Set(nil)
}

// UnsetTimeZone ensures that no value is present for TimeZone, not even an explicit nil
func (o *CompanyMerge) UnsetTimeZone() {
	o.TimeZone.Unset()
}

// GetSourceList returns the SourceList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetSourceList() string {
	if o == nil || IsNil(o.SourceList.Get()) {
		var ret string
		return ret
	}
	return *o.SourceList.Get()
}

// GetSourceListOk returns a tuple with the SourceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetSourceListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceList.Get(), o.SourceList.IsSet()
}

// HasSourceList returns a boolean if a field has been set.
func (o *CompanyMerge) HasSourceList() bool {
	if o != nil && o.SourceList.IsSet() {
		return true
	}

	return false
}

// SetSourceList gets a reference to the given NullableString and assigns it to the SourceList field.
func (o *CompanyMerge) SetSourceList(v string) {
	o.SourceList.Set(&v)
}

// SetSourceListNil sets the value for SourceList to be an explicit nil
func (o *CompanyMerge) SetSourceListNil() {
	o.SourceList.Set(nil)
}

// UnsetSourceList ensures that no value is present for SourceList, not even an explicit nil
func (o *CompanyMerge) UnsetSourceList() {
	o.SourceList.Unset()
}

// GetUserDefinedField1 returns the UserDefinedField1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField1() string {
	if o == nil || IsNil(o.UserDefinedField1.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField1.Get()
}

// GetUserDefinedField1Ok returns a tuple with the UserDefinedField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField1.Get(), o.UserDefinedField1.IsSet()
}

// HasUserDefinedField1 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField1() bool {
	if o != nil && o.UserDefinedField1.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField1 gets a reference to the given NullableString and assigns it to the UserDefinedField1 field.
func (o *CompanyMerge) SetUserDefinedField1(v string) {
	o.UserDefinedField1.Set(&v)
}

// SetUserDefinedField1Nil sets the value for UserDefinedField1 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField1Nil() {
	o.UserDefinedField1.Set(nil)
}

// UnsetUserDefinedField1 ensures that no value is present for UserDefinedField1, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField1() {
	o.UserDefinedField1.Unset()
}

// GetUserDefinedField2 returns the UserDefinedField2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField2() string {
	if o == nil || IsNil(o.UserDefinedField2.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField2.Get()
}

// GetUserDefinedField2Ok returns a tuple with the UserDefinedField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField2.Get(), o.UserDefinedField2.IsSet()
}

// HasUserDefinedField2 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField2() bool {
	if o != nil && o.UserDefinedField2.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField2 gets a reference to the given NullableString and assigns it to the UserDefinedField2 field.
func (o *CompanyMerge) SetUserDefinedField2(v string) {
	o.UserDefinedField2.Set(&v)
}

// SetUserDefinedField2Nil sets the value for UserDefinedField2 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField2Nil() {
	o.UserDefinedField2.Set(nil)
}

// UnsetUserDefinedField2 ensures that no value is present for UserDefinedField2, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField2() {
	o.UserDefinedField2.Unset()
}

// GetUserDefinedField3 returns the UserDefinedField3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField3() string {
	if o == nil || IsNil(o.UserDefinedField3.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField3.Get()
}

// GetUserDefinedField3Ok returns a tuple with the UserDefinedField3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField3.Get(), o.UserDefinedField3.IsSet()
}

// HasUserDefinedField3 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField3() bool {
	if o != nil && o.UserDefinedField3.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField3 gets a reference to the given NullableString and assigns it to the UserDefinedField3 field.
func (o *CompanyMerge) SetUserDefinedField3(v string) {
	o.UserDefinedField3.Set(&v)
}

// SetUserDefinedField3Nil sets the value for UserDefinedField3 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField3Nil() {
	o.UserDefinedField3.Set(nil)
}

// UnsetUserDefinedField3 ensures that no value is present for UserDefinedField3, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField3() {
	o.UserDefinedField3.Unset()
}

// GetUserDefinedField4 returns the UserDefinedField4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField4() string {
	if o == nil || IsNil(o.UserDefinedField4.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField4.Get()
}

// GetUserDefinedField4Ok returns a tuple with the UserDefinedField4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField4.Get(), o.UserDefinedField4.IsSet()
}

// HasUserDefinedField4 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField4() bool {
	if o != nil && o.UserDefinedField4.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField4 gets a reference to the given NullableString and assigns it to the UserDefinedField4 field.
func (o *CompanyMerge) SetUserDefinedField4(v string) {
	o.UserDefinedField4.Set(&v)
}

// SetUserDefinedField4Nil sets the value for UserDefinedField4 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField4Nil() {
	o.UserDefinedField4.Set(nil)
}

// UnsetUserDefinedField4 ensures that no value is present for UserDefinedField4, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField4() {
	o.UserDefinedField4.Unset()
}

// GetUserDefinedField5 returns the UserDefinedField5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField5() string {
	if o == nil || IsNil(o.UserDefinedField5.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField5.Get()
}

// GetUserDefinedField5Ok returns a tuple with the UserDefinedField5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField5.Get(), o.UserDefinedField5.IsSet()
}

// HasUserDefinedField5 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField5() bool {
	if o != nil && o.UserDefinedField5.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField5 gets a reference to the given NullableString and assigns it to the UserDefinedField5 field.
func (o *CompanyMerge) SetUserDefinedField5(v string) {
	o.UserDefinedField5.Set(&v)
}

// SetUserDefinedField5Nil sets the value for UserDefinedField5 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField5Nil() {
	o.UserDefinedField5.Set(nil)
}

// UnsetUserDefinedField5 ensures that no value is present for UserDefinedField5, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField5() {
	o.UserDefinedField5.Unset()
}

// GetUserDefinedField6 returns the UserDefinedField6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField6() string {
	if o == nil || IsNil(o.UserDefinedField6.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField6.Get()
}

// GetUserDefinedField6Ok returns a tuple with the UserDefinedField6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField6.Get(), o.UserDefinedField6.IsSet()
}

// HasUserDefinedField6 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField6() bool {
	if o != nil && o.UserDefinedField6.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField6 gets a reference to the given NullableString and assigns it to the UserDefinedField6 field.
func (o *CompanyMerge) SetUserDefinedField6(v string) {
	o.UserDefinedField6.Set(&v)
}

// SetUserDefinedField6Nil sets the value for UserDefinedField6 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField6Nil() {
	o.UserDefinedField6.Set(nil)
}

// UnsetUserDefinedField6 ensures that no value is present for UserDefinedField6, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField6() {
	o.UserDefinedField6.Unset()
}

// GetUserDefinedField7 returns the UserDefinedField7 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField7() string {
	if o == nil || IsNil(o.UserDefinedField7.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField7.Get()
}

// GetUserDefinedField7Ok returns a tuple with the UserDefinedField7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField7Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField7.Get(), o.UserDefinedField7.IsSet()
}

// HasUserDefinedField7 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField7() bool {
	if o != nil && o.UserDefinedField7.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField7 gets a reference to the given NullableString and assigns it to the UserDefinedField7 field.
func (o *CompanyMerge) SetUserDefinedField7(v string) {
	o.UserDefinedField7.Set(&v)
}

// SetUserDefinedField7Nil sets the value for UserDefinedField7 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField7Nil() {
	o.UserDefinedField7.Set(nil)
}

// UnsetUserDefinedField7 ensures that no value is present for UserDefinedField7, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField7() {
	o.UserDefinedField7.Unset()
}

// GetUserDefinedField8 returns the UserDefinedField8 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField8() string {
	if o == nil || IsNil(o.UserDefinedField8.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField8.Get()
}

// GetUserDefinedField8Ok returns a tuple with the UserDefinedField8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField8Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField8.Get(), o.UserDefinedField8.IsSet()
}

// HasUserDefinedField8 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField8() bool {
	if o != nil && o.UserDefinedField8.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField8 gets a reference to the given NullableString and assigns it to the UserDefinedField8 field.
func (o *CompanyMerge) SetUserDefinedField8(v string) {
	o.UserDefinedField8.Set(&v)
}

// SetUserDefinedField8Nil sets the value for UserDefinedField8 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField8Nil() {
	o.UserDefinedField8.Set(nil)
}

// UnsetUserDefinedField8 ensures that no value is present for UserDefinedField8, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField8() {
	o.UserDefinedField8.Unset()
}

// GetUserDefinedField9 returns the UserDefinedField9 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField9() string {
	if o == nil || IsNil(o.UserDefinedField9.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField9.Get()
}

// GetUserDefinedField9Ok returns a tuple with the UserDefinedField9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField9Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField9.Get(), o.UserDefinedField9.IsSet()
}

// HasUserDefinedField9 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField9() bool {
	if o != nil && o.UserDefinedField9.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField9 gets a reference to the given NullableString and assigns it to the UserDefinedField9 field.
func (o *CompanyMerge) SetUserDefinedField9(v string) {
	o.UserDefinedField9.Set(&v)
}

// SetUserDefinedField9Nil sets the value for UserDefinedField9 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField9Nil() {
	o.UserDefinedField9.Set(nil)
}

// UnsetUserDefinedField9 ensures that no value is present for UserDefinedField9, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField9() {
	o.UserDefinedField9.Unset()
}

// GetUserDefinedField10 returns the UserDefinedField10 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetUserDefinedField10() string {
	if o == nil || IsNil(o.UserDefinedField10.Get()) {
		var ret string
		return ret
	}
	return *o.UserDefinedField10.Get()
}

// GetUserDefinedField10Ok returns a tuple with the UserDefinedField10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetUserDefinedField10Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDefinedField10.Get(), o.UserDefinedField10.IsSet()
}

// HasUserDefinedField10 returns a boolean if a field has been set.
func (o *CompanyMerge) HasUserDefinedField10() bool {
	if o != nil && o.UserDefinedField10.IsSet() {
		return true
	}

	return false
}

// SetUserDefinedField10 gets a reference to the given NullableString and assigns it to the UserDefinedField10 field.
func (o *CompanyMerge) SetUserDefinedField10(v string) {
	o.UserDefinedField10.Set(&v)
}

// SetUserDefinedField10Nil sets the value for UserDefinedField10 to be an explicit nil
func (o *CompanyMerge) SetUserDefinedField10Nil() {
	o.UserDefinedField10.Set(nil)
}

// UnsetUserDefinedField10 ensures that no value is present for UserDefinedField10, not even an explicit nil
func (o *CompanyMerge) UnsetUserDefinedField10() {
	o.UserDefinedField10.Unset()
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetBillingAddress() string {
	if o == nil || IsNil(o.BillingAddress.Get()) {
		var ret string
		return ret
	}
	return *o.BillingAddress.Get()
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetBillingAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingAddress.Get(), o.BillingAddress.IsSet()
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *CompanyMerge) HasBillingAddress() bool {
	if o != nil && o.BillingAddress.IsSet() {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given NullableString and assigns it to the BillingAddress field.
func (o *CompanyMerge) SetBillingAddress(v string) {
	o.BillingAddress.Set(&v)
}

// SetBillingAddressNil sets the value for BillingAddress to be an explicit nil
func (o *CompanyMerge) SetBillingAddressNil() {
	o.BillingAddress.Set(nil)
}

// UnsetBillingAddress ensures that no value is present for BillingAddress, not even an explicit nil
func (o *CompanyMerge) UnsetBillingAddress() {
	o.BillingAddress.Unset()
}

// GetBillingContact returns the BillingContact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetBillingContact() string {
	if o == nil || IsNil(o.BillingContact.Get()) {
		var ret string
		return ret
	}
	return *o.BillingContact.Get()
}

// GetBillingContactOk returns a tuple with the BillingContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetBillingContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingContact.Get(), o.BillingContact.IsSet()
}

// HasBillingContact returns a boolean if a field has been set.
func (o *CompanyMerge) HasBillingContact() bool {
	if o != nil && o.BillingContact.IsSet() {
		return true
	}

	return false
}

// SetBillingContact gets a reference to the given NullableString and assigns it to the BillingContact field.
func (o *CompanyMerge) SetBillingContact(v string) {
	o.BillingContact.Set(&v)
}

// SetBillingContactNil sets the value for BillingContact to be an explicit nil
func (o *CompanyMerge) SetBillingContactNil() {
	o.BillingContact.Set(nil)
}

// UnsetBillingContact ensures that no value is present for BillingContact, not even an explicit nil
func (o *CompanyMerge) UnsetBillingContact() {
	o.BillingContact.Unset()
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode.Get()) {
		var ret string
		return ret
	}
	return *o.TaxCode.Get()
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetTaxCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxCode.Get(), o.TaxCode.IsSet()
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CompanyMerge) HasTaxCode() bool {
	if o != nil && o.TaxCode.IsSet() {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given NullableString and assigns it to the TaxCode field.
func (o *CompanyMerge) SetTaxCode(v string) {
	o.TaxCode.Set(&v)
}

// SetTaxCodeNil sets the value for TaxCode to be an explicit nil
func (o *CompanyMerge) SetTaxCodeNil() {
	o.TaxCode.Set(nil)
}

// UnsetTaxCode ensures that no value is present for TaxCode, not even an explicit nil
func (o *CompanyMerge) UnsetTaxCode() {
	o.TaxCode.Unset()
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber.Get()) {
		var ret string
		return ret
	}
	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *CompanyMerge) HasAccountNumber() bool {
	if o != nil && o.AccountNumber.IsSet() {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given NullableString and assigns it to the AccountNumber field.
func (o *CompanyMerge) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}

// SetAccountNumberNil sets the value for AccountNumber to be an explicit nil
func (o *CompanyMerge) SetAccountNumberNil() {
	o.AccountNumber.Set(nil)
}

// UnsetAccountNumber ensures that no value is present for AccountNumber, not even an explicit nil
func (o *CompanyMerge) UnsetAccountNumber() {
	o.AccountNumber.Unset()
}

// GetBillingTerms returns the BillingTerms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetBillingTerms() string {
	if o == nil || IsNil(o.BillingTerms.Get()) {
		var ret string
		return ret
	}
	return *o.BillingTerms.Get()
}

// GetBillingTermsOk returns a tuple with the BillingTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetBillingTermsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingTerms.Get(), o.BillingTerms.IsSet()
}

// HasBillingTerms returns a boolean if a field has been set.
func (o *CompanyMerge) HasBillingTerms() bool {
	if o != nil && o.BillingTerms.IsSet() {
		return true
	}

	return false
}

// SetBillingTerms gets a reference to the given NullableString and assigns it to the BillingTerms field.
func (o *CompanyMerge) SetBillingTerms(v string) {
	o.BillingTerms.Set(&v)
}

// SetBillingTermsNil sets the value for BillingTerms to be an explicit nil
func (o *CompanyMerge) SetBillingTermsNil() {
	o.BillingTerms.Set(nil)
}

// UnsetBillingTerms ensures that no value is present for BillingTerms, not even an explicit nil
func (o *CompanyMerge) UnsetBillingTerms() {
	o.BillingTerms.Unset()
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetNotes() string {
	if o == nil || IsNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *CompanyMerge) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *CompanyMerge) SetNotes(v string) {
	o.Notes.Set(&v)
}

// SetNotesNil sets the value for Notes to be an explicit nil
func (o *CompanyMerge) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *CompanyMerge) UnsetNotes() {
	o.Notes.Unset()
}

// GetSites returns the Sites field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetSites() string {
	if o == nil || IsNil(o.Sites.Get()) {
		var ret string
		return ret
	}
	return *o.Sites.Get()
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetSitesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sites.Get(), o.Sites.IsSet()
}

// HasSites returns a boolean if a field has been set.
func (o *CompanyMerge) HasSites() bool {
	if o != nil && o.Sites.IsSet() {
		return true
	}

	return false
}

// SetSites gets a reference to the given NullableString and assigns it to the Sites field.
func (o *CompanyMerge) SetSites(v string) {
	o.Sites.Set(&v)
}

// SetSitesNil sets the value for Sites to be an explicit nil
func (o *CompanyMerge) SetSitesNil() {
	o.Sites.Set(nil)
}

// UnsetSites ensures that no value is present for Sites, not even an explicit nil
func (o *CompanyMerge) UnsetSites() {
	o.Sites.Unset()
}

// GetActivities returns the Activities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetActivities() string {
	if o == nil || IsNil(o.Activities.Get()) {
		var ret string
		return ret
	}
	return *o.Activities.Get()
}

// GetActivitiesOk returns a tuple with the Activities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Activities.Get(), o.Activities.IsSet()
}

// HasActivities returns a boolean if a field has been set.
func (o *CompanyMerge) HasActivities() bool {
	if o != nil && o.Activities.IsSet() {
		return true
	}

	return false
}

// SetActivities gets a reference to the given NullableString and assigns it to the Activities field.
func (o *CompanyMerge) SetActivities(v string) {
	o.Activities.Set(&v)
}

// SetActivitiesNil sets the value for Activities to be an explicit nil
func (o *CompanyMerge) SetActivitiesNil() {
	o.Activities.Set(nil)
}

// UnsetActivities ensures that no value is present for Activities, not even an explicit nil
func (o *CompanyMerge) UnsetActivities() {
	o.Activities.Unset()
}

// GetOpportunities returns the Opportunities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetOpportunities() string {
	if o == nil || IsNil(o.Opportunities.Get()) {
		var ret string
		return ret
	}
	return *o.Opportunities.Get()
}

// GetOpportunitiesOk returns a tuple with the Opportunities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetOpportunitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Opportunities.Get(), o.Opportunities.IsSet()
}

// HasOpportunities returns a boolean if a field has been set.
func (o *CompanyMerge) HasOpportunities() bool {
	if o != nil && o.Opportunities.IsSet() {
		return true
	}

	return false
}

// SetOpportunities gets a reference to the given NullableString and assigns it to the Opportunities field.
func (o *CompanyMerge) SetOpportunities(v string) {
	o.Opportunities.Set(&v)
}

// SetOpportunitiesNil sets the value for Opportunities to be an explicit nil
func (o *CompanyMerge) SetOpportunitiesNil() {
	o.Opportunities.Set(nil)
}

// UnsetOpportunities ensures that no value is present for Opportunities, not even an explicit nil
func (o *CompanyMerge) UnsetOpportunities() {
	o.Opportunities.Unset()
}

// GetServices returns the Services field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetServices() string {
	if o == nil || IsNil(o.Services.Get()) {
		var ret string
		return ret
	}
	return *o.Services.Get()
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetServicesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services.Get(), o.Services.IsSet()
}

// HasServices returns a boolean if a field has been set.
func (o *CompanyMerge) HasServices() bool {
	if o != nil && o.Services.IsSet() {
		return true
	}

	return false
}

// SetServices gets a reference to the given NullableString and assigns it to the Services field.
func (o *CompanyMerge) SetServices(v string) {
	o.Services.Set(&v)
}

// SetServicesNil sets the value for Services to be an explicit nil
func (o *CompanyMerge) SetServicesNil() {
	o.Services.Set(nil)
}

// UnsetServices ensures that no value is present for Services, not even an explicit nil
func (o *CompanyMerge) UnsetServices() {
	o.Services.Unset()
}

// GetProjects returns the Projects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetProjects() string {
	if o == nil || IsNil(o.Projects.Get()) {
		var ret string
		return ret
	}
	return *o.Projects.Get()
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetProjectsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Projects.Get(), o.Projects.IsSet()
}

// HasProjects returns a boolean if a field has been set.
func (o *CompanyMerge) HasProjects() bool {
	if o != nil && o.Projects.IsSet() {
		return true
	}

	return false
}

// SetProjects gets a reference to the given NullableString and assigns it to the Projects field.
func (o *CompanyMerge) SetProjects(v string) {
	o.Projects.Set(&v)
}

// SetProjectsNil sets the value for Projects to be an explicit nil
func (o *CompanyMerge) SetProjectsNil() {
	o.Projects.Set(nil)
}

// UnsetProjects ensures that no value is present for Projects, not even an explicit nil
func (o *CompanyMerge) UnsetProjects() {
	o.Projects.Unset()
}

// GetContacts returns the Contacts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetContacts() string {
	if o == nil || IsNil(o.Contacts.Get()) {
		var ret string
		return ret
	}
	return *o.Contacts.Get()
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetContactsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contacts.Get(), o.Contacts.IsSet()
}

// HasContacts returns a boolean if a field has been set.
func (o *CompanyMerge) HasContacts() bool {
	if o != nil && o.Contacts.IsSet() {
		return true
	}

	return false
}

// SetContacts gets a reference to the given NullableString and assigns it to the Contacts field.
func (o *CompanyMerge) SetContacts(v string) {
	o.Contacts.Set(&v)
}

// SetContactsNil sets the value for Contacts to be an explicit nil
func (o *CompanyMerge) SetContactsNil() {
	o.Contacts.Set(nil)
}

// UnsetContacts ensures that no value is present for Contacts, not even an explicit nil
func (o *CompanyMerge) UnsetContacts() {
	o.Contacts.Unset()
}

// GetDocuments returns the Documents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyMerge) GetDocuments() string {
	if o == nil || IsNil(o.Documents.Get()) {
		var ret string
		return ret
	}
	return *o.Documents.Get()
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyMerge) GetDocumentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Documents.Get(), o.Documents.IsSet()
}

// HasDocuments returns a boolean if a field has been set.
func (o *CompanyMerge) HasDocuments() bool {
	if o != nil && o.Documents.IsSet() {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given NullableString and assigns it to the Documents field.
func (o *CompanyMerge) SetDocuments(v string) {
	o.Documents.Set(&v)
}

// SetDocumentsNil sets the value for Documents to be an explicit nil
func (o *CompanyMerge) SetDocumentsNil() {
	o.Documents.Set(nil)
}

// UnsetDocuments ensures that no value is present for Documents, not even an explicit nil
func (o *CompanyMerge) UnsetDocuments() {
	o.Documents.Unset()
}

func (o CompanyMerge) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyMerge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["toCompanyId"] = o.ToCompanyId
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Identifier.IsSet() {
		toSerialize["identifier"] = o.Identifier.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.PrimaryAddress.IsSet() {
		toSerialize["primaryAddress"] = o.PrimaryAddress.Get()
	}
	if o.PrimaryContact.IsSet() {
		toSerialize["primaryContact"] = o.PrimaryContact.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.Fax.IsSet() {
		toSerialize["fax"] = o.Fax.Get()
	}
	if o.Website.IsSet() {
		toSerialize["website"] = o.Website.Get()
	}
	if o.Market.IsSet() {
		toSerialize["market"] = o.Market.Get()
	}
	if o.Territory.IsSet() {
		toSerialize["territory"] = o.Territory.Get()
	}
	if o.Revenue.IsSet() {
		toSerialize["revenue"] = o.Revenue.Get()
	}
	if o.RevenueYear.IsSet() {
		toSerialize["revenueYear"] = o.RevenueYear.Get()
	}
	if o.NumberOfEmployees.IsSet() {
		toSerialize["numberOfEmployees"] = o.NumberOfEmployees.Get()
	}
	if o.SicCode.IsSet() {
		toSerialize["sicCode"] = o.SicCode.Get()
	}
	if o.DateAcquired.IsSet() {
		toSerialize["dateAcquired"] = o.DateAcquired.Get()
	}
	if o.TimeZone.IsSet() {
		toSerialize["timeZone"] = o.TimeZone.Get()
	}
	if o.SourceList.IsSet() {
		toSerialize["sourceList"] = o.SourceList.Get()
	}
	if o.UserDefinedField1.IsSet() {
		toSerialize["userDefinedField1"] = o.UserDefinedField1.Get()
	}
	if o.UserDefinedField2.IsSet() {
		toSerialize["userDefinedField2"] = o.UserDefinedField2.Get()
	}
	if o.UserDefinedField3.IsSet() {
		toSerialize["userDefinedField3"] = o.UserDefinedField3.Get()
	}
	if o.UserDefinedField4.IsSet() {
		toSerialize["userDefinedField4"] = o.UserDefinedField4.Get()
	}
	if o.UserDefinedField5.IsSet() {
		toSerialize["userDefinedField5"] = o.UserDefinedField5.Get()
	}
	if o.UserDefinedField6.IsSet() {
		toSerialize["userDefinedField6"] = o.UserDefinedField6.Get()
	}
	if o.UserDefinedField7.IsSet() {
		toSerialize["userDefinedField7"] = o.UserDefinedField7.Get()
	}
	if o.UserDefinedField8.IsSet() {
		toSerialize["userDefinedField8"] = o.UserDefinedField8.Get()
	}
	if o.UserDefinedField9.IsSet() {
		toSerialize["userDefinedField9"] = o.UserDefinedField9.Get()
	}
	if o.UserDefinedField10.IsSet() {
		toSerialize["userDefinedField10"] = o.UserDefinedField10.Get()
	}
	if o.BillingAddress.IsSet() {
		toSerialize["billingAddress"] = o.BillingAddress.Get()
	}
	if o.BillingContact.IsSet() {
		toSerialize["billingContact"] = o.BillingContact.Get()
	}
	if o.TaxCode.IsSet() {
		toSerialize["taxCode"] = o.TaxCode.Get()
	}
	if o.AccountNumber.IsSet() {
		toSerialize["accountNumber"] = o.AccountNumber.Get()
	}
	if o.BillingTerms.IsSet() {
		toSerialize["billingTerms"] = o.BillingTerms.Get()
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.Sites.IsSet() {
		toSerialize["sites"] = o.Sites.Get()
	}
	if o.Activities.IsSet() {
		toSerialize["activities"] = o.Activities.Get()
	}
	if o.Opportunities.IsSet() {
		toSerialize["opportunities"] = o.Opportunities.Get()
	}
	if o.Services.IsSet() {
		toSerialize["services"] = o.Services.Get()
	}
	if o.Projects.IsSet() {
		toSerialize["projects"] = o.Projects.Get()
	}
	if o.Contacts.IsSet() {
		toSerialize["contacts"] = o.Contacts.Get()
	}
	if o.Documents.IsSet() {
		toSerialize["documents"] = o.Documents.Get()
	}
	return toSerialize, nil
}

func (o *CompanyMerge) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"toCompanyId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyMerge := _CompanyMerge{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompanyMerge)

	if err != nil {
		return err
	}

	*o = CompanyMerge(varCompanyMerge)

	return err
}

type NullableCompanyMerge struct {
	value *CompanyMerge
	isSet bool
}

func (v NullableCompanyMerge) Get() *CompanyMerge {
	return v.value
}

func (v *NullableCompanyMerge) Set(val *CompanyMerge) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyMerge) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyMerge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyMerge(val *CompanyMerge) *NullableCompanyMerge {
	return &NullableCompanyMerge{value: val, isSet: true}
}

func (v NullableCompanyMerge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyMerge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
