/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the CompanySiteInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanySiteInfo{}

// CompanySiteInfo struct for CompanySiteInfo
type CompanySiteInfo struct {
	Id                  *int32             `json:"id,omitempty"`
	Name                *string            `json:"name,omitempty"`
	AddressLine1        *string            `json:"addressLine1,omitempty"`
	AddressLine2        *string            `json:"addressLine2,omitempty"`
	City                *string            `json:"city,omitempty"`
	StateReference      *StateReference    `json:"stateReference,omitempty"`
	Country             *CountryReference  `json:"country,omitempty"`
	Zip                 *string            `json:"zip,omitempty"`
	AddressFormat       *string            `json:"addressFormat,omitempty"`
	PhoneNumber         *string            `json:"phoneNumber,omitempty"`
	InactiveFlag        NullableBool       `json:"inactiveFlag,omitempty"`
	DefaultShippingFlag NullableBool       `json:"defaultShippingFlag,omitempty"`
	DefaultBillingFlag  NullableBool       `json:"defaultBillingFlag,omitempty"`
	PrimaryAddressFlag  NullableBool       `json:"primaryAddressFlag,omitempty"`
	TaxCode             *TaxCodeReference  `json:"taxCode,omitempty"`
	PhoneNumberExt      *string            `json:"phoneNumberExt,omitempty"`
	Info                *map[string]string `json:"_info,omitempty"`
}

// NewCompanySiteInfo instantiates a new CompanySiteInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanySiteInfo() *CompanySiteInfo {
	this := CompanySiteInfo{}
	return &this
}

// NewCompanySiteInfoWithDefaults instantiates a new CompanySiteInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanySiteInfoWithDefaults() *CompanySiteInfo {
	this := CompanySiteInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanySiteInfo) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompanySiteInfo) SetName(v string) {
	o.Name = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *CompanySiteInfo) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *CompanySiteInfo) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CompanySiteInfo) SetCity(v string) {
	o.City = &v
}

// GetStateReference returns the StateReference field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetStateReference() StateReference {
	if o == nil || IsNil(o.StateReference) {
		var ret StateReference
		return ret
	}
	return *o.StateReference
}

// GetStateReferenceOk returns a tuple with the StateReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetStateReferenceOk() (*StateReference, bool) {
	if o == nil || IsNil(o.StateReference) {
		return nil, false
	}
	return o.StateReference, true
}

// HasStateReference returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasStateReference() bool {
	if o != nil && !IsNil(o.StateReference) {
		return true
	}

	return false
}

// SetStateReference gets a reference to the given StateReference and assigns it to the StateReference field.
func (o *CompanySiteInfo) SetStateReference(v StateReference) {
	o.StateReference = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *CompanySiteInfo) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *CompanySiteInfo) SetZip(v string) {
	o.Zip = &v
}

// GetAddressFormat returns the AddressFormat field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetAddressFormat() string {
	if o == nil || IsNil(o.AddressFormat) {
		var ret string
		return ret
	}
	return *o.AddressFormat
}

// GetAddressFormatOk returns a tuple with the AddressFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetAddressFormatOk() (*string, bool) {
	if o == nil || IsNil(o.AddressFormat) {
		return nil, false
	}
	return o.AddressFormat, true
}

// HasAddressFormat returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasAddressFormat() bool {
	if o != nil && !IsNil(o.AddressFormat) {
		return true
	}

	return false
}

// SetAddressFormat gets a reference to the given string and assigns it to the AddressFormat field.
func (o *CompanySiteInfo) SetAddressFormat(v string) {
	o.AddressFormat = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CompanySiteInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanySiteInfo) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanySiteInfo) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *CompanySiteInfo) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}

// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *CompanySiteInfo) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *CompanySiteInfo) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetDefaultShippingFlag returns the DefaultShippingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanySiteInfo) GetDefaultShippingFlag() bool {
	if o == nil || IsNil(o.DefaultShippingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultShippingFlag.Get()
}

// GetDefaultShippingFlagOk returns a tuple with the DefaultShippingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanySiteInfo) GetDefaultShippingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultShippingFlag.Get(), o.DefaultShippingFlag.IsSet()
}

// HasDefaultShippingFlag returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasDefaultShippingFlag() bool {
	if o != nil && o.DefaultShippingFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultShippingFlag gets a reference to the given NullableBool and assigns it to the DefaultShippingFlag field.
func (o *CompanySiteInfo) SetDefaultShippingFlag(v bool) {
	o.DefaultShippingFlag.Set(&v)
}

// SetDefaultShippingFlagNil sets the value for DefaultShippingFlag to be an explicit nil
func (o *CompanySiteInfo) SetDefaultShippingFlagNil() {
	o.DefaultShippingFlag.Set(nil)
}

// UnsetDefaultShippingFlag ensures that no value is present for DefaultShippingFlag, not even an explicit nil
func (o *CompanySiteInfo) UnsetDefaultShippingFlag() {
	o.DefaultShippingFlag.Unset()
}

// GetDefaultBillingFlag returns the DefaultBillingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanySiteInfo) GetDefaultBillingFlag() bool {
	if o == nil || IsNil(o.DefaultBillingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultBillingFlag.Get()
}

// GetDefaultBillingFlagOk returns a tuple with the DefaultBillingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanySiteInfo) GetDefaultBillingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultBillingFlag.Get(), o.DefaultBillingFlag.IsSet()
}

// HasDefaultBillingFlag returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasDefaultBillingFlag() bool {
	if o != nil && o.DefaultBillingFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultBillingFlag gets a reference to the given NullableBool and assigns it to the DefaultBillingFlag field.
func (o *CompanySiteInfo) SetDefaultBillingFlag(v bool) {
	o.DefaultBillingFlag.Set(&v)
}

// SetDefaultBillingFlagNil sets the value for DefaultBillingFlag to be an explicit nil
func (o *CompanySiteInfo) SetDefaultBillingFlagNil() {
	o.DefaultBillingFlag.Set(nil)
}

// UnsetDefaultBillingFlag ensures that no value is present for DefaultBillingFlag, not even an explicit nil
func (o *CompanySiteInfo) UnsetDefaultBillingFlag() {
	o.DefaultBillingFlag.Unset()
}

// GetPrimaryAddressFlag returns the PrimaryAddressFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanySiteInfo) GetPrimaryAddressFlag() bool {
	if o == nil || IsNil(o.PrimaryAddressFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PrimaryAddressFlag.Get()
}

// GetPrimaryAddressFlagOk returns a tuple with the PrimaryAddressFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanySiteInfo) GetPrimaryAddressFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryAddressFlag.Get(), o.PrimaryAddressFlag.IsSet()
}

// HasPrimaryAddressFlag returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasPrimaryAddressFlag() bool {
	if o != nil && o.PrimaryAddressFlag.IsSet() {
		return true
	}

	return false
}

// SetPrimaryAddressFlag gets a reference to the given NullableBool and assigns it to the PrimaryAddressFlag field.
func (o *CompanySiteInfo) SetPrimaryAddressFlag(v bool) {
	o.PrimaryAddressFlag.Set(&v)
}

// SetPrimaryAddressFlagNil sets the value for PrimaryAddressFlag to be an explicit nil
func (o *CompanySiteInfo) SetPrimaryAddressFlagNil() {
	o.PrimaryAddressFlag.Set(nil)
}

// UnsetPrimaryAddressFlag ensures that no value is present for PrimaryAddressFlag, not even an explicit nil
func (o *CompanySiteInfo) UnsetPrimaryAddressFlag() {
	o.PrimaryAddressFlag.Unset()
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetTaxCode() TaxCodeReference {
	if o == nil || IsNil(o.TaxCode) {
		var ret TaxCodeReference
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetTaxCodeOk() (*TaxCodeReference, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given TaxCodeReference and assigns it to the TaxCode field.
func (o *CompanySiteInfo) SetTaxCode(v TaxCodeReference) {
	o.TaxCode = &v
}

// GetPhoneNumberExt returns the PhoneNumberExt field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetPhoneNumberExt() string {
	if o == nil || IsNil(o.PhoneNumberExt) {
		var ret string
		return ret
	}
	return *o.PhoneNumberExt
}

// GetPhoneNumberExtOk returns a tuple with the PhoneNumberExt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetPhoneNumberExtOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumberExt) {
		return nil, false
	}
	return o.PhoneNumberExt, true
}

// HasPhoneNumberExt returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasPhoneNumberExt() bool {
	if o != nil && !IsNil(o.PhoneNumberExt) {
		return true
	}

	return false
}

// SetPhoneNumberExt gets a reference to the given string and assigns it to the PhoneNumberExt field.
func (o *CompanySiteInfo) SetPhoneNumberExt(v string) {
	o.PhoneNumberExt = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CompanySiteInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanySiteInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CompanySiteInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CompanySiteInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o CompanySiteInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanySiteInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.StateReference) {
		toSerialize["stateReference"] = o.StateReference
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.AddressFormat) {
		toSerialize["addressFormat"] = o.AddressFormat
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if o.DefaultShippingFlag.IsSet() {
		toSerialize["defaultShippingFlag"] = o.DefaultShippingFlag.Get()
	}
	if o.DefaultBillingFlag.IsSet() {
		toSerialize["defaultBillingFlag"] = o.DefaultBillingFlag.Get()
	}
	if o.PrimaryAddressFlag.IsSet() {
		toSerialize["primaryAddressFlag"] = o.PrimaryAddressFlag.Get()
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.PhoneNumberExt) {
		toSerialize["phoneNumberExt"] = o.PhoneNumberExt
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableCompanySiteInfo struct {
	value *CompanySiteInfo
	isSet bool
}

func (v NullableCompanySiteInfo) Get() *CompanySiteInfo {
	return v.value
}

func (v *NullableCompanySiteInfo) Set(val *CompanySiteInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanySiteInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanySiteInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanySiteInfo(val *CompanySiteInfo) *NullableCompanySiteInfo {
	return &NullableCompanySiteInfo{value: val, isSet: true}
}

func (v NullableCompanySiteInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanySiteInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
