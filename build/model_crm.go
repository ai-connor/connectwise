/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Crm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Crm{}

// Crm struct for Crm
type Crm struct {
	Id                      *int32            `json:"id,omitempty"`
	CompanyListCount        NullableInt32     `json:"companyListCount,omitempty"`
	LockProbabilityFlag     NullableBool      `json:"lockProbabilityFlag,omitempty"`
	AccountManagerRole      TeamRoleReference `json:"accountManagerRole"`
	TechnicalContactRole    TeamRoleReference `json:"technicalContactRole"`
	SalesRepRole            TeamRoleReference `json:"salesRepRole"`
	CompanyIdGenerationFlag NullableBool      `json:"companyIdGenerationFlag,omitempty"`
	ExcludeSpacesFlag       NullableBool      `json:"excludeSpacesFlag,omitempty"`
	//  Max length: 25;
	Field1Caption *string `json:"field1Caption,omitempty"`
	//  Max length: 25;
	Field2Caption *string `json:"field2Caption,omitempty"`
	//  Max length: 25;
	Field3Caption *string `json:"field3Caption,omitempty"`
	//  Max length: 25;
	Field4Caption *string `json:"field4Caption,omitempty"`
	//  Max length: 25;
	Field5Caption *string `json:"field5Caption,omitempty"`
	//  Max length: 25;
	Field6Caption *string `json:"field6Caption,omitempty"`
	//  Max length: 25;
	Field7Caption *string `json:"field7Caption,omitempty"`
	//  Max length: 25;
	Field8Caption *string `json:"field8Caption,omitempty"`
	//  Max length: 25;
	Field9Caption *string `json:"field9Caption,omitempty"`
	//  Max length: 25;
	Field10Caption *string `json:"field10Caption,omitempty"`
	//  Max length: 50;
	PrimaryRepCaption *string `json:"primaryRepCaption,omitempty"`
	//  Max length: 50;
	SecondaryRepCaption *string `json:"secondaryRepCaption,omitempty"`
	//  Max length: 50;
	Other1Caption *string `json:"other1Caption,omitempty"`
	//  Max length: 50;
	Other2Caption *string            `json:"other2Caption,omitempty"`
	DefaultYear   NullableBool       `json:"defaultYear,omitempty"`
	Info          *map[string]string `json:"_info,omitempty"`
}

type _Crm Crm

// NewCrm instantiates a new Crm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrm(accountManagerRole TeamRoleReference, technicalContactRole TeamRoleReference, salesRepRole TeamRoleReference) *Crm {
	this := Crm{}
	this.AccountManagerRole = accountManagerRole
	this.TechnicalContactRole = technicalContactRole
	this.SalesRepRole = salesRepRole
	return &this
}

// NewCrmWithDefaults instantiates a new Crm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrmWithDefaults() *Crm {
	this := Crm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Crm) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Crm) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Crm) SetId(v int32) {
	o.Id = &v
}

// GetCompanyListCount returns the CompanyListCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Crm) GetCompanyListCount() int32 {
	if o == nil || IsNil(o.CompanyListCount.Get()) {
		var ret int32
		return ret
	}
	return *o.CompanyListCount.Get()
}

// GetCompanyListCountOk returns a tuple with the CompanyListCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Crm) GetCompanyListCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyListCount.Get(), o.CompanyListCount.IsSet()
}

// HasCompanyListCount returns a boolean if a field has been set.
func (o *Crm) HasCompanyListCount() bool {
	if o != nil && o.CompanyListCount.IsSet() {
		return true
	}

	return false
}

// SetCompanyListCount gets a reference to the given NullableInt32 and assigns it to the CompanyListCount field.
func (o *Crm) SetCompanyListCount(v int32) {
	o.CompanyListCount.Set(&v)
}

// SetCompanyListCountNil sets the value for CompanyListCount to be an explicit nil
func (o *Crm) SetCompanyListCountNil() {
	o.CompanyListCount.Set(nil)
}

// UnsetCompanyListCount ensures that no value is present for CompanyListCount, not even an explicit nil
func (o *Crm) UnsetCompanyListCount() {
	o.CompanyListCount.Unset()
}

// GetLockProbabilityFlag returns the LockProbabilityFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Crm) GetLockProbabilityFlag() bool {
	if o == nil || IsNil(o.LockProbabilityFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LockProbabilityFlag.Get()
}

// GetLockProbabilityFlagOk returns a tuple with the LockProbabilityFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Crm) GetLockProbabilityFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LockProbabilityFlag.Get(), o.LockProbabilityFlag.IsSet()
}

// HasLockProbabilityFlag returns a boolean if a field has been set.
func (o *Crm) HasLockProbabilityFlag() bool {
	if o != nil && o.LockProbabilityFlag.IsSet() {
		return true
	}

	return false
}

// SetLockProbabilityFlag gets a reference to the given NullableBool and assigns it to the LockProbabilityFlag field.
func (o *Crm) SetLockProbabilityFlag(v bool) {
	o.LockProbabilityFlag.Set(&v)
}

// SetLockProbabilityFlagNil sets the value for LockProbabilityFlag to be an explicit nil
func (o *Crm) SetLockProbabilityFlagNil() {
	o.LockProbabilityFlag.Set(nil)
}

// UnsetLockProbabilityFlag ensures that no value is present for LockProbabilityFlag, not even an explicit nil
func (o *Crm) UnsetLockProbabilityFlag() {
	o.LockProbabilityFlag.Unset()
}

// GetAccountManagerRole returns the AccountManagerRole field value
func (o *Crm) GetAccountManagerRole() TeamRoleReference {
	if o == nil {
		var ret TeamRoleReference
		return ret
	}

	return o.AccountManagerRole
}

// GetAccountManagerRoleOk returns a tuple with the AccountManagerRole field value
// and a boolean to check if the value has been set.
func (o *Crm) GetAccountManagerRoleOk() (*TeamRoleReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountManagerRole, true
}

// SetAccountManagerRole sets field value
func (o *Crm) SetAccountManagerRole(v TeamRoleReference) {
	o.AccountManagerRole = v
}

// GetTechnicalContactRole returns the TechnicalContactRole field value
func (o *Crm) GetTechnicalContactRole() TeamRoleReference {
	if o == nil {
		var ret TeamRoleReference
		return ret
	}

	return o.TechnicalContactRole
}

// GetTechnicalContactRoleOk returns a tuple with the TechnicalContactRole field value
// and a boolean to check if the value has been set.
func (o *Crm) GetTechnicalContactRoleOk() (*TeamRoleReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TechnicalContactRole, true
}

// SetTechnicalContactRole sets field value
func (o *Crm) SetTechnicalContactRole(v TeamRoleReference) {
	o.TechnicalContactRole = v
}

// GetSalesRepRole returns the SalesRepRole field value
func (o *Crm) GetSalesRepRole() TeamRoleReference {
	if o == nil {
		var ret TeamRoleReference
		return ret
	}

	return o.SalesRepRole
}

// GetSalesRepRoleOk returns a tuple with the SalesRepRole field value
// and a boolean to check if the value has been set.
func (o *Crm) GetSalesRepRoleOk() (*TeamRoleReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesRepRole, true
}

// SetSalesRepRole sets field value
func (o *Crm) SetSalesRepRole(v TeamRoleReference) {
	o.SalesRepRole = v
}

// GetCompanyIdGenerationFlag returns the CompanyIdGenerationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Crm) GetCompanyIdGenerationFlag() bool {
	if o == nil || IsNil(o.CompanyIdGenerationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CompanyIdGenerationFlag.Get()
}

// GetCompanyIdGenerationFlagOk returns a tuple with the CompanyIdGenerationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Crm) GetCompanyIdGenerationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyIdGenerationFlag.Get(), o.CompanyIdGenerationFlag.IsSet()
}

// HasCompanyIdGenerationFlag returns a boolean if a field has been set.
func (o *Crm) HasCompanyIdGenerationFlag() bool {
	if o != nil && o.CompanyIdGenerationFlag.IsSet() {
		return true
	}

	return false
}

// SetCompanyIdGenerationFlag gets a reference to the given NullableBool and assigns it to the CompanyIdGenerationFlag field.
func (o *Crm) SetCompanyIdGenerationFlag(v bool) {
	o.CompanyIdGenerationFlag.Set(&v)
}

// SetCompanyIdGenerationFlagNil sets the value for CompanyIdGenerationFlag to be an explicit nil
func (o *Crm) SetCompanyIdGenerationFlagNil() {
	o.CompanyIdGenerationFlag.Set(nil)
}

// UnsetCompanyIdGenerationFlag ensures that no value is present for CompanyIdGenerationFlag, not even an explicit nil
func (o *Crm) UnsetCompanyIdGenerationFlag() {
	o.CompanyIdGenerationFlag.Unset()
}

// GetExcludeSpacesFlag returns the ExcludeSpacesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Crm) GetExcludeSpacesFlag() bool {
	if o == nil || IsNil(o.ExcludeSpacesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludeSpacesFlag.Get()
}

// GetExcludeSpacesFlagOk returns a tuple with the ExcludeSpacesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Crm) GetExcludeSpacesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludeSpacesFlag.Get(), o.ExcludeSpacesFlag.IsSet()
}

// HasExcludeSpacesFlag returns a boolean if a field has been set.
func (o *Crm) HasExcludeSpacesFlag() bool {
	if o != nil && o.ExcludeSpacesFlag.IsSet() {
		return true
	}

	return false
}

// SetExcludeSpacesFlag gets a reference to the given NullableBool and assigns it to the ExcludeSpacesFlag field.
func (o *Crm) SetExcludeSpacesFlag(v bool) {
	o.ExcludeSpacesFlag.Set(&v)
}

// SetExcludeSpacesFlagNil sets the value for ExcludeSpacesFlag to be an explicit nil
func (o *Crm) SetExcludeSpacesFlagNil() {
	o.ExcludeSpacesFlag.Set(nil)
}

// UnsetExcludeSpacesFlag ensures that no value is present for ExcludeSpacesFlag, not even an explicit nil
func (o *Crm) UnsetExcludeSpacesFlag() {
	o.ExcludeSpacesFlag.Unset()
}

// GetField1Caption returns the Field1Caption field value if set, zero value otherwise.
func (o *Crm) GetField1Caption() string {
	if o == nil || IsNil(o.Field1Caption) {
		var ret string
		return ret
	}
	return *o.Field1Caption
}

// GetField1CaptionOk returns a tuple with the Field1Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField1CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field1Caption) {
		return nil, false
	}
	return o.Field1Caption, true
}

// HasField1Caption returns a boolean if a field has been set.
func (o *Crm) HasField1Caption() bool {
	if o != nil && !IsNil(o.Field1Caption) {
		return true
	}

	return false
}

// SetField1Caption gets a reference to the given string and assigns it to the Field1Caption field.
func (o *Crm) SetField1Caption(v string) {
	o.Field1Caption = &v
}

// GetField2Caption returns the Field2Caption field value if set, zero value otherwise.
func (o *Crm) GetField2Caption() string {
	if o == nil || IsNil(o.Field2Caption) {
		var ret string
		return ret
	}
	return *o.Field2Caption
}

// GetField2CaptionOk returns a tuple with the Field2Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField2CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field2Caption) {
		return nil, false
	}
	return o.Field2Caption, true
}

// HasField2Caption returns a boolean if a field has been set.
func (o *Crm) HasField2Caption() bool {
	if o != nil && !IsNil(o.Field2Caption) {
		return true
	}

	return false
}

// SetField2Caption gets a reference to the given string and assigns it to the Field2Caption field.
func (o *Crm) SetField2Caption(v string) {
	o.Field2Caption = &v
}

// GetField3Caption returns the Field3Caption field value if set, zero value otherwise.
func (o *Crm) GetField3Caption() string {
	if o == nil || IsNil(o.Field3Caption) {
		var ret string
		return ret
	}
	return *o.Field3Caption
}

// GetField3CaptionOk returns a tuple with the Field3Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField3CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field3Caption) {
		return nil, false
	}
	return o.Field3Caption, true
}

// HasField3Caption returns a boolean if a field has been set.
func (o *Crm) HasField3Caption() bool {
	if o != nil && !IsNil(o.Field3Caption) {
		return true
	}

	return false
}

// SetField3Caption gets a reference to the given string and assigns it to the Field3Caption field.
func (o *Crm) SetField3Caption(v string) {
	o.Field3Caption = &v
}

// GetField4Caption returns the Field4Caption field value if set, zero value otherwise.
func (o *Crm) GetField4Caption() string {
	if o == nil || IsNil(o.Field4Caption) {
		var ret string
		return ret
	}
	return *o.Field4Caption
}

// GetField4CaptionOk returns a tuple with the Field4Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField4CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field4Caption) {
		return nil, false
	}
	return o.Field4Caption, true
}

// HasField4Caption returns a boolean if a field has been set.
func (o *Crm) HasField4Caption() bool {
	if o != nil && !IsNil(o.Field4Caption) {
		return true
	}

	return false
}

// SetField4Caption gets a reference to the given string and assigns it to the Field4Caption field.
func (o *Crm) SetField4Caption(v string) {
	o.Field4Caption = &v
}

// GetField5Caption returns the Field5Caption field value if set, zero value otherwise.
func (o *Crm) GetField5Caption() string {
	if o == nil || IsNil(o.Field5Caption) {
		var ret string
		return ret
	}
	return *o.Field5Caption
}

// GetField5CaptionOk returns a tuple with the Field5Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField5CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field5Caption) {
		return nil, false
	}
	return o.Field5Caption, true
}

// HasField5Caption returns a boolean if a field has been set.
func (o *Crm) HasField5Caption() bool {
	if o != nil && !IsNil(o.Field5Caption) {
		return true
	}

	return false
}

// SetField5Caption gets a reference to the given string and assigns it to the Field5Caption field.
func (o *Crm) SetField5Caption(v string) {
	o.Field5Caption = &v
}

// GetField6Caption returns the Field6Caption field value if set, zero value otherwise.
func (o *Crm) GetField6Caption() string {
	if o == nil || IsNil(o.Field6Caption) {
		var ret string
		return ret
	}
	return *o.Field6Caption
}

// GetField6CaptionOk returns a tuple with the Field6Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField6CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field6Caption) {
		return nil, false
	}
	return o.Field6Caption, true
}

// HasField6Caption returns a boolean if a field has been set.
func (o *Crm) HasField6Caption() bool {
	if o != nil && !IsNil(o.Field6Caption) {
		return true
	}

	return false
}

// SetField6Caption gets a reference to the given string and assigns it to the Field6Caption field.
func (o *Crm) SetField6Caption(v string) {
	o.Field6Caption = &v
}

// GetField7Caption returns the Field7Caption field value if set, zero value otherwise.
func (o *Crm) GetField7Caption() string {
	if o == nil || IsNil(o.Field7Caption) {
		var ret string
		return ret
	}
	return *o.Field7Caption
}

// GetField7CaptionOk returns a tuple with the Field7Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField7CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field7Caption) {
		return nil, false
	}
	return o.Field7Caption, true
}

// HasField7Caption returns a boolean if a field has been set.
func (o *Crm) HasField7Caption() bool {
	if o != nil && !IsNil(o.Field7Caption) {
		return true
	}

	return false
}

// SetField7Caption gets a reference to the given string and assigns it to the Field7Caption field.
func (o *Crm) SetField7Caption(v string) {
	o.Field7Caption = &v
}

// GetField8Caption returns the Field8Caption field value if set, zero value otherwise.
func (o *Crm) GetField8Caption() string {
	if o == nil || IsNil(o.Field8Caption) {
		var ret string
		return ret
	}
	return *o.Field8Caption
}

// GetField8CaptionOk returns a tuple with the Field8Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField8CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field8Caption) {
		return nil, false
	}
	return o.Field8Caption, true
}

// HasField8Caption returns a boolean if a field has been set.
func (o *Crm) HasField8Caption() bool {
	if o != nil && !IsNil(o.Field8Caption) {
		return true
	}

	return false
}

// SetField8Caption gets a reference to the given string and assigns it to the Field8Caption field.
func (o *Crm) SetField8Caption(v string) {
	o.Field8Caption = &v
}

// GetField9Caption returns the Field9Caption field value if set, zero value otherwise.
func (o *Crm) GetField9Caption() string {
	if o == nil || IsNil(o.Field9Caption) {
		var ret string
		return ret
	}
	return *o.Field9Caption
}

// GetField9CaptionOk returns a tuple with the Field9Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField9CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field9Caption) {
		return nil, false
	}
	return o.Field9Caption, true
}

// HasField9Caption returns a boolean if a field has been set.
func (o *Crm) HasField9Caption() bool {
	if o != nil && !IsNil(o.Field9Caption) {
		return true
	}

	return false
}

// SetField9Caption gets a reference to the given string and assigns it to the Field9Caption field.
func (o *Crm) SetField9Caption(v string) {
	o.Field9Caption = &v
}

// GetField10Caption returns the Field10Caption field value if set, zero value otherwise.
func (o *Crm) GetField10Caption() string {
	if o == nil || IsNil(o.Field10Caption) {
		var ret string
		return ret
	}
	return *o.Field10Caption
}

// GetField10CaptionOk returns a tuple with the Field10Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetField10CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Field10Caption) {
		return nil, false
	}
	return o.Field10Caption, true
}

// HasField10Caption returns a boolean if a field has been set.
func (o *Crm) HasField10Caption() bool {
	if o != nil && !IsNil(o.Field10Caption) {
		return true
	}

	return false
}

// SetField10Caption gets a reference to the given string and assigns it to the Field10Caption field.
func (o *Crm) SetField10Caption(v string) {
	o.Field10Caption = &v
}

// GetPrimaryRepCaption returns the PrimaryRepCaption field value if set, zero value otherwise.
func (o *Crm) GetPrimaryRepCaption() string {
	if o == nil || IsNil(o.PrimaryRepCaption) {
		var ret string
		return ret
	}
	return *o.PrimaryRepCaption
}

// GetPrimaryRepCaptionOk returns a tuple with the PrimaryRepCaption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetPrimaryRepCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryRepCaption) {
		return nil, false
	}
	return o.PrimaryRepCaption, true
}

// HasPrimaryRepCaption returns a boolean if a field has been set.
func (o *Crm) HasPrimaryRepCaption() bool {
	if o != nil && !IsNil(o.PrimaryRepCaption) {
		return true
	}

	return false
}

// SetPrimaryRepCaption gets a reference to the given string and assigns it to the PrimaryRepCaption field.
func (o *Crm) SetPrimaryRepCaption(v string) {
	o.PrimaryRepCaption = &v
}

// GetSecondaryRepCaption returns the SecondaryRepCaption field value if set, zero value otherwise.
func (o *Crm) GetSecondaryRepCaption() string {
	if o == nil || IsNil(o.SecondaryRepCaption) {
		var ret string
		return ret
	}
	return *o.SecondaryRepCaption
}

// GetSecondaryRepCaptionOk returns a tuple with the SecondaryRepCaption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetSecondaryRepCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryRepCaption) {
		return nil, false
	}
	return o.SecondaryRepCaption, true
}

// HasSecondaryRepCaption returns a boolean if a field has been set.
func (o *Crm) HasSecondaryRepCaption() bool {
	if o != nil && !IsNil(o.SecondaryRepCaption) {
		return true
	}

	return false
}

// SetSecondaryRepCaption gets a reference to the given string and assigns it to the SecondaryRepCaption field.
func (o *Crm) SetSecondaryRepCaption(v string) {
	o.SecondaryRepCaption = &v
}

// GetOther1Caption returns the Other1Caption field value if set, zero value otherwise.
func (o *Crm) GetOther1Caption() string {
	if o == nil || IsNil(o.Other1Caption) {
		var ret string
		return ret
	}
	return *o.Other1Caption
}

// GetOther1CaptionOk returns a tuple with the Other1Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetOther1CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Other1Caption) {
		return nil, false
	}
	return o.Other1Caption, true
}

// HasOther1Caption returns a boolean if a field has been set.
func (o *Crm) HasOther1Caption() bool {
	if o != nil && !IsNil(o.Other1Caption) {
		return true
	}

	return false
}

// SetOther1Caption gets a reference to the given string and assigns it to the Other1Caption field.
func (o *Crm) SetOther1Caption(v string) {
	o.Other1Caption = &v
}

// GetOther2Caption returns the Other2Caption field value if set, zero value otherwise.
func (o *Crm) GetOther2Caption() string {
	if o == nil || IsNil(o.Other2Caption) {
		var ret string
		return ret
	}
	return *o.Other2Caption
}

// GetOther2CaptionOk returns a tuple with the Other2Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetOther2CaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Other2Caption) {
		return nil, false
	}
	return o.Other2Caption, true
}

// HasOther2Caption returns a boolean if a field has been set.
func (o *Crm) HasOther2Caption() bool {
	if o != nil && !IsNil(o.Other2Caption) {
		return true
	}

	return false
}

// SetOther2Caption gets a reference to the given string and assigns it to the Other2Caption field.
func (o *Crm) SetOther2Caption(v string) {
	o.Other2Caption = &v
}

// GetDefaultYear returns the DefaultYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Crm) GetDefaultYear() bool {
	if o == nil || IsNil(o.DefaultYear.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultYear.Get()
}

// GetDefaultYearOk returns a tuple with the DefaultYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Crm) GetDefaultYearOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultYear.Get(), o.DefaultYear.IsSet()
}

// HasDefaultYear returns a boolean if a field has been set.
func (o *Crm) HasDefaultYear() bool {
	if o != nil && o.DefaultYear.IsSet() {
		return true
	}

	return false
}

// SetDefaultYear gets a reference to the given NullableBool and assigns it to the DefaultYear field.
func (o *Crm) SetDefaultYear(v bool) {
	o.DefaultYear.Set(&v)
}

// SetDefaultYearNil sets the value for DefaultYear to be an explicit nil
func (o *Crm) SetDefaultYearNil() {
	o.DefaultYear.Set(nil)
}

// UnsetDefaultYear ensures that no value is present for DefaultYear, not even an explicit nil
func (o *Crm) UnsetDefaultYear() {
	o.DefaultYear.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *Crm) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Crm) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *Crm) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *Crm) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o Crm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Crm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.CompanyListCount.IsSet() {
		toSerialize["companyListCount"] = o.CompanyListCount.Get()
	}
	if o.LockProbabilityFlag.IsSet() {
		toSerialize["lockProbabilityFlag"] = o.LockProbabilityFlag.Get()
	}
	toSerialize["accountManagerRole"] = o.AccountManagerRole
	toSerialize["technicalContactRole"] = o.TechnicalContactRole
	toSerialize["salesRepRole"] = o.SalesRepRole
	if o.CompanyIdGenerationFlag.IsSet() {
		toSerialize["companyIdGenerationFlag"] = o.CompanyIdGenerationFlag.Get()
	}
	if o.ExcludeSpacesFlag.IsSet() {
		toSerialize["excludeSpacesFlag"] = o.ExcludeSpacesFlag.Get()
	}
	if !IsNil(o.Field1Caption) {
		toSerialize["field1Caption"] = o.Field1Caption
	}
	if !IsNil(o.Field2Caption) {
		toSerialize["field2Caption"] = o.Field2Caption
	}
	if !IsNil(o.Field3Caption) {
		toSerialize["field3Caption"] = o.Field3Caption
	}
	if !IsNil(o.Field4Caption) {
		toSerialize["field4Caption"] = o.Field4Caption
	}
	if !IsNil(o.Field5Caption) {
		toSerialize["field5Caption"] = o.Field5Caption
	}
	if !IsNil(o.Field6Caption) {
		toSerialize["field6Caption"] = o.Field6Caption
	}
	if !IsNil(o.Field7Caption) {
		toSerialize["field7Caption"] = o.Field7Caption
	}
	if !IsNil(o.Field8Caption) {
		toSerialize["field8Caption"] = o.Field8Caption
	}
	if !IsNil(o.Field9Caption) {
		toSerialize["field9Caption"] = o.Field9Caption
	}
	if !IsNil(o.Field10Caption) {
		toSerialize["field10Caption"] = o.Field10Caption
	}
	if !IsNil(o.PrimaryRepCaption) {
		toSerialize["primaryRepCaption"] = o.PrimaryRepCaption
	}
	if !IsNil(o.SecondaryRepCaption) {
		toSerialize["secondaryRepCaption"] = o.SecondaryRepCaption
	}
	if !IsNil(o.Other1Caption) {
		toSerialize["other1Caption"] = o.Other1Caption
	}
	if !IsNil(o.Other2Caption) {
		toSerialize["other2Caption"] = o.Other2Caption
	}
	if o.DefaultYear.IsSet() {
		toSerialize["defaultYear"] = o.DefaultYear.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *Crm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountManagerRole",
		"technicalContactRole",
		"salesRepRole",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCrm := _Crm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCrm)

	if err != nil {
		return err
	}

	*o = Crm(varCrm)

	return err
}

type NullableCrm struct {
	value *Crm
	isSet bool
}

func (v NullableCrm) Get() *Crm {
	return v.value
}

func (v *NullableCrm) Set(val *Crm) {
	v.value = val
	v.isSet = true
}

func (v NullableCrm) IsSet() bool {
	return v.isSet
}

func (v *NullableCrm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrm(val *Crm) *NullableCrm {
	return &NullableCrm{value: val, isSet: true}
}

func (v NullableCrm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
