/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the EmailToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailToken{}

// EmailToken struct for EmailToken
type EmailToken struct {
	Id                      *int32       `json:"id,omitempty"`
	Token                   *string      `json:"token,omitempty"`
	Description             *string      `json:"description,omitempty"`
	AddressFlag             NullableBool `json:"addressFlag,omitempty"`
	AgreementFlag           NullableBool `json:"agreementFlag,omitempty"`
	CompanyFlag             NullableBool `json:"companyFlag,omitempty"`
	ConfigFlag              NullableBool `json:"configFlag,omitempty"`
	ContactFlag             NullableBool `json:"contactFlag,omitempty"`
	InvoiceFlag             NullableBool `json:"invoiceFlag,omitempty"`
	PurchaseOrderFlag       NullableBool `json:"purchaseOrderFlag,omitempty"`
	PurchaseOrderStatusFlag NullableBool `json:"purchaseOrderStatusFlag,omitempty"`
	RmaFlag                 NullableBool `json:"rmaFlag,omitempty"`
	SalesFlag               NullableBool `json:"salesFlag,omitempty"`
	ServiceFlag             NullableBool `json:"serviceFlag,omitempty"`
	TracksFlag              NullableBool `json:"tracksFlag,omitempty"`
	WorkflowFlag            NullableBool `json:"workflowFlag,omitempty"`
	PortalPasswordFlag      NullableBool `json:"portalPasswordFlag,omitempty"`
}

// NewEmailToken instantiates a new EmailToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailToken() *EmailToken {
	this := EmailToken{}
	return &this
}

// NewEmailTokenWithDefaults instantiates a new EmailToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTokenWithDefaults() *EmailToken {
	this := EmailToken{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmailToken) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailToken) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmailToken) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EmailToken) SetId(v int32) {
	o.Id = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *EmailToken) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailToken) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *EmailToken) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *EmailToken) SetToken(v string) {
	o.Token = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EmailToken) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailToken) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EmailToken) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EmailToken) SetDescription(v string) {
	o.Description = &v
}

// GetAddressFlag returns the AddressFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetAddressFlag() bool {
	if o == nil || IsNil(o.AddressFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AddressFlag.Get()
}

// GetAddressFlagOk returns a tuple with the AddressFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetAddressFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressFlag.Get(), o.AddressFlag.IsSet()
}

// HasAddressFlag returns a boolean if a field has been set.
func (o *EmailToken) HasAddressFlag() bool {
	if o != nil && o.AddressFlag.IsSet() {
		return true
	}

	return false
}

// SetAddressFlag gets a reference to the given NullableBool and assigns it to the AddressFlag field.
func (o *EmailToken) SetAddressFlag(v bool) {
	o.AddressFlag.Set(&v)
}

// SetAddressFlagNil sets the value for AddressFlag to be an explicit nil
func (o *EmailToken) SetAddressFlagNil() {
	o.AddressFlag.Set(nil)
}

// UnsetAddressFlag ensures that no value is present for AddressFlag, not even an explicit nil
func (o *EmailToken) UnsetAddressFlag() {
	o.AddressFlag.Unset()
}

// GetAgreementFlag returns the AgreementFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetAgreementFlag() bool {
	if o == nil || IsNil(o.AgreementFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AgreementFlag.Get()
}

// GetAgreementFlagOk returns a tuple with the AgreementFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetAgreementFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementFlag.Get(), o.AgreementFlag.IsSet()
}

// HasAgreementFlag returns a boolean if a field has been set.
func (o *EmailToken) HasAgreementFlag() bool {
	if o != nil && o.AgreementFlag.IsSet() {
		return true
	}

	return false
}

// SetAgreementFlag gets a reference to the given NullableBool and assigns it to the AgreementFlag field.
func (o *EmailToken) SetAgreementFlag(v bool) {
	o.AgreementFlag.Set(&v)
}

// SetAgreementFlagNil sets the value for AgreementFlag to be an explicit nil
func (o *EmailToken) SetAgreementFlagNil() {
	o.AgreementFlag.Set(nil)
}

// UnsetAgreementFlag ensures that no value is present for AgreementFlag, not even an explicit nil
func (o *EmailToken) UnsetAgreementFlag() {
	o.AgreementFlag.Unset()
}

// GetCompanyFlag returns the CompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetCompanyFlag() bool {
	if o == nil || IsNil(o.CompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CompanyFlag.Get()
}

// GetCompanyFlagOk returns a tuple with the CompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyFlag.Get(), o.CompanyFlag.IsSet()
}

// HasCompanyFlag returns a boolean if a field has been set.
func (o *EmailToken) HasCompanyFlag() bool {
	if o != nil && o.CompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetCompanyFlag gets a reference to the given NullableBool and assigns it to the CompanyFlag field.
func (o *EmailToken) SetCompanyFlag(v bool) {
	o.CompanyFlag.Set(&v)
}

// SetCompanyFlagNil sets the value for CompanyFlag to be an explicit nil
func (o *EmailToken) SetCompanyFlagNil() {
	o.CompanyFlag.Set(nil)
}

// UnsetCompanyFlag ensures that no value is present for CompanyFlag, not even an explicit nil
func (o *EmailToken) UnsetCompanyFlag() {
	o.CompanyFlag.Unset()
}

// GetConfigFlag returns the ConfigFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetConfigFlag() bool {
	if o == nil || IsNil(o.ConfigFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ConfigFlag.Get()
}

// GetConfigFlagOk returns a tuple with the ConfigFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetConfigFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigFlag.Get(), o.ConfigFlag.IsSet()
}

// HasConfigFlag returns a boolean if a field has been set.
func (o *EmailToken) HasConfigFlag() bool {
	if o != nil && o.ConfigFlag.IsSet() {
		return true
	}

	return false
}

// SetConfigFlag gets a reference to the given NullableBool and assigns it to the ConfigFlag field.
func (o *EmailToken) SetConfigFlag(v bool) {
	o.ConfigFlag.Set(&v)
}

// SetConfigFlagNil sets the value for ConfigFlag to be an explicit nil
func (o *EmailToken) SetConfigFlagNil() {
	o.ConfigFlag.Set(nil)
}

// UnsetConfigFlag ensures that no value is present for ConfigFlag, not even an explicit nil
func (o *EmailToken) UnsetConfigFlag() {
	o.ConfigFlag.Unset()
}

// GetContactFlag returns the ContactFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetContactFlag() bool {
	if o == nil || IsNil(o.ContactFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ContactFlag.Get()
}

// GetContactFlagOk returns a tuple with the ContactFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetContactFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactFlag.Get(), o.ContactFlag.IsSet()
}

// HasContactFlag returns a boolean if a field has been set.
func (o *EmailToken) HasContactFlag() bool {
	if o != nil && o.ContactFlag.IsSet() {
		return true
	}

	return false
}

// SetContactFlag gets a reference to the given NullableBool and assigns it to the ContactFlag field.
func (o *EmailToken) SetContactFlag(v bool) {
	o.ContactFlag.Set(&v)
}

// SetContactFlagNil sets the value for ContactFlag to be an explicit nil
func (o *EmailToken) SetContactFlagNil() {
	o.ContactFlag.Set(nil)
}

// UnsetContactFlag ensures that no value is present for ContactFlag, not even an explicit nil
func (o *EmailToken) UnsetContactFlag() {
	o.ContactFlag.Unset()
}

// GetInvoiceFlag returns the InvoiceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetInvoiceFlag() bool {
	if o == nil || IsNil(o.InvoiceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InvoiceFlag.Get()
}

// GetInvoiceFlagOk returns a tuple with the InvoiceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetInvoiceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceFlag.Get(), o.InvoiceFlag.IsSet()
}

// HasInvoiceFlag returns a boolean if a field has been set.
func (o *EmailToken) HasInvoiceFlag() bool {
	if o != nil && o.InvoiceFlag.IsSet() {
		return true
	}

	return false
}

// SetInvoiceFlag gets a reference to the given NullableBool and assigns it to the InvoiceFlag field.
func (o *EmailToken) SetInvoiceFlag(v bool) {
	o.InvoiceFlag.Set(&v)
}

// SetInvoiceFlagNil sets the value for InvoiceFlag to be an explicit nil
func (o *EmailToken) SetInvoiceFlagNil() {
	o.InvoiceFlag.Set(nil)
}

// UnsetInvoiceFlag ensures that no value is present for InvoiceFlag, not even an explicit nil
func (o *EmailToken) UnsetInvoiceFlag() {
	o.InvoiceFlag.Unset()
}

// GetPurchaseOrderFlag returns the PurchaseOrderFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetPurchaseOrderFlag() bool {
	if o == nil || IsNil(o.PurchaseOrderFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PurchaseOrderFlag.Get()
}

// GetPurchaseOrderFlagOk returns a tuple with the PurchaseOrderFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetPurchaseOrderFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseOrderFlag.Get(), o.PurchaseOrderFlag.IsSet()
}

// HasPurchaseOrderFlag returns a boolean if a field has been set.
func (o *EmailToken) HasPurchaseOrderFlag() bool {
	if o != nil && o.PurchaseOrderFlag.IsSet() {
		return true
	}

	return false
}

// SetPurchaseOrderFlag gets a reference to the given NullableBool and assigns it to the PurchaseOrderFlag field.
func (o *EmailToken) SetPurchaseOrderFlag(v bool) {
	o.PurchaseOrderFlag.Set(&v)
}

// SetPurchaseOrderFlagNil sets the value for PurchaseOrderFlag to be an explicit nil
func (o *EmailToken) SetPurchaseOrderFlagNil() {
	o.PurchaseOrderFlag.Set(nil)
}

// UnsetPurchaseOrderFlag ensures that no value is present for PurchaseOrderFlag, not even an explicit nil
func (o *EmailToken) UnsetPurchaseOrderFlag() {
	o.PurchaseOrderFlag.Unset()
}

// GetPurchaseOrderStatusFlag returns the PurchaseOrderStatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetPurchaseOrderStatusFlag() bool {
	if o == nil || IsNil(o.PurchaseOrderStatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PurchaseOrderStatusFlag.Get()
}

// GetPurchaseOrderStatusFlagOk returns a tuple with the PurchaseOrderStatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetPurchaseOrderStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseOrderStatusFlag.Get(), o.PurchaseOrderStatusFlag.IsSet()
}

// HasPurchaseOrderStatusFlag returns a boolean if a field has been set.
func (o *EmailToken) HasPurchaseOrderStatusFlag() bool {
	if o != nil && o.PurchaseOrderStatusFlag.IsSet() {
		return true
	}

	return false
}

// SetPurchaseOrderStatusFlag gets a reference to the given NullableBool and assigns it to the PurchaseOrderStatusFlag field.
func (o *EmailToken) SetPurchaseOrderStatusFlag(v bool) {
	o.PurchaseOrderStatusFlag.Set(&v)
}

// SetPurchaseOrderStatusFlagNil sets the value for PurchaseOrderStatusFlag to be an explicit nil
func (o *EmailToken) SetPurchaseOrderStatusFlagNil() {
	o.PurchaseOrderStatusFlag.Set(nil)
}

// UnsetPurchaseOrderStatusFlag ensures that no value is present for PurchaseOrderStatusFlag, not even an explicit nil
func (o *EmailToken) UnsetPurchaseOrderStatusFlag() {
	o.PurchaseOrderStatusFlag.Unset()
}

// GetRmaFlag returns the RmaFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetRmaFlag() bool {
	if o == nil || IsNil(o.RmaFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RmaFlag.Get()
}

// GetRmaFlagOk returns a tuple with the RmaFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetRmaFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RmaFlag.Get(), o.RmaFlag.IsSet()
}

// HasRmaFlag returns a boolean if a field has been set.
func (o *EmailToken) HasRmaFlag() bool {
	if o != nil && o.RmaFlag.IsSet() {
		return true
	}

	return false
}

// SetRmaFlag gets a reference to the given NullableBool and assigns it to the RmaFlag field.
func (o *EmailToken) SetRmaFlag(v bool) {
	o.RmaFlag.Set(&v)
}

// SetRmaFlagNil sets the value for RmaFlag to be an explicit nil
func (o *EmailToken) SetRmaFlagNil() {
	o.RmaFlag.Set(nil)
}

// UnsetRmaFlag ensures that no value is present for RmaFlag, not even an explicit nil
func (o *EmailToken) UnsetRmaFlag() {
	o.RmaFlag.Unset()
}

// GetSalesFlag returns the SalesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetSalesFlag() bool {
	if o == nil || IsNil(o.SalesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SalesFlag.Get()
}

// GetSalesFlagOk returns a tuple with the SalesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetSalesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesFlag.Get(), o.SalesFlag.IsSet()
}

// HasSalesFlag returns a boolean if a field has been set.
func (o *EmailToken) HasSalesFlag() bool {
	if o != nil && o.SalesFlag.IsSet() {
		return true
	}

	return false
}

// SetSalesFlag gets a reference to the given NullableBool and assigns it to the SalesFlag field.
func (o *EmailToken) SetSalesFlag(v bool) {
	o.SalesFlag.Set(&v)
}

// SetSalesFlagNil sets the value for SalesFlag to be an explicit nil
func (o *EmailToken) SetSalesFlagNil() {
	o.SalesFlag.Set(nil)
}

// UnsetSalesFlag ensures that no value is present for SalesFlag, not even an explicit nil
func (o *EmailToken) UnsetSalesFlag() {
	o.SalesFlag.Unset()
}

// GetServiceFlag returns the ServiceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetServiceFlag() bool {
	if o == nil || IsNil(o.ServiceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceFlag.Get()
}

// GetServiceFlagOk returns a tuple with the ServiceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetServiceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceFlag.Get(), o.ServiceFlag.IsSet()
}

// HasServiceFlag returns a boolean if a field has been set.
func (o *EmailToken) HasServiceFlag() bool {
	if o != nil && o.ServiceFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceFlag gets a reference to the given NullableBool and assigns it to the ServiceFlag field.
func (o *EmailToken) SetServiceFlag(v bool) {
	o.ServiceFlag.Set(&v)
}

// SetServiceFlagNil sets the value for ServiceFlag to be an explicit nil
func (o *EmailToken) SetServiceFlagNil() {
	o.ServiceFlag.Set(nil)
}

// UnsetServiceFlag ensures that no value is present for ServiceFlag, not even an explicit nil
func (o *EmailToken) UnsetServiceFlag() {
	o.ServiceFlag.Unset()
}

// GetTracksFlag returns the TracksFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetTracksFlag() bool {
	if o == nil || IsNil(o.TracksFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TracksFlag.Get()
}

// GetTracksFlagOk returns a tuple with the TracksFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetTracksFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TracksFlag.Get(), o.TracksFlag.IsSet()
}

// HasTracksFlag returns a boolean if a field has been set.
func (o *EmailToken) HasTracksFlag() bool {
	if o != nil && o.TracksFlag.IsSet() {
		return true
	}

	return false
}

// SetTracksFlag gets a reference to the given NullableBool and assigns it to the TracksFlag field.
func (o *EmailToken) SetTracksFlag(v bool) {
	o.TracksFlag.Set(&v)
}

// SetTracksFlagNil sets the value for TracksFlag to be an explicit nil
func (o *EmailToken) SetTracksFlagNil() {
	o.TracksFlag.Set(nil)
}

// UnsetTracksFlag ensures that no value is present for TracksFlag, not even an explicit nil
func (o *EmailToken) UnsetTracksFlag() {
	o.TracksFlag.Unset()
}

// GetWorkflowFlag returns the WorkflowFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetWorkflowFlag() bool {
	if o == nil || IsNil(o.WorkflowFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.WorkflowFlag.Get()
}

// GetWorkflowFlagOk returns a tuple with the WorkflowFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetWorkflowFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowFlag.Get(), o.WorkflowFlag.IsSet()
}

// HasWorkflowFlag returns a boolean if a field has been set.
func (o *EmailToken) HasWorkflowFlag() bool {
	if o != nil && o.WorkflowFlag.IsSet() {
		return true
	}

	return false
}

// SetWorkflowFlag gets a reference to the given NullableBool and assigns it to the WorkflowFlag field.
func (o *EmailToken) SetWorkflowFlag(v bool) {
	o.WorkflowFlag.Set(&v)
}

// SetWorkflowFlagNil sets the value for WorkflowFlag to be an explicit nil
func (o *EmailToken) SetWorkflowFlagNil() {
	o.WorkflowFlag.Set(nil)
}

// UnsetWorkflowFlag ensures that no value is present for WorkflowFlag, not even an explicit nil
func (o *EmailToken) UnsetWorkflowFlag() {
	o.WorkflowFlag.Unset()
}

// GetPortalPasswordFlag returns the PortalPasswordFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailToken) GetPortalPasswordFlag() bool {
	if o == nil || IsNil(o.PortalPasswordFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PortalPasswordFlag.Get()
}

// GetPortalPasswordFlagOk returns a tuple with the PortalPasswordFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailToken) GetPortalPasswordFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortalPasswordFlag.Get(), o.PortalPasswordFlag.IsSet()
}

// HasPortalPasswordFlag returns a boolean if a field has been set.
func (o *EmailToken) HasPortalPasswordFlag() bool {
	if o != nil && o.PortalPasswordFlag.IsSet() {
		return true
	}

	return false
}

// SetPortalPasswordFlag gets a reference to the given NullableBool and assigns it to the PortalPasswordFlag field.
func (o *EmailToken) SetPortalPasswordFlag(v bool) {
	o.PortalPasswordFlag.Set(&v)
}

// SetPortalPasswordFlagNil sets the value for PortalPasswordFlag to be an explicit nil
func (o *EmailToken) SetPortalPasswordFlagNil() {
	o.PortalPasswordFlag.Set(nil)
}

// UnsetPortalPasswordFlag ensures that no value is present for PortalPasswordFlag, not even an explicit nil
func (o *EmailToken) UnsetPortalPasswordFlag() {
	o.PortalPasswordFlag.Unset()
}

func (o EmailToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.AddressFlag.IsSet() {
		toSerialize["addressFlag"] = o.AddressFlag.Get()
	}
	if o.AgreementFlag.IsSet() {
		toSerialize["agreementFlag"] = o.AgreementFlag.Get()
	}
	if o.CompanyFlag.IsSet() {
		toSerialize["companyFlag"] = o.CompanyFlag.Get()
	}
	if o.ConfigFlag.IsSet() {
		toSerialize["configFlag"] = o.ConfigFlag.Get()
	}
	if o.ContactFlag.IsSet() {
		toSerialize["contactFlag"] = o.ContactFlag.Get()
	}
	if o.InvoiceFlag.IsSet() {
		toSerialize["invoiceFlag"] = o.InvoiceFlag.Get()
	}
	if o.PurchaseOrderFlag.IsSet() {
		toSerialize["purchaseOrderFlag"] = o.PurchaseOrderFlag.Get()
	}
	if o.PurchaseOrderStatusFlag.IsSet() {
		toSerialize["purchaseOrderStatusFlag"] = o.PurchaseOrderStatusFlag.Get()
	}
	if o.RmaFlag.IsSet() {
		toSerialize["rmaFlag"] = o.RmaFlag.Get()
	}
	if o.SalesFlag.IsSet() {
		toSerialize["salesFlag"] = o.SalesFlag.Get()
	}
	if o.ServiceFlag.IsSet() {
		toSerialize["serviceFlag"] = o.ServiceFlag.Get()
	}
	if o.TracksFlag.IsSet() {
		toSerialize["tracksFlag"] = o.TracksFlag.Get()
	}
	if o.WorkflowFlag.IsSet() {
		toSerialize["workflowFlag"] = o.WorkflowFlag.Get()
	}
	if o.PortalPasswordFlag.IsSet() {
		toSerialize["portalPasswordFlag"] = o.PortalPasswordFlag.Get()
	}
	return toSerialize, nil
}

type NullableEmailToken struct {
	value *EmailToken
	isSet bool
}

func (v NullableEmailToken) Get() *EmailToken {
	return v.value
}

func (v *NullableEmailToken) Set(val *EmailToken) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailToken) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailToken(val *EmailToken) *NullableEmailToken {
	return &NullableEmailToken{value: val, isSet: true}
}

func (v NullableEmailToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
