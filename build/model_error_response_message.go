/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ErrorResponseMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponseMessage{}

// ErrorResponseMessage struct for ErrorResponseMessage
type ErrorResponseMessage struct {
	Code    *string           `json:"code,omitempty"`
	Message *string           `json:"message,omitempty"`
	Errors  []ValidationError `json:"errors,omitempty"`
}

// NewErrorResponseMessage instantiates a new ErrorResponseMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseMessage() *ErrorResponseMessage {
	this := ErrorResponseMessage{}
	return &this
}

// NewErrorResponseMessageWithDefaults instantiates a new ErrorResponseMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseMessageWithDefaults() *ErrorResponseMessage {
	this := ErrorResponseMessage{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ErrorResponseMessage) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseMessage) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ErrorResponseMessage) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ErrorResponseMessage) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorResponseMessage) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseMessage) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorResponseMessage) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorResponseMessage) SetMessage(v string) {
	o.Message = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ErrorResponseMessage) GetErrors() []ValidationError {
	if o == nil || IsNil(o.Errors) {
		var ret []ValidationError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseMessage) GetErrorsOk() ([]ValidationError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ErrorResponseMessage) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ValidationError and assigns it to the Errors field.
func (o *ErrorResponseMessage) SetErrors(v []ValidationError) {
	o.Errors = v
}

func (o ErrorResponseMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponseMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableErrorResponseMessage struct {
	value *ErrorResponseMessage
	isSet bool
}

func (v NullableErrorResponseMessage) Get() *ErrorResponseMessage {
	return v.value
}

func (v *NullableErrorResponseMessage) Set(val *ErrorResponseMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseMessage(val *ErrorResponseMessage) *NullableErrorResponseMessage {
	return &NullableErrorResponseMessage{value: val, isSet: true}
}

func (v NullableErrorResponseMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
