/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"time"
)

// checks if the ExportAccountingBatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportAccountingBatchRequest{}

// ExportAccountingBatchRequest struct for ExportAccountingBatchRequest
type ExportAccountingBatchRequest struct {
	//  Max length: 50;
	BatchIdentifier       *string       `json:"batchIdentifier,omitempty"`
	GlInterfaceIdentifier *string       `json:"glInterfaceIdentifier,omitempty"`
	ThruDate              *time.Time    `json:"thruDate,omitempty"`
	LocationId            NullableInt32 `json:"locationId,omitempty"`
	SummarizeInvoices     *string       `json:"summarizeInvoices,omitempty"`
	// Batch export must include invoices, expenses, or products (procurement).
	ExportInvoicesFlag NullableBool `json:"exportInvoicesFlag,omitempty"`
	IncludedInvoiceIds []*int32     `json:"includedInvoiceIds,omitempty"`
	ExcludedInvoiceIds []*int32     `json:"excludedInvoiceIds,omitempty"`
	// Batch export must include invoices, expenses, or products (procurement).
	ExportExpensesFlag NullableBool `json:"exportExpensesFlag,omitempty"`
	IncludedExpenseIds []*int32     `json:"includedExpenseIds,omitempty"`
	ExcludedExpenseIds []*int32     `json:"excludedExpenseIds,omitempty"`
	// Batch export must include invoices, expenses, or products (procurement).
	ExportPaymentsFlag NullableBool `json:"exportPaymentsFlag,omitempty"`
	IncludedPaymentIds []int32      `json:"includedPaymentIds,omitempty"`
	// Batch export must include invoices, expenses, or products (procurement).
	ExportProductsFlag NullableBool `json:"exportProductsFlag,omitempty"`
	IncludedProductIds []string     `json:"includedProductIds,omitempty"`
	ExcludedProductIds []string     `json:"excludedProductIds,omitempty"`
}

// NewExportAccountingBatchRequest instantiates a new ExportAccountingBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportAccountingBatchRequest() *ExportAccountingBatchRequest {
	this := ExportAccountingBatchRequest{}
	return &this
}

// NewExportAccountingBatchRequestWithDefaults instantiates a new ExportAccountingBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportAccountingBatchRequestWithDefaults() *ExportAccountingBatchRequest {
	this := ExportAccountingBatchRequest{}
	return &this
}

// GetBatchIdentifier returns the BatchIdentifier field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetBatchIdentifier() string {
	if o == nil || IsNil(o.BatchIdentifier) {
		var ret string
		return ret
	}
	return *o.BatchIdentifier
}

// GetBatchIdentifierOk returns a tuple with the BatchIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetBatchIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.BatchIdentifier) {
		return nil, false
	}
	return o.BatchIdentifier, true
}

// HasBatchIdentifier returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasBatchIdentifier() bool {
	if o != nil && !IsNil(o.BatchIdentifier) {
		return true
	}

	return false
}

// SetBatchIdentifier gets a reference to the given string and assigns it to the BatchIdentifier field.
func (o *ExportAccountingBatchRequest) SetBatchIdentifier(v string) {
	o.BatchIdentifier = &v
}

// GetGlInterfaceIdentifier returns the GlInterfaceIdentifier field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetGlInterfaceIdentifier() string {
	if o == nil || IsNil(o.GlInterfaceIdentifier) {
		var ret string
		return ret
	}
	return *o.GlInterfaceIdentifier
}

// GetGlInterfaceIdentifierOk returns a tuple with the GlInterfaceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetGlInterfaceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.GlInterfaceIdentifier) {
		return nil, false
	}
	return o.GlInterfaceIdentifier, true
}

// HasGlInterfaceIdentifier returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasGlInterfaceIdentifier() bool {
	if o != nil && !IsNil(o.GlInterfaceIdentifier) {
		return true
	}

	return false
}

// SetGlInterfaceIdentifier gets a reference to the given string and assigns it to the GlInterfaceIdentifier field.
func (o *ExportAccountingBatchRequest) SetGlInterfaceIdentifier(v string) {
	o.GlInterfaceIdentifier = &v
}

// GetThruDate returns the ThruDate field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetThruDate() time.Time {
	if o == nil || IsNil(o.ThruDate) {
		var ret time.Time
		return ret
	}
	return *o.ThruDate
}

// GetThruDateOk returns a tuple with the ThruDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetThruDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ThruDate) {
		return nil, false
	}
	return o.ThruDate, true
}

// HasThruDate returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasThruDate() bool {
	if o != nil && !IsNil(o.ThruDate) {
		return true
	}

	return false
}

// SetThruDate gets a reference to the given time.Time and assigns it to the ThruDate field.
func (o *ExportAccountingBatchRequest) SetThruDate(v time.Time) {
	o.ThruDate = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportAccountingBatchRequest) GetLocationId() int32 {
	if o == nil || IsNil(o.LocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.LocationId.Get()
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportAccountingBatchRequest) GetLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationId.Get(), o.LocationId.IsSet()
}

// HasLocationId returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasLocationId() bool {
	if o != nil && o.LocationId.IsSet() {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given NullableInt32 and assigns it to the LocationId field.
func (o *ExportAccountingBatchRequest) SetLocationId(v int32) {
	o.LocationId.Set(&v)
}

// SetLocationIdNil sets the value for LocationId to be an explicit nil
func (o *ExportAccountingBatchRequest) SetLocationIdNil() {
	o.LocationId.Set(nil)
}

// UnsetLocationId ensures that no value is present for LocationId, not even an explicit nil
func (o *ExportAccountingBatchRequest) UnsetLocationId() {
	o.LocationId.Unset()
}

// GetSummarizeInvoices returns the SummarizeInvoices field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetSummarizeInvoices() string {
	if o == nil || IsNil(o.SummarizeInvoices) {
		var ret string
		return ret
	}
	return *o.SummarizeInvoices
}

// GetSummarizeInvoicesOk returns a tuple with the SummarizeInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetSummarizeInvoicesOk() (*string, bool) {
	if o == nil || IsNil(o.SummarizeInvoices) {
		return nil, false
	}
	return o.SummarizeInvoices, true
}

// HasSummarizeInvoices returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasSummarizeInvoices() bool {
	if o != nil && !IsNil(o.SummarizeInvoices) {
		return true
	}

	return false
}

// SetSummarizeInvoices gets a reference to the given string and assigns it to the SummarizeInvoices field.
func (o *ExportAccountingBatchRequest) SetSummarizeInvoices(v string) {
	o.SummarizeInvoices = &v
}

// GetExportInvoicesFlag returns the ExportInvoicesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportAccountingBatchRequest) GetExportInvoicesFlag() bool {
	if o == nil || IsNil(o.ExportInvoicesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExportInvoicesFlag.Get()
}

// GetExportInvoicesFlagOk returns a tuple with the ExportInvoicesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportAccountingBatchRequest) GetExportInvoicesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExportInvoicesFlag.Get(), o.ExportInvoicesFlag.IsSet()
}

// HasExportInvoicesFlag returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExportInvoicesFlag() bool {
	if o != nil && o.ExportInvoicesFlag.IsSet() {
		return true
	}

	return false
}

// SetExportInvoicesFlag gets a reference to the given NullableBool and assigns it to the ExportInvoicesFlag field.
func (o *ExportAccountingBatchRequest) SetExportInvoicesFlag(v bool) {
	o.ExportInvoicesFlag.Set(&v)
}

// SetExportInvoicesFlagNil sets the value for ExportInvoicesFlag to be an explicit nil
func (o *ExportAccountingBatchRequest) SetExportInvoicesFlagNil() {
	o.ExportInvoicesFlag.Set(nil)
}

// UnsetExportInvoicesFlag ensures that no value is present for ExportInvoicesFlag, not even an explicit nil
func (o *ExportAccountingBatchRequest) UnsetExportInvoicesFlag() {
	o.ExportInvoicesFlag.Unset()
}

// GetIncludedInvoiceIds returns the IncludedInvoiceIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetIncludedInvoiceIds() []*int32 {
	if o == nil || IsNil(o.IncludedInvoiceIds) {
		var ret []*int32
		return ret
	}
	return o.IncludedInvoiceIds
}

// GetIncludedInvoiceIdsOk returns a tuple with the IncludedInvoiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetIncludedInvoiceIdsOk() ([]*int32, bool) {
	if o == nil || IsNil(o.IncludedInvoiceIds) {
		return nil, false
	}
	return o.IncludedInvoiceIds, true
}

// HasIncludedInvoiceIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasIncludedInvoiceIds() bool {
	if o != nil && !IsNil(o.IncludedInvoiceIds) {
		return true
	}

	return false
}

// SetIncludedInvoiceIds gets a reference to the given []*int32 and assigns it to the IncludedInvoiceIds field.
func (o *ExportAccountingBatchRequest) SetIncludedInvoiceIds(v []*int32) {
	o.IncludedInvoiceIds = v
}

// GetExcludedInvoiceIds returns the ExcludedInvoiceIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetExcludedInvoiceIds() []*int32 {
	if o == nil || IsNil(o.ExcludedInvoiceIds) {
		var ret []*int32
		return ret
	}
	return o.ExcludedInvoiceIds
}

// GetExcludedInvoiceIdsOk returns a tuple with the ExcludedInvoiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetExcludedInvoiceIdsOk() ([]*int32, bool) {
	if o == nil || IsNil(o.ExcludedInvoiceIds) {
		return nil, false
	}
	return o.ExcludedInvoiceIds, true
}

// HasExcludedInvoiceIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExcludedInvoiceIds() bool {
	if o != nil && !IsNil(o.ExcludedInvoiceIds) {
		return true
	}

	return false
}

// SetExcludedInvoiceIds gets a reference to the given []*int32 and assigns it to the ExcludedInvoiceIds field.
func (o *ExportAccountingBatchRequest) SetExcludedInvoiceIds(v []*int32) {
	o.ExcludedInvoiceIds = v
}

// GetExportExpensesFlag returns the ExportExpensesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportAccountingBatchRequest) GetExportExpensesFlag() bool {
	if o == nil || IsNil(o.ExportExpensesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExportExpensesFlag.Get()
}

// GetExportExpensesFlagOk returns a tuple with the ExportExpensesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportAccountingBatchRequest) GetExportExpensesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExportExpensesFlag.Get(), o.ExportExpensesFlag.IsSet()
}

// HasExportExpensesFlag returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExportExpensesFlag() bool {
	if o != nil && o.ExportExpensesFlag.IsSet() {
		return true
	}

	return false
}

// SetExportExpensesFlag gets a reference to the given NullableBool and assigns it to the ExportExpensesFlag field.
func (o *ExportAccountingBatchRequest) SetExportExpensesFlag(v bool) {
	o.ExportExpensesFlag.Set(&v)
}

// SetExportExpensesFlagNil sets the value for ExportExpensesFlag to be an explicit nil
func (o *ExportAccountingBatchRequest) SetExportExpensesFlagNil() {
	o.ExportExpensesFlag.Set(nil)
}

// UnsetExportExpensesFlag ensures that no value is present for ExportExpensesFlag, not even an explicit nil
func (o *ExportAccountingBatchRequest) UnsetExportExpensesFlag() {
	o.ExportExpensesFlag.Unset()
}

// GetIncludedExpenseIds returns the IncludedExpenseIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetIncludedExpenseIds() []*int32 {
	if o == nil || IsNil(o.IncludedExpenseIds) {
		var ret []*int32
		return ret
	}
	return o.IncludedExpenseIds
}

// GetIncludedExpenseIdsOk returns a tuple with the IncludedExpenseIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetIncludedExpenseIdsOk() ([]*int32, bool) {
	if o == nil || IsNil(o.IncludedExpenseIds) {
		return nil, false
	}
	return o.IncludedExpenseIds, true
}

// HasIncludedExpenseIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasIncludedExpenseIds() bool {
	if o != nil && !IsNil(o.IncludedExpenseIds) {
		return true
	}

	return false
}

// SetIncludedExpenseIds gets a reference to the given []*int32 and assigns it to the IncludedExpenseIds field.
func (o *ExportAccountingBatchRequest) SetIncludedExpenseIds(v []*int32) {
	o.IncludedExpenseIds = v
}

// GetExcludedExpenseIds returns the ExcludedExpenseIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetExcludedExpenseIds() []*int32 {
	if o == nil || IsNil(o.ExcludedExpenseIds) {
		var ret []*int32
		return ret
	}
	return o.ExcludedExpenseIds
}

// GetExcludedExpenseIdsOk returns a tuple with the ExcludedExpenseIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetExcludedExpenseIdsOk() ([]*int32, bool) {
	if o == nil || IsNil(o.ExcludedExpenseIds) {
		return nil, false
	}
	return o.ExcludedExpenseIds, true
}

// HasExcludedExpenseIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExcludedExpenseIds() bool {
	if o != nil && !IsNil(o.ExcludedExpenseIds) {
		return true
	}

	return false
}

// SetExcludedExpenseIds gets a reference to the given []*int32 and assigns it to the ExcludedExpenseIds field.
func (o *ExportAccountingBatchRequest) SetExcludedExpenseIds(v []*int32) {
	o.ExcludedExpenseIds = v
}

// GetExportPaymentsFlag returns the ExportPaymentsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportAccountingBatchRequest) GetExportPaymentsFlag() bool {
	if o == nil || IsNil(o.ExportPaymentsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExportPaymentsFlag.Get()
}

// GetExportPaymentsFlagOk returns a tuple with the ExportPaymentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportAccountingBatchRequest) GetExportPaymentsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExportPaymentsFlag.Get(), o.ExportPaymentsFlag.IsSet()
}

// HasExportPaymentsFlag returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExportPaymentsFlag() bool {
	if o != nil && o.ExportPaymentsFlag.IsSet() {
		return true
	}

	return false
}

// SetExportPaymentsFlag gets a reference to the given NullableBool and assigns it to the ExportPaymentsFlag field.
func (o *ExportAccountingBatchRequest) SetExportPaymentsFlag(v bool) {
	o.ExportPaymentsFlag.Set(&v)
}

// SetExportPaymentsFlagNil sets the value for ExportPaymentsFlag to be an explicit nil
func (o *ExportAccountingBatchRequest) SetExportPaymentsFlagNil() {
	o.ExportPaymentsFlag.Set(nil)
}

// UnsetExportPaymentsFlag ensures that no value is present for ExportPaymentsFlag, not even an explicit nil
func (o *ExportAccountingBatchRequest) UnsetExportPaymentsFlag() {
	o.ExportPaymentsFlag.Unset()
}

// GetIncludedPaymentIds returns the IncludedPaymentIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetIncludedPaymentIds() []int32 {
	if o == nil || IsNil(o.IncludedPaymentIds) {
		var ret []int32
		return ret
	}
	return o.IncludedPaymentIds
}

// GetIncludedPaymentIdsOk returns a tuple with the IncludedPaymentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetIncludedPaymentIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludedPaymentIds) {
		return nil, false
	}
	return o.IncludedPaymentIds, true
}

// HasIncludedPaymentIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasIncludedPaymentIds() bool {
	if o != nil && !IsNil(o.IncludedPaymentIds) {
		return true
	}

	return false
}

// SetIncludedPaymentIds gets a reference to the given []int32 and assigns it to the IncludedPaymentIds field.
func (o *ExportAccountingBatchRequest) SetIncludedPaymentIds(v []int32) {
	o.IncludedPaymentIds = v
}

// GetExportProductsFlag returns the ExportProductsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportAccountingBatchRequest) GetExportProductsFlag() bool {
	if o == nil || IsNil(o.ExportProductsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExportProductsFlag.Get()
}

// GetExportProductsFlagOk returns a tuple with the ExportProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportAccountingBatchRequest) GetExportProductsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExportProductsFlag.Get(), o.ExportProductsFlag.IsSet()
}

// HasExportProductsFlag returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExportProductsFlag() bool {
	if o != nil && o.ExportProductsFlag.IsSet() {
		return true
	}

	return false
}

// SetExportProductsFlag gets a reference to the given NullableBool and assigns it to the ExportProductsFlag field.
func (o *ExportAccountingBatchRequest) SetExportProductsFlag(v bool) {
	o.ExportProductsFlag.Set(&v)
}

// SetExportProductsFlagNil sets the value for ExportProductsFlag to be an explicit nil
func (o *ExportAccountingBatchRequest) SetExportProductsFlagNil() {
	o.ExportProductsFlag.Set(nil)
}

// UnsetExportProductsFlag ensures that no value is present for ExportProductsFlag, not even an explicit nil
func (o *ExportAccountingBatchRequest) UnsetExportProductsFlag() {
	o.ExportProductsFlag.Unset()
}

// GetIncludedProductIds returns the IncludedProductIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetIncludedProductIds() []string {
	if o == nil || IsNil(o.IncludedProductIds) {
		var ret []string
		return ret
	}
	return o.IncludedProductIds
}

// GetIncludedProductIdsOk returns a tuple with the IncludedProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetIncludedProductIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedProductIds) {
		return nil, false
	}
	return o.IncludedProductIds, true
}

// HasIncludedProductIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasIncludedProductIds() bool {
	if o != nil && !IsNil(o.IncludedProductIds) {
		return true
	}

	return false
}

// SetIncludedProductIds gets a reference to the given []string and assigns it to the IncludedProductIds field.
func (o *ExportAccountingBatchRequest) SetIncludedProductIds(v []string) {
	o.IncludedProductIds = v
}

// GetExcludedProductIds returns the ExcludedProductIds field value if set, zero value otherwise.
func (o *ExportAccountingBatchRequest) GetExcludedProductIds() []string {
	if o == nil || IsNil(o.ExcludedProductIds) {
		var ret []string
		return ret
	}
	return o.ExcludedProductIds
}

// GetExcludedProductIdsOk returns a tuple with the ExcludedProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccountingBatchRequest) GetExcludedProductIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedProductIds) {
		return nil, false
	}
	return o.ExcludedProductIds, true
}

// HasExcludedProductIds returns a boolean if a field has been set.
func (o *ExportAccountingBatchRequest) HasExcludedProductIds() bool {
	if o != nil && !IsNil(o.ExcludedProductIds) {
		return true
	}

	return false
}

// SetExcludedProductIds gets a reference to the given []string and assigns it to the ExcludedProductIds field.
func (o *ExportAccountingBatchRequest) SetExcludedProductIds(v []string) {
	o.ExcludedProductIds = v
}

func (o ExportAccountingBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportAccountingBatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchIdentifier) {
		toSerialize["batchIdentifier"] = o.BatchIdentifier
	}
	if !IsNil(o.GlInterfaceIdentifier) {
		toSerialize["glInterfaceIdentifier"] = o.GlInterfaceIdentifier
	}
	if !IsNil(o.ThruDate) {
		toSerialize["thruDate"] = o.ThruDate
	}
	if o.LocationId.IsSet() {
		toSerialize["locationId"] = o.LocationId.Get()
	}
	if !IsNil(o.SummarizeInvoices) {
		toSerialize["summarizeInvoices"] = o.SummarizeInvoices
	}
	if o.ExportInvoicesFlag.IsSet() {
		toSerialize["exportInvoicesFlag"] = o.ExportInvoicesFlag.Get()
	}
	if !IsNil(o.IncludedInvoiceIds) {
		toSerialize["includedInvoiceIds"] = o.IncludedInvoiceIds
	}
	if !IsNil(o.ExcludedInvoiceIds) {
		toSerialize["excludedInvoiceIds"] = o.ExcludedInvoiceIds
	}
	if o.ExportExpensesFlag.IsSet() {
		toSerialize["exportExpensesFlag"] = o.ExportExpensesFlag.Get()
	}
	if !IsNil(o.IncludedExpenseIds) {
		toSerialize["includedExpenseIds"] = o.IncludedExpenseIds
	}
	if !IsNil(o.ExcludedExpenseIds) {
		toSerialize["excludedExpenseIds"] = o.ExcludedExpenseIds
	}
	if o.ExportPaymentsFlag.IsSet() {
		toSerialize["exportPaymentsFlag"] = o.ExportPaymentsFlag.Get()
	}
	if !IsNil(o.IncludedPaymentIds) {
		toSerialize["includedPaymentIds"] = o.IncludedPaymentIds
	}
	if o.ExportProductsFlag.IsSet() {
		toSerialize["exportProductsFlag"] = o.ExportProductsFlag.Get()
	}
	if !IsNil(o.IncludedProductIds) {
		toSerialize["includedProductIds"] = o.IncludedProductIds
	}
	if !IsNil(o.ExcludedProductIds) {
		toSerialize["excludedProductIds"] = o.ExcludedProductIds
	}
	return toSerialize, nil
}

type NullableExportAccountingBatchRequest struct {
	value *ExportAccountingBatchRequest
	isSet bool
}

func (v NullableExportAccountingBatchRequest) Get() *ExportAccountingBatchRequest {
	return v.value
}

func (v *NullableExportAccountingBatchRequest) Set(val *ExportAccountingBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportAccountingBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportAccountingBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportAccountingBatchRequest(val *ExportAccountingBatchRequest) *NullableExportAccountingBatchRequest {
	return &NullableExportAccountingBatchRequest{value: val, isSet: true}
}

func (v NullableExportAccountingBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportAccountingBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
