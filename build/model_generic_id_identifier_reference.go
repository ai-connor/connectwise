/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GenericIdIdentifierReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericIdIdentifierReference{}

// GenericIdIdentifierReference struct for GenericIdIdentifierReference
type GenericIdIdentifierReference struct {
	Id         NullableInt32 `json:"id,omitempty"`
	Identifier *string       `json:"identifier,omitempty"`
	Name       *string       `json:"name,omitempty"`
}

// NewGenericIdIdentifierReference instantiates a new GenericIdIdentifierReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericIdIdentifierReference() *GenericIdIdentifierReference {
	this := GenericIdIdentifierReference{}
	return &this
}

// NewGenericIdIdentifierReferenceWithDefaults instantiates a new GenericIdIdentifierReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericIdIdentifierReferenceWithDefaults() *GenericIdIdentifierReference {
	this := GenericIdIdentifierReference{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenericIdIdentifierReference) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenericIdIdentifierReference) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *GenericIdIdentifierReference) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *GenericIdIdentifierReference) SetId(v int32) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *GenericIdIdentifierReference) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *GenericIdIdentifierReference) UnsetId() {
	o.Id.Unset()
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *GenericIdIdentifierReference) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericIdIdentifierReference) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *GenericIdIdentifierReference) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *GenericIdIdentifierReference) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GenericIdIdentifierReference) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericIdIdentifierReference) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GenericIdIdentifierReference) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GenericIdIdentifierReference) SetName(v string) {
	o.Name = &v
}

func (o GenericIdIdentifierReference) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericIdIdentifierReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableGenericIdIdentifierReference struct {
	value *GenericIdIdentifierReference
	isSet bool
}

func (v NullableGenericIdIdentifierReference) Get() *GenericIdIdentifierReference {
	return v.value
}

func (v *NullableGenericIdIdentifierReference) Set(val *GenericIdIdentifierReference) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericIdIdentifierReference) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericIdIdentifierReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericIdIdentifierReference(val *GenericIdIdentifierReference) *NullableGenericIdIdentifierReference {
	return &NullableGenericIdIdentifierReference{value: val, isSet: true}
}

func (v NullableGenericIdIdentifierReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericIdIdentifierReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
