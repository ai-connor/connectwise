/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GLAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLAccount{}

// GLAccount struct for GLAccount
type GLAccount struct {
	Id           *int32                `json:"id,omitempty"`
	GlType       NullableString        `json:"glType"`
	MappedType   MappedTypeReference   `json:"mappedType"`
	MappedRecord MappedRecordReference `json:"mappedRecord"`
	//  Max length: 255;
	Segment1 *string `json:"segment1,omitempty"`
	//  Max length: 255;
	Segment2 *string `json:"segment2,omitempty"`
	//  Max length: 255;
	Segment3 *string `json:"segment3,omitempty"`
	//  Max length: 255;
	Segment4 *string `json:"segment4,omitempty"`
	//  Max length: 255;
	Segment5 *string `json:"segment5,omitempty"`
	//  Max length: 255;
	Segment6 *string `json:"segment6,omitempty"`
	//  Max length: 255;
	Segment7 *string `json:"segment7,omitempty"`
	//  Max length: 255;
	Segment8 *string `json:"segment8,omitempty"`
	//  Max length: 255;
	Segment9 *string `json:"segment9,omitempty"`
	//  Max length: 255;
	Segment10 *string `json:"segment10,omitempty"`
	//  Max length: 255;
	Cogs1 *string `json:"cogs1,omitempty"`
	//  Max length: 255;
	Cogs2 *string `json:"cogs2,omitempty"`
	//  Max length: 255;
	Cogs3 *string `json:"cogs3,omitempty"`
	//  Max length: 255;
	Cogs4 *string `json:"cogs4,omitempty"`
	//  Max length: 255;
	Cogs5 *string `json:"cogs5,omitempty"`
	//  Max length: 255;
	Cogs6 *string `json:"cogs6,omitempty"`
	//  Max length: 255;
	Cogs7 *string `json:"cogs7,omitempty"`
	//  Max length: 255;
	Cogs8 *string `json:"cogs8,omitempty"`
	//  Max length: 255;
	Cogs9 *string `json:"cogs9,omitempty"`
	//  Max length: 255;
	Cogs10 *string `json:"cogs10,omitempty"`
	//  Max length: 255;
	ProductId *string `json:"productId,omitempty"`
	//  Max length: 255;
	Inventory *string `json:"inventory,omitempty"`
	//  Max length: 255;
	SalesCode *string            `json:"salesCode,omitempty"`
	Info      *map[string]string `json:"_info,omitempty"`
}

type _GLAccount GLAccount

// NewGLAccount instantiates a new GLAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLAccount(glType NullableString, mappedType MappedTypeReference, mappedRecord MappedRecordReference) *GLAccount {
	this := GLAccount{}
	this.GlType = glType
	this.MappedType = mappedType
	this.MappedRecord = mappedRecord
	return &this
}

// NewGLAccountWithDefaults instantiates a new GLAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLAccountWithDefaults() *GLAccount {
	this := GLAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GLAccount) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GLAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GLAccount) SetId(v int32) {
	o.Id = &v
}

// GetGlType returns the GlType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GLAccount) GetGlType() string {
	if o == nil || o.GlType.Get() == nil {
		var ret string
		return ret
	}

	return *o.GlType.Get()
}

// GetGlTypeOk returns a tuple with the GlType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLAccount) GetGlTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlType.Get(), o.GlType.IsSet()
}

// SetGlType sets field value
func (o *GLAccount) SetGlType(v string) {
	o.GlType.Set(&v)
}

// GetMappedType returns the MappedType field value
func (o *GLAccount) GetMappedType() MappedTypeReference {
	if o == nil {
		var ret MappedTypeReference
		return ret
	}

	return o.MappedType
}

// GetMappedTypeOk returns a tuple with the MappedType field value
// and a boolean to check if the value has been set.
func (o *GLAccount) GetMappedTypeOk() (*MappedTypeReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MappedType, true
}

// SetMappedType sets field value
func (o *GLAccount) SetMappedType(v MappedTypeReference) {
	o.MappedType = v
}

// GetMappedRecord returns the MappedRecord field value
func (o *GLAccount) GetMappedRecord() MappedRecordReference {
	if o == nil {
		var ret MappedRecordReference
		return ret
	}

	return o.MappedRecord
}

// GetMappedRecordOk returns a tuple with the MappedRecord field value
// and a boolean to check if the value has been set.
func (o *GLAccount) GetMappedRecordOk() (*MappedRecordReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MappedRecord, true
}

// SetMappedRecord sets field value
func (o *GLAccount) SetMappedRecord(v MappedRecordReference) {
	o.MappedRecord = v
}

// GetSegment1 returns the Segment1 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment1() string {
	if o == nil || IsNil(o.Segment1) {
		var ret string
		return ret
	}
	return *o.Segment1
}

// GetSegment1Ok returns a tuple with the Segment1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment1Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment1) {
		return nil, false
	}
	return o.Segment1, true
}

// HasSegment1 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment1() bool {
	if o != nil && !IsNil(o.Segment1) {
		return true
	}

	return false
}

// SetSegment1 gets a reference to the given string and assigns it to the Segment1 field.
func (o *GLAccount) SetSegment1(v string) {
	o.Segment1 = &v
}

// GetSegment2 returns the Segment2 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment2() string {
	if o == nil || IsNil(o.Segment2) {
		var ret string
		return ret
	}
	return *o.Segment2
}

// GetSegment2Ok returns a tuple with the Segment2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment2Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment2) {
		return nil, false
	}
	return o.Segment2, true
}

// HasSegment2 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment2() bool {
	if o != nil && !IsNil(o.Segment2) {
		return true
	}

	return false
}

// SetSegment2 gets a reference to the given string and assigns it to the Segment2 field.
func (o *GLAccount) SetSegment2(v string) {
	o.Segment2 = &v
}

// GetSegment3 returns the Segment3 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment3() string {
	if o == nil || IsNil(o.Segment3) {
		var ret string
		return ret
	}
	return *o.Segment3
}

// GetSegment3Ok returns a tuple with the Segment3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment3Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment3) {
		return nil, false
	}
	return o.Segment3, true
}

// HasSegment3 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment3() bool {
	if o != nil && !IsNil(o.Segment3) {
		return true
	}

	return false
}

// SetSegment3 gets a reference to the given string and assigns it to the Segment3 field.
func (o *GLAccount) SetSegment3(v string) {
	o.Segment3 = &v
}

// GetSegment4 returns the Segment4 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment4() string {
	if o == nil || IsNil(o.Segment4) {
		var ret string
		return ret
	}
	return *o.Segment4
}

// GetSegment4Ok returns a tuple with the Segment4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment4Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment4) {
		return nil, false
	}
	return o.Segment4, true
}

// HasSegment4 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment4() bool {
	if o != nil && !IsNil(o.Segment4) {
		return true
	}

	return false
}

// SetSegment4 gets a reference to the given string and assigns it to the Segment4 field.
func (o *GLAccount) SetSegment4(v string) {
	o.Segment4 = &v
}

// GetSegment5 returns the Segment5 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment5() string {
	if o == nil || IsNil(o.Segment5) {
		var ret string
		return ret
	}
	return *o.Segment5
}

// GetSegment5Ok returns a tuple with the Segment5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment5Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment5) {
		return nil, false
	}
	return o.Segment5, true
}

// HasSegment5 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment5() bool {
	if o != nil && !IsNil(o.Segment5) {
		return true
	}

	return false
}

// SetSegment5 gets a reference to the given string and assigns it to the Segment5 field.
func (o *GLAccount) SetSegment5(v string) {
	o.Segment5 = &v
}

// GetSegment6 returns the Segment6 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment6() string {
	if o == nil || IsNil(o.Segment6) {
		var ret string
		return ret
	}
	return *o.Segment6
}

// GetSegment6Ok returns a tuple with the Segment6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment6Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment6) {
		return nil, false
	}
	return o.Segment6, true
}

// HasSegment6 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment6() bool {
	if o != nil && !IsNil(o.Segment6) {
		return true
	}

	return false
}

// SetSegment6 gets a reference to the given string and assigns it to the Segment6 field.
func (o *GLAccount) SetSegment6(v string) {
	o.Segment6 = &v
}

// GetSegment7 returns the Segment7 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment7() string {
	if o == nil || IsNil(o.Segment7) {
		var ret string
		return ret
	}
	return *o.Segment7
}

// GetSegment7Ok returns a tuple with the Segment7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment7Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment7) {
		return nil, false
	}
	return o.Segment7, true
}

// HasSegment7 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment7() bool {
	if o != nil && !IsNil(o.Segment7) {
		return true
	}

	return false
}

// SetSegment7 gets a reference to the given string and assigns it to the Segment7 field.
func (o *GLAccount) SetSegment7(v string) {
	o.Segment7 = &v
}

// GetSegment8 returns the Segment8 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment8() string {
	if o == nil || IsNil(o.Segment8) {
		var ret string
		return ret
	}
	return *o.Segment8
}

// GetSegment8Ok returns a tuple with the Segment8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment8Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment8) {
		return nil, false
	}
	return o.Segment8, true
}

// HasSegment8 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment8() bool {
	if o != nil && !IsNil(o.Segment8) {
		return true
	}

	return false
}

// SetSegment8 gets a reference to the given string and assigns it to the Segment8 field.
func (o *GLAccount) SetSegment8(v string) {
	o.Segment8 = &v
}

// GetSegment9 returns the Segment9 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment9() string {
	if o == nil || IsNil(o.Segment9) {
		var ret string
		return ret
	}
	return *o.Segment9
}

// GetSegment9Ok returns a tuple with the Segment9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment9Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment9) {
		return nil, false
	}
	return o.Segment9, true
}

// HasSegment9 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment9() bool {
	if o != nil && !IsNil(o.Segment9) {
		return true
	}

	return false
}

// SetSegment9 gets a reference to the given string and assigns it to the Segment9 field.
func (o *GLAccount) SetSegment9(v string) {
	o.Segment9 = &v
}

// GetSegment10 returns the Segment10 field value if set, zero value otherwise.
func (o *GLAccount) GetSegment10() string {
	if o == nil || IsNil(o.Segment10) {
		var ret string
		return ret
	}
	return *o.Segment10
}

// GetSegment10Ok returns a tuple with the Segment10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSegment10Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment10) {
		return nil, false
	}
	return o.Segment10, true
}

// HasSegment10 returns a boolean if a field has been set.
func (o *GLAccount) HasSegment10() bool {
	if o != nil && !IsNil(o.Segment10) {
		return true
	}

	return false
}

// SetSegment10 gets a reference to the given string and assigns it to the Segment10 field.
func (o *GLAccount) SetSegment10(v string) {
	o.Segment10 = &v
}

// GetCogs1 returns the Cogs1 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs1() string {
	if o == nil || IsNil(o.Cogs1) {
		var ret string
		return ret
	}
	return *o.Cogs1
}

// GetCogs1Ok returns a tuple with the Cogs1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs1Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs1) {
		return nil, false
	}
	return o.Cogs1, true
}

// HasCogs1 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs1() bool {
	if o != nil && !IsNil(o.Cogs1) {
		return true
	}

	return false
}

// SetCogs1 gets a reference to the given string and assigns it to the Cogs1 field.
func (o *GLAccount) SetCogs1(v string) {
	o.Cogs1 = &v
}

// GetCogs2 returns the Cogs2 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs2() string {
	if o == nil || IsNil(o.Cogs2) {
		var ret string
		return ret
	}
	return *o.Cogs2
}

// GetCogs2Ok returns a tuple with the Cogs2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs2Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs2) {
		return nil, false
	}
	return o.Cogs2, true
}

// HasCogs2 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs2() bool {
	if o != nil && !IsNil(o.Cogs2) {
		return true
	}

	return false
}

// SetCogs2 gets a reference to the given string and assigns it to the Cogs2 field.
func (o *GLAccount) SetCogs2(v string) {
	o.Cogs2 = &v
}

// GetCogs3 returns the Cogs3 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs3() string {
	if o == nil || IsNil(o.Cogs3) {
		var ret string
		return ret
	}
	return *o.Cogs3
}

// GetCogs3Ok returns a tuple with the Cogs3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs3Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs3) {
		return nil, false
	}
	return o.Cogs3, true
}

// HasCogs3 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs3() bool {
	if o != nil && !IsNil(o.Cogs3) {
		return true
	}

	return false
}

// SetCogs3 gets a reference to the given string and assigns it to the Cogs3 field.
func (o *GLAccount) SetCogs3(v string) {
	o.Cogs3 = &v
}

// GetCogs4 returns the Cogs4 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs4() string {
	if o == nil || IsNil(o.Cogs4) {
		var ret string
		return ret
	}
	return *o.Cogs4
}

// GetCogs4Ok returns a tuple with the Cogs4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs4Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs4) {
		return nil, false
	}
	return o.Cogs4, true
}

// HasCogs4 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs4() bool {
	if o != nil && !IsNil(o.Cogs4) {
		return true
	}

	return false
}

// SetCogs4 gets a reference to the given string and assigns it to the Cogs4 field.
func (o *GLAccount) SetCogs4(v string) {
	o.Cogs4 = &v
}

// GetCogs5 returns the Cogs5 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs5() string {
	if o == nil || IsNil(o.Cogs5) {
		var ret string
		return ret
	}
	return *o.Cogs5
}

// GetCogs5Ok returns a tuple with the Cogs5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs5Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs5) {
		return nil, false
	}
	return o.Cogs5, true
}

// HasCogs5 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs5() bool {
	if o != nil && !IsNil(o.Cogs5) {
		return true
	}

	return false
}

// SetCogs5 gets a reference to the given string and assigns it to the Cogs5 field.
func (o *GLAccount) SetCogs5(v string) {
	o.Cogs5 = &v
}

// GetCogs6 returns the Cogs6 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs6() string {
	if o == nil || IsNil(o.Cogs6) {
		var ret string
		return ret
	}
	return *o.Cogs6
}

// GetCogs6Ok returns a tuple with the Cogs6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs6Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs6) {
		return nil, false
	}
	return o.Cogs6, true
}

// HasCogs6 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs6() bool {
	if o != nil && !IsNil(o.Cogs6) {
		return true
	}

	return false
}

// SetCogs6 gets a reference to the given string and assigns it to the Cogs6 field.
func (o *GLAccount) SetCogs6(v string) {
	o.Cogs6 = &v
}

// GetCogs7 returns the Cogs7 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs7() string {
	if o == nil || IsNil(o.Cogs7) {
		var ret string
		return ret
	}
	return *o.Cogs7
}

// GetCogs7Ok returns a tuple with the Cogs7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs7Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs7) {
		return nil, false
	}
	return o.Cogs7, true
}

// HasCogs7 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs7() bool {
	if o != nil && !IsNil(o.Cogs7) {
		return true
	}

	return false
}

// SetCogs7 gets a reference to the given string and assigns it to the Cogs7 field.
func (o *GLAccount) SetCogs7(v string) {
	o.Cogs7 = &v
}

// GetCogs8 returns the Cogs8 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs8() string {
	if o == nil || IsNil(o.Cogs8) {
		var ret string
		return ret
	}
	return *o.Cogs8
}

// GetCogs8Ok returns a tuple with the Cogs8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs8Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs8) {
		return nil, false
	}
	return o.Cogs8, true
}

// HasCogs8 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs8() bool {
	if o != nil && !IsNil(o.Cogs8) {
		return true
	}

	return false
}

// SetCogs8 gets a reference to the given string and assigns it to the Cogs8 field.
func (o *GLAccount) SetCogs8(v string) {
	o.Cogs8 = &v
}

// GetCogs9 returns the Cogs9 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs9() string {
	if o == nil || IsNil(o.Cogs9) {
		var ret string
		return ret
	}
	return *o.Cogs9
}

// GetCogs9Ok returns a tuple with the Cogs9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs9Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs9) {
		return nil, false
	}
	return o.Cogs9, true
}

// HasCogs9 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs9() bool {
	if o != nil && !IsNil(o.Cogs9) {
		return true
	}

	return false
}

// SetCogs9 gets a reference to the given string and assigns it to the Cogs9 field.
func (o *GLAccount) SetCogs9(v string) {
	o.Cogs9 = &v
}

// GetCogs10 returns the Cogs10 field value if set, zero value otherwise.
func (o *GLAccount) GetCogs10() string {
	if o == nil || IsNil(o.Cogs10) {
		var ret string
		return ret
	}
	return *o.Cogs10
}

// GetCogs10Ok returns a tuple with the Cogs10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetCogs10Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs10) {
		return nil, false
	}
	return o.Cogs10, true
}

// HasCogs10 returns a boolean if a field has been set.
func (o *GLAccount) HasCogs10() bool {
	if o != nil && !IsNil(o.Cogs10) {
		return true
	}

	return false
}

// SetCogs10 gets a reference to the given string and assigns it to the Cogs10 field.
func (o *GLAccount) SetCogs10(v string) {
	o.Cogs10 = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *GLAccount) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *GLAccount) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *GLAccount) SetProductId(v string) {
	o.ProductId = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *GLAccount) GetInventory() string {
	if o == nil || IsNil(o.Inventory) {
		var ret string
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetInventoryOk() (*string, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *GLAccount) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given string and assigns it to the Inventory field.
func (o *GLAccount) SetInventory(v string) {
	o.Inventory = &v
}

// GetSalesCode returns the SalesCode field value if set, zero value otherwise.
func (o *GLAccount) GetSalesCode() string {
	if o == nil || IsNil(o.SalesCode) {
		var ret string
		return ret
	}
	return *o.SalesCode
}

// GetSalesCodeOk returns a tuple with the SalesCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetSalesCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SalesCode) {
		return nil, false
	}
	return o.SalesCode, true
}

// HasSalesCode returns a boolean if a field has been set.
func (o *GLAccount) HasSalesCode() bool {
	if o != nil && !IsNil(o.SalesCode) {
		return true
	}

	return false
}

// SetSalesCode gets a reference to the given string and assigns it to the SalesCode field.
func (o *GLAccount) SetSalesCode(v string) {
	o.SalesCode = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *GLAccount) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLAccount) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *GLAccount) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *GLAccount) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o GLAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["glType"] = o.GlType.Get()
	toSerialize["mappedType"] = o.MappedType
	toSerialize["mappedRecord"] = o.MappedRecord
	if !IsNil(o.Segment1) {
		toSerialize["segment1"] = o.Segment1
	}
	if !IsNil(o.Segment2) {
		toSerialize["segment2"] = o.Segment2
	}
	if !IsNil(o.Segment3) {
		toSerialize["segment3"] = o.Segment3
	}
	if !IsNil(o.Segment4) {
		toSerialize["segment4"] = o.Segment4
	}
	if !IsNil(o.Segment5) {
		toSerialize["segment5"] = o.Segment5
	}
	if !IsNil(o.Segment6) {
		toSerialize["segment6"] = o.Segment6
	}
	if !IsNil(o.Segment7) {
		toSerialize["segment7"] = o.Segment7
	}
	if !IsNil(o.Segment8) {
		toSerialize["segment8"] = o.Segment8
	}
	if !IsNil(o.Segment9) {
		toSerialize["segment9"] = o.Segment9
	}
	if !IsNil(o.Segment10) {
		toSerialize["segment10"] = o.Segment10
	}
	if !IsNil(o.Cogs1) {
		toSerialize["cogs1"] = o.Cogs1
	}
	if !IsNil(o.Cogs2) {
		toSerialize["cogs2"] = o.Cogs2
	}
	if !IsNil(o.Cogs3) {
		toSerialize["cogs3"] = o.Cogs3
	}
	if !IsNil(o.Cogs4) {
		toSerialize["cogs4"] = o.Cogs4
	}
	if !IsNil(o.Cogs5) {
		toSerialize["cogs5"] = o.Cogs5
	}
	if !IsNil(o.Cogs6) {
		toSerialize["cogs6"] = o.Cogs6
	}
	if !IsNil(o.Cogs7) {
		toSerialize["cogs7"] = o.Cogs7
	}
	if !IsNil(o.Cogs8) {
		toSerialize["cogs8"] = o.Cogs8
	}
	if !IsNil(o.Cogs9) {
		toSerialize["cogs9"] = o.Cogs9
	}
	if !IsNil(o.Cogs10) {
		toSerialize["cogs10"] = o.Cogs10
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.SalesCode) {
		toSerialize["salesCode"] = o.SalesCode
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *GLAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"glType",
		"mappedType",
		"mappedRecord",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGLAccount := _GLAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGLAccount)

	if err != nil {
		return err
	}

	*o = GLAccount(varGLAccount)

	return err
}

type NullableGLAccount struct {
	value *GLAccount
	isSet bool
}

func (v NullableGLAccount) Get() *GLAccount {
	return v.value
}

func (v *NullableGLAccount) Set(val *GLAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableGLAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableGLAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLAccount(val *GLAccount) *NullableGLAccount {
	return &NullableGLAccount{value: val, isSet: true}
}

func (v NullableGLAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
