/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GLEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLEntry{}

// GLEntry struct for GLEntry
type GLEntry struct {
	Id     *int32          `json:"id,omitempty"`
	Type   *string         `json:"type,omitempty"`
	Amount NullableFloat64 `json:"amount,omitempty"`
	//  Max length: 100;
	Description *string `json:"description,omitempty"`
	//  Max length: 255;
	Segment1 *string `json:"segment1,omitempty"`
	//  Max length: 255;
	Segment2 *string `json:"segment2,omitempty"`
	//  Max length: 255;
	Segment3 *string `json:"segment3,omitempty"`
	//  Max length: 255;
	Segment4 *string `json:"segment4,omitempty"`
	//  Max length: 255;
	Segment5 *string `json:"segment5,omitempty"`
	//  Max length: 255;
	Segment6 *string `json:"segment6,omitempty"`
	//  Max length: 255;
	Segment7 *string `json:"segment7,omitempty"`
	//  Max length: 255;
	Segment8 *string `json:"segment8,omitempty"`
	//  Max length: 255;
	Segment9 *string `json:"segment9,omitempty"`
	//  Max length: 255;
	Segment10 *string `json:"segment10,omitempty"`
	//  Max length: 255;
	ProductId *string         `json:"productId,omitempty"`
	Cost      NullableFloat64 `json:"cost,omitempty"`
	//  Max length: 255;
	SalesCode *string `json:"salesCode,omitempty"`
	//  Max length: 255;
	Inventory *string `json:"inventory,omitempty"`
	//  Max length: 255;
	Cogs1 *string `json:"cogs1,omitempty"`
	//  Max length: 255;
	Cogs2 *string `json:"cogs2,omitempty"`
	//  Max length: 255;
	Cogs3 *string `json:"cogs3,omitempty"`
	//  Max length: 255;
	Cogs4 *string `json:"cogs4,omitempty"`
	//  Max length: 255;
	Cogs5 *string `json:"cogs5,omitempty"`
	//  Max length: 255;
	Cogs6 *string `json:"cogs6,omitempty"`
	//  Max length: 255;
	Cogs7 *string `json:"cogs7,omitempty"`
	//  Max length: 255;
	Cogs8 *string `json:"cogs8,omitempty"`
	//  Max length: 255;
	Cogs9 *string `json:"cogs9,omitempty"`
	//  Max length: 255;
	Cogs10    *string            `json:"cogs10,omitempty"`
	IsBatched *bool              `json:"isBatched,omitempty"`
	Info      *map[string]string `json:"_info,omitempty"`
}

// NewGLEntry instantiates a new GLEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLEntry() *GLEntry {
	this := GLEntry{}
	return &this
}

// NewGLEntryWithDefaults instantiates a new GLEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLEntryWithDefaults() *GLEntry {
	this := GLEntry{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GLEntry) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GLEntry) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GLEntry) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GLEntry) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GLEntry) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GLEntry) SetType(v string) {
	o.Type = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLEntry) GetAmount() float64 {
	if o == nil || IsNil(o.Amount.Get()) {
		var ret float64
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLEntry) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *GLEntry) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableFloat64 and assigns it to the Amount field.
func (o *GLEntry) SetAmount(v float64) {
	o.Amount.Set(&v)
}

// SetAmountNil sets the value for Amount to be an explicit nil
func (o *GLEntry) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *GLEntry) UnsetAmount() {
	o.Amount.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GLEntry) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GLEntry) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GLEntry) SetDescription(v string) {
	o.Description = &v
}

// GetSegment1 returns the Segment1 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment1() string {
	if o == nil || IsNil(o.Segment1) {
		var ret string
		return ret
	}
	return *o.Segment1
}

// GetSegment1Ok returns a tuple with the Segment1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment1Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment1) {
		return nil, false
	}
	return o.Segment1, true
}

// HasSegment1 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment1() bool {
	if o != nil && !IsNil(o.Segment1) {
		return true
	}

	return false
}

// SetSegment1 gets a reference to the given string and assigns it to the Segment1 field.
func (o *GLEntry) SetSegment1(v string) {
	o.Segment1 = &v
}

// GetSegment2 returns the Segment2 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment2() string {
	if o == nil || IsNil(o.Segment2) {
		var ret string
		return ret
	}
	return *o.Segment2
}

// GetSegment2Ok returns a tuple with the Segment2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment2Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment2) {
		return nil, false
	}
	return o.Segment2, true
}

// HasSegment2 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment2() bool {
	if o != nil && !IsNil(o.Segment2) {
		return true
	}

	return false
}

// SetSegment2 gets a reference to the given string and assigns it to the Segment2 field.
func (o *GLEntry) SetSegment2(v string) {
	o.Segment2 = &v
}

// GetSegment3 returns the Segment3 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment3() string {
	if o == nil || IsNil(o.Segment3) {
		var ret string
		return ret
	}
	return *o.Segment3
}

// GetSegment3Ok returns a tuple with the Segment3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment3Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment3) {
		return nil, false
	}
	return o.Segment3, true
}

// HasSegment3 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment3() bool {
	if o != nil && !IsNil(o.Segment3) {
		return true
	}

	return false
}

// SetSegment3 gets a reference to the given string and assigns it to the Segment3 field.
func (o *GLEntry) SetSegment3(v string) {
	o.Segment3 = &v
}

// GetSegment4 returns the Segment4 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment4() string {
	if o == nil || IsNil(o.Segment4) {
		var ret string
		return ret
	}
	return *o.Segment4
}

// GetSegment4Ok returns a tuple with the Segment4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment4Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment4) {
		return nil, false
	}
	return o.Segment4, true
}

// HasSegment4 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment4() bool {
	if o != nil && !IsNil(o.Segment4) {
		return true
	}

	return false
}

// SetSegment4 gets a reference to the given string and assigns it to the Segment4 field.
func (o *GLEntry) SetSegment4(v string) {
	o.Segment4 = &v
}

// GetSegment5 returns the Segment5 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment5() string {
	if o == nil || IsNil(o.Segment5) {
		var ret string
		return ret
	}
	return *o.Segment5
}

// GetSegment5Ok returns a tuple with the Segment5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment5Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment5) {
		return nil, false
	}
	return o.Segment5, true
}

// HasSegment5 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment5() bool {
	if o != nil && !IsNil(o.Segment5) {
		return true
	}

	return false
}

// SetSegment5 gets a reference to the given string and assigns it to the Segment5 field.
func (o *GLEntry) SetSegment5(v string) {
	o.Segment5 = &v
}

// GetSegment6 returns the Segment6 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment6() string {
	if o == nil || IsNil(o.Segment6) {
		var ret string
		return ret
	}
	return *o.Segment6
}

// GetSegment6Ok returns a tuple with the Segment6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment6Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment6) {
		return nil, false
	}
	return o.Segment6, true
}

// HasSegment6 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment6() bool {
	if o != nil && !IsNil(o.Segment6) {
		return true
	}

	return false
}

// SetSegment6 gets a reference to the given string and assigns it to the Segment6 field.
func (o *GLEntry) SetSegment6(v string) {
	o.Segment6 = &v
}

// GetSegment7 returns the Segment7 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment7() string {
	if o == nil || IsNil(o.Segment7) {
		var ret string
		return ret
	}
	return *o.Segment7
}

// GetSegment7Ok returns a tuple with the Segment7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment7Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment7) {
		return nil, false
	}
	return o.Segment7, true
}

// HasSegment7 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment7() bool {
	if o != nil && !IsNil(o.Segment7) {
		return true
	}

	return false
}

// SetSegment7 gets a reference to the given string and assigns it to the Segment7 field.
func (o *GLEntry) SetSegment7(v string) {
	o.Segment7 = &v
}

// GetSegment8 returns the Segment8 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment8() string {
	if o == nil || IsNil(o.Segment8) {
		var ret string
		return ret
	}
	return *o.Segment8
}

// GetSegment8Ok returns a tuple with the Segment8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment8Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment8) {
		return nil, false
	}
	return o.Segment8, true
}

// HasSegment8 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment8() bool {
	if o != nil && !IsNil(o.Segment8) {
		return true
	}

	return false
}

// SetSegment8 gets a reference to the given string and assigns it to the Segment8 field.
func (o *GLEntry) SetSegment8(v string) {
	o.Segment8 = &v
}

// GetSegment9 returns the Segment9 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment9() string {
	if o == nil || IsNil(o.Segment9) {
		var ret string
		return ret
	}
	return *o.Segment9
}

// GetSegment9Ok returns a tuple with the Segment9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment9Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment9) {
		return nil, false
	}
	return o.Segment9, true
}

// HasSegment9 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment9() bool {
	if o != nil && !IsNil(o.Segment9) {
		return true
	}

	return false
}

// SetSegment9 gets a reference to the given string and assigns it to the Segment9 field.
func (o *GLEntry) SetSegment9(v string) {
	o.Segment9 = &v
}

// GetSegment10 returns the Segment10 field value if set, zero value otherwise.
func (o *GLEntry) GetSegment10() string {
	if o == nil || IsNil(o.Segment10) {
		var ret string
		return ret
	}
	return *o.Segment10
}

// GetSegment10Ok returns a tuple with the Segment10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSegment10Ok() (*string, bool) {
	if o == nil || IsNil(o.Segment10) {
		return nil, false
	}
	return o.Segment10, true
}

// HasSegment10 returns a boolean if a field has been set.
func (o *GLEntry) HasSegment10() bool {
	if o != nil && !IsNil(o.Segment10) {
		return true
	}

	return false
}

// SetSegment10 gets a reference to the given string and assigns it to the Segment10 field.
func (o *GLEntry) SetSegment10(v string) {
	o.Segment10 = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *GLEntry) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *GLEntry) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *GLEntry) SetProductId(v string) {
	o.ProductId = &v
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLEntry) GetCost() float64 {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret float64
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLEntry) GetCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *GLEntry) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableFloat64 and assigns it to the Cost field.
func (o *GLEntry) SetCost(v float64) {
	o.Cost.Set(&v)
}

// SetCostNil sets the value for Cost to be an explicit nil
func (o *GLEntry) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *GLEntry) UnsetCost() {
	o.Cost.Unset()
}

// GetSalesCode returns the SalesCode field value if set, zero value otherwise.
func (o *GLEntry) GetSalesCode() string {
	if o == nil || IsNil(o.SalesCode) {
		var ret string
		return ret
	}
	return *o.SalesCode
}

// GetSalesCodeOk returns a tuple with the SalesCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetSalesCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SalesCode) {
		return nil, false
	}
	return o.SalesCode, true
}

// HasSalesCode returns a boolean if a field has been set.
func (o *GLEntry) HasSalesCode() bool {
	if o != nil && !IsNil(o.SalesCode) {
		return true
	}

	return false
}

// SetSalesCode gets a reference to the given string and assigns it to the SalesCode field.
func (o *GLEntry) SetSalesCode(v string) {
	o.SalesCode = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *GLEntry) GetInventory() string {
	if o == nil || IsNil(o.Inventory) {
		var ret string
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetInventoryOk() (*string, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *GLEntry) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given string and assigns it to the Inventory field.
func (o *GLEntry) SetInventory(v string) {
	o.Inventory = &v
}

// GetCogs1 returns the Cogs1 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs1() string {
	if o == nil || IsNil(o.Cogs1) {
		var ret string
		return ret
	}
	return *o.Cogs1
}

// GetCogs1Ok returns a tuple with the Cogs1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs1Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs1) {
		return nil, false
	}
	return o.Cogs1, true
}

// HasCogs1 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs1() bool {
	if o != nil && !IsNil(o.Cogs1) {
		return true
	}

	return false
}

// SetCogs1 gets a reference to the given string and assigns it to the Cogs1 field.
func (o *GLEntry) SetCogs1(v string) {
	o.Cogs1 = &v
}

// GetCogs2 returns the Cogs2 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs2() string {
	if o == nil || IsNil(o.Cogs2) {
		var ret string
		return ret
	}
	return *o.Cogs2
}

// GetCogs2Ok returns a tuple with the Cogs2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs2Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs2) {
		return nil, false
	}
	return o.Cogs2, true
}

// HasCogs2 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs2() bool {
	if o != nil && !IsNil(o.Cogs2) {
		return true
	}

	return false
}

// SetCogs2 gets a reference to the given string and assigns it to the Cogs2 field.
func (o *GLEntry) SetCogs2(v string) {
	o.Cogs2 = &v
}

// GetCogs3 returns the Cogs3 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs3() string {
	if o == nil || IsNil(o.Cogs3) {
		var ret string
		return ret
	}
	return *o.Cogs3
}

// GetCogs3Ok returns a tuple with the Cogs3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs3Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs3) {
		return nil, false
	}
	return o.Cogs3, true
}

// HasCogs3 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs3() bool {
	if o != nil && !IsNil(o.Cogs3) {
		return true
	}

	return false
}

// SetCogs3 gets a reference to the given string and assigns it to the Cogs3 field.
func (o *GLEntry) SetCogs3(v string) {
	o.Cogs3 = &v
}

// GetCogs4 returns the Cogs4 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs4() string {
	if o == nil || IsNil(o.Cogs4) {
		var ret string
		return ret
	}
	return *o.Cogs4
}

// GetCogs4Ok returns a tuple with the Cogs4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs4Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs4) {
		return nil, false
	}
	return o.Cogs4, true
}

// HasCogs4 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs4() bool {
	if o != nil && !IsNil(o.Cogs4) {
		return true
	}

	return false
}

// SetCogs4 gets a reference to the given string and assigns it to the Cogs4 field.
func (o *GLEntry) SetCogs4(v string) {
	o.Cogs4 = &v
}

// GetCogs5 returns the Cogs5 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs5() string {
	if o == nil || IsNil(o.Cogs5) {
		var ret string
		return ret
	}
	return *o.Cogs5
}

// GetCogs5Ok returns a tuple with the Cogs5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs5Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs5) {
		return nil, false
	}
	return o.Cogs5, true
}

// HasCogs5 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs5() bool {
	if o != nil && !IsNil(o.Cogs5) {
		return true
	}

	return false
}

// SetCogs5 gets a reference to the given string and assigns it to the Cogs5 field.
func (o *GLEntry) SetCogs5(v string) {
	o.Cogs5 = &v
}

// GetCogs6 returns the Cogs6 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs6() string {
	if o == nil || IsNil(o.Cogs6) {
		var ret string
		return ret
	}
	return *o.Cogs6
}

// GetCogs6Ok returns a tuple with the Cogs6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs6Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs6) {
		return nil, false
	}
	return o.Cogs6, true
}

// HasCogs6 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs6() bool {
	if o != nil && !IsNil(o.Cogs6) {
		return true
	}

	return false
}

// SetCogs6 gets a reference to the given string and assigns it to the Cogs6 field.
func (o *GLEntry) SetCogs6(v string) {
	o.Cogs6 = &v
}

// GetCogs7 returns the Cogs7 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs7() string {
	if o == nil || IsNil(o.Cogs7) {
		var ret string
		return ret
	}
	return *o.Cogs7
}

// GetCogs7Ok returns a tuple with the Cogs7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs7Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs7) {
		return nil, false
	}
	return o.Cogs7, true
}

// HasCogs7 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs7() bool {
	if o != nil && !IsNil(o.Cogs7) {
		return true
	}

	return false
}

// SetCogs7 gets a reference to the given string and assigns it to the Cogs7 field.
func (o *GLEntry) SetCogs7(v string) {
	o.Cogs7 = &v
}

// GetCogs8 returns the Cogs8 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs8() string {
	if o == nil || IsNil(o.Cogs8) {
		var ret string
		return ret
	}
	return *o.Cogs8
}

// GetCogs8Ok returns a tuple with the Cogs8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs8Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs8) {
		return nil, false
	}
	return o.Cogs8, true
}

// HasCogs8 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs8() bool {
	if o != nil && !IsNil(o.Cogs8) {
		return true
	}

	return false
}

// SetCogs8 gets a reference to the given string and assigns it to the Cogs8 field.
func (o *GLEntry) SetCogs8(v string) {
	o.Cogs8 = &v
}

// GetCogs9 returns the Cogs9 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs9() string {
	if o == nil || IsNil(o.Cogs9) {
		var ret string
		return ret
	}
	return *o.Cogs9
}

// GetCogs9Ok returns a tuple with the Cogs9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs9Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs9) {
		return nil, false
	}
	return o.Cogs9, true
}

// HasCogs9 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs9() bool {
	if o != nil && !IsNil(o.Cogs9) {
		return true
	}

	return false
}

// SetCogs9 gets a reference to the given string and assigns it to the Cogs9 field.
func (o *GLEntry) SetCogs9(v string) {
	o.Cogs9 = &v
}

// GetCogs10 returns the Cogs10 field value if set, zero value otherwise.
func (o *GLEntry) GetCogs10() string {
	if o == nil || IsNil(o.Cogs10) {
		var ret string
		return ret
	}
	return *o.Cogs10
}

// GetCogs10Ok returns a tuple with the Cogs10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetCogs10Ok() (*string, bool) {
	if o == nil || IsNil(o.Cogs10) {
		return nil, false
	}
	return o.Cogs10, true
}

// HasCogs10 returns a boolean if a field has been set.
func (o *GLEntry) HasCogs10() bool {
	if o != nil && !IsNil(o.Cogs10) {
		return true
	}

	return false
}

// SetCogs10 gets a reference to the given string and assigns it to the Cogs10 field.
func (o *GLEntry) SetCogs10(v string) {
	o.Cogs10 = &v
}

// GetIsBatched returns the IsBatched field value if set, zero value otherwise.
func (o *GLEntry) GetIsBatched() bool {
	if o == nil || IsNil(o.IsBatched) {
		var ret bool
		return ret
	}
	return *o.IsBatched
}

// GetIsBatchedOk returns a tuple with the IsBatched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetIsBatchedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBatched) {
		return nil, false
	}
	return o.IsBatched, true
}

// HasIsBatched returns a boolean if a field has been set.
func (o *GLEntry) HasIsBatched() bool {
	if o != nil && !IsNil(o.IsBatched) {
		return true
	}

	return false
}

// SetIsBatched gets a reference to the given bool and assigns it to the IsBatched field.
func (o *GLEntry) SetIsBatched(v bool) {
	o.IsBatched = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *GLEntry) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLEntry) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *GLEntry) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *GLEntry) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o GLEntry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Segment1) {
		toSerialize["segment1"] = o.Segment1
	}
	if !IsNil(o.Segment2) {
		toSerialize["segment2"] = o.Segment2
	}
	if !IsNil(o.Segment3) {
		toSerialize["segment3"] = o.Segment3
	}
	if !IsNil(o.Segment4) {
		toSerialize["segment4"] = o.Segment4
	}
	if !IsNil(o.Segment5) {
		toSerialize["segment5"] = o.Segment5
	}
	if !IsNil(o.Segment6) {
		toSerialize["segment6"] = o.Segment6
	}
	if !IsNil(o.Segment7) {
		toSerialize["segment7"] = o.Segment7
	}
	if !IsNil(o.Segment8) {
		toSerialize["segment8"] = o.Segment8
	}
	if !IsNil(o.Segment9) {
		toSerialize["segment9"] = o.Segment9
	}
	if !IsNil(o.Segment10) {
		toSerialize["segment10"] = o.Segment10
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	if !IsNil(o.SalesCode) {
		toSerialize["salesCode"] = o.SalesCode
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.Cogs1) {
		toSerialize["cogs1"] = o.Cogs1
	}
	if !IsNil(o.Cogs2) {
		toSerialize["cogs2"] = o.Cogs2
	}
	if !IsNil(o.Cogs3) {
		toSerialize["cogs3"] = o.Cogs3
	}
	if !IsNil(o.Cogs4) {
		toSerialize["cogs4"] = o.Cogs4
	}
	if !IsNil(o.Cogs5) {
		toSerialize["cogs5"] = o.Cogs5
	}
	if !IsNil(o.Cogs6) {
		toSerialize["cogs6"] = o.Cogs6
	}
	if !IsNil(o.Cogs7) {
		toSerialize["cogs7"] = o.Cogs7
	}
	if !IsNil(o.Cogs8) {
		toSerialize["cogs8"] = o.Cogs8
	}
	if !IsNil(o.Cogs9) {
		toSerialize["cogs9"] = o.Cogs9
	}
	if !IsNil(o.Cogs10) {
		toSerialize["cogs10"] = o.Cogs10
	}
	if !IsNil(o.IsBatched) {
		toSerialize["isBatched"] = o.IsBatched
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableGLEntry struct {
	value *GLEntry
	isSet bool
}

func (v NullableGLEntry) Get() *GLEntry {
	return v.value
}

func (v *NullableGLEntry) Set(val *GLEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableGLEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableGLEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLEntry(val *GLEntry) *NullableGLEntry {
	return &NullableGLEntry{value: val, isSet: true}
}

func (v NullableGLEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
