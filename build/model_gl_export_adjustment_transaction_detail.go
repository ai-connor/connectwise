/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GLExportAdjustmentTransactionDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLExportAdjustmentTransactionDetail{}

// GLExportAdjustmentTransactionDetail struct for GLExportAdjustmentTransactionDetail
type GLExportAdjustmentTransactionDetail struct {
	GlClass                *string          `json:"glClass,omitempty"`
	Description            *string          `json:"description,omitempty"`
	Memo                   *string          `json:"memo,omitempty"`
	Item                   *IvItemReference `json:"item,omitempty"`
	Quantity               NullableInt32    `json:"quantity,omitempty"`
	Total                  NullableFloat64  `json:"total,omitempty"`
	Cost                   NullableFloat64  `json:"cost,omitempty"`
	CostAccountNumber      *string          `json:"costAccountNumber,omitempty"`
	InventoryAccountNumber *string          `json:"inventoryAccountNumber,omitempty"`
	AccountNumber          *string          `json:"accountNumber,omitempty"`
	ProductAccountNumber   *string          `json:"productAccountNumber,omitempty"`
}

// NewGLExportAdjustmentTransactionDetail instantiates a new GLExportAdjustmentTransactionDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLExportAdjustmentTransactionDetail() *GLExportAdjustmentTransactionDetail {
	this := GLExportAdjustmentTransactionDetail{}
	return &this
}

// NewGLExportAdjustmentTransactionDetailWithDefaults instantiates a new GLExportAdjustmentTransactionDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLExportAdjustmentTransactionDetailWithDefaults() *GLExportAdjustmentTransactionDetail {
	this := GLExportAdjustmentTransactionDetail{}
	return &this
}

// GetGlClass returns the GlClass field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetGlClass() string {
	if o == nil || IsNil(o.GlClass) {
		var ret string
		return ret
	}
	return *o.GlClass
}

// GetGlClassOk returns a tuple with the GlClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetGlClassOk() (*string, bool) {
	if o == nil || IsNil(o.GlClass) {
		return nil, false
	}
	return o.GlClass, true
}

// HasGlClass returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasGlClass() bool {
	if o != nil && !IsNil(o.GlClass) {
		return true
	}

	return false
}

// SetGlClass gets a reference to the given string and assigns it to the GlClass field.
func (o *GLExportAdjustmentTransactionDetail) SetGlClass(v string) {
	o.GlClass = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GLExportAdjustmentTransactionDetail) SetDescription(v string) {
	o.Description = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *GLExportAdjustmentTransactionDetail) SetMemo(v string) {
	o.Memo = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetItem() IvItemReference {
	if o == nil || IsNil(o.Item) {
		var ret IvItemReference
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetItemOk() (*IvItemReference, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given IvItemReference and assigns it to the Item field.
func (o *GLExportAdjustmentTransactionDetail) SetItem(v IvItemReference) {
	o.Item = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLExportAdjustmentTransactionDetail) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity.Get()) {
		var ret int32
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLExportAdjustmentTransactionDetail) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableInt32 and assigns it to the Quantity field.
func (o *GLExportAdjustmentTransactionDetail) SetQuantity(v int32) {
	o.Quantity.Set(&v)
}

// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *GLExportAdjustmentTransactionDetail) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *GLExportAdjustmentTransactionDetail) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLExportAdjustmentTransactionDetail) GetTotal() float64 {
	if o == nil || IsNil(o.Total.Get()) {
		var ret float64
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLExportAdjustmentTransactionDetail) GetTotalOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableFloat64 and assigns it to the Total field.
func (o *GLExportAdjustmentTransactionDetail) SetTotal(v float64) {
	o.Total.Set(&v)
}

// SetTotalNil sets the value for Total to be an explicit nil
func (o *GLExportAdjustmentTransactionDetail) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *GLExportAdjustmentTransactionDetail) UnsetTotal() {
	o.Total.Unset()
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLExportAdjustmentTransactionDetail) GetCost() float64 {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret float64
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLExportAdjustmentTransactionDetail) GetCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableFloat64 and assigns it to the Cost field.
func (o *GLExportAdjustmentTransactionDetail) SetCost(v float64) {
	o.Cost.Set(&v)
}

// SetCostNil sets the value for Cost to be an explicit nil
func (o *GLExportAdjustmentTransactionDetail) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *GLExportAdjustmentTransactionDetail) UnsetCost() {
	o.Cost.Unset()
}

// GetCostAccountNumber returns the CostAccountNumber field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetCostAccountNumber() string {
	if o == nil || IsNil(o.CostAccountNumber) {
		var ret string
		return ret
	}
	return *o.CostAccountNumber
}

// GetCostAccountNumberOk returns a tuple with the CostAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetCostAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CostAccountNumber) {
		return nil, false
	}
	return o.CostAccountNumber, true
}

// HasCostAccountNumber returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasCostAccountNumber() bool {
	if o != nil && !IsNil(o.CostAccountNumber) {
		return true
	}

	return false
}

// SetCostAccountNumber gets a reference to the given string and assigns it to the CostAccountNumber field.
func (o *GLExportAdjustmentTransactionDetail) SetCostAccountNumber(v string) {
	o.CostAccountNumber = &v
}

// GetInventoryAccountNumber returns the InventoryAccountNumber field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetInventoryAccountNumber() string {
	if o == nil || IsNil(o.InventoryAccountNumber) {
		var ret string
		return ret
	}
	return *o.InventoryAccountNumber
}

// GetInventoryAccountNumberOk returns a tuple with the InventoryAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetInventoryAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InventoryAccountNumber) {
		return nil, false
	}
	return o.InventoryAccountNumber, true
}

// HasInventoryAccountNumber returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasInventoryAccountNumber() bool {
	if o != nil && !IsNil(o.InventoryAccountNumber) {
		return true
	}

	return false
}

// SetInventoryAccountNumber gets a reference to the given string and assigns it to the InventoryAccountNumber field.
func (o *GLExportAdjustmentTransactionDetail) SetInventoryAccountNumber(v string) {
	o.InventoryAccountNumber = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *GLExportAdjustmentTransactionDetail) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetProductAccountNumber returns the ProductAccountNumber field value if set, zero value otherwise.
func (o *GLExportAdjustmentTransactionDetail) GetProductAccountNumber() string {
	if o == nil || IsNil(o.ProductAccountNumber) {
		var ret string
		return ret
	}
	return *o.ProductAccountNumber
}

// GetProductAccountNumberOk returns a tuple with the ProductAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportAdjustmentTransactionDetail) GetProductAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ProductAccountNumber) {
		return nil, false
	}
	return o.ProductAccountNumber, true
}

// HasProductAccountNumber returns a boolean if a field has been set.
func (o *GLExportAdjustmentTransactionDetail) HasProductAccountNumber() bool {
	if o != nil && !IsNil(o.ProductAccountNumber) {
		return true
	}

	return false
}

// SetProductAccountNumber gets a reference to the given string and assigns it to the ProductAccountNumber field.
func (o *GLExportAdjustmentTransactionDetail) SetProductAccountNumber(v string) {
	o.ProductAccountNumber = &v
}

func (o GLExportAdjustmentTransactionDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLExportAdjustmentTransactionDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlClass) {
		toSerialize["glClass"] = o.GlClass
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	if !IsNil(o.CostAccountNumber) {
		toSerialize["costAccountNumber"] = o.CostAccountNumber
	}
	if !IsNil(o.InventoryAccountNumber) {
		toSerialize["inventoryAccountNumber"] = o.InventoryAccountNumber
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.ProductAccountNumber) {
		toSerialize["productAccountNumber"] = o.ProductAccountNumber
	}
	return toSerialize, nil
}

type NullableGLExportAdjustmentTransactionDetail struct {
	value *GLExportAdjustmentTransactionDetail
	isSet bool
}

func (v NullableGLExportAdjustmentTransactionDetail) Get() *GLExportAdjustmentTransactionDetail {
	return v.value
}

func (v *NullableGLExportAdjustmentTransactionDetail) Set(val *GLExportAdjustmentTransactionDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableGLExportAdjustmentTransactionDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableGLExportAdjustmentTransactionDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLExportAdjustmentTransactionDetail(val *GLExportAdjustmentTransactionDetail) *NullableGLExportAdjustmentTransactionDetail {
	return &NullableGLExportAdjustmentTransactionDetail{value: val, isSet: true}
}

func (v NullableGLExportAdjustmentTransactionDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLExportAdjustmentTransactionDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
