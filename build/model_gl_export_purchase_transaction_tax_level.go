/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GLExportPurchaseTransactionTaxLevel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLExportPurchaseTransactionTaxLevel{}

// GLExportPurchaseTransactionTaxLevel struct for GLExportPurchaseTransactionTaxLevel
type GLExportPurchaseTransactionTaxLevel struct {
	TaxCodeXref *string `json:"taxCodeXref,omitempty"`
	TaxLevel    *int32  `json:"taxLevel,omitempty"`
}

// NewGLExportPurchaseTransactionTaxLevel instantiates a new GLExportPurchaseTransactionTaxLevel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLExportPurchaseTransactionTaxLevel() *GLExportPurchaseTransactionTaxLevel {
	this := GLExportPurchaseTransactionTaxLevel{}
	return &this
}

// NewGLExportPurchaseTransactionTaxLevelWithDefaults instantiates a new GLExportPurchaseTransactionTaxLevel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLExportPurchaseTransactionTaxLevelWithDefaults() *GLExportPurchaseTransactionTaxLevel {
	this := GLExportPurchaseTransactionTaxLevel{}
	return &this
}

// GetTaxCodeXref returns the TaxCodeXref field value if set, zero value otherwise.
func (o *GLExportPurchaseTransactionTaxLevel) GetTaxCodeXref() string {
	if o == nil || IsNil(o.TaxCodeXref) {
		var ret string
		return ret
	}
	return *o.TaxCodeXref
}

// GetTaxCodeXrefOk returns a tuple with the TaxCodeXref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportPurchaseTransactionTaxLevel) GetTaxCodeXrefOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCodeXref) {
		return nil, false
	}
	return o.TaxCodeXref, true
}

// HasTaxCodeXref returns a boolean if a field has been set.
func (o *GLExportPurchaseTransactionTaxLevel) HasTaxCodeXref() bool {
	if o != nil && !IsNil(o.TaxCodeXref) {
		return true
	}

	return false
}

// SetTaxCodeXref gets a reference to the given string and assigns it to the TaxCodeXref field.
func (o *GLExportPurchaseTransactionTaxLevel) SetTaxCodeXref(v string) {
	o.TaxCodeXref = &v
}

// GetTaxLevel returns the TaxLevel field value if set, zero value otherwise.
func (o *GLExportPurchaseTransactionTaxLevel) GetTaxLevel() int32 {
	if o == nil || IsNil(o.TaxLevel) {
		var ret int32
		return ret
	}
	return *o.TaxLevel
}

// GetTaxLevelOk returns a tuple with the TaxLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportPurchaseTransactionTaxLevel) GetTaxLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxLevel) {
		return nil, false
	}
	return o.TaxLevel, true
}

// HasTaxLevel returns a boolean if a field has been set.
func (o *GLExportPurchaseTransactionTaxLevel) HasTaxLevel() bool {
	if o != nil && !IsNil(o.TaxLevel) {
		return true
	}

	return false
}

// SetTaxLevel gets a reference to the given int32 and assigns it to the TaxLevel field.
func (o *GLExportPurchaseTransactionTaxLevel) SetTaxLevel(v int32) {
	o.TaxLevel = &v
}

func (o GLExportPurchaseTransactionTaxLevel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLExportPurchaseTransactionTaxLevel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxCodeXref) {
		toSerialize["taxCodeXref"] = o.TaxCodeXref
	}
	if !IsNil(o.TaxLevel) {
		toSerialize["taxLevel"] = o.TaxLevel
	}
	return toSerialize, nil
}

type NullableGLExportPurchaseTransactionTaxLevel struct {
	value *GLExportPurchaseTransactionTaxLevel
	isSet bool
}

func (v NullableGLExportPurchaseTransactionTaxLevel) Get() *GLExportPurchaseTransactionTaxLevel {
	return v.value
}

func (v *NullableGLExportPurchaseTransactionTaxLevel) Set(val *GLExportPurchaseTransactionTaxLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableGLExportPurchaseTransactionTaxLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableGLExportPurchaseTransactionTaxLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLExportPurchaseTransactionTaxLevel(val *GLExportPurchaseTransactionTaxLevel) *NullableGLExportPurchaseTransactionTaxLevel {
	return &NullableGLExportPurchaseTransactionTaxLevel{value: val, isSet: true}
}

func (v NullableGLExportPurchaseTransactionTaxLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLExportPurchaseTransactionTaxLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
