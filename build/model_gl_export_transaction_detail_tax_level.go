/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GLExportTransactionDetailTaxLevel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLExportTransactionDetailTaxLevel{}

// GLExportTransactionDetailTaxLevel struct for GLExportTransactionDetailTaxLevel
type GLExportTransactionDetailTaxLevel struct {
	TaxableFlag *bool  `json:"taxableFlag,omitempty"`
	TaxLevel    *int32 `json:"taxLevel,omitempty"`
}

// NewGLExportTransactionDetailTaxLevel instantiates a new GLExportTransactionDetailTaxLevel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLExportTransactionDetailTaxLevel() *GLExportTransactionDetailTaxLevel {
	this := GLExportTransactionDetailTaxLevel{}
	return &this
}

// NewGLExportTransactionDetailTaxLevelWithDefaults instantiates a new GLExportTransactionDetailTaxLevel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLExportTransactionDetailTaxLevelWithDefaults() *GLExportTransactionDetailTaxLevel {
	this := GLExportTransactionDetailTaxLevel{}
	return &this
}

// GetTaxableFlag returns the TaxableFlag field value if set, zero value otherwise.
func (o *GLExportTransactionDetailTaxLevel) GetTaxableFlag() bool {
	if o == nil || IsNil(o.TaxableFlag) {
		var ret bool
		return ret
	}
	return *o.TaxableFlag
}

// GetTaxableFlagOk returns a tuple with the TaxableFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportTransactionDetailTaxLevel) GetTaxableFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.TaxableFlag) {
		return nil, false
	}
	return o.TaxableFlag, true
}

// HasTaxableFlag returns a boolean if a field has been set.
func (o *GLExportTransactionDetailTaxLevel) HasTaxableFlag() bool {
	if o != nil && !IsNil(o.TaxableFlag) {
		return true
	}

	return false
}

// SetTaxableFlag gets a reference to the given bool and assigns it to the TaxableFlag field.
func (o *GLExportTransactionDetailTaxLevel) SetTaxableFlag(v bool) {
	o.TaxableFlag = &v
}

// GetTaxLevel returns the TaxLevel field value if set, zero value otherwise.
func (o *GLExportTransactionDetailTaxLevel) GetTaxLevel() int32 {
	if o == nil || IsNil(o.TaxLevel) {
		var ret int32
		return ret
	}
	return *o.TaxLevel
}

// GetTaxLevelOk returns a tuple with the TaxLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportTransactionDetailTaxLevel) GetTaxLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxLevel) {
		return nil, false
	}
	return o.TaxLevel, true
}

// HasTaxLevel returns a boolean if a field has been set.
func (o *GLExportTransactionDetailTaxLevel) HasTaxLevel() bool {
	if o != nil && !IsNil(o.TaxLevel) {
		return true
	}

	return false
}

// SetTaxLevel gets a reference to the given int32 and assigns it to the TaxLevel field.
func (o *GLExportTransactionDetailTaxLevel) SetTaxLevel(v int32) {
	o.TaxLevel = &v
}

func (o GLExportTransactionDetailTaxLevel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLExportTransactionDetailTaxLevel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxableFlag) {
		toSerialize["taxableFlag"] = o.TaxableFlag
	}
	if !IsNil(o.TaxLevel) {
		toSerialize["taxLevel"] = o.TaxLevel
	}
	return toSerialize, nil
}

type NullableGLExportTransactionDetailTaxLevel struct {
	value *GLExportTransactionDetailTaxLevel
	isSet bool
}

func (v NullableGLExportTransactionDetailTaxLevel) Get() *GLExportTransactionDetailTaxLevel {
	return v.value
}

func (v *NullableGLExportTransactionDetailTaxLevel) Set(val *GLExportTransactionDetailTaxLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableGLExportTransactionDetailTaxLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableGLExportTransactionDetailTaxLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLExportTransactionDetailTaxLevel(val *GLExportTransactionDetailTaxLevel) *NullableGLExportTransactionDetailTaxLevel {
	return &NullableGLExportTransactionDetailTaxLevel{value: val, isSet: true}
}

func (v NullableGLExportTransactionDetailTaxLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLExportTransactionDetailTaxLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
