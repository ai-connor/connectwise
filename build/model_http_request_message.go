/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the HttpRequestMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpRequestMessage{}

// HttpRequestMessage struct for HttpRequestMessage
type HttpRequestMessage struct {
	Version    *Version                          `json:"version,omitempty"`
	Content    *HttpContent                      `json:"content,omitempty"`
	Method     *HttpMethod                       `json:"method,omitempty"`
	RequestUri *string                           `json:"requestUri,omitempty"`
	Headers    []interface{}                     `json:"headers,omitempty"`
	Properties map[string]map[string]interface{} `json:"properties,omitempty"`
}

// NewHttpRequestMessage instantiates a new HttpRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpRequestMessage() *HttpRequestMessage {
	this := HttpRequestMessage{}
	return &this
}

// NewHttpRequestMessageWithDefaults instantiates a new HttpRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpRequestMessageWithDefaults() *HttpRequestMessage {
	this := HttpRequestMessage{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *HttpRequestMessage) GetVersion() Version {
	if o == nil || IsNil(o.Version) {
		var ret Version
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRequestMessage) GetVersionOk() (*Version, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *HttpRequestMessage) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given Version and assigns it to the Version field.
func (o *HttpRequestMessage) SetVersion(v Version) {
	o.Version = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *HttpRequestMessage) GetContent() HttpContent {
	if o == nil || IsNil(o.Content) {
		var ret HttpContent
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRequestMessage) GetContentOk() (*HttpContent, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *HttpRequestMessage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given HttpContent and assigns it to the Content field.
func (o *HttpRequestMessage) SetContent(v HttpContent) {
	o.Content = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *HttpRequestMessage) GetMethod() HttpMethod {
	if o == nil || IsNil(o.Method) {
		var ret HttpMethod
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRequestMessage) GetMethodOk() (*HttpMethod, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *HttpRequestMessage) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given HttpMethod and assigns it to the Method field.
func (o *HttpRequestMessage) SetMethod(v HttpMethod) {
	o.Method = &v
}

// GetRequestUri returns the RequestUri field value if set, zero value otherwise.
func (o *HttpRequestMessage) GetRequestUri() string {
	if o == nil || IsNil(o.RequestUri) {
		var ret string
		return ret
	}
	return *o.RequestUri
}

// GetRequestUriOk returns a tuple with the RequestUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRequestMessage) GetRequestUriOk() (*string, bool) {
	if o == nil || IsNil(o.RequestUri) {
		return nil, false
	}
	return o.RequestUri, true
}

// HasRequestUri returns a boolean if a field has been set.
func (o *HttpRequestMessage) HasRequestUri() bool {
	if o != nil && !IsNil(o.RequestUri) {
		return true
	}

	return false
}

// SetRequestUri gets a reference to the given string and assigns it to the RequestUri field.
func (o *HttpRequestMessage) SetRequestUri(v string) {
	o.RequestUri = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *HttpRequestMessage) GetHeaders() []interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret []interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRequestMessage) GetHeadersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HttpRequestMessage) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []interface{} and assigns it to the Headers field.
func (o *HttpRequestMessage) SetHeaders(v []interface{}) {
	o.Headers = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *HttpRequestMessage) GetProperties() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRequestMessage) GetPropertiesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *HttpRequestMessage) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the Properties field.
func (o *HttpRequestMessage) SetProperties(v map[string]map[string]interface{}) {
	o.Properties = v
}

func (o HttpRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpRequestMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.RequestUri) {
		toSerialize["requestUri"] = o.RequestUri
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableHttpRequestMessage struct {
	value *HttpRequestMessage
	isSet bool
}

func (v NullableHttpRequestMessage) Get() *HttpRequestMessage {
	return v.value
}

func (v *NullableHttpRequestMessage) Set(val *HttpRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpRequestMessage(val *HttpRequestMessage) *NullableHttpRequestMessage {
	return &NullableHttpRequestMessage{value: val, isSet: true}
}

func (v NullableHttpRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
