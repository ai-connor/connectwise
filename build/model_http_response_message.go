/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the HttpResponseMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpResponseMessage{}

// HttpResponseMessage struct for HttpResponseMessage
type HttpResponseMessage struct {
	Version             *Version            `json:"version,omitempty"`
	Content             *HttpContent        `json:"content,omitempty"`
	StatusCode          *string             `json:"statusCode,omitempty"`
	ReasonPhrase        *string             `json:"reasonPhrase,omitempty"`
	Headers             []interface{}       `json:"headers,omitempty"`
	RequestMessage      *HttpRequestMessage `json:"requestMessage,omitempty"`
	IsSuccessStatusCode *bool               `json:"isSuccessStatusCode,omitempty"`
}

// NewHttpResponseMessage instantiates a new HttpResponseMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpResponseMessage() *HttpResponseMessage {
	this := HttpResponseMessage{}
	return &this
}

// NewHttpResponseMessageWithDefaults instantiates a new HttpResponseMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpResponseMessageWithDefaults() *HttpResponseMessage {
	this := HttpResponseMessage{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetVersion() Version {
	if o == nil || IsNil(o.Version) {
		var ret Version
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetVersionOk() (*Version, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given Version and assigns it to the Version field.
func (o *HttpResponseMessage) SetVersion(v Version) {
	o.Version = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetContent() HttpContent {
	if o == nil || IsNil(o.Content) {
		var ret HttpContent
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetContentOk() (*HttpContent, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given HttpContent and assigns it to the Content field.
func (o *HttpResponseMessage) SetContent(v HttpContent) {
	o.Content = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetStatusCode() string {
	if o == nil || IsNil(o.StatusCode) {
		var ret string
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetStatusCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given string and assigns it to the StatusCode field.
func (o *HttpResponseMessage) SetStatusCode(v string) {
	o.StatusCode = &v
}

// GetReasonPhrase returns the ReasonPhrase field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetReasonPhrase() string {
	if o == nil || IsNil(o.ReasonPhrase) {
		var ret string
		return ret
	}
	return *o.ReasonPhrase
}

// GetReasonPhraseOk returns a tuple with the ReasonPhrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetReasonPhraseOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonPhrase) {
		return nil, false
	}
	return o.ReasonPhrase, true
}

// HasReasonPhrase returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasReasonPhrase() bool {
	if o != nil && !IsNil(o.ReasonPhrase) {
		return true
	}

	return false
}

// SetReasonPhrase gets a reference to the given string and assigns it to the ReasonPhrase field.
func (o *HttpResponseMessage) SetReasonPhrase(v string) {
	o.ReasonPhrase = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetHeaders() []interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret []interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetHeadersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []interface{} and assigns it to the Headers field.
func (o *HttpResponseMessage) SetHeaders(v []interface{}) {
	o.Headers = v
}

// GetRequestMessage returns the RequestMessage field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetRequestMessage() HttpRequestMessage {
	if o == nil || IsNil(o.RequestMessage) {
		var ret HttpRequestMessage
		return ret
	}
	return *o.RequestMessage
}

// GetRequestMessageOk returns a tuple with the RequestMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetRequestMessageOk() (*HttpRequestMessage, bool) {
	if o == nil || IsNil(o.RequestMessage) {
		return nil, false
	}
	return o.RequestMessage, true
}

// HasRequestMessage returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasRequestMessage() bool {
	if o != nil && !IsNil(o.RequestMessage) {
		return true
	}

	return false
}

// SetRequestMessage gets a reference to the given HttpRequestMessage and assigns it to the RequestMessage field.
func (o *HttpResponseMessage) SetRequestMessage(v HttpRequestMessage) {
	o.RequestMessage = &v
}

// GetIsSuccessStatusCode returns the IsSuccessStatusCode field value if set, zero value otherwise.
func (o *HttpResponseMessage) GetIsSuccessStatusCode() bool {
	if o == nil || IsNil(o.IsSuccessStatusCode) {
		var ret bool
		return ret
	}
	return *o.IsSuccessStatusCode
}

// GetIsSuccessStatusCodeOk returns a tuple with the IsSuccessStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetIsSuccessStatusCodeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuccessStatusCode) {
		return nil, false
	}
	return o.IsSuccessStatusCode, true
}

// HasIsSuccessStatusCode returns a boolean if a field has been set.
func (o *HttpResponseMessage) HasIsSuccessStatusCode() bool {
	if o != nil && !IsNil(o.IsSuccessStatusCode) {
		return true
	}

	return false
}

// SetIsSuccessStatusCode gets a reference to the given bool and assigns it to the IsSuccessStatusCode field.
func (o *HttpResponseMessage) SetIsSuccessStatusCode(v bool) {
	o.IsSuccessStatusCode = &v
}

func (o HttpResponseMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpResponseMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.ReasonPhrase) {
		toSerialize["reasonPhrase"] = o.ReasonPhrase
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.RequestMessage) {
		toSerialize["requestMessage"] = o.RequestMessage
	}
	if !IsNil(o.IsSuccessStatusCode) {
		toSerialize["isSuccessStatusCode"] = o.IsSuccessStatusCode
	}
	return toSerialize, nil
}

type NullableHttpResponseMessage struct {
	value *HttpResponseMessage
	isSet bool
}

func (v NullableHttpResponseMessage) Get() *HttpResponseMessage {
	return v.value
}

func (v *NullableHttpResponseMessage) Set(val *HttpResponseMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpResponseMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpResponseMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpResponseMessage(val *HttpResponseMessage) *NullableHttpResponseMessage {
	return &NullableHttpResponseMessage{value: val, isSet: true}
}

func (v NullableHttpResponseMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpResponseMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
