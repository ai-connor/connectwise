/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the Info type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Info{}

// Info struct for Info
type Info struct {
	Version                   *string      `json:"version,omitempty"`
	IsCloud                   *bool        `json:"isCloud,omitempty"`
	ServerTimeZone            *string      `json:"serverTimeZone,omitempty"`
	LicenseBits               []LicenseBit `json:"licenseBits,omitempty"`
	CloudRegion               *string      `json:"cloudRegion,omitempty"`
	MaxWorkFlowRecordsAllowed *int32       `json:"maxWorkFlowRecordsAllowed,omitempty"`
}

// NewInfo instantiates a new Info object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfo() *Info {
	this := Info{}
	return &this
}

// NewInfoWithDefaults instantiates a new Info object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfoWithDefaults() *Info {
	this := Info{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Info) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Info) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Info) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Info) SetVersion(v string) {
	o.Version = &v
}

// GetIsCloud returns the IsCloud field value if set, zero value otherwise.
func (o *Info) GetIsCloud() bool {
	if o == nil || IsNil(o.IsCloud) {
		var ret bool
		return ret
	}
	return *o.IsCloud
}

// GetIsCloudOk returns a tuple with the IsCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Info) GetIsCloudOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCloud) {
		return nil, false
	}
	return o.IsCloud, true
}

// HasIsCloud returns a boolean if a field has been set.
func (o *Info) HasIsCloud() bool {
	if o != nil && !IsNil(o.IsCloud) {
		return true
	}

	return false
}

// SetIsCloud gets a reference to the given bool and assigns it to the IsCloud field.
func (o *Info) SetIsCloud(v bool) {
	o.IsCloud = &v
}

// GetServerTimeZone returns the ServerTimeZone field value if set, zero value otherwise.
func (o *Info) GetServerTimeZone() string {
	if o == nil || IsNil(o.ServerTimeZone) {
		var ret string
		return ret
	}
	return *o.ServerTimeZone
}

// GetServerTimeZoneOk returns a tuple with the ServerTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Info) GetServerTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.ServerTimeZone) {
		return nil, false
	}
	return o.ServerTimeZone, true
}

// HasServerTimeZone returns a boolean if a field has been set.
func (o *Info) HasServerTimeZone() bool {
	if o != nil && !IsNil(o.ServerTimeZone) {
		return true
	}

	return false
}

// SetServerTimeZone gets a reference to the given string and assigns it to the ServerTimeZone field.
func (o *Info) SetServerTimeZone(v string) {
	o.ServerTimeZone = &v
}

// GetLicenseBits returns the LicenseBits field value if set, zero value otherwise.
func (o *Info) GetLicenseBits() []LicenseBit {
	if o == nil || IsNil(o.LicenseBits) {
		var ret []LicenseBit
		return ret
	}
	return o.LicenseBits
}

// GetLicenseBitsOk returns a tuple with the LicenseBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Info) GetLicenseBitsOk() ([]LicenseBit, bool) {
	if o == nil || IsNil(o.LicenseBits) {
		return nil, false
	}
	return o.LicenseBits, true
}

// HasLicenseBits returns a boolean if a field has been set.
func (o *Info) HasLicenseBits() bool {
	if o != nil && !IsNil(o.LicenseBits) {
		return true
	}

	return false
}

// SetLicenseBits gets a reference to the given []LicenseBit and assigns it to the LicenseBits field.
func (o *Info) SetLicenseBits(v []LicenseBit) {
	o.LicenseBits = v
}

// GetCloudRegion returns the CloudRegion field value if set, zero value otherwise.
func (o *Info) GetCloudRegion() string {
	if o == nil || IsNil(o.CloudRegion) {
		var ret string
		return ret
	}
	return *o.CloudRegion
}

// GetCloudRegionOk returns a tuple with the CloudRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Info) GetCloudRegionOk() (*string, bool) {
	if o == nil || IsNil(o.CloudRegion) {
		return nil, false
	}
	return o.CloudRegion, true
}

// HasCloudRegion returns a boolean if a field has been set.
func (o *Info) HasCloudRegion() bool {
	if o != nil && !IsNil(o.CloudRegion) {
		return true
	}

	return false
}

// SetCloudRegion gets a reference to the given string and assigns it to the CloudRegion field.
func (o *Info) SetCloudRegion(v string) {
	o.CloudRegion = &v
}

// GetMaxWorkFlowRecordsAllowed returns the MaxWorkFlowRecordsAllowed field value if set, zero value otherwise.
func (o *Info) GetMaxWorkFlowRecordsAllowed() int32 {
	if o == nil || IsNil(o.MaxWorkFlowRecordsAllowed) {
		var ret int32
		return ret
	}
	return *o.MaxWorkFlowRecordsAllowed
}

// GetMaxWorkFlowRecordsAllowedOk returns a tuple with the MaxWorkFlowRecordsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Info) GetMaxWorkFlowRecordsAllowedOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxWorkFlowRecordsAllowed) {
		return nil, false
	}
	return o.MaxWorkFlowRecordsAllowed, true
}

// HasMaxWorkFlowRecordsAllowed returns a boolean if a field has been set.
func (o *Info) HasMaxWorkFlowRecordsAllowed() bool {
	if o != nil && !IsNil(o.MaxWorkFlowRecordsAllowed) {
		return true
	}

	return false
}

// SetMaxWorkFlowRecordsAllowed gets a reference to the given int32 and assigns it to the MaxWorkFlowRecordsAllowed field.
func (o *Info) SetMaxWorkFlowRecordsAllowed(v int32) {
	o.MaxWorkFlowRecordsAllowed = &v
}

func (o Info) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Info) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.IsCloud) {
		toSerialize["isCloud"] = o.IsCloud
	}
	if !IsNil(o.ServerTimeZone) {
		toSerialize["serverTimeZone"] = o.ServerTimeZone
	}
	if !IsNil(o.LicenseBits) {
		toSerialize["licenseBits"] = o.LicenseBits
	}
	if !IsNil(o.CloudRegion) {
		toSerialize["cloudRegion"] = o.CloudRegion
	}
	if !IsNil(o.MaxWorkFlowRecordsAllowed) {
		toSerialize["maxWorkFlowRecordsAllowed"] = o.MaxWorkFlowRecordsAllowed
	}
	return toSerialize, nil
}

type NullableInfo struct {
	value *Info
	isSet bool
}

func (v NullableInfo) Get() *Info {
	return v.value
}

func (v *NullableInfo) Set(val *Info) {
	v.value = val
	v.isSet = true
}

func (v NullableInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfo(val *Info) *NullableInfo {
	return &NullableInfo{value: val, isSet: true}
}

func (v NullableInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
