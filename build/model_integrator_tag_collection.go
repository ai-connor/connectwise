/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the IntegratorTagCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegratorTagCollection{}

// IntegratorTagCollection struct for IntegratorTagCollection
type IntegratorTagCollection struct {
	Tags []string `json:"tags,omitempty"`
}

// NewIntegratorTagCollection instantiates a new IntegratorTagCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegratorTagCollection() *IntegratorTagCollection {
	this := IntegratorTagCollection{}
	return &this
}

// NewIntegratorTagCollectionWithDefaults instantiates a new IntegratorTagCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegratorTagCollectionWithDefaults() *IntegratorTagCollection {
	this := IntegratorTagCollection{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *IntegratorTagCollection) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorTagCollection) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *IntegratorTagCollection) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *IntegratorTagCollection) SetTags(v []string) {
	o.Tags = v
}

func (o IntegratorTagCollection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegratorTagCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableIntegratorTagCollection struct {
	value *IntegratorTagCollection
	isSet bool
}

func (v NullableIntegratorTagCollection) Get() *IntegratorTagCollection {
	return v.value
}

func (v *NullableIntegratorTagCollection) Set(val *IntegratorTagCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegratorTagCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegratorTagCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegratorTagCollection(val *IntegratorTagCollection) *NullableIntegratorTagCollection {
	return &NullableIntegratorTagCollection{value: val, isSet: true}
}

func (v NullableIntegratorTagCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegratorTagCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
