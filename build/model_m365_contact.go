/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the M365Contact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &M365Contact{}

// M365Contact struct for M365Contact
type M365Contact struct {
	Id                  *int32             `json:"id,omitempty"`
	UserPrincipalName   *string            `json:"userPrincipalName,omitempty"`
	DisplayName         *string            `json:"displayName,omitempty"`
	ContactRecId        *int32             `json:"contactRecId,omitempty"`
	TenantId            *string            `json:"tenantId,omitempty"`
	M365ContactId       *string            `json:"m365ContactId,omitempty"`
	Department          *string            `json:"department,omitempty"`
	EmployeeType        *string            `json:"employeeType,omitempty"`
	ManagerId           *string            `json:"managerId,omitempty"`
	ProxyAddresses      *string            `json:"proxyAddresses,omitempty"`
	ProxyAddressesPlain *string            `json:"proxyAddressesPlain,omitempty"`
	Groups              *string            `json:"groups,omitempty"`
	DirectoryRoles      *string            `json:"directoryRoles,omitempty"`
	AssignedLicenses    *string            `json:"assignedLicenses,omitempty"`
	Info                *map[string]string `json:"_info,omitempty"`
}

// NewM365Contact instantiates a new M365Contact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewM365Contact() *M365Contact {
	this := M365Contact{}
	return &this
}

// NewM365ContactWithDefaults instantiates a new M365Contact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewM365ContactWithDefaults() *M365Contact {
	this := M365Contact{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *M365Contact) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *M365Contact) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *M365Contact) SetId(v int32) {
	o.Id = &v
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise.
func (o *M365Contact) GetUserPrincipalName() string {
	if o == nil || IsNil(o.UserPrincipalName) {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserPrincipalName) {
		return nil, false
	}
	return o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *M365Contact) HasUserPrincipalName() bool {
	if o != nil && !IsNil(o.UserPrincipalName) {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *M365Contact) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *M365Contact) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *M365Contact) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *M365Contact) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetContactRecId returns the ContactRecId field value if set, zero value otherwise.
func (o *M365Contact) GetContactRecId() int32 {
	if o == nil || IsNil(o.ContactRecId) {
		var ret int32
		return ret
	}
	return *o.ContactRecId
}

// GetContactRecIdOk returns a tuple with the ContactRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetContactRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContactRecId) {
		return nil, false
	}
	return o.ContactRecId, true
}

// HasContactRecId returns a boolean if a field has been set.
func (o *M365Contact) HasContactRecId() bool {
	if o != nil && !IsNil(o.ContactRecId) {
		return true
	}

	return false
}

// SetContactRecId gets a reference to the given int32 and assigns it to the ContactRecId field.
func (o *M365Contact) SetContactRecId(v int32) {
	o.ContactRecId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *M365Contact) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *M365Contact) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *M365Contact) SetTenantId(v string) {
	o.TenantId = &v
}

// GetM365ContactId returns the M365ContactId field value if set, zero value otherwise.
func (o *M365Contact) GetM365ContactId() string {
	if o == nil || IsNil(o.M365ContactId) {
		var ret string
		return ret
	}
	return *o.M365ContactId
}

// GetM365ContactIdOk returns a tuple with the M365ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetM365ContactIdOk() (*string, bool) {
	if o == nil || IsNil(o.M365ContactId) {
		return nil, false
	}
	return o.M365ContactId, true
}

// HasM365ContactId returns a boolean if a field has been set.
func (o *M365Contact) HasM365ContactId() bool {
	if o != nil && !IsNil(o.M365ContactId) {
		return true
	}

	return false
}

// SetM365ContactId gets a reference to the given string and assigns it to the M365ContactId field.
func (o *M365Contact) SetM365ContactId(v string) {
	o.M365ContactId = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *M365Contact) GetDepartment() string {
	if o == nil || IsNil(o.Department) {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *M365Contact) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *M365Contact) SetDepartment(v string) {
	o.Department = &v
}

// GetEmployeeType returns the EmployeeType field value if set, zero value otherwise.
func (o *M365Contact) GetEmployeeType() string {
	if o == nil || IsNil(o.EmployeeType) {
		var ret string
		return ret
	}
	return *o.EmployeeType
}

// GetEmployeeTypeOk returns a tuple with the EmployeeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetEmployeeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeType) {
		return nil, false
	}
	return o.EmployeeType, true
}

// HasEmployeeType returns a boolean if a field has been set.
func (o *M365Contact) HasEmployeeType() bool {
	if o != nil && !IsNil(o.EmployeeType) {
		return true
	}

	return false
}

// SetEmployeeType gets a reference to the given string and assigns it to the EmployeeType field.
func (o *M365Contact) SetEmployeeType(v string) {
	o.EmployeeType = &v
}

// GetManagerId returns the ManagerId field value if set, zero value otherwise.
func (o *M365Contact) GetManagerId() string {
	if o == nil || IsNil(o.ManagerId) {
		var ret string
		return ret
	}
	return *o.ManagerId
}

// GetManagerIdOk returns a tuple with the ManagerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetManagerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManagerId) {
		return nil, false
	}
	return o.ManagerId, true
}

// HasManagerId returns a boolean if a field has been set.
func (o *M365Contact) HasManagerId() bool {
	if o != nil && !IsNil(o.ManagerId) {
		return true
	}

	return false
}

// SetManagerId gets a reference to the given string and assigns it to the ManagerId field.
func (o *M365Contact) SetManagerId(v string) {
	o.ManagerId = &v
}

// GetProxyAddresses returns the ProxyAddresses field value if set, zero value otherwise.
func (o *M365Contact) GetProxyAddresses() string {
	if o == nil || IsNil(o.ProxyAddresses) {
		var ret string
		return ret
	}
	return *o.ProxyAddresses
}

// GetProxyAddressesOk returns a tuple with the ProxyAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetProxyAddressesOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyAddresses) {
		return nil, false
	}
	return o.ProxyAddresses, true
}

// HasProxyAddresses returns a boolean if a field has been set.
func (o *M365Contact) HasProxyAddresses() bool {
	if o != nil && !IsNil(o.ProxyAddresses) {
		return true
	}

	return false
}

// SetProxyAddresses gets a reference to the given string and assigns it to the ProxyAddresses field.
func (o *M365Contact) SetProxyAddresses(v string) {
	o.ProxyAddresses = &v
}

// GetProxyAddressesPlain returns the ProxyAddressesPlain field value if set, zero value otherwise.
func (o *M365Contact) GetProxyAddressesPlain() string {
	if o == nil || IsNil(o.ProxyAddressesPlain) {
		var ret string
		return ret
	}
	return *o.ProxyAddressesPlain
}

// GetProxyAddressesPlainOk returns a tuple with the ProxyAddressesPlain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetProxyAddressesPlainOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyAddressesPlain) {
		return nil, false
	}
	return o.ProxyAddressesPlain, true
}

// HasProxyAddressesPlain returns a boolean if a field has been set.
func (o *M365Contact) HasProxyAddressesPlain() bool {
	if o != nil && !IsNil(o.ProxyAddressesPlain) {
		return true
	}

	return false
}

// SetProxyAddressesPlain gets a reference to the given string and assigns it to the ProxyAddressesPlain field.
func (o *M365Contact) SetProxyAddressesPlain(v string) {
	o.ProxyAddressesPlain = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *M365Contact) GetGroups() string {
	if o == nil || IsNil(o.Groups) {
		var ret string
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetGroupsOk() (*string, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *M365Contact) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given string and assigns it to the Groups field.
func (o *M365Contact) SetGroups(v string) {
	o.Groups = &v
}

// GetDirectoryRoles returns the DirectoryRoles field value if set, zero value otherwise.
func (o *M365Contact) GetDirectoryRoles() string {
	if o == nil || IsNil(o.DirectoryRoles) {
		var ret string
		return ret
	}
	return *o.DirectoryRoles
}

// GetDirectoryRolesOk returns a tuple with the DirectoryRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetDirectoryRolesOk() (*string, bool) {
	if o == nil || IsNil(o.DirectoryRoles) {
		return nil, false
	}
	return o.DirectoryRoles, true
}

// HasDirectoryRoles returns a boolean if a field has been set.
func (o *M365Contact) HasDirectoryRoles() bool {
	if o != nil && !IsNil(o.DirectoryRoles) {
		return true
	}

	return false
}

// SetDirectoryRoles gets a reference to the given string and assigns it to the DirectoryRoles field.
func (o *M365Contact) SetDirectoryRoles(v string) {
	o.DirectoryRoles = &v
}

// GetAssignedLicenses returns the AssignedLicenses field value if set, zero value otherwise.
func (o *M365Contact) GetAssignedLicenses() string {
	if o == nil || IsNil(o.AssignedLicenses) {
		var ret string
		return ret
	}
	return *o.AssignedLicenses
}

// GetAssignedLicensesOk returns a tuple with the AssignedLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetAssignedLicensesOk() (*string, bool) {
	if o == nil || IsNil(o.AssignedLicenses) {
		return nil, false
	}
	return o.AssignedLicenses, true
}

// HasAssignedLicenses returns a boolean if a field has been set.
func (o *M365Contact) HasAssignedLicenses() bool {
	if o != nil && !IsNil(o.AssignedLicenses) {
		return true
	}

	return false
}

// SetAssignedLicenses gets a reference to the given string and assigns it to the AssignedLicenses field.
func (o *M365Contact) SetAssignedLicenses(v string) {
	o.AssignedLicenses = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *M365Contact) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365Contact) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *M365Contact) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *M365Contact) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o M365Contact) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o M365Contact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserPrincipalName) {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ContactRecId) {
		toSerialize["contactRecId"] = o.ContactRecId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.M365ContactId) {
		toSerialize["m365ContactId"] = o.M365ContactId
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.EmployeeType) {
		toSerialize["employeeType"] = o.EmployeeType
	}
	if !IsNil(o.ManagerId) {
		toSerialize["managerId"] = o.ManagerId
	}
	if !IsNil(o.ProxyAddresses) {
		toSerialize["proxyAddresses"] = o.ProxyAddresses
	}
	if !IsNil(o.ProxyAddressesPlain) {
		toSerialize["proxyAddressesPlain"] = o.ProxyAddressesPlain
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.DirectoryRoles) {
		toSerialize["directoryRoles"] = o.DirectoryRoles
	}
	if !IsNil(o.AssignedLicenses) {
		toSerialize["assignedLicenses"] = o.AssignedLicenses
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableM365Contact struct {
	value *M365Contact
	isSet bool
}

func (v NullableM365Contact) Get() *M365Contact {
	return v.value
}

func (v *NullableM365Contact) Set(val *M365Contact) {
	v.value = val
	v.isSet = true
}

func (v NullableM365Contact) IsSet() bool {
	return v.isSet
}

func (v *NullableM365Contact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableM365Contact(val *M365Contact) *NullableM365Contact {
	return &NullableM365Contact{value: val, isSet: true}
}

func (v NullableM365Contact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableM365Contact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
