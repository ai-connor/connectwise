/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the M365ContactSyncProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &M365ContactSyncProperty{}

// M365ContactSyncProperty struct for M365ContactSyncProperty
type M365ContactSyncProperty struct {
	Id                 *int32             `json:"id,omitempty"`
	IncludeExcludeType NullableString     `json:"includeExcludeType,omitempty"`
	PropertyType       NullableString     `json:"propertyType,omitempty"`
	ExcludeIncludeFlag *bool              `json:"excludeIncludeFlag,omitempty"`
	WildCard           *string            `json:"wildCard,omitempty"`
	CompanyRecID       *int32             `json:"companyRecID,omitempty"`
	Info               *map[string]string `json:"_info,omitempty"`
}

// NewM365ContactSyncProperty instantiates a new M365ContactSyncProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewM365ContactSyncProperty() *M365ContactSyncProperty {
	this := M365ContactSyncProperty{}
	return &this
}

// NewM365ContactSyncPropertyWithDefaults instantiates a new M365ContactSyncProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewM365ContactSyncPropertyWithDefaults() *M365ContactSyncProperty {
	this := M365ContactSyncProperty{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *M365ContactSyncProperty) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365ContactSyncProperty) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *M365ContactSyncProperty) SetId(v int32) {
	o.Id = &v
}

// GetIncludeExcludeType returns the IncludeExcludeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *M365ContactSyncProperty) GetIncludeExcludeType() string {
	if o == nil || IsNil(o.IncludeExcludeType.Get()) {
		var ret string
		return ret
	}
	return *o.IncludeExcludeType.Get()
}

// GetIncludeExcludeTypeOk returns a tuple with the IncludeExcludeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *M365ContactSyncProperty) GetIncludeExcludeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeExcludeType.Get(), o.IncludeExcludeType.IsSet()
}

// HasIncludeExcludeType returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasIncludeExcludeType() bool {
	if o != nil && o.IncludeExcludeType.IsSet() {
		return true
	}

	return false
}

// SetIncludeExcludeType gets a reference to the given NullableString and assigns it to the IncludeExcludeType field.
func (o *M365ContactSyncProperty) SetIncludeExcludeType(v string) {
	o.IncludeExcludeType.Set(&v)
}

// SetIncludeExcludeTypeNil sets the value for IncludeExcludeType to be an explicit nil
func (o *M365ContactSyncProperty) SetIncludeExcludeTypeNil() {
	o.IncludeExcludeType.Set(nil)
}

// UnsetIncludeExcludeType ensures that no value is present for IncludeExcludeType, not even an explicit nil
func (o *M365ContactSyncProperty) UnsetIncludeExcludeType() {
	o.IncludeExcludeType.Unset()
}

// GetPropertyType returns the PropertyType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *M365ContactSyncProperty) GetPropertyType() string {
	if o == nil || IsNil(o.PropertyType.Get()) {
		var ret string
		return ret
	}
	return *o.PropertyType.Get()
}

// GetPropertyTypeOk returns a tuple with the PropertyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *M365ContactSyncProperty) GetPropertyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PropertyType.Get(), o.PropertyType.IsSet()
}

// HasPropertyType returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasPropertyType() bool {
	if o != nil && o.PropertyType.IsSet() {
		return true
	}

	return false
}

// SetPropertyType gets a reference to the given NullableString and assigns it to the PropertyType field.
func (o *M365ContactSyncProperty) SetPropertyType(v string) {
	o.PropertyType.Set(&v)
}

// SetPropertyTypeNil sets the value for PropertyType to be an explicit nil
func (o *M365ContactSyncProperty) SetPropertyTypeNil() {
	o.PropertyType.Set(nil)
}

// UnsetPropertyType ensures that no value is present for PropertyType, not even an explicit nil
func (o *M365ContactSyncProperty) UnsetPropertyType() {
	o.PropertyType.Unset()
}

// GetExcludeIncludeFlag returns the ExcludeIncludeFlag field value if set, zero value otherwise.
func (o *M365ContactSyncProperty) GetExcludeIncludeFlag() bool {
	if o == nil || IsNil(o.ExcludeIncludeFlag) {
		var ret bool
		return ret
	}
	return *o.ExcludeIncludeFlag
}

// GetExcludeIncludeFlagOk returns a tuple with the ExcludeIncludeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365ContactSyncProperty) GetExcludeIncludeFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeIncludeFlag) {
		return nil, false
	}
	return o.ExcludeIncludeFlag, true
}

// HasExcludeIncludeFlag returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasExcludeIncludeFlag() bool {
	if o != nil && !IsNil(o.ExcludeIncludeFlag) {
		return true
	}

	return false
}

// SetExcludeIncludeFlag gets a reference to the given bool and assigns it to the ExcludeIncludeFlag field.
func (o *M365ContactSyncProperty) SetExcludeIncludeFlag(v bool) {
	o.ExcludeIncludeFlag = &v
}

// GetWildCard returns the WildCard field value if set, zero value otherwise.
func (o *M365ContactSyncProperty) GetWildCard() string {
	if o == nil || IsNil(o.WildCard) {
		var ret string
		return ret
	}
	return *o.WildCard
}

// GetWildCardOk returns a tuple with the WildCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365ContactSyncProperty) GetWildCardOk() (*string, bool) {
	if o == nil || IsNil(o.WildCard) {
		return nil, false
	}
	return o.WildCard, true
}

// HasWildCard returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasWildCard() bool {
	if o != nil && !IsNil(o.WildCard) {
		return true
	}

	return false
}

// SetWildCard gets a reference to the given string and assigns it to the WildCard field.
func (o *M365ContactSyncProperty) SetWildCard(v string) {
	o.WildCard = &v
}

// GetCompanyRecID returns the CompanyRecID field value if set, zero value otherwise.
func (o *M365ContactSyncProperty) GetCompanyRecID() int32 {
	if o == nil || IsNil(o.CompanyRecID) {
		var ret int32
		return ret
	}
	return *o.CompanyRecID
}

// GetCompanyRecIDOk returns a tuple with the CompanyRecID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365ContactSyncProperty) GetCompanyRecIDOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyRecID) {
		return nil, false
	}
	return o.CompanyRecID, true
}

// HasCompanyRecID returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasCompanyRecID() bool {
	if o != nil && !IsNil(o.CompanyRecID) {
		return true
	}

	return false
}

// SetCompanyRecID gets a reference to the given int32 and assigns it to the CompanyRecID field.
func (o *M365ContactSyncProperty) SetCompanyRecID(v int32) {
	o.CompanyRecID = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *M365ContactSyncProperty) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *M365ContactSyncProperty) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *M365ContactSyncProperty) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *M365ContactSyncProperty) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o M365ContactSyncProperty) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o M365ContactSyncProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.IncludeExcludeType.IsSet() {
		toSerialize["includeExcludeType"] = o.IncludeExcludeType.Get()
	}
	if o.PropertyType.IsSet() {
		toSerialize["propertyType"] = o.PropertyType.Get()
	}
	if !IsNil(o.ExcludeIncludeFlag) {
		toSerialize["excludeIncludeFlag"] = o.ExcludeIncludeFlag
	}
	if !IsNil(o.WildCard) {
		toSerialize["wildCard"] = o.WildCard
	}
	if !IsNil(o.CompanyRecID) {
		toSerialize["companyRecID"] = o.CompanyRecID
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableM365ContactSyncProperty struct {
	value *M365ContactSyncProperty
	isSet bool
}

func (v NullableM365ContactSyncProperty) Get() *M365ContactSyncProperty {
	return v.value
}

func (v *NullableM365ContactSyncProperty) Set(val *M365ContactSyncProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableM365ContactSyncProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableM365ContactSyncProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableM365ContactSyncProperty(val *M365ContactSyncProperty) *NullableM365ContactSyncProperty {
	return &NullableM365ContactSyncProperty{value: val, isSet: true}
}

func (v NullableM365ContactSyncProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableM365ContactSyncProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
