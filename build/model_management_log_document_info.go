/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ManagementLogDocumentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementLogDocumentInfo{}

// ManagementLogDocumentInfo struct for ManagementLogDocumentInfo
type ManagementLogDocumentInfo struct {
	FullPathFileName *string `json:"fullPathFileName,omitempty"`
	FileSize         *string `json:"fileSize,omitempty"`
}

// NewManagementLogDocumentInfo instantiates a new ManagementLogDocumentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementLogDocumentInfo() *ManagementLogDocumentInfo {
	this := ManagementLogDocumentInfo{}
	return &this
}

// NewManagementLogDocumentInfoWithDefaults instantiates a new ManagementLogDocumentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementLogDocumentInfoWithDefaults() *ManagementLogDocumentInfo {
	this := ManagementLogDocumentInfo{}
	return &this
}

// GetFullPathFileName returns the FullPathFileName field value if set, zero value otherwise.
func (o *ManagementLogDocumentInfo) GetFullPathFileName() string {
	if o == nil || IsNil(o.FullPathFileName) {
		var ret string
		return ret
	}
	return *o.FullPathFileName
}

// GetFullPathFileNameOk returns a tuple with the FullPathFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementLogDocumentInfo) GetFullPathFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullPathFileName) {
		return nil, false
	}
	return o.FullPathFileName, true
}

// HasFullPathFileName returns a boolean if a field has been set.
func (o *ManagementLogDocumentInfo) HasFullPathFileName() bool {
	if o != nil && !IsNil(o.FullPathFileName) {
		return true
	}

	return false
}

// SetFullPathFileName gets a reference to the given string and assigns it to the FullPathFileName field.
func (o *ManagementLogDocumentInfo) SetFullPathFileName(v string) {
	o.FullPathFileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *ManagementLogDocumentInfo) GetFileSize() string {
	if o == nil || IsNil(o.FileSize) {
		var ret string
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementLogDocumentInfo) GetFileSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *ManagementLogDocumentInfo) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given string and assigns it to the FileSize field.
func (o *ManagementLogDocumentInfo) SetFileSize(v string) {
	o.FileSize = &v
}

func (o ManagementLogDocumentInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementLogDocumentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullPathFileName) {
		toSerialize["fullPathFileName"] = o.FullPathFileName
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	return toSerialize, nil
}

type NullableManagementLogDocumentInfo struct {
	value *ManagementLogDocumentInfo
	isSet bool
}

func (v NullableManagementLogDocumentInfo) Get() *ManagementLogDocumentInfo {
	return v.value
}

func (v *NullableManagementLogDocumentInfo) Set(val *ManagementLogDocumentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementLogDocumentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementLogDocumentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementLogDocumentInfo(val *ManagementLogDocumentInfo) *NullableManagementLogDocumentInfo {
	return &NullableManagementLogDocumentInfo{value: val, isSet: true}
}

func (v NullableManagementLogDocumentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementLogDocumentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
