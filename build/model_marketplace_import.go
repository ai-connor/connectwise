/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the MarketplaceImport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketplaceImport{}

// MarketplaceImport struct for MarketplaceImport
type MarketplaceImport struct {
	Id                    *int32        `json:"id,omitempty"`
	MarketplaceImportType *string       `json:"marketplaceImportType,omitempty"`
	MarketplaceObject     []interface{} `json:"marketplaceObject,omitempty"`
	RequiredFields        []string      `json:"requiredFields,omitempty"`
}

// NewMarketplaceImport instantiates a new MarketplaceImport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplaceImport() *MarketplaceImport {
	this := MarketplaceImport{}
	return &this
}

// NewMarketplaceImportWithDefaults instantiates a new MarketplaceImport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplaceImportWithDefaults() *MarketplaceImport {
	this := MarketplaceImport{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarketplaceImport) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceImport) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarketplaceImport) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MarketplaceImport) SetId(v int32) {
	o.Id = &v
}

// GetMarketplaceImportType returns the MarketplaceImportType field value if set, zero value otherwise.
func (o *MarketplaceImport) GetMarketplaceImportType() string {
	if o == nil || IsNil(o.MarketplaceImportType) {
		var ret string
		return ret
	}
	return *o.MarketplaceImportType
}

// GetMarketplaceImportTypeOk returns a tuple with the MarketplaceImportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceImport) GetMarketplaceImportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketplaceImportType) {
		return nil, false
	}
	return o.MarketplaceImportType, true
}

// HasMarketplaceImportType returns a boolean if a field has been set.
func (o *MarketplaceImport) HasMarketplaceImportType() bool {
	if o != nil && !IsNil(o.MarketplaceImportType) {
		return true
	}

	return false
}

// SetMarketplaceImportType gets a reference to the given string and assigns it to the MarketplaceImportType field.
func (o *MarketplaceImport) SetMarketplaceImportType(v string) {
	o.MarketplaceImportType = &v
}

// GetMarketplaceObject returns the MarketplaceObject field value if set, zero value otherwise.
func (o *MarketplaceImport) GetMarketplaceObject() []interface{} {
	if o == nil || IsNil(o.MarketplaceObject) {
		var ret []interface{}
		return ret
	}
	return o.MarketplaceObject
}

// GetMarketplaceObjectOk returns a tuple with the MarketplaceObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceImport) GetMarketplaceObjectOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.MarketplaceObject) {
		return nil, false
	}
	return o.MarketplaceObject, true
}

// HasMarketplaceObject returns a boolean if a field has been set.
func (o *MarketplaceImport) HasMarketplaceObject() bool {
	if o != nil && !IsNil(o.MarketplaceObject) {
		return true
	}

	return false
}

// SetMarketplaceObject gets a reference to the given []interface{} and assigns it to the MarketplaceObject field.
func (o *MarketplaceImport) SetMarketplaceObject(v []interface{}) {
	o.MarketplaceObject = v
}

// GetRequiredFields returns the RequiredFields field value if set, zero value otherwise.
func (o *MarketplaceImport) GetRequiredFields() []string {
	if o == nil || IsNil(o.RequiredFields) {
		var ret []string
		return ret
	}
	return o.RequiredFields
}

// GetRequiredFieldsOk returns a tuple with the RequiredFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceImport) GetRequiredFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredFields) {
		return nil, false
	}
	return o.RequiredFields, true
}

// HasRequiredFields returns a boolean if a field has been set.
func (o *MarketplaceImport) HasRequiredFields() bool {
	if o != nil && !IsNil(o.RequiredFields) {
		return true
	}

	return false
}

// SetRequiredFields gets a reference to the given []string and assigns it to the RequiredFields field.
func (o *MarketplaceImport) SetRequiredFields(v []string) {
	o.RequiredFields = v
}

func (o MarketplaceImport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketplaceImport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MarketplaceImportType) {
		toSerialize["marketplaceImportType"] = o.MarketplaceImportType
	}
	if !IsNil(o.MarketplaceObject) {
		toSerialize["marketplaceObject"] = o.MarketplaceObject
	}
	if !IsNil(o.RequiredFields) {
		toSerialize["requiredFields"] = o.RequiredFields
	}
	return toSerialize, nil
}

type NullableMarketplaceImport struct {
	value *MarketplaceImport
	isSet bool
}

func (v NullableMarketplaceImport) Get() *MarketplaceImport {
	return v.value
}

func (v *NullableMarketplaceImport) Set(val *MarketplaceImport) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceImport) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceImport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceImport(val *MarketplaceImport) *NullableMarketplaceImport {
	return &NullableMarketplaceImport{value: val, isSet: true}
}

func (v NullableMarketplaceImport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceImport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
