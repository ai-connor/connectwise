/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Member type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Member{}

// Member struct for Member
type Member struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 15;
	Identifier string `json:"identifier"`
	// ConditionallyRequired. API Member will get random password generated Max length: 60;
	Password          *string      `json:"password,omitempty"`
	DisableOnlineFlag NullableBool `json:"disableOnlineFlag,omitempty"`
	// F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
	LicenseClass NullableString `json:"licenseClass"`
	Notes        *string        `json:"notes,omitempty"`
	//  Max length: 10;
	EmployeeIdentifer   *string      `json:"employeeIdentifer,omitempty"`
	VendorNumber        *string      `json:"vendorNumber,omitempty"`
	EnableMobileGpsFlag NullableBool `json:"enableMobileGpsFlag,omitempty"`
	InactiveDate        *time.Time   `json:"inactiveDate,omitempty"`
	InactiveFlag        NullableBool `json:"inactiveFlag,omitempty"`
	LastLogin           *string      `json:"lastLogin,omitempty"`
	ClientId            *string      `json:"clientId,omitempty"`
	Token               *string      `json:"token,omitempty"`
	//  Max length: 30;
	FirstName string `json:"firstName"`
	//  Max length: 1;
	MiddleInitial *string `json:"middleInitial,omitempty"`
	//  Max length: 30;
	LastName string             `json:"lastName"`
	HireDate time.Time          `json:"hireDate"`
	Country  *CountryReference  `json:"country,omitempty"`
	Photo    *DocumentReference `json:"photo,omitempty"`
	//  Max length: 250;
	OfficeEmail *string `json:"officeEmail,omitempty"`
	//  Max length: 250;
	MobileEmail *string `json:"mobileEmail,omitempty"`
	//  Max length: 250;
	HomeEmail    *string        `json:"homeEmail,omitempty"`
	DefaultEmail NullableString `json:"defaultEmail"`
	//  Max length: 250;
	PrimaryEmail *string `json:"primaryEmail,omitempty"`
	//  Max length: 15;
	OfficePhone *string `json:"officePhone,omitempty"`
	//  Max length: 10;
	OfficeExtension *string `json:"officeExtension,omitempty"`
	//  Max length: 15;
	MobilePhone *string `json:"mobilePhone,omitempty"`
	//  Max length: 10;
	MobileExtension *string `json:"mobileExtension,omitempty"`
	//  Max length: 15;
	HomePhone *string `json:"homePhone,omitempty"`
	//  Max length: 10;
	HomeExtension                     *string                     `json:"homeExtension,omitempty"`
	DefaultPhone                      NullableString              `json:"defaultPhone"`
	SecurityRole                      SecurityRoleReference       `json:"securityRole"`
	Office365                         *MemberOffice365            `json:"office365,omitempty"`
	MapiName                          *string                     `json:"mapiName,omitempty"`
	CalendarSyncIntegrationFlag       NullableBool                `json:"calendarSyncIntegrationFlag,omitempty"`
	AuthenticationServiceType         NullableString              `json:"authenticationServiceType,omitempty"`
	TimebasedOneTimePasswordActivated NullableBool                `json:"timebasedOneTimePasswordActivated,omitempty"`
	EnableLdapAuthenticationFlag      NullableBool                `json:"enableLdapAuthenticationFlag,omitempty"`
	LdapConfiguration                 *LdapConfigurationReference `json:"ldapConfiguration,omitempty"`
	//  Max length: 50;
	LdapUserName                             *string                     `json:"ldapUserName,omitempty"`
	DirectionalSync                          *DirectionalSyncReference   `json:"directionalSync,omitempty"`
	SsoSettings                              *MemberSsoSettingsReference `json:"ssoSettings,omitempty"`
	Signature                                *string                     `json:"signature,omitempty"`
	PhoneIntegrationType                     NullableString              `json:"phoneIntegrationType,omitempty"`
	UseBrowserLanguageFlag                   NullableBool                `json:"useBrowserLanguageFlag,omitempty"`
	Title                                    *string                     `json:"title,omitempty"`
	ReportCard                               *ReportCardReference        `json:"reportCard,omitempty"`
	EnableMobileFlag                         NullableBool                `json:"enableMobileFlag,omitempty"`
	Type                                     *MemberTypeReference        `json:"type,omitempty"`
	TimeZone                                 *TimeZoneSetupReference     `json:"timeZone,omitempty"`
	PartnerPortalFlag                        NullableBool                `json:"partnerPortalFlag,omitempty"`
	StsUserAdminUrl                          *string                     `json:"stsUserAdminUrl,omitempty"`
	ToastNotificationFlag                    NullableBool                `json:"toastNotificationFlag,omitempty"`
	MemberPersonas                           []int32                     `json:"memberPersonas,omitempty"`
	AdminFlag                                NullableBool                `json:"adminFlag,omitempty"`
	StructureLevel                           *StructureReference         `json:"structureLevel,omitempty"`
	SecurityLocation                         *SystemLocationReference    `json:"securityLocation,omitempty"`
	DefaultLocation                          *SystemLocationReference    `json:"defaultLocation,omitempty"`
	DefaultDepartment                        *SystemDepartmentReference  `json:"defaultDepartment,omitempty"`
	ReportsTo                                *MemberReference            `json:"reportsTo,omitempty"`
	RestrictLocationFlag                     NullableBool                `json:"restrictLocationFlag,omitempty"`
	RestrictDepartmentFlag                   NullableBool                `json:"restrictDepartmentFlag,omitempty"`
	WorkRole                                 *WorkRoleReference          `json:"workRole,omitempty"`
	WorkType                                 *WorkTypeReference          `json:"workType,omitempty"`
	TimeApprover                             *MemberReference            `json:"timeApprover,omitempty"`
	ExpenseApprover                          *MemberReference            `json:"expenseApprover,omitempty"`
	BillableForecast                         NullableFloat64             `json:"billableForecast,omitempty"`
	DailyCapacity                            NullableFloat64             `json:"dailyCapacity,omitempty"`
	HourlyCost                               NullableFloat64             `json:"hourlyCost,omitempty"`
	HourlyRate                               NullableFloat64             `json:"hourlyRate,omitempty"`
	IncludeInUtilizationReportingFlag        NullableBool                `json:"includeInUtilizationReportingFlag,omitempty"`
	RequireExpenseEntryFlag                  NullableBool                `json:"requireExpenseEntryFlag,omitempty"`
	RequireTimeSheetEntryFlag                NullableBool                `json:"requireTimeSheetEntryFlag,omitempty"`
	RequireStartAndEndTimeOnTimeEntryFlag    NullableBool                `json:"requireStartAndEndTimeOnTimeEntryFlag,omitempty"`
	AllowInCellEntryOnTimeSheet              NullableBool                `json:"allowInCellEntryOnTimeSheet,omitempty"`
	EnterTimeAgainstCompanyFlag              NullableBool                `json:"enterTimeAgainstCompanyFlag,omitempty"`
	AllowExpensesEnteredAgainstCompaniesFlag NullableBool                `json:"allowExpensesEnteredAgainstCompaniesFlag,omitempty"`
	TimeReminderEmailFlag                    NullableBool                `json:"timeReminderEmailFlag,omitempty"`
	DaysTolerance                            NullableInt32               `json:"daysTolerance,omitempty"`
	MinimumHours                             NullableFloat64             `json:"minimumHours,omitempty"`
	TimeSheetStartDate                       *string                     `json:"timeSheetStartDate,omitempty"`
	ServiceDefaultLocation                   *SystemLocationReference    `json:"serviceDefaultLocation,omitempty"`
	ServiceDefaultDepartment                 *SystemDepartmentReference  `json:"serviceDefaultDepartment,omitempty"`
	ServiceDefaultBoard                      *BoardReference             `json:"serviceDefaultBoard,omitempty"`
	RestrictServiceDefaultLocationFlag       NullableBool                `json:"restrictServiceDefaultLocationFlag,omitempty"`
	RestrictServiceDefaultDepartmentFlag     NullableBool                `json:"restrictServiceDefaultDepartmentFlag,omitempty"`
	ExcludedServiceBoardIds                  []int32                     `json:"excludedServiceBoardIds,omitempty"`
	Teams                                    []int32                     `json:"teams,omitempty"`
	ServiceBoardTeamIds                      []int32                     `json:"serviceBoardTeamIds,omitempty"`
	ProjectDefaultLocation                   *SystemLocationReference    `json:"projectDefaultLocation,omitempty"`
	ProjectDefaultDepartment                 *SystemDepartmentReference  `json:"projectDefaultDepartment,omitempty"`
	ProjectDefaultBoard                      *ProjectBoardReference      `json:"projectDefaultBoard,omitempty"`
	RestrictProjectDefaultLocationFlag       NullableBool                `json:"restrictProjectDefaultLocationFlag,omitempty"`
	RestrictProjectDefaultDepartmentFlag     NullableBool                `json:"restrictProjectDefaultDepartmentFlag,omitempty"`
	ExcludedProjectBoardIds                  []int32                     `json:"excludedProjectBoardIds,omitempty"`
	ScheduleDefaultLocation                  *SystemLocationReference    `json:"scheduleDefaultLocation,omitempty"`
	ScheduleDefaultDepartment                *SystemDepartmentReference  `json:"scheduleDefaultDepartment,omitempty"`
	ScheduleCapacity                         NullableFloat64             `json:"scheduleCapacity,omitempty"`
	ServiceLocation                          *ServiceLocationReference   `json:"serviceLocation,omitempty"`
	RestrictScheduleFlag                     NullableBool                `json:"restrictScheduleFlag,omitempty"`
	HideMemberInDispatchPortalFlag           NullableBool                `json:"hideMemberInDispatchPortalFlag,omitempty"`
	Calendar                                 *CalendarReference          `json:"calendar,omitempty"`
	SalesDefaultLocation                     *SystemLocationReference    `json:"salesDefaultLocation,omitempty"`
	RestrictDefaultSalesTerritoryFlag        NullableBool                `json:"restrictDefaultSalesTerritoryFlag,omitempty"`
	Warehouse                                *WarehouseReference         `json:"warehouse,omitempty"`
	WarehouseBin                             *WarehouseBinReference      `json:"warehouseBin,omitempty"`
	RestrictDefaultWarehouseFlag             NullableBool                `json:"restrictDefaultWarehouseFlag,omitempty"`
	RestrictDefaultWarehouseBinFlag          NullableBool                `json:"restrictDefaultWarehouseBinFlag,omitempty"`
	CompanyActivityTabFormat                 NullableString              `json:"companyActivityTabFormat,omitempty"`
	InvoiceTimeTabFormat                     NullableString              `json:"invoiceTimeTabFormat,omitempty"`
	InvoiceScreenDefaultTabFormat            NullableString              `json:"invoiceScreenDefaultTabFormat,omitempty"`
	InvoicingDisplayOptions                  NullableString              `json:"invoicingDisplayOptions,omitempty"`
	AgreementInvoicingDisplayOptions         NullableString              `json:"agreementInvoicingDisplayOptions,omitempty"`
	AutoStartStopwatch                       NullableBool                `json:"autoStartStopwatch,omitempty"`
	AutoPopupQuickNotesWithStopwatch         NullableBool                `json:"autoPopupQuickNotesWithStopwatch,omitempty"`
	GlobalSearchDefaultTicketFilter          NullableString              `json:"globalSearchDefaultTicketFilter,omitempty"`
	GlobalSearchDefaultSort                  NullableString              `json:"globalSearchDefaultSort,omitempty"`
	PhoneSource                              *string                     `json:"phoneSource,omitempty"`
	Info                                     *map[string]string          `json:"_info,omitempty"`
	CopyPodLayouts                           *bool                       `json:"copyPodLayouts,omitempty"`
	CopySharedDefaultViews                   *bool                       `json:"copySharedDefaultViews,omitempty"`
	CopyColumnLayoutsAndFilters              *bool                       `json:"copyColumnLayoutsAndFilters,omitempty"`
	FromMemberRecId                          *int32                      `json:"fromMemberRecId,omitempty"`
	FromMemberTemplateRecId                  *int32                      `json:"fromMemberTemplateRecId,omitempty"`
	CustomFields                             []CustomFieldValue          `json:"customFields,omitempty"`
}

type _Member Member

// NewMember instantiates a new Member object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMember(identifier string, licenseClass NullableString, firstName string, lastName string, hireDate time.Time, defaultEmail NullableString, defaultPhone NullableString, securityRole SecurityRoleReference) *Member {
	this := Member{}
	this.Identifier = identifier
	this.LicenseClass = licenseClass
	this.FirstName = firstName
	this.LastName = lastName
	this.HireDate = hireDate
	this.DefaultEmail = defaultEmail
	this.DefaultPhone = defaultPhone
	this.SecurityRole = securityRole
	return &this
}

// NewMemberWithDefaults instantiates a new Member object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberWithDefaults() *Member {
	this := Member{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Member) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Member) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Member) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value
func (o *Member) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *Member) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *Member) SetIdentifier(v string) {
	o.Identifier = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Member) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Member) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Member) SetPassword(v string) {
	o.Password = &v
}

// GetDisableOnlineFlag returns the DisableOnlineFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetDisableOnlineFlag() bool {
	if o == nil || IsNil(o.DisableOnlineFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisableOnlineFlag.Get()
}

// GetDisableOnlineFlagOk returns a tuple with the DisableOnlineFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetDisableOnlineFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisableOnlineFlag.Get(), o.DisableOnlineFlag.IsSet()
}

// HasDisableOnlineFlag returns a boolean if a field has been set.
func (o *Member) HasDisableOnlineFlag() bool {
	if o != nil && o.DisableOnlineFlag.IsSet() {
		return true
	}

	return false
}

// SetDisableOnlineFlag gets a reference to the given NullableBool and assigns it to the DisableOnlineFlag field.
func (o *Member) SetDisableOnlineFlag(v bool) {
	o.DisableOnlineFlag.Set(&v)
}

// SetDisableOnlineFlagNil sets the value for DisableOnlineFlag to be an explicit nil
func (o *Member) SetDisableOnlineFlagNil() {
	o.DisableOnlineFlag.Set(nil)
}

// UnsetDisableOnlineFlag ensures that no value is present for DisableOnlineFlag, not even an explicit nil
func (o *Member) UnsetDisableOnlineFlag() {
	o.DisableOnlineFlag.Unset()
}

// GetLicenseClass returns the LicenseClass field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Member) GetLicenseClass() string {
	if o == nil || o.LicenseClass.Get() == nil {
		var ret string
		return ret
	}

	return *o.LicenseClass.Get()
}

// GetLicenseClassOk returns a tuple with the LicenseClass field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetLicenseClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseClass.Get(), o.LicenseClass.IsSet()
}

// SetLicenseClass sets field value
func (o *Member) SetLicenseClass(v string) {
	o.LicenseClass.Set(&v)
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Member) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Member) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Member) SetNotes(v string) {
	o.Notes = &v
}

// GetEmployeeIdentifer returns the EmployeeIdentifer field value if set, zero value otherwise.
func (o *Member) GetEmployeeIdentifer() string {
	if o == nil || IsNil(o.EmployeeIdentifer) {
		var ret string
		return ret
	}
	return *o.EmployeeIdentifer
}

// GetEmployeeIdentiferOk returns a tuple with the EmployeeIdentifer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetEmployeeIdentiferOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeIdentifer) {
		return nil, false
	}
	return o.EmployeeIdentifer, true
}

// HasEmployeeIdentifer returns a boolean if a field has been set.
func (o *Member) HasEmployeeIdentifer() bool {
	if o != nil && !IsNil(o.EmployeeIdentifer) {
		return true
	}

	return false
}

// SetEmployeeIdentifer gets a reference to the given string and assigns it to the EmployeeIdentifer field.
func (o *Member) SetEmployeeIdentifer(v string) {
	o.EmployeeIdentifer = &v
}

// GetVendorNumber returns the VendorNumber field value if set, zero value otherwise.
func (o *Member) GetVendorNumber() string {
	if o == nil || IsNil(o.VendorNumber) {
		var ret string
		return ret
	}
	return *o.VendorNumber
}

// GetVendorNumberOk returns a tuple with the VendorNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetVendorNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorNumber) {
		return nil, false
	}
	return o.VendorNumber, true
}

// HasVendorNumber returns a boolean if a field has been set.
func (o *Member) HasVendorNumber() bool {
	if o != nil && !IsNil(o.VendorNumber) {
		return true
	}

	return false
}

// SetVendorNumber gets a reference to the given string and assigns it to the VendorNumber field.
func (o *Member) SetVendorNumber(v string) {
	o.VendorNumber = &v
}

// GetEnableMobileGpsFlag returns the EnableMobileGpsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetEnableMobileGpsFlag() bool {
	if o == nil || IsNil(o.EnableMobileGpsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileGpsFlag.Get()
}

// GetEnableMobileGpsFlagOk returns a tuple with the EnableMobileGpsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetEnableMobileGpsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileGpsFlag.Get(), o.EnableMobileGpsFlag.IsSet()
}

// HasEnableMobileGpsFlag returns a boolean if a field has been set.
func (o *Member) HasEnableMobileGpsFlag() bool {
	if o != nil && o.EnableMobileGpsFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileGpsFlag gets a reference to the given NullableBool and assigns it to the EnableMobileGpsFlag field.
func (o *Member) SetEnableMobileGpsFlag(v bool) {
	o.EnableMobileGpsFlag.Set(&v)
}

// SetEnableMobileGpsFlagNil sets the value for EnableMobileGpsFlag to be an explicit nil
func (o *Member) SetEnableMobileGpsFlagNil() {
	o.EnableMobileGpsFlag.Set(nil)
}

// UnsetEnableMobileGpsFlag ensures that no value is present for EnableMobileGpsFlag, not even an explicit nil
func (o *Member) UnsetEnableMobileGpsFlag() {
	o.EnableMobileGpsFlag.Unset()
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *Member) GetInactiveDate() time.Time {
	if o == nil || IsNil(o.InactiveDate) {
		var ret time.Time
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetInactiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *Member) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given time.Time and assigns it to the InactiveDate field.
func (o *Member) SetInactiveDate(v time.Time) {
	o.InactiveDate = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *Member) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *Member) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}

// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *Member) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *Member) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *Member) GetLastLogin() string {
	if o == nil || IsNil(o.LastLogin) {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetLastLoginOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *Member) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *Member) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Member) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Member) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Member) SetClientId(v string) {
	o.ClientId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *Member) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *Member) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *Member) SetToken(v string) {
	o.Token = &v
}

// GetFirstName returns the FirstName field value
func (o *Member) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *Member) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *Member) SetFirstName(v string) {
	o.FirstName = v
}

// GetMiddleInitial returns the MiddleInitial field value if set, zero value otherwise.
func (o *Member) GetMiddleInitial() string {
	if o == nil || IsNil(o.MiddleInitial) {
		var ret string
		return ret
	}
	return *o.MiddleInitial
}

// GetMiddleInitialOk returns a tuple with the MiddleInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMiddleInitialOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleInitial) {
		return nil, false
	}
	return o.MiddleInitial, true
}

// HasMiddleInitial returns a boolean if a field has been set.
func (o *Member) HasMiddleInitial() bool {
	if o != nil && !IsNil(o.MiddleInitial) {
		return true
	}

	return false
}

// SetMiddleInitial gets a reference to the given string and assigns it to the MiddleInitial field.
func (o *Member) SetMiddleInitial(v string) {
	o.MiddleInitial = &v
}

// GetLastName returns the LastName field value
func (o *Member) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *Member) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *Member) SetLastName(v string) {
	o.LastName = v
}

// GetHireDate returns the HireDate field value
func (o *Member) GetHireDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.HireDate
}

// GetHireDateOk returns a tuple with the HireDate field value
// and a boolean to check if the value has been set.
func (o *Member) GetHireDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HireDate, true
}

// SetHireDate sets field value
func (o *Member) SetHireDate(v time.Time) {
	o.HireDate = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Member) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Member) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *Member) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetPhoto returns the Photo field value if set, zero value otherwise.
func (o *Member) GetPhoto() DocumentReference {
	if o == nil || IsNil(o.Photo) {
		var ret DocumentReference
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetPhotoOk() (*DocumentReference, bool) {
	if o == nil || IsNil(o.Photo) {
		return nil, false
	}
	return o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *Member) HasPhoto() bool {
	if o != nil && !IsNil(o.Photo) {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given DocumentReference and assigns it to the Photo field.
func (o *Member) SetPhoto(v DocumentReference) {
	o.Photo = &v
}

// GetOfficeEmail returns the OfficeEmail field value if set, zero value otherwise.
func (o *Member) GetOfficeEmail() string {
	if o == nil || IsNil(o.OfficeEmail) {
		var ret string
		return ret
	}
	return *o.OfficeEmail
}

// GetOfficeEmailOk returns a tuple with the OfficeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetOfficeEmailOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeEmail) {
		return nil, false
	}
	return o.OfficeEmail, true
}

// HasOfficeEmail returns a boolean if a field has been set.
func (o *Member) HasOfficeEmail() bool {
	if o != nil && !IsNil(o.OfficeEmail) {
		return true
	}

	return false
}

// SetOfficeEmail gets a reference to the given string and assigns it to the OfficeEmail field.
func (o *Member) SetOfficeEmail(v string) {
	o.OfficeEmail = &v
}

// GetMobileEmail returns the MobileEmail field value if set, zero value otherwise.
func (o *Member) GetMobileEmail() string {
	if o == nil || IsNil(o.MobileEmail) {
		var ret string
		return ret
	}
	return *o.MobileEmail
}

// GetMobileEmailOk returns a tuple with the MobileEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMobileEmailOk() (*string, bool) {
	if o == nil || IsNil(o.MobileEmail) {
		return nil, false
	}
	return o.MobileEmail, true
}

// HasMobileEmail returns a boolean if a field has been set.
func (o *Member) HasMobileEmail() bool {
	if o != nil && !IsNil(o.MobileEmail) {
		return true
	}

	return false
}

// SetMobileEmail gets a reference to the given string and assigns it to the MobileEmail field.
func (o *Member) SetMobileEmail(v string) {
	o.MobileEmail = &v
}

// GetHomeEmail returns the HomeEmail field value if set, zero value otherwise.
func (o *Member) GetHomeEmail() string {
	if o == nil || IsNil(o.HomeEmail) {
		var ret string
		return ret
	}
	return *o.HomeEmail
}

// GetHomeEmailOk returns a tuple with the HomeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetHomeEmailOk() (*string, bool) {
	if o == nil || IsNil(o.HomeEmail) {
		return nil, false
	}
	return o.HomeEmail, true
}

// HasHomeEmail returns a boolean if a field has been set.
func (o *Member) HasHomeEmail() bool {
	if o != nil && !IsNil(o.HomeEmail) {
		return true
	}

	return false
}

// SetHomeEmail gets a reference to the given string and assigns it to the HomeEmail field.
func (o *Member) SetHomeEmail(v string) {
	o.HomeEmail = &v
}

// GetDefaultEmail returns the DefaultEmail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Member) GetDefaultEmail() string {
	if o == nil || o.DefaultEmail.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultEmail.Get()
}

// GetDefaultEmailOk returns a tuple with the DefaultEmail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetDefaultEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultEmail.Get(), o.DefaultEmail.IsSet()
}

// SetDefaultEmail sets field value
func (o *Member) SetDefaultEmail(v string) {
	o.DefaultEmail.Set(&v)
}

// GetPrimaryEmail returns the PrimaryEmail field value if set, zero value otherwise.
func (o *Member) GetPrimaryEmail() string {
	if o == nil || IsNil(o.PrimaryEmail) {
		var ret string
		return ret
	}
	return *o.PrimaryEmail
}

// GetPrimaryEmailOk returns a tuple with the PrimaryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetPrimaryEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEmail) {
		return nil, false
	}
	return o.PrimaryEmail, true
}

// HasPrimaryEmail returns a boolean if a field has been set.
func (o *Member) HasPrimaryEmail() bool {
	if o != nil && !IsNil(o.PrimaryEmail) {
		return true
	}

	return false
}

// SetPrimaryEmail gets a reference to the given string and assigns it to the PrimaryEmail field.
func (o *Member) SetPrimaryEmail(v string) {
	o.PrimaryEmail = &v
}

// GetOfficePhone returns the OfficePhone field value if set, zero value otherwise.
func (o *Member) GetOfficePhone() string {
	if o == nil || IsNil(o.OfficePhone) {
		var ret string
		return ret
	}
	return *o.OfficePhone
}

// GetOfficePhoneOk returns a tuple with the OfficePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetOfficePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.OfficePhone) {
		return nil, false
	}
	return o.OfficePhone, true
}

// HasOfficePhone returns a boolean if a field has been set.
func (o *Member) HasOfficePhone() bool {
	if o != nil && !IsNil(o.OfficePhone) {
		return true
	}

	return false
}

// SetOfficePhone gets a reference to the given string and assigns it to the OfficePhone field.
func (o *Member) SetOfficePhone(v string) {
	o.OfficePhone = &v
}

// GetOfficeExtension returns the OfficeExtension field value if set, zero value otherwise.
func (o *Member) GetOfficeExtension() string {
	if o == nil || IsNil(o.OfficeExtension) {
		var ret string
		return ret
	}
	return *o.OfficeExtension
}

// GetOfficeExtensionOk returns a tuple with the OfficeExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetOfficeExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeExtension) {
		return nil, false
	}
	return o.OfficeExtension, true
}

// HasOfficeExtension returns a boolean if a field has been set.
func (o *Member) HasOfficeExtension() bool {
	if o != nil && !IsNil(o.OfficeExtension) {
		return true
	}

	return false
}

// SetOfficeExtension gets a reference to the given string and assigns it to the OfficeExtension field.
func (o *Member) SetOfficeExtension(v string) {
	o.OfficeExtension = &v
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise.
func (o *Member) GetMobilePhone() string {
	if o == nil || IsNil(o.MobilePhone) {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMobilePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhone) {
		return nil, false
	}
	return o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *Member) HasMobilePhone() bool {
	if o != nil && !IsNil(o.MobilePhone) {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *Member) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

// GetMobileExtension returns the MobileExtension field value if set, zero value otherwise.
func (o *Member) GetMobileExtension() string {
	if o == nil || IsNil(o.MobileExtension) {
		var ret string
		return ret
	}
	return *o.MobileExtension
}

// GetMobileExtensionOk returns a tuple with the MobileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMobileExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.MobileExtension) {
		return nil, false
	}
	return o.MobileExtension, true
}

// HasMobileExtension returns a boolean if a field has been set.
func (o *Member) HasMobileExtension() bool {
	if o != nil && !IsNil(o.MobileExtension) {
		return true
	}

	return false
}

// SetMobileExtension gets a reference to the given string and assigns it to the MobileExtension field.
func (o *Member) SetMobileExtension(v string) {
	o.MobileExtension = &v
}

// GetHomePhone returns the HomePhone field value if set, zero value otherwise.
func (o *Member) GetHomePhone() string {
	if o == nil || IsNil(o.HomePhone) {
		var ret string
		return ret
	}
	return *o.HomePhone
}

// GetHomePhoneOk returns a tuple with the HomePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetHomePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.HomePhone) {
		return nil, false
	}
	return o.HomePhone, true
}

// HasHomePhone returns a boolean if a field has been set.
func (o *Member) HasHomePhone() bool {
	if o != nil && !IsNil(o.HomePhone) {
		return true
	}

	return false
}

// SetHomePhone gets a reference to the given string and assigns it to the HomePhone field.
func (o *Member) SetHomePhone(v string) {
	o.HomePhone = &v
}

// GetHomeExtension returns the HomeExtension field value if set, zero value otherwise.
func (o *Member) GetHomeExtension() string {
	if o == nil || IsNil(o.HomeExtension) {
		var ret string
		return ret
	}
	return *o.HomeExtension
}

// GetHomeExtensionOk returns a tuple with the HomeExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetHomeExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.HomeExtension) {
		return nil, false
	}
	return o.HomeExtension, true
}

// HasHomeExtension returns a boolean if a field has been set.
func (o *Member) HasHomeExtension() bool {
	if o != nil && !IsNil(o.HomeExtension) {
		return true
	}

	return false
}

// SetHomeExtension gets a reference to the given string and assigns it to the HomeExtension field.
func (o *Member) SetHomeExtension(v string) {
	o.HomeExtension = &v
}

// GetDefaultPhone returns the DefaultPhone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Member) GetDefaultPhone() string {
	if o == nil || o.DefaultPhone.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultPhone.Get()
}

// GetDefaultPhoneOk returns a tuple with the DefaultPhone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetDefaultPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPhone.Get(), o.DefaultPhone.IsSet()
}

// SetDefaultPhone sets field value
func (o *Member) SetDefaultPhone(v string) {
	o.DefaultPhone.Set(&v)
}

// GetSecurityRole returns the SecurityRole field value
func (o *Member) GetSecurityRole() SecurityRoleReference {
	if o == nil {
		var ret SecurityRoleReference
		return ret
	}

	return o.SecurityRole
}

// GetSecurityRoleOk returns a tuple with the SecurityRole field value
// and a boolean to check if the value has been set.
func (o *Member) GetSecurityRoleOk() (*SecurityRoleReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityRole, true
}

// SetSecurityRole sets field value
func (o *Member) SetSecurityRole(v SecurityRoleReference) {
	o.SecurityRole = v
}

// GetOffice365 returns the Office365 field value if set, zero value otherwise.
func (o *Member) GetOffice365() MemberOffice365 {
	if o == nil || IsNil(o.Office365) {
		var ret MemberOffice365
		return ret
	}
	return *o.Office365
}

// GetOffice365Ok returns a tuple with the Office365 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetOffice365Ok() (*MemberOffice365, bool) {
	if o == nil || IsNil(o.Office365) {
		return nil, false
	}
	return o.Office365, true
}

// HasOffice365 returns a boolean if a field has been set.
func (o *Member) HasOffice365() bool {
	if o != nil && !IsNil(o.Office365) {
		return true
	}

	return false
}

// SetOffice365 gets a reference to the given MemberOffice365 and assigns it to the Office365 field.
func (o *Member) SetOffice365(v MemberOffice365) {
	o.Office365 = &v
}

// GetMapiName returns the MapiName field value if set, zero value otherwise.
func (o *Member) GetMapiName() string {
	if o == nil || IsNil(o.MapiName) {
		var ret string
		return ret
	}
	return *o.MapiName
}

// GetMapiNameOk returns a tuple with the MapiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMapiNameOk() (*string, bool) {
	if o == nil || IsNil(o.MapiName) {
		return nil, false
	}
	return o.MapiName, true
}

// HasMapiName returns a boolean if a field has been set.
func (o *Member) HasMapiName() bool {
	if o != nil && !IsNil(o.MapiName) {
		return true
	}

	return false
}

// SetMapiName gets a reference to the given string and assigns it to the MapiName field.
func (o *Member) SetMapiName(v string) {
	o.MapiName = &v
}

// GetCalendarSyncIntegrationFlag returns the CalendarSyncIntegrationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetCalendarSyncIntegrationFlag() bool {
	if o == nil || IsNil(o.CalendarSyncIntegrationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CalendarSyncIntegrationFlag.Get()
}

// GetCalendarSyncIntegrationFlagOk returns a tuple with the CalendarSyncIntegrationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetCalendarSyncIntegrationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CalendarSyncIntegrationFlag.Get(), o.CalendarSyncIntegrationFlag.IsSet()
}

// HasCalendarSyncIntegrationFlag returns a boolean if a field has been set.
func (o *Member) HasCalendarSyncIntegrationFlag() bool {
	if o != nil && o.CalendarSyncIntegrationFlag.IsSet() {
		return true
	}

	return false
}

// SetCalendarSyncIntegrationFlag gets a reference to the given NullableBool and assigns it to the CalendarSyncIntegrationFlag field.
func (o *Member) SetCalendarSyncIntegrationFlag(v bool) {
	o.CalendarSyncIntegrationFlag.Set(&v)
}

// SetCalendarSyncIntegrationFlagNil sets the value for CalendarSyncIntegrationFlag to be an explicit nil
func (o *Member) SetCalendarSyncIntegrationFlagNil() {
	o.CalendarSyncIntegrationFlag.Set(nil)
}

// UnsetCalendarSyncIntegrationFlag ensures that no value is present for CalendarSyncIntegrationFlag, not even an explicit nil
func (o *Member) UnsetCalendarSyncIntegrationFlag() {
	o.CalendarSyncIntegrationFlag.Unset()
}

// GetAuthenticationServiceType returns the AuthenticationServiceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAuthenticationServiceType() string {
	if o == nil || IsNil(o.AuthenticationServiceType.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationServiceType.Get()
}

// GetAuthenticationServiceTypeOk returns a tuple with the AuthenticationServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAuthenticationServiceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationServiceType.Get(), o.AuthenticationServiceType.IsSet()
}

// HasAuthenticationServiceType returns a boolean if a field has been set.
func (o *Member) HasAuthenticationServiceType() bool {
	if o != nil && o.AuthenticationServiceType.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationServiceType gets a reference to the given NullableString and assigns it to the AuthenticationServiceType field.
func (o *Member) SetAuthenticationServiceType(v string) {
	o.AuthenticationServiceType.Set(&v)
}

// SetAuthenticationServiceTypeNil sets the value for AuthenticationServiceType to be an explicit nil
func (o *Member) SetAuthenticationServiceTypeNil() {
	o.AuthenticationServiceType.Set(nil)
}

// UnsetAuthenticationServiceType ensures that no value is present for AuthenticationServiceType, not even an explicit nil
func (o *Member) UnsetAuthenticationServiceType() {
	o.AuthenticationServiceType.Unset()
}

// GetTimebasedOneTimePasswordActivated returns the TimebasedOneTimePasswordActivated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetTimebasedOneTimePasswordActivated() bool {
	if o == nil || IsNil(o.TimebasedOneTimePasswordActivated.Get()) {
		var ret bool
		return ret
	}
	return *o.TimebasedOneTimePasswordActivated.Get()
}

// GetTimebasedOneTimePasswordActivatedOk returns a tuple with the TimebasedOneTimePasswordActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetTimebasedOneTimePasswordActivatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimebasedOneTimePasswordActivated.Get(), o.TimebasedOneTimePasswordActivated.IsSet()
}

// HasTimebasedOneTimePasswordActivated returns a boolean if a field has been set.
func (o *Member) HasTimebasedOneTimePasswordActivated() bool {
	if o != nil && o.TimebasedOneTimePasswordActivated.IsSet() {
		return true
	}

	return false
}

// SetTimebasedOneTimePasswordActivated gets a reference to the given NullableBool and assigns it to the TimebasedOneTimePasswordActivated field.
func (o *Member) SetTimebasedOneTimePasswordActivated(v bool) {
	o.TimebasedOneTimePasswordActivated.Set(&v)
}

// SetTimebasedOneTimePasswordActivatedNil sets the value for TimebasedOneTimePasswordActivated to be an explicit nil
func (o *Member) SetTimebasedOneTimePasswordActivatedNil() {
	o.TimebasedOneTimePasswordActivated.Set(nil)
}

// UnsetTimebasedOneTimePasswordActivated ensures that no value is present for TimebasedOneTimePasswordActivated, not even an explicit nil
func (o *Member) UnsetTimebasedOneTimePasswordActivated() {
	o.TimebasedOneTimePasswordActivated.Unset()
}

// GetEnableLdapAuthenticationFlag returns the EnableLdapAuthenticationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetEnableLdapAuthenticationFlag() bool {
	if o == nil || IsNil(o.EnableLdapAuthenticationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableLdapAuthenticationFlag.Get()
}

// GetEnableLdapAuthenticationFlagOk returns a tuple with the EnableLdapAuthenticationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetEnableLdapAuthenticationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableLdapAuthenticationFlag.Get(), o.EnableLdapAuthenticationFlag.IsSet()
}

// HasEnableLdapAuthenticationFlag returns a boolean if a field has been set.
func (o *Member) HasEnableLdapAuthenticationFlag() bool {
	if o != nil && o.EnableLdapAuthenticationFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableLdapAuthenticationFlag gets a reference to the given NullableBool and assigns it to the EnableLdapAuthenticationFlag field.
func (o *Member) SetEnableLdapAuthenticationFlag(v bool) {
	o.EnableLdapAuthenticationFlag.Set(&v)
}

// SetEnableLdapAuthenticationFlagNil sets the value for EnableLdapAuthenticationFlag to be an explicit nil
func (o *Member) SetEnableLdapAuthenticationFlagNil() {
	o.EnableLdapAuthenticationFlag.Set(nil)
}

// UnsetEnableLdapAuthenticationFlag ensures that no value is present for EnableLdapAuthenticationFlag, not even an explicit nil
func (o *Member) UnsetEnableLdapAuthenticationFlag() {
	o.EnableLdapAuthenticationFlag.Unset()
}

// GetLdapConfiguration returns the LdapConfiguration field value if set, zero value otherwise.
func (o *Member) GetLdapConfiguration() LdapConfigurationReference {
	if o == nil || IsNil(o.LdapConfiguration) {
		var ret LdapConfigurationReference
		return ret
	}
	return *o.LdapConfiguration
}

// GetLdapConfigurationOk returns a tuple with the LdapConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetLdapConfigurationOk() (*LdapConfigurationReference, bool) {
	if o == nil || IsNil(o.LdapConfiguration) {
		return nil, false
	}
	return o.LdapConfiguration, true
}

// HasLdapConfiguration returns a boolean if a field has been set.
func (o *Member) HasLdapConfiguration() bool {
	if o != nil && !IsNil(o.LdapConfiguration) {
		return true
	}

	return false
}

// SetLdapConfiguration gets a reference to the given LdapConfigurationReference and assigns it to the LdapConfiguration field.
func (o *Member) SetLdapConfiguration(v LdapConfigurationReference) {
	o.LdapConfiguration = &v
}

// GetLdapUserName returns the LdapUserName field value if set, zero value otherwise.
func (o *Member) GetLdapUserName() string {
	if o == nil || IsNil(o.LdapUserName) {
		var ret string
		return ret
	}
	return *o.LdapUserName
}

// GetLdapUserNameOk returns a tuple with the LdapUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetLdapUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.LdapUserName) {
		return nil, false
	}
	return o.LdapUserName, true
}

// HasLdapUserName returns a boolean if a field has been set.
func (o *Member) HasLdapUserName() bool {
	if o != nil && !IsNil(o.LdapUserName) {
		return true
	}

	return false
}

// SetLdapUserName gets a reference to the given string and assigns it to the LdapUserName field.
func (o *Member) SetLdapUserName(v string) {
	o.LdapUserName = &v
}

// GetDirectionalSync returns the DirectionalSync field value if set, zero value otherwise.
func (o *Member) GetDirectionalSync() DirectionalSyncReference {
	if o == nil || IsNil(o.DirectionalSync) {
		var ret DirectionalSyncReference
		return ret
	}
	return *o.DirectionalSync
}

// GetDirectionalSyncOk returns a tuple with the DirectionalSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetDirectionalSyncOk() (*DirectionalSyncReference, bool) {
	if o == nil || IsNil(o.DirectionalSync) {
		return nil, false
	}
	return o.DirectionalSync, true
}

// HasDirectionalSync returns a boolean if a field has been set.
func (o *Member) HasDirectionalSync() bool {
	if o != nil && !IsNil(o.DirectionalSync) {
		return true
	}

	return false
}

// SetDirectionalSync gets a reference to the given DirectionalSyncReference and assigns it to the DirectionalSync field.
func (o *Member) SetDirectionalSync(v DirectionalSyncReference) {
	o.DirectionalSync = &v
}

// GetSsoSettings returns the SsoSettings field value if set, zero value otherwise.
func (o *Member) GetSsoSettings() MemberSsoSettingsReference {
	if o == nil || IsNil(o.SsoSettings) {
		var ret MemberSsoSettingsReference
		return ret
	}
	return *o.SsoSettings
}

// GetSsoSettingsOk returns a tuple with the SsoSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetSsoSettingsOk() (*MemberSsoSettingsReference, bool) {
	if o == nil || IsNil(o.SsoSettings) {
		return nil, false
	}
	return o.SsoSettings, true
}

// HasSsoSettings returns a boolean if a field has been set.
func (o *Member) HasSsoSettings() bool {
	if o != nil && !IsNil(o.SsoSettings) {
		return true
	}

	return false
}

// SetSsoSettings gets a reference to the given MemberSsoSettingsReference and assigns it to the SsoSettings field.
func (o *Member) SetSsoSettings(v MemberSsoSettingsReference) {
	o.SsoSettings = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *Member) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *Member) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *Member) SetSignature(v string) {
	o.Signature = &v
}

// GetPhoneIntegrationType returns the PhoneIntegrationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetPhoneIntegrationType() string {
	if o == nil || IsNil(o.PhoneIntegrationType.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneIntegrationType.Get()
}

// GetPhoneIntegrationTypeOk returns a tuple with the PhoneIntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetPhoneIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneIntegrationType.Get(), o.PhoneIntegrationType.IsSet()
}

// HasPhoneIntegrationType returns a boolean if a field has been set.
func (o *Member) HasPhoneIntegrationType() bool {
	if o != nil && o.PhoneIntegrationType.IsSet() {
		return true
	}

	return false
}

// SetPhoneIntegrationType gets a reference to the given NullableString and assigns it to the PhoneIntegrationType field.
func (o *Member) SetPhoneIntegrationType(v string) {
	o.PhoneIntegrationType.Set(&v)
}

// SetPhoneIntegrationTypeNil sets the value for PhoneIntegrationType to be an explicit nil
func (o *Member) SetPhoneIntegrationTypeNil() {
	o.PhoneIntegrationType.Set(nil)
}

// UnsetPhoneIntegrationType ensures that no value is present for PhoneIntegrationType, not even an explicit nil
func (o *Member) UnsetPhoneIntegrationType() {
	o.PhoneIntegrationType.Unset()
}

// GetUseBrowserLanguageFlag returns the UseBrowserLanguageFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetUseBrowserLanguageFlag() bool {
	if o == nil || IsNil(o.UseBrowserLanguageFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UseBrowserLanguageFlag.Get()
}

// GetUseBrowserLanguageFlagOk returns a tuple with the UseBrowserLanguageFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetUseBrowserLanguageFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseBrowserLanguageFlag.Get(), o.UseBrowserLanguageFlag.IsSet()
}

// HasUseBrowserLanguageFlag returns a boolean if a field has been set.
func (o *Member) HasUseBrowserLanguageFlag() bool {
	if o != nil && o.UseBrowserLanguageFlag.IsSet() {
		return true
	}

	return false
}

// SetUseBrowserLanguageFlag gets a reference to the given NullableBool and assigns it to the UseBrowserLanguageFlag field.
func (o *Member) SetUseBrowserLanguageFlag(v bool) {
	o.UseBrowserLanguageFlag.Set(&v)
}

// SetUseBrowserLanguageFlagNil sets the value for UseBrowserLanguageFlag to be an explicit nil
func (o *Member) SetUseBrowserLanguageFlagNil() {
	o.UseBrowserLanguageFlag.Set(nil)
}

// UnsetUseBrowserLanguageFlag ensures that no value is present for UseBrowserLanguageFlag, not even an explicit nil
func (o *Member) UnsetUseBrowserLanguageFlag() {
	o.UseBrowserLanguageFlag.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Member) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Member) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Member) SetTitle(v string) {
	o.Title = &v
}

// GetReportCard returns the ReportCard field value if set, zero value otherwise.
func (o *Member) GetReportCard() ReportCardReference {
	if o == nil || IsNil(o.ReportCard) {
		var ret ReportCardReference
		return ret
	}
	return *o.ReportCard
}

// GetReportCardOk returns a tuple with the ReportCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetReportCardOk() (*ReportCardReference, bool) {
	if o == nil || IsNil(o.ReportCard) {
		return nil, false
	}
	return o.ReportCard, true
}

// HasReportCard returns a boolean if a field has been set.
func (o *Member) HasReportCard() bool {
	if o != nil && !IsNil(o.ReportCard) {
		return true
	}

	return false
}

// SetReportCard gets a reference to the given ReportCardReference and assigns it to the ReportCard field.
func (o *Member) SetReportCard(v ReportCardReference) {
	o.ReportCard = &v
}

// GetEnableMobileFlag returns the EnableMobileFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetEnableMobileFlag() bool {
	if o == nil || IsNil(o.EnableMobileFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileFlag.Get()
}

// GetEnableMobileFlagOk returns a tuple with the EnableMobileFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetEnableMobileFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileFlag.Get(), o.EnableMobileFlag.IsSet()
}

// HasEnableMobileFlag returns a boolean if a field has been set.
func (o *Member) HasEnableMobileFlag() bool {
	if o != nil && o.EnableMobileFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileFlag gets a reference to the given NullableBool and assigns it to the EnableMobileFlag field.
func (o *Member) SetEnableMobileFlag(v bool) {
	o.EnableMobileFlag.Set(&v)
}

// SetEnableMobileFlagNil sets the value for EnableMobileFlag to be an explicit nil
func (o *Member) SetEnableMobileFlagNil() {
	o.EnableMobileFlag.Set(nil)
}

// UnsetEnableMobileFlag ensures that no value is present for EnableMobileFlag, not even an explicit nil
func (o *Member) UnsetEnableMobileFlag() {
	o.EnableMobileFlag.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Member) GetType() MemberTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret MemberTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTypeOk() (*MemberTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Member) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MemberTypeReference and assigns it to the Type field.
func (o *Member) SetType(v MemberTypeReference) {
	o.Type = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Member) GetTimeZone() TimeZoneSetupReference {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimeZoneSetupReference
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTimeZoneOk() (*TimeZoneSetupReference, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Member) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZoneSetupReference and assigns it to the TimeZone field.
func (o *Member) SetTimeZone(v TimeZoneSetupReference) {
	o.TimeZone = &v
}

// GetPartnerPortalFlag returns the PartnerPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetPartnerPortalFlag() bool {
	if o == nil || IsNil(o.PartnerPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PartnerPortalFlag.Get()
}

// GetPartnerPortalFlagOk returns a tuple with the PartnerPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetPartnerPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerPortalFlag.Get(), o.PartnerPortalFlag.IsSet()
}

// HasPartnerPortalFlag returns a boolean if a field has been set.
func (o *Member) HasPartnerPortalFlag() bool {
	if o != nil && o.PartnerPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetPartnerPortalFlag gets a reference to the given NullableBool and assigns it to the PartnerPortalFlag field.
func (o *Member) SetPartnerPortalFlag(v bool) {
	o.PartnerPortalFlag.Set(&v)
}

// SetPartnerPortalFlagNil sets the value for PartnerPortalFlag to be an explicit nil
func (o *Member) SetPartnerPortalFlagNil() {
	o.PartnerPortalFlag.Set(nil)
}

// UnsetPartnerPortalFlag ensures that no value is present for PartnerPortalFlag, not even an explicit nil
func (o *Member) UnsetPartnerPortalFlag() {
	o.PartnerPortalFlag.Unset()
}

// GetStsUserAdminUrl returns the StsUserAdminUrl field value if set, zero value otherwise.
func (o *Member) GetStsUserAdminUrl() string {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		var ret string
		return ret
	}
	return *o.StsUserAdminUrl
}

// GetStsUserAdminUrlOk returns a tuple with the StsUserAdminUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetStsUserAdminUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		return nil, false
	}
	return o.StsUserAdminUrl, true
}

// HasStsUserAdminUrl returns a boolean if a field has been set.
func (o *Member) HasStsUserAdminUrl() bool {
	if o != nil && !IsNil(o.StsUserAdminUrl) {
		return true
	}

	return false
}

// SetStsUserAdminUrl gets a reference to the given string and assigns it to the StsUserAdminUrl field.
func (o *Member) SetStsUserAdminUrl(v string) {
	o.StsUserAdminUrl = &v
}

// GetToastNotificationFlag returns the ToastNotificationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetToastNotificationFlag() bool {
	if o == nil || IsNil(o.ToastNotificationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ToastNotificationFlag.Get()
}

// GetToastNotificationFlagOk returns a tuple with the ToastNotificationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetToastNotificationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToastNotificationFlag.Get(), o.ToastNotificationFlag.IsSet()
}

// HasToastNotificationFlag returns a boolean if a field has been set.
func (o *Member) HasToastNotificationFlag() bool {
	if o != nil && o.ToastNotificationFlag.IsSet() {
		return true
	}

	return false
}

// SetToastNotificationFlag gets a reference to the given NullableBool and assigns it to the ToastNotificationFlag field.
func (o *Member) SetToastNotificationFlag(v bool) {
	o.ToastNotificationFlag.Set(&v)
}

// SetToastNotificationFlagNil sets the value for ToastNotificationFlag to be an explicit nil
func (o *Member) SetToastNotificationFlagNil() {
	o.ToastNotificationFlag.Set(nil)
}

// UnsetToastNotificationFlag ensures that no value is present for ToastNotificationFlag, not even an explicit nil
func (o *Member) UnsetToastNotificationFlag() {
	o.ToastNotificationFlag.Unset()
}

// GetMemberPersonas returns the MemberPersonas field value if set, zero value otherwise.
func (o *Member) GetMemberPersonas() []int32 {
	if o == nil || IsNil(o.MemberPersonas) {
		var ret []int32
		return ret
	}
	return o.MemberPersonas
}

// GetMemberPersonasOk returns a tuple with the MemberPersonas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMemberPersonasOk() ([]int32, bool) {
	if o == nil || IsNil(o.MemberPersonas) {
		return nil, false
	}
	return o.MemberPersonas, true
}

// HasMemberPersonas returns a boolean if a field has been set.
func (o *Member) HasMemberPersonas() bool {
	if o != nil && !IsNil(o.MemberPersonas) {
		return true
	}

	return false
}

// SetMemberPersonas gets a reference to the given []int32 and assigns it to the MemberPersonas field.
func (o *Member) SetMemberPersonas(v []int32) {
	o.MemberPersonas = v
}

// GetAdminFlag returns the AdminFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAdminFlag() bool {
	if o == nil || IsNil(o.AdminFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AdminFlag.Get()
}

// GetAdminFlagOk returns a tuple with the AdminFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAdminFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminFlag.Get(), o.AdminFlag.IsSet()
}

// HasAdminFlag returns a boolean if a field has been set.
func (o *Member) HasAdminFlag() bool {
	if o != nil && o.AdminFlag.IsSet() {
		return true
	}

	return false
}

// SetAdminFlag gets a reference to the given NullableBool and assigns it to the AdminFlag field.
func (o *Member) SetAdminFlag(v bool) {
	o.AdminFlag.Set(&v)
}

// SetAdminFlagNil sets the value for AdminFlag to be an explicit nil
func (o *Member) SetAdminFlagNil() {
	o.AdminFlag.Set(nil)
}

// UnsetAdminFlag ensures that no value is present for AdminFlag, not even an explicit nil
func (o *Member) UnsetAdminFlag() {
	o.AdminFlag.Unset()
}

// GetStructureLevel returns the StructureLevel field value if set, zero value otherwise.
func (o *Member) GetStructureLevel() StructureReference {
	if o == nil || IsNil(o.StructureLevel) {
		var ret StructureReference
		return ret
	}
	return *o.StructureLevel
}

// GetStructureLevelOk returns a tuple with the StructureLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetStructureLevelOk() (*StructureReference, bool) {
	if o == nil || IsNil(o.StructureLevel) {
		return nil, false
	}
	return o.StructureLevel, true
}

// HasStructureLevel returns a boolean if a field has been set.
func (o *Member) HasStructureLevel() bool {
	if o != nil && !IsNil(o.StructureLevel) {
		return true
	}

	return false
}

// SetStructureLevel gets a reference to the given StructureReference and assigns it to the StructureLevel field.
func (o *Member) SetStructureLevel(v StructureReference) {
	o.StructureLevel = &v
}

// GetSecurityLocation returns the SecurityLocation field value if set, zero value otherwise.
func (o *Member) GetSecurityLocation() SystemLocationReference {
	if o == nil || IsNil(o.SecurityLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SecurityLocation
}

// GetSecurityLocationOk returns a tuple with the SecurityLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetSecurityLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SecurityLocation) {
		return nil, false
	}
	return o.SecurityLocation, true
}

// HasSecurityLocation returns a boolean if a field has been set.
func (o *Member) HasSecurityLocation() bool {
	if o != nil && !IsNil(o.SecurityLocation) {
		return true
	}

	return false
}

// SetSecurityLocation gets a reference to the given SystemLocationReference and assigns it to the SecurityLocation field.
func (o *Member) SetSecurityLocation(v SystemLocationReference) {
	o.SecurityLocation = &v
}

// GetDefaultLocation returns the DefaultLocation field value if set, zero value otherwise.
func (o *Member) GetDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.DefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.DefaultLocation) {
		return nil, false
	}
	return o.DefaultLocation, true
}

// HasDefaultLocation returns a boolean if a field has been set.
func (o *Member) HasDefaultLocation() bool {
	if o != nil && !IsNil(o.DefaultLocation) {
		return true
	}

	return false
}

// SetDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the DefaultLocation field.
func (o *Member) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = &v
}

// GetDefaultDepartment returns the DefaultDepartment field value if set, zero value otherwise.
func (o *Member) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.DefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.DefaultDepartment) {
		return nil, false
	}
	return o.DefaultDepartment, true
}

// HasDefaultDepartment returns a boolean if a field has been set.
func (o *Member) HasDefaultDepartment() bool {
	if o != nil && !IsNil(o.DefaultDepartment) {
		return true
	}

	return false
}

// SetDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the DefaultDepartment field.
func (o *Member) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = &v
}

// GetReportsTo returns the ReportsTo field value if set, zero value otherwise.
func (o *Member) GetReportsTo() MemberReference {
	if o == nil || IsNil(o.ReportsTo) {
		var ret MemberReference
		return ret
	}
	return *o.ReportsTo
}

// GetReportsToOk returns a tuple with the ReportsTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetReportsToOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ReportsTo) {
		return nil, false
	}
	return o.ReportsTo, true
}

// HasReportsTo returns a boolean if a field has been set.
func (o *Member) HasReportsTo() bool {
	if o != nil && !IsNil(o.ReportsTo) {
		return true
	}

	return false
}

// SetReportsTo gets a reference to the given MemberReference and assigns it to the ReportsTo field.
func (o *Member) SetReportsTo(v MemberReference) {
	o.ReportsTo = &v
}

// GetRestrictLocationFlag returns the RestrictLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictLocationFlag() bool {
	if o == nil || IsNil(o.RestrictLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictLocationFlag.Get()
}

// GetRestrictLocationFlagOk returns a tuple with the RestrictLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictLocationFlag.Get(), o.RestrictLocationFlag.IsSet()
}

// HasRestrictLocationFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictLocationFlag() bool {
	if o != nil && o.RestrictLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictLocationFlag field.
func (o *Member) SetRestrictLocationFlag(v bool) {
	o.RestrictLocationFlag.Set(&v)
}

// SetRestrictLocationFlagNil sets the value for RestrictLocationFlag to be an explicit nil
func (o *Member) SetRestrictLocationFlagNil() {
	o.RestrictLocationFlag.Set(nil)
}

// UnsetRestrictLocationFlag ensures that no value is present for RestrictLocationFlag, not even an explicit nil
func (o *Member) UnsetRestrictLocationFlag() {
	o.RestrictLocationFlag.Unset()
}

// GetRestrictDepartmentFlag returns the RestrictDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDepartmentFlag.Get()
}

// GetRestrictDepartmentFlagOk returns a tuple with the RestrictDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDepartmentFlag.Get(), o.RestrictDepartmentFlag.IsSet()
}

// HasRestrictDepartmentFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictDepartmentFlag() bool {
	if o != nil && o.RestrictDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictDepartmentFlag field.
func (o *Member) SetRestrictDepartmentFlag(v bool) {
	o.RestrictDepartmentFlag.Set(&v)
}

// SetRestrictDepartmentFlagNil sets the value for RestrictDepartmentFlag to be an explicit nil
func (o *Member) SetRestrictDepartmentFlagNil() {
	o.RestrictDepartmentFlag.Set(nil)
}

// UnsetRestrictDepartmentFlag ensures that no value is present for RestrictDepartmentFlag, not even an explicit nil
func (o *Member) UnsetRestrictDepartmentFlag() {
	o.RestrictDepartmentFlag.Unset()
}

// GetWorkRole returns the WorkRole field value if set, zero value otherwise.
func (o *Member) GetWorkRole() WorkRoleReference {
	if o == nil || IsNil(o.WorkRole) {
		var ret WorkRoleReference
		return ret
	}
	return *o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil || IsNil(o.WorkRole) {
		return nil, false
	}
	return o.WorkRole, true
}

// HasWorkRole returns a boolean if a field has been set.
func (o *Member) HasWorkRole() bool {
	if o != nil && !IsNil(o.WorkRole) {
		return true
	}

	return false
}

// SetWorkRole gets a reference to the given WorkRoleReference and assigns it to the WorkRole field.
func (o *Member) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = &v
}

// GetWorkType returns the WorkType field value if set, zero value otherwise.
func (o *Member) GetWorkType() WorkTypeReference {
	if o == nil || IsNil(o.WorkType) {
		var ret WorkTypeReference
		return ret
	}
	return *o.WorkType
}

// GetWorkTypeOk returns a tuple with the WorkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetWorkTypeOk() (*WorkTypeReference, bool) {
	if o == nil || IsNil(o.WorkType) {
		return nil, false
	}
	return o.WorkType, true
}

// HasWorkType returns a boolean if a field has been set.
func (o *Member) HasWorkType() bool {
	if o != nil && !IsNil(o.WorkType) {
		return true
	}

	return false
}

// SetWorkType gets a reference to the given WorkTypeReference and assigns it to the WorkType field.
func (o *Member) SetWorkType(v WorkTypeReference) {
	o.WorkType = &v
}

// GetTimeApprover returns the TimeApprover field value if set, zero value otherwise.
func (o *Member) GetTimeApprover() MemberReference {
	if o == nil || IsNil(o.TimeApprover) {
		var ret MemberReference
		return ret
	}
	return *o.TimeApprover
}

// GetTimeApproverOk returns a tuple with the TimeApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTimeApproverOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.TimeApprover) {
		return nil, false
	}
	return o.TimeApprover, true
}

// HasTimeApprover returns a boolean if a field has been set.
func (o *Member) HasTimeApprover() bool {
	if o != nil && !IsNil(o.TimeApprover) {
		return true
	}

	return false
}

// SetTimeApprover gets a reference to the given MemberReference and assigns it to the TimeApprover field.
func (o *Member) SetTimeApprover(v MemberReference) {
	o.TimeApprover = &v
}

// GetExpenseApprover returns the ExpenseApprover field value if set, zero value otherwise.
func (o *Member) GetExpenseApprover() MemberReference {
	if o == nil || IsNil(o.ExpenseApprover) {
		var ret MemberReference
		return ret
	}
	return *o.ExpenseApprover
}

// GetExpenseApproverOk returns a tuple with the ExpenseApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetExpenseApproverOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ExpenseApprover) {
		return nil, false
	}
	return o.ExpenseApprover, true
}

// HasExpenseApprover returns a boolean if a field has been set.
func (o *Member) HasExpenseApprover() bool {
	if o != nil && !IsNil(o.ExpenseApprover) {
		return true
	}

	return false
}

// SetExpenseApprover gets a reference to the given MemberReference and assigns it to the ExpenseApprover field.
func (o *Member) SetExpenseApprover(v MemberReference) {
	o.ExpenseApprover = &v
}

// GetBillableForecast returns the BillableForecast field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetBillableForecast() float64 {
	if o == nil || IsNil(o.BillableForecast.Get()) {
		var ret float64
		return ret
	}
	return *o.BillableForecast.Get()
}

// GetBillableForecastOk returns a tuple with the BillableForecast field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetBillableForecastOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillableForecast.Get(), o.BillableForecast.IsSet()
}

// HasBillableForecast returns a boolean if a field has been set.
func (o *Member) HasBillableForecast() bool {
	if o != nil && o.BillableForecast.IsSet() {
		return true
	}

	return false
}

// SetBillableForecast gets a reference to the given NullableFloat64 and assigns it to the BillableForecast field.
func (o *Member) SetBillableForecast(v float64) {
	o.BillableForecast.Set(&v)
}

// SetBillableForecastNil sets the value for BillableForecast to be an explicit nil
func (o *Member) SetBillableForecastNil() {
	o.BillableForecast.Set(nil)
}

// UnsetBillableForecast ensures that no value is present for BillableForecast, not even an explicit nil
func (o *Member) UnsetBillableForecast() {
	o.BillableForecast.Unset()
}

// GetDailyCapacity returns the DailyCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetDailyCapacity() float64 {
	if o == nil || IsNil(o.DailyCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.DailyCapacity.Get()
}

// GetDailyCapacityOk returns a tuple with the DailyCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetDailyCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DailyCapacity.Get(), o.DailyCapacity.IsSet()
}

// HasDailyCapacity returns a boolean if a field has been set.
func (o *Member) HasDailyCapacity() bool {
	if o != nil && o.DailyCapacity.IsSet() {
		return true
	}

	return false
}

// SetDailyCapacity gets a reference to the given NullableFloat64 and assigns it to the DailyCapacity field.
func (o *Member) SetDailyCapacity(v float64) {
	o.DailyCapacity.Set(&v)
}

// SetDailyCapacityNil sets the value for DailyCapacity to be an explicit nil
func (o *Member) SetDailyCapacityNil() {
	o.DailyCapacity.Set(nil)
}

// UnsetDailyCapacity ensures that no value is present for DailyCapacity, not even an explicit nil
func (o *Member) UnsetDailyCapacity() {
	o.DailyCapacity.Unset()
}

// GetHourlyCost returns the HourlyCost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetHourlyCost() float64 {
	if o == nil || IsNil(o.HourlyCost.Get()) {
		var ret float64
		return ret
	}
	return *o.HourlyCost.Get()
}

// GetHourlyCostOk returns a tuple with the HourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetHourlyCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyCost.Get(), o.HourlyCost.IsSet()
}

// HasHourlyCost returns a boolean if a field has been set.
func (o *Member) HasHourlyCost() bool {
	if o != nil && o.HourlyCost.IsSet() {
		return true
	}

	return false
}

// SetHourlyCost gets a reference to the given NullableFloat64 and assigns it to the HourlyCost field.
func (o *Member) SetHourlyCost(v float64) {
	o.HourlyCost.Set(&v)
}

// SetHourlyCostNil sets the value for HourlyCost to be an explicit nil
func (o *Member) SetHourlyCostNil() {
	o.HourlyCost.Set(nil)
}

// UnsetHourlyCost ensures that no value is present for HourlyCost, not even an explicit nil
func (o *Member) UnsetHourlyCost() {
	o.HourlyCost.Unset()
}

// GetHourlyRate returns the HourlyRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetHourlyRate() float64 {
	if o == nil || IsNil(o.HourlyRate.Get()) {
		var ret float64
		return ret
	}
	return *o.HourlyRate.Get()
}

// GetHourlyRateOk returns a tuple with the HourlyRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetHourlyRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyRate.Get(), o.HourlyRate.IsSet()
}

// HasHourlyRate returns a boolean if a field has been set.
func (o *Member) HasHourlyRate() bool {
	if o != nil && o.HourlyRate.IsSet() {
		return true
	}

	return false
}

// SetHourlyRate gets a reference to the given NullableFloat64 and assigns it to the HourlyRate field.
func (o *Member) SetHourlyRate(v float64) {
	o.HourlyRate.Set(&v)
}

// SetHourlyRateNil sets the value for HourlyRate to be an explicit nil
func (o *Member) SetHourlyRateNil() {
	o.HourlyRate.Set(nil)
}

// UnsetHourlyRate ensures that no value is present for HourlyRate, not even an explicit nil
func (o *Member) UnsetHourlyRate() {
	o.HourlyRate.Unset()
}

// GetIncludeInUtilizationReportingFlag returns the IncludeInUtilizationReportingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetIncludeInUtilizationReportingFlag() bool {
	if o == nil || IsNil(o.IncludeInUtilizationReportingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeInUtilizationReportingFlag.Get()
}

// GetIncludeInUtilizationReportingFlagOk returns a tuple with the IncludeInUtilizationReportingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetIncludeInUtilizationReportingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeInUtilizationReportingFlag.Get(), o.IncludeInUtilizationReportingFlag.IsSet()
}

// HasIncludeInUtilizationReportingFlag returns a boolean if a field has been set.
func (o *Member) HasIncludeInUtilizationReportingFlag() bool {
	if o != nil && o.IncludeInUtilizationReportingFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeInUtilizationReportingFlag gets a reference to the given NullableBool and assigns it to the IncludeInUtilizationReportingFlag field.
func (o *Member) SetIncludeInUtilizationReportingFlag(v bool) {
	o.IncludeInUtilizationReportingFlag.Set(&v)
}

// SetIncludeInUtilizationReportingFlagNil sets the value for IncludeInUtilizationReportingFlag to be an explicit nil
func (o *Member) SetIncludeInUtilizationReportingFlagNil() {
	o.IncludeInUtilizationReportingFlag.Set(nil)
}

// UnsetIncludeInUtilizationReportingFlag ensures that no value is present for IncludeInUtilizationReportingFlag, not even an explicit nil
func (o *Member) UnsetIncludeInUtilizationReportingFlag() {
	o.IncludeInUtilizationReportingFlag.Unset()
}

// GetRequireExpenseEntryFlag returns the RequireExpenseEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRequireExpenseEntryFlag() bool {
	if o == nil || IsNil(o.RequireExpenseEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireExpenseEntryFlag.Get()
}

// GetRequireExpenseEntryFlagOk returns a tuple with the RequireExpenseEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRequireExpenseEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireExpenseEntryFlag.Get(), o.RequireExpenseEntryFlag.IsSet()
}

// HasRequireExpenseEntryFlag returns a boolean if a field has been set.
func (o *Member) HasRequireExpenseEntryFlag() bool {
	if o != nil && o.RequireExpenseEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireExpenseEntryFlag gets a reference to the given NullableBool and assigns it to the RequireExpenseEntryFlag field.
func (o *Member) SetRequireExpenseEntryFlag(v bool) {
	o.RequireExpenseEntryFlag.Set(&v)
}

// SetRequireExpenseEntryFlagNil sets the value for RequireExpenseEntryFlag to be an explicit nil
func (o *Member) SetRequireExpenseEntryFlagNil() {
	o.RequireExpenseEntryFlag.Set(nil)
}

// UnsetRequireExpenseEntryFlag ensures that no value is present for RequireExpenseEntryFlag, not even an explicit nil
func (o *Member) UnsetRequireExpenseEntryFlag() {
	o.RequireExpenseEntryFlag.Unset()
}

// GetRequireTimeSheetEntryFlag returns the RequireTimeSheetEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRequireTimeSheetEntryFlag() bool {
	if o == nil || IsNil(o.RequireTimeSheetEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireTimeSheetEntryFlag.Get()
}

// GetRequireTimeSheetEntryFlagOk returns a tuple with the RequireTimeSheetEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRequireTimeSheetEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireTimeSheetEntryFlag.Get(), o.RequireTimeSheetEntryFlag.IsSet()
}

// HasRequireTimeSheetEntryFlag returns a boolean if a field has been set.
func (o *Member) HasRequireTimeSheetEntryFlag() bool {
	if o != nil && o.RequireTimeSheetEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireTimeSheetEntryFlag gets a reference to the given NullableBool and assigns it to the RequireTimeSheetEntryFlag field.
func (o *Member) SetRequireTimeSheetEntryFlag(v bool) {
	o.RequireTimeSheetEntryFlag.Set(&v)
}

// SetRequireTimeSheetEntryFlagNil sets the value for RequireTimeSheetEntryFlag to be an explicit nil
func (o *Member) SetRequireTimeSheetEntryFlagNil() {
	o.RequireTimeSheetEntryFlag.Set(nil)
}

// UnsetRequireTimeSheetEntryFlag ensures that no value is present for RequireTimeSheetEntryFlag, not even an explicit nil
func (o *Member) UnsetRequireTimeSheetEntryFlag() {
	o.RequireTimeSheetEntryFlag.Unset()
}

// GetRequireStartAndEndTimeOnTimeEntryFlag returns the RequireStartAndEndTimeOnTimeEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o == nil || IsNil(o.RequireStartAndEndTimeOnTimeEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
}

// GetRequireStartAndEndTimeOnTimeEntryFlagOk returns a tuple with the RequireStartAndEndTimeOnTimeEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRequireStartAndEndTimeOnTimeEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireStartAndEndTimeOnTimeEntryFlag.Get(), o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet()
}

// HasRequireStartAndEndTimeOnTimeEntryFlag returns a boolean if a field has been set.
func (o *Member) HasRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o != nil && o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireStartAndEndTimeOnTimeEntryFlag gets a reference to the given NullableBool and assigns it to the RequireStartAndEndTimeOnTimeEntryFlag field.
func (o *Member) SetRequireStartAndEndTimeOnTimeEntryFlag(v bool) {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(&v)
}

// SetRequireStartAndEndTimeOnTimeEntryFlagNil sets the value for RequireStartAndEndTimeOnTimeEntryFlag to be an explicit nil
func (o *Member) SetRequireStartAndEndTimeOnTimeEntryFlagNil() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(nil)
}

// UnsetRequireStartAndEndTimeOnTimeEntryFlag ensures that no value is present for RequireStartAndEndTimeOnTimeEntryFlag, not even an explicit nil
func (o *Member) UnsetRequireStartAndEndTimeOnTimeEntryFlag() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Unset()
}

// GetAllowInCellEntryOnTimeSheet returns the AllowInCellEntryOnTimeSheet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAllowInCellEntryOnTimeSheet() bool {
	if o == nil || IsNil(o.AllowInCellEntryOnTimeSheet.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowInCellEntryOnTimeSheet.Get()
}

// GetAllowInCellEntryOnTimeSheetOk returns a tuple with the AllowInCellEntryOnTimeSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAllowInCellEntryOnTimeSheetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowInCellEntryOnTimeSheet.Get(), o.AllowInCellEntryOnTimeSheet.IsSet()
}

// HasAllowInCellEntryOnTimeSheet returns a boolean if a field has been set.
func (o *Member) HasAllowInCellEntryOnTimeSheet() bool {
	if o != nil && o.AllowInCellEntryOnTimeSheet.IsSet() {
		return true
	}

	return false
}

// SetAllowInCellEntryOnTimeSheet gets a reference to the given NullableBool and assigns it to the AllowInCellEntryOnTimeSheet field.
func (o *Member) SetAllowInCellEntryOnTimeSheet(v bool) {
	o.AllowInCellEntryOnTimeSheet.Set(&v)
}

// SetAllowInCellEntryOnTimeSheetNil sets the value for AllowInCellEntryOnTimeSheet to be an explicit nil
func (o *Member) SetAllowInCellEntryOnTimeSheetNil() {
	o.AllowInCellEntryOnTimeSheet.Set(nil)
}

// UnsetAllowInCellEntryOnTimeSheet ensures that no value is present for AllowInCellEntryOnTimeSheet, not even an explicit nil
func (o *Member) UnsetAllowInCellEntryOnTimeSheet() {
	o.AllowInCellEntryOnTimeSheet.Unset()
}

// GetEnterTimeAgainstCompanyFlag returns the EnterTimeAgainstCompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetEnterTimeAgainstCompanyFlag() bool {
	if o == nil || IsNil(o.EnterTimeAgainstCompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnterTimeAgainstCompanyFlag.Get()
}

// GetEnterTimeAgainstCompanyFlagOk returns a tuple with the EnterTimeAgainstCompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetEnterTimeAgainstCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnterTimeAgainstCompanyFlag.Get(), o.EnterTimeAgainstCompanyFlag.IsSet()
}

// HasEnterTimeAgainstCompanyFlag returns a boolean if a field has been set.
func (o *Member) HasEnterTimeAgainstCompanyFlag() bool {
	if o != nil && o.EnterTimeAgainstCompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetEnterTimeAgainstCompanyFlag gets a reference to the given NullableBool and assigns it to the EnterTimeAgainstCompanyFlag field.
func (o *Member) SetEnterTimeAgainstCompanyFlag(v bool) {
	o.EnterTimeAgainstCompanyFlag.Set(&v)
}

// SetEnterTimeAgainstCompanyFlagNil sets the value for EnterTimeAgainstCompanyFlag to be an explicit nil
func (o *Member) SetEnterTimeAgainstCompanyFlagNil() {
	o.EnterTimeAgainstCompanyFlag.Set(nil)
}

// UnsetEnterTimeAgainstCompanyFlag ensures that no value is present for EnterTimeAgainstCompanyFlag, not even an explicit nil
func (o *Member) UnsetEnterTimeAgainstCompanyFlag() {
	o.EnterTimeAgainstCompanyFlag.Unset()
}

// GetAllowExpensesEnteredAgainstCompaniesFlag returns the AllowExpensesEnteredAgainstCompaniesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o == nil || IsNil(o.AllowExpensesEnteredAgainstCompaniesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
}

// GetAllowExpensesEnteredAgainstCompaniesFlagOk returns a tuple with the AllowExpensesEnteredAgainstCompaniesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAllowExpensesEnteredAgainstCompaniesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowExpensesEnteredAgainstCompaniesFlag.Get(), o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet()
}

// HasAllowExpensesEnteredAgainstCompaniesFlag returns a boolean if a field has been set.
func (o *Member) HasAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o != nil && o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		return true
	}

	return false
}

// SetAllowExpensesEnteredAgainstCompaniesFlag gets a reference to the given NullableBool and assigns it to the AllowExpensesEnteredAgainstCompaniesFlag field.
func (o *Member) SetAllowExpensesEnteredAgainstCompaniesFlag(v bool) {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(&v)
}

// SetAllowExpensesEnteredAgainstCompaniesFlagNil sets the value for AllowExpensesEnteredAgainstCompaniesFlag to be an explicit nil
func (o *Member) SetAllowExpensesEnteredAgainstCompaniesFlagNil() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(nil)
}

// UnsetAllowExpensesEnteredAgainstCompaniesFlag ensures that no value is present for AllowExpensesEnteredAgainstCompaniesFlag, not even an explicit nil
func (o *Member) UnsetAllowExpensesEnteredAgainstCompaniesFlag() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Unset()
}

// GetTimeReminderEmailFlag returns the TimeReminderEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetTimeReminderEmailFlag() bool {
	if o == nil || IsNil(o.TimeReminderEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeReminderEmailFlag.Get()
}

// GetTimeReminderEmailFlagOk returns a tuple with the TimeReminderEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetTimeReminderEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeReminderEmailFlag.Get(), o.TimeReminderEmailFlag.IsSet()
}

// HasTimeReminderEmailFlag returns a boolean if a field has been set.
func (o *Member) HasTimeReminderEmailFlag() bool {
	if o != nil && o.TimeReminderEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeReminderEmailFlag gets a reference to the given NullableBool and assigns it to the TimeReminderEmailFlag field.
func (o *Member) SetTimeReminderEmailFlag(v bool) {
	o.TimeReminderEmailFlag.Set(&v)
}

// SetTimeReminderEmailFlagNil sets the value for TimeReminderEmailFlag to be an explicit nil
func (o *Member) SetTimeReminderEmailFlagNil() {
	o.TimeReminderEmailFlag.Set(nil)
}

// UnsetTimeReminderEmailFlag ensures that no value is present for TimeReminderEmailFlag, not even an explicit nil
func (o *Member) UnsetTimeReminderEmailFlag() {
	o.TimeReminderEmailFlag.Unset()
}

// GetDaysTolerance returns the DaysTolerance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetDaysTolerance() int32 {
	if o == nil || IsNil(o.DaysTolerance.Get()) {
		var ret int32
		return ret
	}
	return *o.DaysTolerance.Get()
}

// GetDaysToleranceOk returns a tuple with the DaysTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetDaysToleranceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysTolerance.Get(), o.DaysTolerance.IsSet()
}

// HasDaysTolerance returns a boolean if a field has been set.
func (o *Member) HasDaysTolerance() bool {
	if o != nil && o.DaysTolerance.IsSet() {
		return true
	}

	return false
}

// SetDaysTolerance gets a reference to the given NullableInt32 and assigns it to the DaysTolerance field.
func (o *Member) SetDaysTolerance(v int32) {
	o.DaysTolerance.Set(&v)
}

// SetDaysToleranceNil sets the value for DaysTolerance to be an explicit nil
func (o *Member) SetDaysToleranceNil() {
	o.DaysTolerance.Set(nil)
}

// UnsetDaysTolerance ensures that no value is present for DaysTolerance, not even an explicit nil
func (o *Member) UnsetDaysTolerance() {
	o.DaysTolerance.Unset()
}

// GetMinimumHours returns the MinimumHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetMinimumHours() float64 {
	if o == nil || IsNil(o.MinimumHours.Get()) {
		var ret float64
		return ret
	}
	return *o.MinimumHours.Get()
}

// GetMinimumHoursOk returns a tuple with the MinimumHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetMinimumHoursOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumHours.Get(), o.MinimumHours.IsSet()
}

// HasMinimumHours returns a boolean if a field has been set.
func (o *Member) HasMinimumHours() bool {
	if o != nil && o.MinimumHours.IsSet() {
		return true
	}

	return false
}

// SetMinimumHours gets a reference to the given NullableFloat64 and assigns it to the MinimumHours field.
func (o *Member) SetMinimumHours(v float64) {
	o.MinimumHours.Set(&v)
}

// SetMinimumHoursNil sets the value for MinimumHours to be an explicit nil
func (o *Member) SetMinimumHoursNil() {
	o.MinimumHours.Set(nil)
}

// UnsetMinimumHours ensures that no value is present for MinimumHours, not even an explicit nil
func (o *Member) UnsetMinimumHours() {
	o.MinimumHours.Unset()
}

// GetTimeSheetStartDate returns the TimeSheetStartDate field value if set, zero value otherwise.
func (o *Member) GetTimeSheetStartDate() string {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		var ret string
		return ret
	}
	return *o.TimeSheetStartDate
}

// GetTimeSheetStartDateOk returns a tuple with the TimeSheetStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTimeSheetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		return nil, false
	}
	return o.TimeSheetStartDate, true
}

// HasTimeSheetStartDate returns a boolean if a field has been set.
func (o *Member) HasTimeSheetStartDate() bool {
	if o != nil && !IsNil(o.TimeSheetStartDate) {
		return true
	}

	return false
}

// SetTimeSheetStartDate gets a reference to the given string and assigns it to the TimeSheetStartDate field.
func (o *Member) SetTimeSheetStartDate(v string) {
	o.TimeSheetStartDate = &v
}

// GetServiceDefaultLocation returns the ServiceDefaultLocation field value if set, zero value otherwise.
func (o *Member) GetServiceDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ServiceDefaultLocation
}

// GetServiceDefaultLocationOk returns a tuple with the ServiceDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetServiceDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		return nil, false
	}
	return o.ServiceDefaultLocation, true
}

// HasServiceDefaultLocation returns a boolean if a field has been set.
func (o *Member) HasServiceDefaultLocation() bool {
	if o != nil && !IsNil(o.ServiceDefaultLocation) {
		return true
	}

	return false
}

// SetServiceDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ServiceDefaultLocation field.
func (o *Member) SetServiceDefaultLocation(v SystemLocationReference) {
	o.ServiceDefaultLocation = &v
}

// GetServiceDefaultDepartment returns the ServiceDefaultDepartment field value if set, zero value otherwise.
func (o *Member) GetServiceDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ServiceDefaultDepartment
}

// GetServiceDefaultDepartmentOk returns a tuple with the ServiceDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetServiceDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		return nil, false
	}
	return o.ServiceDefaultDepartment, true
}

// HasServiceDefaultDepartment returns a boolean if a field has been set.
func (o *Member) HasServiceDefaultDepartment() bool {
	if o != nil && !IsNil(o.ServiceDefaultDepartment) {
		return true
	}

	return false
}

// SetServiceDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ServiceDefaultDepartment field.
func (o *Member) SetServiceDefaultDepartment(v SystemDepartmentReference) {
	o.ServiceDefaultDepartment = &v
}

// GetServiceDefaultBoard returns the ServiceDefaultBoard field value if set, zero value otherwise.
func (o *Member) GetServiceDefaultBoard() BoardReference {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceDefaultBoard
}

// GetServiceDefaultBoardOk returns a tuple with the ServiceDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetServiceDefaultBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		return nil, false
	}
	return o.ServiceDefaultBoard, true
}

// HasServiceDefaultBoard returns a boolean if a field has been set.
func (o *Member) HasServiceDefaultBoard() bool {
	if o != nil && !IsNil(o.ServiceDefaultBoard) {
		return true
	}

	return false
}

// SetServiceDefaultBoard gets a reference to the given BoardReference and assigns it to the ServiceDefaultBoard field.
func (o *Member) SetServiceDefaultBoard(v BoardReference) {
	o.ServiceDefaultBoard = &v
}

// GetRestrictServiceDefaultLocationFlag returns the RestrictServiceDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictServiceDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultLocationFlag.Get()
}

// GetRestrictServiceDefaultLocationFlagOk returns a tuple with the RestrictServiceDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictServiceDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultLocationFlag.Get(), o.RestrictServiceDefaultLocationFlag.IsSet()
}

// HasRestrictServiceDefaultLocationFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictServiceDefaultLocationFlag() bool {
	if o != nil && o.RestrictServiceDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultLocationFlag field.
func (o *Member) SetRestrictServiceDefaultLocationFlag(v bool) {
	o.RestrictServiceDefaultLocationFlag.Set(&v)
}

// SetRestrictServiceDefaultLocationFlagNil sets the value for RestrictServiceDefaultLocationFlag to be an explicit nil
func (o *Member) SetRestrictServiceDefaultLocationFlagNil() {
	o.RestrictServiceDefaultLocationFlag.Set(nil)
}

// UnsetRestrictServiceDefaultLocationFlag ensures that no value is present for RestrictServiceDefaultLocationFlag, not even an explicit nil
func (o *Member) UnsetRestrictServiceDefaultLocationFlag() {
	o.RestrictServiceDefaultLocationFlag.Unset()
}

// GetRestrictServiceDefaultDepartmentFlag returns the RestrictServiceDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictServiceDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultDepartmentFlag.Get()
}

// GetRestrictServiceDefaultDepartmentFlagOk returns a tuple with the RestrictServiceDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictServiceDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultDepartmentFlag.Get(), o.RestrictServiceDefaultDepartmentFlag.IsSet()
}

// HasRestrictServiceDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictServiceDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultDepartmentFlag field.
func (o *Member) SetRestrictServiceDefaultDepartmentFlag(v bool) {
	o.RestrictServiceDefaultDepartmentFlag.Set(&v)
}

// SetRestrictServiceDefaultDepartmentFlagNil sets the value for RestrictServiceDefaultDepartmentFlag to be an explicit nil
func (o *Member) SetRestrictServiceDefaultDepartmentFlagNil() {
	o.RestrictServiceDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictServiceDefaultDepartmentFlag ensures that no value is present for RestrictServiceDefaultDepartmentFlag, not even an explicit nil
func (o *Member) UnsetRestrictServiceDefaultDepartmentFlag() {
	o.RestrictServiceDefaultDepartmentFlag.Unset()
}

// GetExcludedServiceBoardIds returns the ExcludedServiceBoardIds field value if set, zero value otherwise.
func (o *Member) GetExcludedServiceBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedServiceBoardIds
}

// GetExcludedServiceBoardIdsOk returns a tuple with the ExcludedServiceBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetExcludedServiceBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		return nil, false
	}
	return o.ExcludedServiceBoardIds, true
}

// HasExcludedServiceBoardIds returns a boolean if a field has been set.
func (o *Member) HasExcludedServiceBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedServiceBoardIds) {
		return true
	}

	return false
}

// SetExcludedServiceBoardIds gets a reference to the given []int32 and assigns it to the ExcludedServiceBoardIds field.
func (o *Member) SetExcludedServiceBoardIds(v []int32) {
	o.ExcludedServiceBoardIds = v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *Member) GetTeams() []int32 {
	if o == nil || IsNil(o.Teams) {
		var ret []int32
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTeamsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *Member) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []int32 and assigns it to the Teams field.
func (o *Member) SetTeams(v []int32) {
	o.Teams = v
}

// GetServiceBoardTeamIds returns the ServiceBoardTeamIds field value if set, zero value otherwise.
func (o *Member) GetServiceBoardTeamIds() []int32 {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		var ret []int32
		return ret
	}
	return o.ServiceBoardTeamIds
}

// GetServiceBoardTeamIdsOk returns a tuple with the ServiceBoardTeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetServiceBoardTeamIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		return nil, false
	}
	return o.ServiceBoardTeamIds, true
}

// HasServiceBoardTeamIds returns a boolean if a field has been set.
func (o *Member) HasServiceBoardTeamIds() bool {
	if o != nil && !IsNil(o.ServiceBoardTeamIds) {
		return true
	}

	return false
}

// SetServiceBoardTeamIds gets a reference to the given []int32 and assigns it to the ServiceBoardTeamIds field.
func (o *Member) SetServiceBoardTeamIds(v []int32) {
	o.ServiceBoardTeamIds = v
}

// GetProjectDefaultLocation returns the ProjectDefaultLocation field value if set, zero value otherwise.
func (o *Member) GetProjectDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ProjectDefaultLocation
}

// GetProjectDefaultLocationOk returns a tuple with the ProjectDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetProjectDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		return nil, false
	}
	return o.ProjectDefaultLocation, true
}

// HasProjectDefaultLocation returns a boolean if a field has been set.
func (o *Member) HasProjectDefaultLocation() bool {
	if o != nil && !IsNil(o.ProjectDefaultLocation) {
		return true
	}

	return false
}

// SetProjectDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ProjectDefaultLocation field.
func (o *Member) SetProjectDefaultLocation(v SystemLocationReference) {
	o.ProjectDefaultLocation = &v
}

// GetProjectDefaultDepartment returns the ProjectDefaultDepartment field value if set, zero value otherwise.
func (o *Member) GetProjectDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ProjectDefaultDepartment
}

// GetProjectDefaultDepartmentOk returns a tuple with the ProjectDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetProjectDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		return nil, false
	}
	return o.ProjectDefaultDepartment, true
}

// HasProjectDefaultDepartment returns a boolean if a field has been set.
func (o *Member) HasProjectDefaultDepartment() bool {
	if o != nil && !IsNil(o.ProjectDefaultDepartment) {
		return true
	}

	return false
}

// SetProjectDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ProjectDefaultDepartment field.
func (o *Member) SetProjectDefaultDepartment(v SystemDepartmentReference) {
	o.ProjectDefaultDepartment = &v
}

// GetProjectDefaultBoard returns the ProjectDefaultBoard field value if set, zero value otherwise.
func (o *Member) GetProjectDefaultBoard() ProjectBoardReference {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		var ret ProjectBoardReference
		return ret
	}
	return *o.ProjectDefaultBoard
}

// GetProjectDefaultBoardOk returns a tuple with the ProjectDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetProjectDefaultBoardOk() (*ProjectBoardReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		return nil, false
	}
	return o.ProjectDefaultBoard, true
}

// HasProjectDefaultBoard returns a boolean if a field has been set.
func (o *Member) HasProjectDefaultBoard() bool {
	if o != nil && !IsNil(o.ProjectDefaultBoard) {
		return true
	}

	return false
}

// SetProjectDefaultBoard gets a reference to the given ProjectBoardReference and assigns it to the ProjectDefaultBoard field.
func (o *Member) SetProjectDefaultBoard(v ProjectBoardReference) {
	o.ProjectDefaultBoard = &v
}

// GetRestrictProjectDefaultLocationFlag returns the RestrictProjectDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictProjectDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultLocationFlag.Get()
}

// GetRestrictProjectDefaultLocationFlagOk returns a tuple with the RestrictProjectDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictProjectDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultLocationFlag.Get(), o.RestrictProjectDefaultLocationFlag.IsSet()
}

// HasRestrictProjectDefaultLocationFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictProjectDefaultLocationFlag() bool {
	if o != nil && o.RestrictProjectDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultLocationFlag field.
func (o *Member) SetRestrictProjectDefaultLocationFlag(v bool) {
	o.RestrictProjectDefaultLocationFlag.Set(&v)
}

// SetRestrictProjectDefaultLocationFlagNil sets the value for RestrictProjectDefaultLocationFlag to be an explicit nil
func (o *Member) SetRestrictProjectDefaultLocationFlagNil() {
	o.RestrictProjectDefaultLocationFlag.Set(nil)
}

// UnsetRestrictProjectDefaultLocationFlag ensures that no value is present for RestrictProjectDefaultLocationFlag, not even an explicit nil
func (o *Member) UnsetRestrictProjectDefaultLocationFlag() {
	o.RestrictProjectDefaultLocationFlag.Unset()
}

// GetRestrictProjectDefaultDepartmentFlag returns the RestrictProjectDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictProjectDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultDepartmentFlag.Get()
}

// GetRestrictProjectDefaultDepartmentFlagOk returns a tuple with the RestrictProjectDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictProjectDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultDepartmentFlag.Get(), o.RestrictProjectDefaultDepartmentFlag.IsSet()
}

// HasRestrictProjectDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictProjectDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultDepartmentFlag field.
func (o *Member) SetRestrictProjectDefaultDepartmentFlag(v bool) {
	o.RestrictProjectDefaultDepartmentFlag.Set(&v)
}

// SetRestrictProjectDefaultDepartmentFlagNil sets the value for RestrictProjectDefaultDepartmentFlag to be an explicit nil
func (o *Member) SetRestrictProjectDefaultDepartmentFlagNil() {
	o.RestrictProjectDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictProjectDefaultDepartmentFlag ensures that no value is present for RestrictProjectDefaultDepartmentFlag, not even an explicit nil
func (o *Member) UnsetRestrictProjectDefaultDepartmentFlag() {
	o.RestrictProjectDefaultDepartmentFlag.Unset()
}

// GetExcludedProjectBoardIds returns the ExcludedProjectBoardIds field value if set, zero value otherwise.
func (o *Member) GetExcludedProjectBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedProjectBoardIds
}

// GetExcludedProjectBoardIdsOk returns a tuple with the ExcludedProjectBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetExcludedProjectBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		return nil, false
	}
	return o.ExcludedProjectBoardIds, true
}

// HasExcludedProjectBoardIds returns a boolean if a field has been set.
func (o *Member) HasExcludedProjectBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedProjectBoardIds) {
		return true
	}

	return false
}

// SetExcludedProjectBoardIds gets a reference to the given []int32 and assigns it to the ExcludedProjectBoardIds field.
func (o *Member) SetExcludedProjectBoardIds(v []int32) {
	o.ExcludedProjectBoardIds = v
}

// GetScheduleDefaultLocation returns the ScheduleDefaultLocation field value if set, zero value otherwise.
func (o *Member) GetScheduleDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ScheduleDefaultLocation
}

// GetScheduleDefaultLocationOk returns a tuple with the ScheduleDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetScheduleDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		return nil, false
	}
	return o.ScheduleDefaultLocation, true
}

// HasScheduleDefaultLocation returns a boolean if a field has been set.
func (o *Member) HasScheduleDefaultLocation() bool {
	if o != nil && !IsNil(o.ScheduleDefaultLocation) {
		return true
	}

	return false
}

// SetScheduleDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ScheduleDefaultLocation field.
func (o *Member) SetScheduleDefaultLocation(v SystemLocationReference) {
	o.ScheduleDefaultLocation = &v
}

// GetScheduleDefaultDepartment returns the ScheduleDefaultDepartment field value if set, zero value otherwise.
func (o *Member) GetScheduleDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ScheduleDefaultDepartment
}

// GetScheduleDefaultDepartmentOk returns a tuple with the ScheduleDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetScheduleDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		return nil, false
	}
	return o.ScheduleDefaultDepartment, true
}

// HasScheduleDefaultDepartment returns a boolean if a field has been set.
func (o *Member) HasScheduleDefaultDepartment() bool {
	if o != nil && !IsNil(o.ScheduleDefaultDepartment) {
		return true
	}

	return false
}

// SetScheduleDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ScheduleDefaultDepartment field.
func (o *Member) SetScheduleDefaultDepartment(v SystemDepartmentReference) {
	o.ScheduleDefaultDepartment = &v
}

// GetScheduleCapacity returns the ScheduleCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetScheduleCapacity() float64 {
	if o == nil || IsNil(o.ScheduleCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.ScheduleCapacity.Get()
}

// GetScheduleCapacityOk returns a tuple with the ScheduleCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetScheduleCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleCapacity.Get(), o.ScheduleCapacity.IsSet()
}

// HasScheduleCapacity returns a boolean if a field has been set.
func (o *Member) HasScheduleCapacity() bool {
	if o != nil && o.ScheduleCapacity.IsSet() {
		return true
	}

	return false
}

// SetScheduleCapacity gets a reference to the given NullableFloat64 and assigns it to the ScheduleCapacity field.
func (o *Member) SetScheduleCapacity(v float64) {
	o.ScheduleCapacity.Set(&v)
}

// SetScheduleCapacityNil sets the value for ScheduleCapacity to be an explicit nil
func (o *Member) SetScheduleCapacityNil() {
	o.ScheduleCapacity.Set(nil)
}

// UnsetScheduleCapacity ensures that no value is present for ScheduleCapacity, not even an explicit nil
func (o *Member) UnsetScheduleCapacity() {
	o.ScheduleCapacity.Unset()
}

// GetServiceLocation returns the ServiceLocation field value if set, zero value otherwise.
func (o *Member) GetServiceLocation() ServiceLocationReference {
	if o == nil || IsNil(o.ServiceLocation) {
		var ret ServiceLocationReference
		return ret
	}
	return *o.ServiceLocation
}

// GetServiceLocationOk returns a tuple with the ServiceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetServiceLocationOk() (*ServiceLocationReference, bool) {
	if o == nil || IsNil(o.ServiceLocation) {
		return nil, false
	}
	return o.ServiceLocation, true
}

// HasServiceLocation returns a boolean if a field has been set.
func (o *Member) HasServiceLocation() bool {
	if o != nil && !IsNil(o.ServiceLocation) {
		return true
	}

	return false
}

// SetServiceLocation gets a reference to the given ServiceLocationReference and assigns it to the ServiceLocation field.
func (o *Member) SetServiceLocation(v ServiceLocationReference) {
	o.ServiceLocation = &v
}

// GetRestrictScheduleFlag returns the RestrictScheduleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictScheduleFlag() bool {
	if o == nil || IsNil(o.RestrictScheduleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictScheduleFlag.Get()
}

// GetRestrictScheduleFlagOk returns a tuple with the RestrictScheduleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictScheduleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictScheduleFlag.Get(), o.RestrictScheduleFlag.IsSet()
}

// HasRestrictScheduleFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictScheduleFlag() bool {
	if o != nil && o.RestrictScheduleFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictScheduleFlag gets a reference to the given NullableBool and assigns it to the RestrictScheduleFlag field.
func (o *Member) SetRestrictScheduleFlag(v bool) {
	o.RestrictScheduleFlag.Set(&v)
}

// SetRestrictScheduleFlagNil sets the value for RestrictScheduleFlag to be an explicit nil
func (o *Member) SetRestrictScheduleFlagNil() {
	o.RestrictScheduleFlag.Set(nil)
}

// UnsetRestrictScheduleFlag ensures that no value is present for RestrictScheduleFlag, not even an explicit nil
func (o *Member) UnsetRestrictScheduleFlag() {
	o.RestrictScheduleFlag.Unset()
}

// GetHideMemberInDispatchPortalFlag returns the HideMemberInDispatchPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetHideMemberInDispatchPortalFlag() bool {
	if o == nil || IsNil(o.HideMemberInDispatchPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HideMemberInDispatchPortalFlag.Get()
}

// GetHideMemberInDispatchPortalFlagOk returns a tuple with the HideMemberInDispatchPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetHideMemberInDispatchPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HideMemberInDispatchPortalFlag.Get(), o.HideMemberInDispatchPortalFlag.IsSet()
}

// HasHideMemberInDispatchPortalFlag returns a boolean if a field has been set.
func (o *Member) HasHideMemberInDispatchPortalFlag() bool {
	if o != nil && o.HideMemberInDispatchPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetHideMemberInDispatchPortalFlag gets a reference to the given NullableBool and assigns it to the HideMemberInDispatchPortalFlag field.
func (o *Member) SetHideMemberInDispatchPortalFlag(v bool) {
	o.HideMemberInDispatchPortalFlag.Set(&v)
}

// SetHideMemberInDispatchPortalFlagNil sets the value for HideMemberInDispatchPortalFlag to be an explicit nil
func (o *Member) SetHideMemberInDispatchPortalFlagNil() {
	o.HideMemberInDispatchPortalFlag.Set(nil)
}

// UnsetHideMemberInDispatchPortalFlag ensures that no value is present for HideMemberInDispatchPortalFlag, not even an explicit nil
func (o *Member) UnsetHideMemberInDispatchPortalFlag() {
	o.HideMemberInDispatchPortalFlag.Unset()
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *Member) GetCalendar() CalendarReference {
	if o == nil || IsNil(o.Calendar) {
		var ret CalendarReference
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCalendarOk() (*CalendarReference, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *Member) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given CalendarReference and assigns it to the Calendar field.
func (o *Member) SetCalendar(v CalendarReference) {
	o.Calendar = &v
}

// GetSalesDefaultLocation returns the SalesDefaultLocation field value if set, zero value otherwise.
func (o *Member) GetSalesDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SalesDefaultLocation
}

// GetSalesDefaultLocationOk returns a tuple with the SalesDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetSalesDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		return nil, false
	}
	return o.SalesDefaultLocation, true
}

// HasSalesDefaultLocation returns a boolean if a field has been set.
func (o *Member) HasSalesDefaultLocation() bool {
	if o != nil && !IsNil(o.SalesDefaultLocation) {
		return true
	}

	return false
}

// SetSalesDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the SalesDefaultLocation field.
func (o *Member) SetSalesDefaultLocation(v SystemLocationReference) {
	o.SalesDefaultLocation = &v
}

// GetRestrictDefaultSalesTerritoryFlag returns the RestrictDefaultSalesTerritoryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictDefaultSalesTerritoryFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultSalesTerritoryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultSalesTerritoryFlag.Get()
}

// GetRestrictDefaultSalesTerritoryFlagOk returns a tuple with the RestrictDefaultSalesTerritoryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictDefaultSalesTerritoryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultSalesTerritoryFlag.Get(), o.RestrictDefaultSalesTerritoryFlag.IsSet()
}

// HasRestrictDefaultSalesTerritoryFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictDefaultSalesTerritoryFlag() bool {
	if o != nil && o.RestrictDefaultSalesTerritoryFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultSalesTerritoryFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultSalesTerritoryFlag field.
func (o *Member) SetRestrictDefaultSalesTerritoryFlag(v bool) {
	o.RestrictDefaultSalesTerritoryFlag.Set(&v)
}

// SetRestrictDefaultSalesTerritoryFlagNil sets the value for RestrictDefaultSalesTerritoryFlag to be an explicit nil
func (o *Member) SetRestrictDefaultSalesTerritoryFlagNil() {
	o.RestrictDefaultSalesTerritoryFlag.Set(nil)
}

// UnsetRestrictDefaultSalesTerritoryFlag ensures that no value is present for RestrictDefaultSalesTerritoryFlag, not even an explicit nil
func (o *Member) UnsetRestrictDefaultSalesTerritoryFlag() {
	o.RestrictDefaultSalesTerritoryFlag.Unset()
}

// GetWarehouse returns the Warehouse field value if set, zero value otherwise.
func (o *Member) GetWarehouse() WarehouseReference {
	if o == nil || IsNil(o.Warehouse) {
		var ret WarehouseReference
		return ret
	}
	return *o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil || IsNil(o.Warehouse) {
		return nil, false
	}
	return o.Warehouse, true
}

// HasWarehouse returns a boolean if a field has been set.
func (o *Member) HasWarehouse() bool {
	if o != nil && !IsNil(o.Warehouse) {
		return true
	}

	return false
}

// SetWarehouse gets a reference to the given WarehouseReference and assigns it to the Warehouse field.
func (o *Member) SetWarehouse(v WarehouseReference) {
	o.Warehouse = &v
}

// GetWarehouseBin returns the WarehouseBin field value if set, zero value otherwise.
func (o *Member) GetWarehouseBin() WarehouseBinReference {
	if o == nil || IsNil(o.WarehouseBin) {
		var ret WarehouseBinReference
		return ret
	}
	return *o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil || IsNil(o.WarehouseBin) {
		return nil, false
	}
	return o.WarehouseBin, true
}

// HasWarehouseBin returns a boolean if a field has been set.
func (o *Member) HasWarehouseBin() bool {
	if o != nil && !IsNil(o.WarehouseBin) {
		return true
	}

	return false
}

// SetWarehouseBin gets a reference to the given WarehouseBinReference and assigns it to the WarehouseBin field.
func (o *Member) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = &v
}

// GetRestrictDefaultWarehouseFlag returns the RestrictDefaultWarehouseFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictDefaultWarehouseFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseFlag.Get()
}

// GetRestrictDefaultWarehouseFlagOk returns a tuple with the RestrictDefaultWarehouseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictDefaultWarehouseFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseFlag.Get(), o.RestrictDefaultWarehouseFlag.IsSet()
}

// HasRestrictDefaultWarehouseFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictDefaultWarehouseFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseFlag field.
func (o *Member) SetRestrictDefaultWarehouseFlag(v bool) {
	o.RestrictDefaultWarehouseFlag.Set(&v)
}

// SetRestrictDefaultWarehouseFlagNil sets the value for RestrictDefaultWarehouseFlag to be an explicit nil
func (o *Member) SetRestrictDefaultWarehouseFlagNil() {
	o.RestrictDefaultWarehouseFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseFlag ensures that no value is present for RestrictDefaultWarehouseFlag, not even an explicit nil
func (o *Member) UnsetRestrictDefaultWarehouseFlag() {
	o.RestrictDefaultWarehouseFlag.Unset()
}

// GetRestrictDefaultWarehouseBinFlag returns the RestrictDefaultWarehouseBinFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetRestrictDefaultWarehouseBinFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseBinFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseBinFlag.Get()
}

// GetRestrictDefaultWarehouseBinFlagOk returns a tuple with the RestrictDefaultWarehouseBinFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetRestrictDefaultWarehouseBinFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseBinFlag.Get(), o.RestrictDefaultWarehouseBinFlag.IsSet()
}

// HasRestrictDefaultWarehouseBinFlag returns a boolean if a field has been set.
func (o *Member) HasRestrictDefaultWarehouseBinFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseBinFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseBinFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseBinFlag field.
func (o *Member) SetRestrictDefaultWarehouseBinFlag(v bool) {
	o.RestrictDefaultWarehouseBinFlag.Set(&v)
}

// SetRestrictDefaultWarehouseBinFlagNil sets the value for RestrictDefaultWarehouseBinFlag to be an explicit nil
func (o *Member) SetRestrictDefaultWarehouseBinFlagNil() {
	o.RestrictDefaultWarehouseBinFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseBinFlag ensures that no value is present for RestrictDefaultWarehouseBinFlag, not even an explicit nil
func (o *Member) UnsetRestrictDefaultWarehouseBinFlag() {
	o.RestrictDefaultWarehouseBinFlag.Unset()
}

// GetCompanyActivityTabFormat returns the CompanyActivityTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetCompanyActivityTabFormat() string {
	if o == nil || IsNil(o.CompanyActivityTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyActivityTabFormat.Get()
}

// GetCompanyActivityTabFormatOk returns a tuple with the CompanyActivityTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetCompanyActivityTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyActivityTabFormat.Get(), o.CompanyActivityTabFormat.IsSet()
}

// HasCompanyActivityTabFormat returns a boolean if a field has been set.
func (o *Member) HasCompanyActivityTabFormat() bool {
	if o != nil && o.CompanyActivityTabFormat.IsSet() {
		return true
	}

	return false
}

// SetCompanyActivityTabFormat gets a reference to the given NullableString and assigns it to the CompanyActivityTabFormat field.
func (o *Member) SetCompanyActivityTabFormat(v string) {
	o.CompanyActivityTabFormat.Set(&v)
}

// SetCompanyActivityTabFormatNil sets the value for CompanyActivityTabFormat to be an explicit nil
func (o *Member) SetCompanyActivityTabFormatNil() {
	o.CompanyActivityTabFormat.Set(nil)
}

// UnsetCompanyActivityTabFormat ensures that no value is present for CompanyActivityTabFormat, not even an explicit nil
func (o *Member) UnsetCompanyActivityTabFormat() {
	o.CompanyActivityTabFormat.Unset()
}

// GetInvoiceTimeTabFormat returns the InvoiceTimeTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetInvoiceTimeTabFormat() string {
	if o == nil || IsNil(o.InvoiceTimeTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceTimeTabFormat.Get()
}

// GetInvoiceTimeTabFormatOk returns a tuple with the InvoiceTimeTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetInvoiceTimeTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceTimeTabFormat.Get(), o.InvoiceTimeTabFormat.IsSet()
}

// HasInvoiceTimeTabFormat returns a boolean if a field has been set.
func (o *Member) HasInvoiceTimeTabFormat() bool {
	if o != nil && o.InvoiceTimeTabFormat.IsSet() {
		return true
	}

	return false
}

// SetInvoiceTimeTabFormat gets a reference to the given NullableString and assigns it to the InvoiceTimeTabFormat field.
func (o *Member) SetInvoiceTimeTabFormat(v string) {
	o.InvoiceTimeTabFormat.Set(&v)
}

// SetInvoiceTimeTabFormatNil sets the value for InvoiceTimeTabFormat to be an explicit nil
func (o *Member) SetInvoiceTimeTabFormatNil() {
	o.InvoiceTimeTabFormat.Set(nil)
}

// UnsetInvoiceTimeTabFormat ensures that no value is present for InvoiceTimeTabFormat, not even an explicit nil
func (o *Member) UnsetInvoiceTimeTabFormat() {
	o.InvoiceTimeTabFormat.Unset()
}

// GetInvoiceScreenDefaultTabFormat returns the InvoiceScreenDefaultTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetInvoiceScreenDefaultTabFormat() string {
	if o == nil || IsNil(o.InvoiceScreenDefaultTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceScreenDefaultTabFormat.Get()
}

// GetInvoiceScreenDefaultTabFormatOk returns a tuple with the InvoiceScreenDefaultTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetInvoiceScreenDefaultTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceScreenDefaultTabFormat.Get(), o.InvoiceScreenDefaultTabFormat.IsSet()
}

// HasInvoiceScreenDefaultTabFormat returns a boolean if a field has been set.
func (o *Member) HasInvoiceScreenDefaultTabFormat() bool {
	if o != nil && o.InvoiceScreenDefaultTabFormat.IsSet() {
		return true
	}

	return false
}

// SetInvoiceScreenDefaultTabFormat gets a reference to the given NullableString and assigns it to the InvoiceScreenDefaultTabFormat field.
func (o *Member) SetInvoiceScreenDefaultTabFormat(v string) {
	o.InvoiceScreenDefaultTabFormat.Set(&v)
}

// SetInvoiceScreenDefaultTabFormatNil sets the value for InvoiceScreenDefaultTabFormat to be an explicit nil
func (o *Member) SetInvoiceScreenDefaultTabFormatNil() {
	o.InvoiceScreenDefaultTabFormat.Set(nil)
}

// UnsetInvoiceScreenDefaultTabFormat ensures that no value is present for InvoiceScreenDefaultTabFormat, not even an explicit nil
func (o *Member) UnsetInvoiceScreenDefaultTabFormat() {
	o.InvoiceScreenDefaultTabFormat.Unset()
}

// GetInvoicingDisplayOptions returns the InvoicingDisplayOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetInvoicingDisplayOptions() string {
	if o == nil || IsNil(o.InvoicingDisplayOptions.Get()) {
		var ret string
		return ret
	}
	return *o.InvoicingDisplayOptions.Get()
}

// GetInvoicingDisplayOptionsOk returns a tuple with the InvoicingDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoicingDisplayOptions.Get(), o.InvoicingDisplayOptions.IsSet()
}

// HasInvoicingDisplayOptions returns a boolean if a field has been set.
func (o *Member) HasInvoicingDisplayOptions() bool {
	if o != nil && o.InvoicingDisplayOptions.IsSet() {
		return true
	}

	return false
}

// SetInvoicingDisplayOptions gets a reference to the given NullableString and assigns it to the InvoicingDisplayOptions field.
func (o *Member) SetInvoicingDisplayOptions(v string) {
	o.InvoicingDisplayOptions.Set(&v)
}

// SetInvoicingDisplayOptionsNil sets the value for InvoicingDisplayOptions to be an explicit nil
func (o *Member) SetInvoicingDisplayOptionsNil() {
	o.InvoicingDisplayOptions.Set(nil)
}

// UnsetInvoicingDisplayOptions ensures that no value is present for InvoicingDisplayOptions, not even an explicit nil
func (o *Member) UnsetInvoicingDisplayOptions() {
	o.InvoicingDisplayOptions.Unset()
}

// GetAgreementInvoicingDisplayOptions returns the AgreementInvoicingDisplayOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAgreementInvoicingDisplayOptions() string {
	if o == nil || IsNil(o.AgreementInvoicingDisplayOptions.Get()) {
		var ret string
		return ret
	}
	return *o.AgreementInvoicingDisplayOptions.Get()
}

// GetAgreementInvoicingDisplayOptionsOk returns a tuple with the AgreementInvoicingDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAgreementInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementInvoicingDisplayOptions.Get(), o.AgreementInvoicingDisplayOptions.IsSet()
}

// HasAgreementInvoicingDisplayOptions returns a boolean if a field has been set.
func (o *Member) HasAgreementInvoicingDisplayOptions() bool {
	if o != nil && o.AgreementInvoicingDisplayOptions.IsSet() {
		return true
	}

	return false
}

// SetAgreementInvoicingDisplayOptions gets a reference to the given NullableString and assigns it to the AgreementInvoicingDisplayOptions field.
func (o *Member) SetAgreementInvoicingDisplayOptions(v string) {
	o.AgreementInvoicingDisplayOptions.Set(&v)
}

// SetAgreementInvoicingDisplayOptionsNil sets the value for AgreementInvoicingDisplayOptions to be an explicit nil
func (o *Member) SetAgreementInvoicingDisplayOptionsNil() {
	o.AgreementInvoicingDisplayOptions.Set(nil)
}

// UnsetAgreementInvoicingDisplayOptions ensures that no value is present for AgreementInvoicingDisplayOptions, not even an explicit nil
func (o *Member) UnsetAgreementInvoicingDisplayOptions() {
	o.AgreementInvoicingDisplayOptions.Unset()
}

// GetAutoStartStopwatch returns the AutoStartStopwatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAutoStartStopwatch() bool {
	if o == nil || IsNil(o.AutoStartStopwatch.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoStartStopwatch.Get()
}

// GetAutoStartStopwatchOk returns a tuple with the AutoStartStopwatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAutoStartStopwatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoStartStopwatch.Get(), o.AutoStartStopwatch.IsSet()
}

// HasAutoStartStopwatch returns a boolean if a field has been set.
func (o *Member) HasAutoStartStopwatch() bool {
	if o != nil && o.AutoStartStopwatch.IsSet() {
		return true
	}

	return false
}

// SetAutoStartStopwatch gets a reference to the given NullableBool and assigns it to the AutoStartStopwatch field.
func (o *Member) SetAutoStartStopwatch(v bool) {
	o.AutoStartStopwatch.Set(&v)
}

// SetAutoStartStopwatchNil sets the value for AutoStartStopwatch to be an explicit nil
func (o *Member) SetAutoStartStopwatchNil() {
	o.AutoStartStopwatch.Set(nil)
}

// UnsetAutoStartStopwatch ensures that no value is present for AutoStartStopwatch, not even an explicit nil
func (o *Member) UnsetAutoStartStopwatch() {
	o.AutoStartStopwatch.Unset()
}

// GetAutoPopupQuickNotesWithStopwatch returns the AutoPopupQuickNotesWithStopwatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetAutoPopupQuickNotesWithStopwatch() bool {
	if o == nil || IsNil(o.AutoPopupQuickNotesWithStopwatch.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoPopupQuickNotesWithStopwatch.Get()
}

// GetAutoPopupQuickNotesWithStopwatchOk returns a tuple with the AutoPopupQuickNotesWithStopwatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetAutoPopupQuickNotesWithStopwatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoPopupQuickNotesWithStopwatch.Get(), o.AutoPopupQuickNotesWithStopwatch.IsSet()
}

// HasAutoPopupQuickNotesWithStopwatch returns a boolean if a field has been set.
func (o *Member) HasAutoPopupQuickNotesWithStopwatch() bool {
	if o != nil && o.AutoPopupQuickNotesWithStopwatch.IsSet() {
		return true
	}

	return false
}

// SetAutoPopupQuickNotesWithStopwatch gets a reference to the given NullableBool and assigns it to the AutoPopupQuickNotesWithStopwatch field.
func (o *Member) SetAutoPopupQuickNotesWithStopwatch(v bool) {
	o.AutoPopupQuickNotesWithStopwatch.Set(&v)
}

// SetAutoPopupQuickNotesWithStopwatchNil sets the value for AutoPopupQuickNotesWithStopwatch to be an explicit nil
func (o *Member) SetAutoPopupQuickNotesWithStopwatchNil() {
	o.AutoPopupQuickNotesWithStopwatch.Set(nil)
}

// UnsetAutoPopupQuickNotesWithStopwatch ensures that no value is present for AutoPopupQuickNotesWithStopwatch, not even an explicit nil
func (o *Member) UnsetAutoPopupQuickNotesWithStopwatch() {
	o.AutoPopupQuickNotesWithStopwatch.Unset()
}

// GetGlobalSearchDefaultTicketFilter returns the GlobalSearchDefaultTicketFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetGlobalSearchDefaultTicketFilter() string {
	if o == nil || IsNil(o.GlobalSearchDefaultTicketFilter.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalSearchDefaultTicketFilter.Get()
}

// GetGlobalSearchDefaultTicketFilterOk returns a tuple with the GlobalSearchDefaultTicketFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetGlobalSearchDefaultTicketFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalSearchDefaultTicketFilter.Get(), o.GlobalSearchDefaultTicketFilter.IsSet()
}

// HasGlobalSearchDefaultTicketFilter returns a boolean if a field has been set.
func (o *Member) HasGlobalSearchDefaultTicketFilter() bool {
	if o != nil && o.GlobalSearchDefaultTicketFilter.IsSet() {
		return true
	}

	return false
}

// SetGlobalSearchDefaultTicketFilter gets a reference to the given NullableString and assigns it to the GlobalSearchDefaultTicketFilter field.
func (o *Member) SetGlobalSearchDefaultTicketFilter(v string) {
	o.GlobalSearchDefaultTicketFilter.Set(&v)
}

// SetGlobalSearchDefaultTicketFilterNil sets the value for GlobalSearchDefaultTicketFilter to be an explicit nil
func (o *Member) SetGlobalSearchDefaultTicketFilterNil() {
	o.GlobalSearchDefaultTicketFilter.Set(nil)
}

// UnsetGlobalSearchDefaultTicketFilter ensures that no value is present for GlobalSearchDefaultTicketFilter, not even an explicit nil
func (o *Member) UnsetGlobalSearchDefaultTicketFilter() {
	o.GlobalSearchDefaultTicketFilter.Unset()
}

// GetGlobalSearchDefaultSort returns the GlobalSearchDefaultSort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Member) GetGlobalSearchDefaultSort() string {
	if o == nil || IsNil(o.GlobalSearchDefaultSort.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalSearchDefaultSort.Get()
}

// GetGlobalSearchDefaultSortOk returns a tuple with the GlobalSearchDefaultSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Member) GetGlobalSearchDefaultSortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalSearchDefaultSort.Get(), o.GlobalSearchDefaultSort.IsSet()
}

// HasGlobalSearchDefaultSort returns a boolean if a field has been set.
func (o *Member) HasGlobalSearchDefaultSort() bool {
	if o != nil && o.GlobalSearchDefaultSort.IsSet() {
		return true
	}

	return false
}

// SetGlobalSearchDefaultSort gets a reference to the given NullableString and assigns it to the GlobalSearchDefaultSort field.
func (o *Member) SetGlobalSearchDefaultSort(v string) {
	o.GlobalSearchDefaultSort.Set(&v)
}

// SetGlobalSearchDefaultSortNil sets the value for GlobalSearchDefaultSort to be an explicit nil
func (o *Member) SetGlobalSearchDefaultSortNil() {
	o.GlobalSearchDefaultSort.Set(nil)
}

// UnsetGlobalSearchDefaultSort ensures that no value is present for GlobalSearchDefaultSort, not even an explicit nil
func (o *Member) UnsetGlobalSearchDefaultSort() {
	o.GlobalSearchDefaultSort.Unset()
}

// GetPhoneSource returns the PhoneSource field value if set, zero value otherwise.
func (o *Member) GetPhoneSource() string {
	if o == nil || IsNil(o.PhoneSource) {
		var ret string
		return ret
	}
	return *o.PhoneSource
}

// GetPhoneSourceOk returns a tuple with the PhoneSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetPhoneSourceOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneSource) {
		return nil, false
	}
	return o.PhoneSource, true
}

// HasPhoneSource returns a boolean if a field has been set.
func (o *Member) HasPhoneSource() bool {
	if o != nil && !IsNil(o.PhoneSource) {
		return true
	}

	return false
}

// SetPhoneSource gets a reference to the given string and assigns it to the PhoneSource field.
func (o *Member) SetPhoneSource(v string) {
	o.PhoneSource = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *Member) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *Member) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *Member) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCopyPodLayouts returns the CopyPodLayouts field value if set, zero value otherwise.
func (o *Member) GetCopyPodLayouts() bool {
	if o == nil || IsNil(o.CopyPodLayouts) {
		var ret bool
		return ret
	}
	return *o.CopyPodLayouts
}

// GetCopyPodLayoutsOk returns a tuple with the CopyPodLayouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCopyPodLayoutsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyPodLayouts) {
		return nil, false
	}
	return o.CopyPodLayouts, true
}

// HasCopyPodLayouts returns a boolean if a field has been set.
func (o *Member) HasCopyPodLayouts() bool {
	if o != nil && !IsNil(o.CopyPodLayouts) {
		return true
	}

	return false
}

// SetCopyPodLayouts gets a reference to the given bool and assigns it to the CopyPodLayouts field.
func (o *Member) SetCopyPodLayouts(v bool) {
	o.CopyPodLayouts = &v
}

// GetCopySharedDefaultViews returns the CopySharedDefaultViews field value if set, zero value otherwise.
func (o *Member) GetCopySharedDefaultViews() bool {
	if o == nil || IsNil(o.CopySharedDefaultViews) {
		var ret bool
		return ret
	}
	return *o.CopySharedDefaultViews
}

// GetCopySharedDefaultViewsOk returns a tuple with the CopySharedDefaultViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCopySharedDefaultViewsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopySharedDefaultViews) {
		return nil, false
	}
	return o.CopySharedDefaultViews, true
}

// HasCopySharedDefaultViews returns a boolean if a field has been set.
func (o *Member) HasCopySharedDefaultViews() bool {
	if o != nil && !IsNil(o.CopySharedDefaultViews) {
		return true
	}

	return false
}

// SetCopySharedDefaultViews gets a reference to the given bool and assigns it to the CopySharedDefaultViews field.
func (o *Member) SetCopySharedDefaultViews(v bool) {
	o.CopySharedDefaultViews = &v
}

// GetCopyColumnLayoutsAndFilters returns the CopyColumnLayoutsAndFilters field value if set, zero value otherwise.
func (o *Member) GetCopyColumnLayoutsAndFilters() bool {
	if o == nil || IsNil(o.CopyColumnLayoutsAndFilters) {
		var ret bool
		return ret
	}
	return *o.CopyColumnLayoutsAndFilters
}

// GetCopyColumnLayoutsAndFiltersOk returns a tuple with the CopyColumnLayoutsAndFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCopyColumnLayoutsAndFiltersOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyColumnLayoutsAndFilters) {
		return nil, false
	}
	return o.CopyColumnLayoutsAndFilters, true
}

// HasCopyColumnLayoutsAndFilters returns a boolean if a field has been set.
func (o *Member) HasCopyColumnLayoutsAndFilters() bool {
	if o != nil && !IsNil(o.CopyColumnLayoutsAndFilters) {
		return true
	}

	return false
}

// SetCopyColumnLayoutsAndFilters gets a reference to the given bool and assigns it to the CopyColumnLayoutsAndFilters field.
func (o *Member) SetCopyColumnLayoutsAndFilters(v bool) {
	o.CopyColumnLayoutsAndFilters = &v
}

// GetFromMemberRecId returns the FromMemberRecId field value if set, zero value otherwise.
func (o *Member) GetFromMemberRecId() int32 {
	if o == nil || IsNil(o.FromMemberRecId) {
		var ret int32
		return ret
	}
	return *o.FromMemberRecId
}

// GetFromMemberRecIdOk returns a tuple with the FromMemberRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetFromMemberRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromMemberRecId) {
		return nil, false
	}
	return o.FromMemberRecId, true
}

// HasFromMemberRecId returns a boolean if a field has been set.
func (o *Member) HasFromMemberRecId() bool {
	if o != nil && !IsNil(o.FromMemberRecId) {
		return true
	}

	return false
}

// SetFromMemberRecId gets a reference to the given int32 and assigns it to the FromMemberRecId field.
func (o *Member) SetFromMemberRecId(v int32) {
	o.FromMemberRecId = &v
}

// GetFromMemberTemplateRecId returns the FromMemberTemplateRecId field value if set, zero value otherwise.
func (o *Member) GetFromMemberTemplateRecId() int32 {
	if o == nil || IsNil(o.FromMemberTemplateRecId) {
		var ret int32
		return ret
	}
	return *o.FromMemberTemplateRecId
}

// GetFromMemberTemplateRecIdOk returns a tuple with the FromMemberTemplateRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetFromMemberTemplateRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromMemberTemplateRecId) {
		return nil, false
	}
	return o.FromMemberTemplateRecId, true
}

// HasFromMemberTemplateRecId returns a boolean if a field has been set.
func (o *Member) HasFromMemberTemplateRecId() bool {
	if o != nil && !IsNil(o.FromMemberTemplateRecId) {
		return true
	}

	return false
}

// SetFromMemberTemplateRecId gets a reference to the given int32 and assigns it to the FromMemberTemplateRecId field.
func (o *Member) SetFromMemberTemplateRecId(v int32) {
	o.FromMemberTemplateRecId = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Member) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Member) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *Member) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o Member) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Member) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["identifier"] = o.Identifier
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if o.DisableOnlineFlag.IsSet() {
		toSerialize["disableOnlineFlag"] = o.DisableOnlineFlag.Get()
	}
	toSerialize["licenseClass"] = o.LicenseClass.Get()
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.EmployeeIdentifer) {
		toSerialize["employeeIdentifer"] = o.EmployeeIdentifer
	}
	if !IsNil(o.VendorNumber) {
		toSerialize["vendorNumber"] = o.VendorNumber
	}
	if o.EnableMobileGpsFlag.IsSet() {
		toSerialize["enableMobileGpsFlag"] = o.EnableMobileGpsFlag.Get()
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.LastLogin) {
		toSerialize["lastLogin"] = o.LastLogin
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	toSerialize["firstName"] = o.FirstName
	if !IsNil(o.MiddleInitial) {
		toSerialize["middleInitial"] = o.MiddleInitial
	}
	toSerialize["lastName"] = o.LastName
	toSerialize["hireDate"] = o.HireDate
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Photo) {
		toSerialize["photo"] = o.Photo
	}
	if !IsNil(o.OfficeEmail) {
		toSerialize["officeEmail"] = o.OfficeEmail
	}
	if !IsNil(o.MobileEmail) {
		toSerialize["mobileEmail"] = o.MobileEmail
	}
	if !IsNil(o.HomeEmail) {
		toSerialize["homeEmail"] = o.HomeEmail
	}
	toSerialize["defaultEmail"] = o.DefaultEmail.Get()
	if !IsNil(o.PrimaryEmail) {
		toSerialize["primaryEmail"] = o.PrimaryEmail
	}
	if !IsNil(o.OfficePhone) {
		toSerialize["officePhone"] = o.OfficePhone
	}
	if !IsNil(o.OfficeExtension) {
		toSerialize["officeExtension"] = o.OfficeExtension
	}
	if !IsNil(o.MobilePhone) {
		toSerialize["mobilePhone"] = o.MobilePhone
	}
	if !IsNil(o.MobileExtension) {
		toSerialize["mobileExtension"] = o.MobileExtension
	}
	if !IsNil(o.HomePhone) {
		toSerialize["homePhone"] = o.HomePhone
	}
	if !IsNil(o.HomeExtension) {
		toSerialize["homeExtension"] = o.HomeExtension
	}
	toSerialize["defaultPhone"] = o.DefaultPhone.Get()
	toSerialize["securityRole"] = o.SecurityRole
	if !IsNil(o.Office365) {
		toSerialize["office365"] = o.Office365
	}
	if !IsNil(o.MapiName) {
		toSerialize["mapiName"] = o.MapiName
	}
	if o.CalendarSyncIntegrationFlag.IsSet() {
		toSerialize["calendarSyncIntegrationFlag"] = o.CalendarSyncIntegrationFlag.Get()
	}
	if o.AuthenticationServiceType.IsSet() {
		toSerialize["authenticationServiceType"] = o.AuthenticationServiceType.Get()
	}
	if o.TimebasedOneTimePasswordActivated.IsSet() {
		toSerialize["timebasedOneTimePasswordActivated"] = o.TimebasedOneTimePasswordActivated.Get()
	}
	if o.EnableLdapAuthenticationFlag.IsSet() {
		toSerialize["enableLdapAuthenticationFlag"] = o.EnableLdapAuthenticationFlag.Get()
	}
	if !IsNil(o.LdapConfiguration) {
		toSerialize["ldapConfiguration"] = o.LdapConfiguration
	}
	if !IsNil(o.LdapUserName) {
		toSerialize["ldapUserName"] = o.LdapUserName
	}
	if !IsNil(o.DirectionalSync) {
		toSerialize["directionalSync"] = o.DirectionalSync
	}
	if !IsNil(o.SsoSettings) {
		toSerialize["ssoSettings"] = o.SsoSettings
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if o.PhoneIntegrationType.IsSet() {
		toSerialize["phoneIntegrationType"] = o.PhoneIntegrationType.Get()
	}
	if o.UseBrowserLanguageFlag.IsSet() {
		toSerialize["useBrowserLanguageFlag"] = o.UseBrowserLanguageFlag.Get()
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ReportCard) {
		toSerialize["reportCard"] = o.ReportCard
	}
	if o.EnableMobileFlag.IsSet() {
		toSerialize["enableMobileFlag"] = o.EnableMobileFlag.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if o.PartnerPortalFlag.IsSet() {
		toSerialize["partnerPortalFlag"] = o.PartnerPortalFlag.Get()
	}
	if !IsNil(o.StsUserAdminUrl) {
		toSerialize["stsUserAdminUrl"] = o.StsUserAdminUrl
	}
	if o.ToastNotificationFlag.IsSet() {
		toSerialize["toastNotificationFlag"] = o.ToastNotificationFlag.Get()
	}
	if !IsNil(o.MemberPersonas) {
		toSerialize["memberPersonas"] = o.MemberPersonas
	}
	if o.AdminFlag.IsSet() {
		toSerialize["adminFlag"] = o.AdminFlag.Get()
	}
	if !IsNil(o.StructureLevel) {
		toSerialize["structureLevel"] = o.StructureLevel
	}
	if !IsNil(o.SecurityLocation) {
		toSerialize["securityLocation"] = o.SecurityLocation
	}
	if !IsNil(o.DefaultLocation) {
		toSerialize["defaultLocation"] = o.DefaultLocation
	}
	if !IsNil(o.DefaultDepartment) {
		toSerialize["defaultDepartment"] = o.DefaultDepartment
	}
	if !IsNil(o.ReportsTo) {
		toSerialize["reportsTo"] = o.ReportsTo
	}
	if o.RestrictLocationFlag.IsSet() {
		toSerialize["restrictLocationFlag"] = o.RestrictLocationFlag.Get()
	}
	if o.RestrictDepartmentFlag.IsSet() {
		toSerialize["restrictDepartmentFlag"] = o.RestrictDepartmentFlag.Get()
	}
	if !IsNil(o.WorkRole) {
		toSerialize["workRole"] = o.WorkRole
	}
	if !IsNil(o.WorkType) {
		toSerialize["workType"] = o.WorkType
	}
	if !IsNil(o.TimeApprover) {
		toSerialize["timeApprover"] = o.TimeApprover
	}
	if !IsNil(o.ExpenseApprover) {
		toSerialize["expenseApprover"] = o.ExpenseApprover
	}
	if o.BillableForecast.IsSet() {
		toSerialize["billableForecast"] = o.BillableForecast.Get()
	}
	if o.DailyCapacity.IsSet() {
		toSerialize["dailyCapacity"] = o.DailyCapacity.Get()
	}
	if o.HourlyCost.IsSet() {
		toSerialize["hourlyCost"] = o.HourlyCost.Get()
	}
	if o.HourlyRate.IsSet() {
		toSerialize["hourlyRate"] = o.HourlyRate.Get()
	}
	if o.IncludeInUtilizationReportingFlag.IsSet() {
		toSerialize["includeInUtilizationReportingFlag"] = o.IncludeInUtilizationReportingFlag.Get()
	}
	if o.RequireExpenseEntryFlag.IsSet() {
		toSerialize["requireExpenseEntryFlag"] = o.RequireExpenseEntryFlag.Get()
	}
	if o.RequireTimeSheetEntryFlag.IsSet() {
		toSerialize["requireTimeSheetEntryFlag"] = o.RequireTimeSheetEntryFlag.Get()
	}
	if o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		toSerialize["requireStartAndEndTimeOnTimeEntryFlag"] = o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
	}
	if o.AllowInCellEntryOnTimeSheet.IsSet() {
		toSerialize["allowInCellEntryOnTimeSheet"] = o.AllowInCellEntryOnTimeSheet.Get()
	}
	if o.EnterTimeAgainstCompanyFlag.IsSet() {
		toSerialize["enterTimeAgainstCompanyFlag"] = o.EnterTimeAgainstCompanyFlag.Get()
	}
	if o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		toSerialize["allowExpensesEnteredAgainstCompaniesFlag"] = o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
	}
	if o.TimeReminderEmailFlag.IsSet() {
		toSerialize["timeReminderEmailFlag"] = o.TimeReminderEmailFlag.Get()
	}
	if o.DaysTolerance.IsSet() {
		toSerialize["daysTolerance"] = o.DaysTolerance.Get()
	}
	if o.MinimumHours.IsSet() {
		toSerialize["minimumHours"] = o.MinimumHours.Get()
	}
	if !IsNil(o.TimeSheetStartDate) {
		toSerialize["timeSheetStartDate"] = o.TimeSheetStartDate
	}
	if !IsNil(o.ServiceDefaultLocation) {
		toSerialize["serviceDefaultLocation"] = o.ServiceDefaultLocation
	}
	if !IsNil(o.ServiceDefaultDepartment) {
		toSerialize["serviceDefaultDepartment"] = o.ServiceDefaultDepartment
	}
	if !IsNil(o.ServiceDefaultBoard) {
		toSerialize["serviceDefaultBoard"] = o.ServiceDefaultBoard
	}
	if o.RestrictServiceDefaultLocationFlag.IsSet() {
		toSerialize["restrictServiceDefaultLocationFlag"] = o.RestrictServiceDefaultLocationFlag.Get()
	}
	if o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictServiceDefaultDepartmentFlag"] = o.RestrictServiceDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedServiceBoardIds) {
		toSerialize["excludedServiceBoardIds"] = o.ExcludedServiceBoardIds
	}
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	if !IsNil(o.ServiceBoardTeamIds) {
		toSerialize["serviceBoardTeamIds"] = o.ServiceBoardTeamIds
	}
	if !IsNil(o.ProjectDefaultLocation) {
		toSerialize["projectDefaultLocation"] = o.ProjectDefaultLocation
	}
	if !IsNil(o.ProjectDefaultDepartment) {
		toSerialize["projectDefaultDepartment"] = o.ProjectDefaultDepartment
	}
	if !IsNil(o.ProjectDefaultBoard) {
		toSerialize["projectDefaultBoard"] = o.ProjectDefaultBoard
	}
	if o.RestrictProjectDefaultLocationFlag.IsSet() {
		toSerialize["restrictProjectDefaultLocationFlag"] = o.RestrictProjectDefaultLocationFlag.Get()
	}
	if o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictProjectDefaultDepartmentFlag"] = o.RestrictProjectDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedProjectBoardIds) {
		toSerialize["excludedProjectBoardIds"] = o.ExcludedProjectBoardIds
	}
	if !IsNil(o.ScheduleDefaultLocation) {
		toSerialize["scheduleDefaultLocation"] = o.ScheduleDefaultLocation
	}
	if !IsNil(o.ScheduleDefaultDepartment) {
		toSerialize["scheduleDefaultDepartment"] = o.ScheduleDefaultDepartment
	}
	if o.ScheduleCapacity.IsSet() {
		toSerialize["scheduleCapacity"] = o.ScheduleCapacity.Get()
	}
	if !IsNil(o.ServiceLocation) {
		toSerialize["serviceLocation"] = o.ServiceLocation
	}
	if o.RestrictScheduleFlag.IsSet() {
		toSerialize["restrictScheduleFlag"] = o.RestrictScheduleFlag.Get()
	}
	if o.HideMemberInDispatchPortalFlag.IsSet() {
		toSerialize["hideMemberInDispatchPortalFlag"] = o.HideMemberInDispatchPortalFlag.Get()
	}
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	if !IsNil(o.SalesDefaultLocation) {
		toSerialize["salesDefaultLocation"] = o.SalesDefaultLocation
	}
	if o.RestrictDefaultSalesTerritoryFlag.IsSet() {
		toSerialize["restrictDefaultSalesTerritoryFlag"] = o.RestrictDefaultSalesTerritoryFlag.Get()
	}
	if !IsNil(o.Warehouse) {
		toSerialize["warehouse"] = o.Warehouse
	}
	if !IsNil(o.WarehouseBin) {
		toSerialize["warehouseBin"] = o.WarehouseBin
	}
	if o.RestrictDefaultWarehouseFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseFlag"] = o.RestrictDefaultWarehouseFlag.Get()
	}
	if o.RestrictDefaultWarehouseBinFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseBinFlag"] = o.RestrictDefaultWarehouseBinFlag.Get()
	}
	if o.CompanyActivityTabFormat.IsSet() {
		toSerialize["companyActivityTabFormat"] = o.CompanyActivityTabFormat.Get()
	}
	if o.InvoiceTimeTabFormat.IsSet() {
		toSerialize["invoiceTimeTabFormat"] = o.InvoiceTimeTabFormat.Get()
	}
	if o.InvoiceScreenDefaultTabFormat.IsSet() {
		toSerialize["invoiceScreenDefaultTabFormat"] = o.InvoiceScreenDefaultTabFormat.Get()
	}
	if o.InvoicingDisplayOptions.IsSet() {
		toSerialize["invoicingDisplayOptions"] = o.InvoicingDisplayOptions.Get()
	}
	if o.AgreementInvoicingDisplayOptions.IsSet() {
		toSerialize["agreementInvoicingDisplayOptions"] = o.AgreementInvoicingDisplayOptions.Get()
	}
	if o.AutoStartStopwatch.IsSet() {
		toSerialize["autoStartStopwatch"] = o.AutoStartStopwatch.Get()
	}
	if o.AutoPopupQuickNotesWithStopwatch.IsSet() {
		toSerialize["autoPopupQuickNotesWithStopwatch"] = o.AutoPopupQuickNotesWithStopwatch.Get()
	}
	if o.GlobalSearchDefaultTicketFilter.IsSet() {
		toSerialize["globalSearchDefaultTicketFilter"] = o.GlobalSearchDefaultTicketFilter.Get()
	}
	if o.GlobalSearchDefaultSort.IsSet() {
		toSerialize["globalSearchDefaultSort"] = o.GlobalSearchDefaultSort.Get()
	}
	if !IsNil(o.PhoneSource) {
		toSerialize["phoneSource"] = o.PhoneSource
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CopyPodLayouts) {
		toSerialize["copyPodLayouts"] = o.CopyPodLayouts
	}
	if !IsNil(o.CopySharedDefaultViews) {
		toSerialize["copySharedDefaultViews"] = o.CopySharedDefaultViews
	}
	if !IsNil(o.CopyColumnLayoutsAndFilters) {
		toSerialize["copyColumnLayoutsAndFilters"] = o.CopyColumnLayoutsAndFilters
	}
	if !IsNil(o.FromMemberRecId) {
		toSerialize["fromMemberRecId"] = o.FromMemberRecId
	}
	if !IsNil(o.FromMemberTemplateRecId) {
		toSerialize["fromMemberTemplateRecId"] = o.FromMemberTemplateRecId
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *Member) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"licenseClass",
		"firstName",
		"lastName",
		"hireDate",
		"defaultEmail",
		"defaultPhone",
		"securityRole",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMember := _Member{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMember)

	if err != nil {
		return err
	}

	*o = Member(varMember)

	return err
}

type NullableMember struct {
	value *Member
	isSet bool
}

func (v NullableMember) Get() *Member {
	return v.value
}

func (v *NullableMember) Set(val *Member) {
	v.value = val
	v.isSet = true
}

func (v NullableMember) IsSet() bool {
	return v.isSet
}

func (v *NullableMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMember(val *Member) *NullableMember {
	return &NullableMember{value: val, isSet: true}
}

func (v NullableMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
