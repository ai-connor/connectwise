/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MemberTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberTemplate{}

// MemberTemplate struct for MemberTemplate
type MemberTemplate struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 50;
	Identifier string `json:"identifier"`
	//  Max length: 1024;
	TemplateDescription                      *string                    `json:"templateDescription,omitempty"`
	Title                                    *string                    `json:"title,omitempty"`
	ReportCard                               *ReportCardReference       `json:"reportCard,omitempty"`
	EnableMobileFlag                         NullableBool               `json:"enableMobileFlag,omitempty"`
	Type                                     *MemberTypeReference       `json:"type,omitempty"`
	TimeZone                                 *TimeZoneSetupReference    `json:"timeZone,omitempty"`
	PartnerPortalFlag                        NullableBool               `json:"partnerPortalFlag,omitempty"`
	StsUserAdminUrl                          *string                    `json:"stsUserAdminUrl,omitempty"`
	ToastNotificationFlag                    NullableBool               `json:"toastNotificationFlag,omitempty"`
	MemberPersonas                           []int32                    `json:"memberPersonas,omitempty"`
	AdminFlag                                NullableBool               `json:"adminFlag,omitempty"`
	StructureLevel                           *StructureReference        `json:"structureLevel,omitempty"`
	SecurityLocation                         *SystemLocationReference   `json:"securityLocation,omitempty"`
	DefaultLocation                          *SystemLocationReference   `json:"defaultLocation,omitempty"`
	DefaultDepartment                        *SystemDepartmentReference `json:"defaultDepartment,omitempty"`
	ReportsTo                                *MemberReference           `json:"reportsTo,omitempty"`
	RestrictLocationFlag                     NullableBool               `json:"restrictLocationFlag,omitempty"`
	RestrictDepartmentFlag                   NullableBool               `json:"restrictDepartmentFlag,omitempty"`
	WorkRole                                 *WorkRoleReference         `json:"workRole,omitempty"`
	WorkType                                 *WorkTypeReference         `json:"workType,omitempty"`
	TimeApprover                             *MemberReference           `json:"timeApprover,omitempty"`
	ExpenseApprover                          *MemberReference           `json:"expenseApprover,omitempty"`
	BillableForecast                         NullableFloat64            `json:"billableForecast,omitempty"`
	DailyCapacity                            NullableFloat64            `json:"dailyCapacity,omitempty"`
	HourlyCost                               NullableFloat64            `json:"hourlyCost,omitempty"`
	HourlyRate                               NullableFloat64            `json:"hourlyRate,omitempty"`
	IncludeInUtilizationReportingFlag        NullableBool               `json:"includeInUtilizationReportingFlag,omitempty"`
	RequireExpenseEntryFlag                  NullableBool               `json:"requireExpenseEntryFlag,omitempty"`
	RequireTimeSheetEntryFlag                NullableBool               `json:"requireTimeSheetEntryFlag,omitempty"`
	RequireStartAndEndTimeOnTimeEntryFlag    NullableBool               `json:"requireStartAndEndTimeOnTimeEntryFlag,omitempty"`
	AllowInCellEntryOnTimeSheet              NullableBool               `json:"allowInCellEntryOnTimeSheet,omitempty"`
	EnterTimeAgainstCompanyFlag              NullableBool               `json:"enterTimeAgainstCompanyFlag,omitempty"`
	AllowExpensesEnteredAgainstCompaniesFlag NullableBool               `json:"allowExpensesEnteredAgainstCompaniesFlag,omitempty"`
	TimeReminderEmailFlag                    NullableBool               `json:"timeReminderEmailFlag,omitempty"`
	DaysTolerance                            NullableInt32              `json:"daysTolerance,omitempty"`
	MinimumHours                             NullableFloat64            `json:"minimumHours,omitempty"`
	TimeSheetStartDate                       *string                    `json:"timeSheetStartDate,omitempty"`
	ServiceDefaultLocation                   *SystemLocationReference   `json:"serviceDefaultLocation,omitempty"`
	ServiceDefaultDepartment                 *SystemDepartmentReference `json:"serviceDefaultDepartment,omitempty"`
	ServiceDefaultBoard                      *BoardReference            `json:"serviceDefaultBoard,omitempty"`
	RestrictServiceDefaultLocationFlag       NullableBool               `json:"restrictServiceDefaultLocationFlag,omitempty"`
	RestrictServiceDefaultDepartmentFlag     NullableBool               `json:"restrictServiceDefaultDepartmentFlag,omitempty"`
	ExcludedServiceBoardIds                  []int32                    `json:"excludedServiceBoardIds,omitempty"`
	Teams                                    []int32                    `json:"teams,omitempty"`
	ServiceBoardTeamIds                      []int32                    `json:"serviceBoardTeamIds,omitempty"`
	ProjectDefaultLocation                   *SystemLocationReference   `json:"projectDefaultLocation,omitempty"`
	ProjectDefaultDepartment                 *SystemDepartmentReference `json:"projectDefaultDepartment,omitempty"`
	ProjectDefaultBoard                      *ProjectBoardReference     `json:"projectDefaultBoard,omitempty"`
	RestrictProjectDefaultLocationFlag       NullableBool               `json:"restrictProjectDefaultLocationFlag,omitempty"`
	RestrictProjectDefaultDepartmentFlag     NullableBool               `json:"restrictProjectDefaultDepartmentFlag,omitempty"`
	ExcludedProjectBoardIds                  []int32                    `json:"excludedProjectBoardIds,omitempty"`
	ScheduleDefaultLocation                  *SystemLocationReference   `json:"scheduleDefaultLocation,omitempty"`
	ScheduleDefaultDepartment                *SystemDepartmentReference `json:"scheduleDefaultDepartment,omitempty"`
	ScheduleCapacity                         NullableFloat64            `json:"scheduleCapacity,omitempty"`
	ServiceLocation                          *ServiceLocationReference  `json:"serviceLocation,omitempty"`
	RestrictScheduleFlag                     NullableBool               `json:"restrictScheduleFlag,omitempty"`
	HideMemberInDispatchPortalFlag           NullableBool               `json:"hideMemberInDispatchPortalFlag,omitempty"`
	Calendar                                 *CalendarReference         `json:"calendar,omitempty"`
	SalesDefaultLocation                     *SystemLocationReference   `json:"salesDefaultLocation,omitempty"`
	RestrictDefaultSalesTerritoryFlag        NullableBool               `json:"restrictDefaultSalesTerritoryFlag,omitempty"`
	Warehouse                                *WarehouseReference        `json:"warehouse,omitempty"`
	WarehouseBin                             *WarehouseBinReference     `json:"warehouseBin,omitempty"`
	RestrictDefaultWarehouseFlag             NullableBool               `json:"restrictDefaultWarehouseFlag,omitempty"`
	RestrictDefaultWarehouseBinFlag          NullableBool               `json:"restrictDefaultWarehouseBinFlag,omitempty"`
	CompanyActivityTabFormat                 NullableString             `json:"companyActivityTabFormat,omitempty"`
	InvoiceTimeTabFormat                     NullableString             `json:"invoiceTimeTabFormat,omitempty"`
	InvoiceScreenDefaultTabFormat            NullableString             `json:"invoiceScreenDefaultTabFormat,omitempty"`
	InvoicingDisplayOptions                  NullableString             `json:"invoicingDisplayOptions,omitempty"`
	AgreementInvoicingDisplayOptions         NullableString             `json:"agreementInvoicingDisplayOptions,omitempty"`
	AutoStartStopwatch                       NullableBool               `json:"autoStartStopwatch,omitempty"`
	AutoPopupQuickNotesWithStopwatch         NullableBool               `json:"autoPopupQuickNotesWithStopwatch,omitempty"`
	GlobalSearchDefaultTicketFilter          NullableString             `json:"globalSearchDefaultTicketFilter,omitempty"`
	GlobalSearchDefaultSort                  NullableString             `json:"globalSearchDefaultSort,omitempty"`
	PhoneSource                              *string                    `json:"phoneSource,omitempty"`
	Info                                     *map[string]string         `json:"_info,omitempty"`
	CopyPodLayouts                           *bool                      `json:"copyPodLayouts,omitempty"`
	CopySharedDefaultViews                   *bool                      `json:"copySharedDefaultViews,omitempty"`
	CopyColumnLayoutsAndFilters              *bool                      `json:"copyColumnLayoutsAndFilters,omitempty"`
	FromMemberRecId                          *int32                     `json:"fromMemberRecId,omitempty"`
	FromMemberTemplateRecId                  *int32                     `json:"fromMemberTemplateRecId,omitempty"`
	CustomFields                             []CustomFieldValue         `json:"customFields,omitempty"`
}

type _MemberTemplate MemberTemplate

// NewMemberTemplate instantiates a new MemberTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberTemplate(identifier string) *MemberTemplate {
	this := MemberTemplate{}
	this.Identifier = identifier
	return &this
}

// NewMemberTemplateWithDefaults instantiates a new MemberTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberTemplateWithDefaults() *MemberTemplate {
	this := MemberTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MemberTemplate) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MemberTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MemberTemplate) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value
func (o *MemberTemplate) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *MemberTemplate) SetIdentifier(v string) {
	o.Identifier = v
}

// GetTemplateDescription returns the TemplateDescription field value if set, zero value otherwise.
func (o *MemberTemplate) GetTemplateDescription() string {
	if o == nil || IsNil(o.TemplateDescription) {
		var ret string
		return ret
	}
	return *o.TemplateDescription
}

// GetTemplateDescriptionOk returns a tuple with the TemplateDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTemplateDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateDescription) {
		return nil, false
	}
	return o.TemplateDescription, true
}

// HasTemplateDescription returns a boolean if a field has been set.
func (o *MemberTemplate) HasTemplateDescription() bool {
	if o != nil && !IsNil(o.TemplateDescription) {
		return true
	}

	return false
}

// SetTemplateDescription gets a reference to the given string and assigns it to the TemplateDescription field.
func (o *MemberTemplate) SetTemplateDescription(v string) {
	o.TemplateDescription = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MemberTemplate) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MemberTemplate) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MemberTemplate) SetTitle(v string) {
	o.Title = &v
}

// GetReportCard returns the ReportCard field value if set, zero value otherwise.
func (o *MemberTemplate) GetReportCard() ReportCardReference {
	if o == nil || IsNil(o.ReportCard) {
		var ret ReportCardReference
		return ret
	}
	return *o.ReportCard
}

// GetReportCardOk returns a tuple with the ReportCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetReportCardOk() (*ReportCardReference, bool) {
	if o == nil || IsNil(o.ReportCard) {
		return nil, false
	}
	return o.ReportCard, true
}

// HasReportCard returns a boolean if a field has been set.
func (o *MemberTemplate) HasReportCard() bool {
	if o != nil && !IsNil(o.ReportCard) {
		return true
	}

	return false
}

// SetReportCard gets a reference to the given ReportCardReference and assigns it to the ReportCard field.
func (o *MemberTemplate) SetReportCard(v ReportCardReference) {
	o.ReportCard = &v
}

// GetEnableMobileFlag returns the EnableMobileFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetEnableMobileFlag() bool {
	if o == nil || IsNil(o.EnableMobileFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileFlag.Get()
}

// GetEnableMobileFlagOk returns a tuple with the EnableMobileFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetEnableMobileFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileFlag.Get(), o.EnableMobileFlag.IsSet()
}

// HasEnableMobileFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasEnableMobileFlag() bool {
	if o != nil && o.EnableMobileFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileFlag gets a reference to the given NullableBool and assigns it to the EnableMobileFlag field.
func (o *MemberTemplate) SetEnableMobileFlag(v bool) {
	o.EnableMobileFlag.Set(&v)
}

// SetEnableMobileFlagNil sets the value for EnableMobileFlag to be an explicit nil
func (o *MemberTemplate) SetEnableMobileFlagNil() {
	o.EnableMobileFlag.Set(nil)
}

// UnsetEnableMobileFlag ensures that no value is present for EnableMobileFlag, not even an explicit nil
func (o *MemberTemplate) UnsetEnableMobileFlag() {
	o.EnableMobileFlag.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MemberTemplate) GetType() MemberTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret MemberTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTypeOk() (*MemberTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MemberTemplate) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MemberTypeReference and assigns it to the Type field.
func (o *MemberTemplate) SetType(v MemberTypeReference) {
	o.Type = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MemberTemplate) GetTimeZone() TimeZoneSetupReference {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimeZoneSetupReference
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTimeZoneOk() (*TimeZoneSetupReference, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MemberTemplate) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZoneSetupReference and assigns it to the TimeZone field.
func (o *MemberTemplate) SetTimeZone(v TimeZoneSetupReference) {
	o.TimeZone = &v
}

// GetPartnerPortalFlag returns the PartnerPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetPartnerPortalFlag() bool {
	if o == nil || IsNil(o.PartnerPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PartnerPortalFlag.Get()
}

// GetPartnerPortalFlagOk returns a tuple with the PartnerPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetPartnerPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerPortalFlag.Get(), o.PartnerPortalFlag.IsSet()
}

// HasPartnerPortalFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasPartnerPortalFlag() bool {
	if o != nil && o.PartnerPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetPartnerPortalFlag gets a reference to the given NullableBool and assigns it to the PartnerPortalFlag field.
func (o *MemberTemplate) SetPartnerPortalFlag(v bool) {
	o.PartnerPortalFlag.Set(&v)
}

// SetPartnerPortalFlagNil sets the value for PartnerPortalFlag to be an explicit nil
func (o *MemberTemplate) SetPartnerPortalFlagNil() {
	o.PartnerPortalFlag.Set(nil)
}

// UnsetPartnerPortalFlag ensures that no value is present for PartnerPortalFlag, not even an explicit nil
func (o *MemberTemplate) UnsetPartnerPortalFlag() {
	o.PartnerPortalFlag.Unset()
}

// GetStsUserAdminUrl returns the StsUserAdminUrl field value if set, zero value otherwise.
func (o *MemberTemplate) GetStsUserAdminUrl() string {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		var ret string
		return ret
	}
	return *o.StsUserAdminUrl
}

// GetStsUserAdminUrlOk returns a tuple with the StsUserAdminUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetStsUserAdminUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		return nil, false
	}
	return o.StsUserAdminUrl, true
}

// HasStsUserAdminUrl returns a boolean if a field has been set.
func (o *MemberTemplate) HasStsUserAdminUrl() bool {
	if o != nil && !IsNil(o.StsUserAdminUrl) {
		return true
	}

	return false
}

// SetStsUserAdminUrl gets a reference to the given string and assigns it to the StsUserAdminUrl field.
func (o *MemberTemplate) SetStsUserAdminUrl(v string) {
	o.StsUserAdminUrl = &v
}

// GetToastNotificationFlag returns the ToastNotificationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetToastNotificationFlag() bool {
	if o == nil || IsNil(o.ToastNotificationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ToastNotificationFlag.Get()
}

// GetToastNotificationFlagOk returns a tuple with the ToastNotificationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetToastNotificationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToastNotificationFlag.Get(), o.ToastNotificationFlag.IsSet()
}

// HasToastNotificationFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasToastNotificationFlag() bool {
	if o != nil && o.ToastNotificationFlag.IsSet() {
		return true
	}

	return false
}

// SetToastNotificationFlag gets a reference to the given NullableBool and assigns it to the ToastNotificationFlag field.
func (o *MemberTemplate) SetToastNotificationFlag(v bool) {
	o.ToastNotificationFlag.Set(&v)
}

// SetToastNotificationFlagNil sets the value for ToastNotificationFlag to be an explicit nil
func (o *MemberTemplate) SetToastNotificationFlagNil() {
	o.ToastNotificationFlag.Set(nil)
}

// UnsetToastNotificationFlag ensures that no value is present for ToastNotificationFlag, not even an explicit nil
func (o *MemberTemplate) UnsetToastNotificationFlag() {
	o.ToastNotificationFlag.Unset()
}

// GetMemberPersonas returns the MemberPersonas field value if set, zero value otherwise.
func (o *MemberTemplate) GetMemberPersonas() []int32 {
	if o == nil || IsNil(o.MemberPersonas) {
		var ret []int32
		return ret
	}
	return o.MemberPersonas
}

// GetMemberPersonasOk returns a tuple with the MemberPersonas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetMemberPersonasOk() ([]int32, bool) {
	if o == nil || IsNil(o.MemberPersonas) {
		return nil, false
	}
	return o.MemberPersonas, true
}

// HasMemberPersonas returns a boolean if a field has been set.
func (o *MemberTemplate) HasMemberPersonas() bool {
	if o != nil && !IsNil(o.MemberPersonas) {
		return true
	}

	return false
}

// SetMemberPersonas gets a reference to the given []int32 and assigns it to the MemberPersonas field.
func (o *MemberTemplate) SetMemberPersonas(v []int32) {
	o.MemberPersonas = v
}

// GetAdminFlag returns the AdminFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetAdminFlag() bool {
	if o == nil || IsNil(o.AdminFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AdminFlag.Get()
}

// GetAdminFlagOk returns a tuple with the AdminFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetAdminFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminFlag.Get(), o.AdminFlag.IsSet()
}

// HasAdminFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasAdminFlag() bool {
	if o != nil && o.AdminFlag.IsSet() {
		return true
	}

	return false
}

// SetAdminFlag gets a reference to the given NullableBool and assigns it to the AdminFlag field.
func (o *MemberTemplate) SetAdminFlag(v bool) {
	o.AdminFlag.Set(&v)
}

// SetAdminFlagNil sets the value for AdminFlag to be an explicit nil
func (o *MemberTemplate) SetAdminFlagNil() {
	o.AdminFlag.Set(nil)
}

// UnsetAdminFlag ensures that no value is present for AdminFlag, not even an explicit nil
func (o *MemberTemplate) UnsetAdminFlag() {
	o.AdminFlag.Unset()
}

// GetStructureLevel returns the StructureLevel field value if set, zero value otherwise.
func (o *MemberTemplate) GetStructureLevel() StructureReference {
	if o == nil || IsNil(o.StructureLevel) {
		var ret StructureReference
		return ret
	}
	return *o.StructureLevel
}

// GetStructureLevelOk returns a tuple with the StructureLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetStructureLevelOk() (*StructureReference, bool) {
	if o == nil || IsNil(o.StructureLevel) {
		return nil, false
	}
	return o.StructureLevel, true
}

// HasStructureLevel returns a boolean if a field has been set.
func (o *MemberTemplate) HasStructureLevel() bool {
	if o != nil && !IsNil(o.StructureLevel) {
		return true
	}

	return false
}

// SetStructureLevel gets a reference to the given StructureReference and assigns it to the StructureLevel field.
func (o *MemberTemplate) SetStructureLevel(v StructureReference) {
	o.StructureLevel = &v
}

// GetSecurityLocation returns the SecurityLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetSecurityLocation() SystemLocationReference {
	if o == nil || IsNil(o.SecurityLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SecurityLocation
}

// GetSecurityLocationOk returns a tuple with the SecurityLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetSecurityLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SecurityLocation) {
		return nil, false
	}
	return o.SecurityLocation, true
}

// HasSecurityLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasSecurityLocation() bool {
	if o != nil && !IsNil(o.SecurityLocation) {
		return true
	}

	return false
}

// SetSecurityLocation gets a reference to the given SystemLocationReference and assigns it to the SecurityLocation field.
func (o *MemberTemplate) SetSecurityLocation(v SystemLocationReference) {
	o.SecurityLocation = &v
}

// GetDefaultLocation returns the DefaultLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.DefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.DefaultLocation) {
		return nil, false
	}
	return o.DefaultLocation, true
}

// HasDefaultLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasDefaultLocation() bool {
	if o != nil && !IsNil(o.DefaultLocation) {
		return true
	}

	return false
}

// SetDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the DefaultLocation field.
func (o *MemberTemplate) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = &v
}

// GetDefaultDepartment returns the DefaultDepartment field value if set, zero value otherwise.
func (o *MemberTemplate) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.DefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.DefaultDepartment) {
		return nil, false
	}
	return o.DefaultDepartment, true
}

// HasDefaultDepartment returns a boolean if a field has been set.
func (o *MemberTemplate) HasDefaultDepartment() bool {
	if o != nil && !IsNil(o.DefaultDepartment) {
		return true
	}

	return false
}

// SetDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the DefaultDepartment field.
func (o *MemberTemplate) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = &v
}

// GetReportsTo returns the ReportsTo field value if set, zero value otherwise.
func (o *MemberTemplate) GetReportsTo() MemberReference {
	if o == nil || IsNil(o.ReportsTo) {
		var ret MemberReference
		return ret
	}
	return *o.ReportsTo
}

// GetReportsToOk returns a tuple with the ReportsTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetReportsToOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ReportsTo) {
		return nil, false
	}
	return o.ReportsTo, true
}

// HasReportsTo returns a boolean if a field has been set.
func (o *MemberTemplate) HasReportsTo() bool {
	if o != nil && !IsNil(o.ReportsTo) {
		return true
	}

	return false
}

// SetReportsTo gets a reference to the given MemberReference and assigns it to the ReportsTo field.
func (o *MemberTemplate) SetReportsTo(v MemberReference) {
	o.ReportsTo = &v
}

// GetRestrictLocationFlag returns the RestrictLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictLocationFlag() bool {
	if o == nil || IsNil(o.RestrictLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictLocationFlag.Get()
}

// GetRestrictLocationFlagOk returns a tuple with the RestrictLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictLocationFlag.Get(), o.RestrictLocationFlag.IsSet()
}

// HasRestrictLocationFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictLocationFlag() bool {
	if o != nil && o.RestrictLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictLocationFlag field.
func (o *MemberTemplate) SetRestrictLocationFlag(v bool) {
	o.RestrictLocationFlag.Set(&v)
}

// SetRestrictLocationFlagNil sets the value for RestrictLocationFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictLocationFlagNil() {
	o.RestrictLocationFlag.Set(nil)
}

// UnsetRestrictLocationFlag ensures that no value is present for RestrictLocationFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictLocationFlag() {
	o.RestrictLocationFlag.Unset()
}

// GetRestrictDepartmentFlag returns the RestrictDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDepartmentFlag.Get()
}

// GetRestrictDepartmentFlagOk returns a tuple with the RestrictDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDepartmentFlag.Get(), o.RestrictDepartmentFlag.IsSet()
}

// HasRestrictDepartmentFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictDepartmentFlag() bool {
	if o != nil && o.RestrictDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictDepartmentFlag field.
func (o *MemberTemplate) SetRestrictDepartmentFlag(v bool) {
	o.RestrictDepartmentFlag.Set(&v)
}

// SetRestrictDepartmentFlagNil sets the value for RestrictDepartmentFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictDepartmentFlagNil() {
	o.RestrictDepartmentFlag.Set(nil)
}

// UnsetRestrictDepartmentFlag ensures that no value is present for RestrictDepartmentFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictDepartmentFlag() {
	o.RestrictDepartmentFlag.Unset()
}

// GetWorkRole returns the WorkRole field value if set, zero value otherwise.
func (o *MemberTemplate) GetWorkRole() WorkRoleReference {
	if o == nil || IsNil(o.WorkRole) {
		var ret WorkRoleReference
		return ret
	}
	return *o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil || IsNil(o.WorkRole) {
		return nil, false
	}
	return o.WorkRole, true
}

// HasWorkRole returns a boolean if a field has been set.
func (o *MemberTemplate) HasWorkRole() bool {
	if o != nil && !IsNil(o.WorkRole) {
		return true
	}

	return false
}

// SetWorkRole gets a reference to the given WorkRoleReference and assigns it to the WorkRole field.
func (o *MemberTemplate) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = &v
}

// GetWorkType returns the WorkType field value if set, zero value otherwise.
func (o *MemberTemplate) GetWorkType() WorkTypeReference {
	if o == nil || IsNil(o.WorkType) {
		var ret WorkTypeReference
		return ret
	}
	return *o.WorkType
}

// GetWorkTypeOk returns a tuple with the WorkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetWorkTypeOk() (*WorkTypeReference, bool) {
	if o == nil || IsNil(o.WorkType) {
		return nil, false
	}
	return o.WorkType, true
}

// HasWorkType returns a boolean if a field has been set.
func (o *MemberTemplate) HasWorkType() bool {
	if o != nil && !IsNil(o.WorkType) {
		return true
	}

	return false
}

// SetWorkType gets a reference to the given WorkTypeReference and assigns it to the WorkType field.
func (o *MemberTemplate) SetWorkType(v WorkTypeReference) {
	o.WorkType = &v
}

// GetTimeApprover returns the TimeApprover field value if set, zero value otherwise.
func (o *MemberTemplate) GetTimeApprover() MemberReference {
	if o == nil || IsNil(o.TimeApprover) {
		var ret MemberReference
		return ret
	}
	return *o.TimeApprover
}

// GetTimeApproverOk returns a tuple with the TimeApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTimeApproverOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.TimeApprover) {
		return nil, false
	}
	return o.TimeApprover, true
}

// HasTimeApprover returns a boolean if a field has been set.
func (o *MemberTemplate) HasTimeApprover() bool {
	if o != nil && !IsNil(o.TimeApprover) {
		return true
	}

	return false
}

// SetTimeApprover gets a reference to the given MemberReference and assigns it to the TimeApprover field.
func (o *MemberTemplate) SetTimeApprover(v MemberReference) {
	o.TimeApprover = &v
}

// GetExpenseApprover returns the ExpenseApprover field value if set, zero value otherwise.
func (o *MemberTemplate) GetExpenseApprover() MemberReference {
	if o == nil || IsNil(o.ExpenseApprover) {
		var ret MemberReference
		return ret
	}
	return *o.ExpenseApprover
}

// GetExpenseApproverOk returns a tuple with the ExpenseApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetExpenseApproverOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ExpenseApprover) {
		return nil, false
	}
	return o.ExpenseApprover, true
}

// HasExpenseApprover returns a boolean if a field has been set.
func (o *MemberTemplate) HasExpenseApprover() bool {
	if o != nil && !IsNil(o.ExpenseApprover) {
		return true
	}

	return false
}

// SetExpenseApprover gets a reference to the given MemberReference and assigns it to the ExpenseApprover field.
func (o *MemberTemplate) SetExpenseApprover(v MemberReference) {
	o.ExpenseApprover = &v
}

// GetBillableForecast returns the BillableForecast field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetBillableForecast() float64 {
	if o == nil || IsNil(o.BillableForecast.Get()) {
		var ret float64
		return ret
	}
	return *o.BillableForecast.Get()
}

// GetBillableForecastOk returns a tuple with the BillableForecast field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetBillableForecastOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillableForecast.Get(), o.BillableForecast.IsSet()
}

// HasBillableForecast returns a boolean if a field has been set.
func (o *MemberTemplate) HasBillableForecast() bool {
	if o != nil && o.BillableForecast.IsSet() {
		return true
	}

	return false
}

// SetBillableForecast gets a reference to the given NullableFloat64 and assigns it to the BillableForecast field.
func (o *MemberTemplate) SetBillableForecast(v float64) {
	o.BillableForecast.Set(&v)
}

// SetBillableForecastNil sets the value for BillableForecast to be an explicit nil
func (o *MemberTemplate) SetBillableForecastNil() {
	o.BillableForecast.Set(nil)
}

// UnsetBillableForecast ensures that no value is present for BillableForecast, not even an explicit nil
func (o *MemberTemplate) UnsetBillableForecast() {
	o.BillableForecast.Unset()
}

// GetDailyCapacity returns the DailyCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetDailyCapacity() float64 {
	if o == nil || IsNil(o.DailyCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.DailyCapacity.Get()
}

// GetDailyCapacityOk returns a tuple with the DailyCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetDailyCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DailyCapacity.Get(), o.DailyCapacity.IsSet()
}

// HasDailyCapacity returns a boolean if a field has been set.
func (o *MemberTemplate) HasDailyCapacity() bool {
	if o != nil && o.DailyCapacity.IsSet() {
		return true
	}

	return false
}

// SetDailyCapacity gets a reference to the given NullableFloat64 and assigns it to the DailyCapacity field.
func (o *MemberTemplate) SetDailyCapacity(v float64) {
	o.DailyCapacity.Set(&v)
}

// SetDailyCapacityNil sets the value for DailyCapacity to be an explicit nil
func (o *MemberTemplate) SetDailyCapacityNil() {
	o.DailyCapacity.Set(nil)
}

// UnsetDailyCapacity ensures that no value is present for DailyCapacity, not even an explicit nil
func (o *MemberTemplate) UnsetDailyCapacity() {
	o.DailyCapacity.Unset()
}

// GetHourlyCost returns the HourlyCost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetHourlyCost() float64 {
	if o == nil || IsNil(o.HourlyCost.Get()) {
		var ret float64
		return ret
	}
	return *o.HourlyCost.Get()
}

// GetHourlyCostOk returns a tuple with the HourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetHourlyCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyCost.Get(), o.HourlyCost.IsSet()
}

// HasHourlyCost returns a boolean if a field has been set.
func (o *MemberTemplate) HasHourlyCost() bool {
	if o != nil && o.HourlyCost.IsSet() {
		return true
	}

	return false
}

// SetHourlyCost gets a reference to the given NullableFloat64 and assigns it to the HourlyCost field.
func (o *MemberTemplate) SetHourlyCost(v float64) {
	o.HourlyCost.Set(&v)
}

// SetHourlyCostNil sets the value for HourlyCost to be an explicit nil
func (o *MemberTemplate) SetHourlyCostNil() {
	o.HourlyCost.Set(nil)
}

// UnsetHourlyCost ensures that no value is present for HourlyCost, not even an explicit nil
func (o *MemberTemplate) UnsetHourlyCost() {
	o.HourlyCost.Unset()
}

// GetHourlyRate returns the HourlyRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetHourlyRate() float64 {
	if o == nil || IsNil(o.HourlyRate.Get()) {
		var ret float64
		return ret
	}
	return *o.HourlyRate.Get()
}

// GetHourlyRateOk returns a tuple with the HourlyRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetHourlyRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyRate.Get(), o.HourlyRate.IsSet()
}

// HasHourlyRate returns a boolean if a field has been set.
func (o *MemberTemplate) HasHourlyRate() bool {
	if o != nil && o.HourlyRate.IsSet() {
		return true
	}

	return false
}

// SetHourlyRate gets a reference to the given NullableFloat64 and assigns it to the HourlyRate field.
func (o *MemberTemplate) SetHourlyRate(v float64) {
	o.HourlyRate.Set(&v)
}

// SetHourlyRateNil sets the value for HourlyRate to be an explicit nil
func (o *MemberTemplate) SetHourlyRateNil() {
	o.HourlyRate.Set(nil)
}

// UnsetHourlyRate ensures that no value is present for HourlyRate, not even an explicit nil
func (o *MemberTemplate) UnsetHourlyRate() {
	o.HourlyRate.Unset()
}

// GetIncludeInUtilizationReportingFlag returns the IncludeInUtilizationReportingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetIncludeInUtilizationReportingFlag() bool {
	if o == nil || IsNil(o.IncludeInUtilizationReportingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeInUtilizationReportingFlag.Get()
}

// GetIncludeInUtilizationReportingFlagOk returns a tuple with the IncludeInUtilizationReportingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetIncludeInUtilizationReportingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeInUtilizationReportingFlag.Get(), o.IncludeInUtilizationReportingFlag.IsSet()
}

// HasIncludeInUtilizationReportingFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasIncludeInUtilizationReportingFlag() bool {
	if o != nil && o.IncludeInUtilizationReportingFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeInUtilizationReportingFlag gets a reference to the given NullableBool and assigns it to the IncludeInUtilizationReportingFlag field.
func (o *MemberTemplate) SetIncludeInUtilizationReportingFlag(v bool) {
	o.IncludeInUtilizationReportingFlag.Set(&v)
}

// SetIncludeInUtilizationReportingFlagNil sets the value for IncludeInUtilizationReportingFlag to be an explicit nil
func (o *MemberTemplate) SetIncludeInUtilizationReportingFlagNil() {
	o.IncludeInUtilizationReportingFlag.Set(nil)
}

// UnsetIncludeInUtilizationReportingFlag ensures that no value is present for IncludeInUtilizationReportingFlag, not even an explicit nil
func (o *MemberTemplate) UnsetIncludeInUtilizationReportingFlag() {
	o.IncludeInUtilizationReportingFlag.Unset()
}

// GetRequireExpenseEntryFlag returns the RequireExpenseEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRequireExpenseEntryFlag() bool {
	if o == nil || IsNil(o.RequireExpenseEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireExpenseEntryFlag.Get()
}

// GetRequireExpenseEntryFlagOk returns a tuple with the RequireExpenseEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRequireExpenseEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireExpenseEntryFlag.Get(), o.RequireExpenseEntryFlag.IsSet()
}

// HasRequireExpenseEntryFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRequireExpenseEntryFlag() bool {
	if o != nil && o.RequireExpenseEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireExpenseEntryFlag gets a reference to the given NullableBool and assigns it to the RequireExpenseEntryFlag field.
func (o *MemberTemplate) SetRequireExpenseEntryFlag(v bool) {
	o.RequireExpenseEntryFlag.Set(&v)
}

// SetRequireExpenseEntryFlagNil sets the value for RequireExpenseEntryFlag to be an explicit nil
func (o *MemberTemplate) SetRequireExpenseEntryFlagNil() {
	o.RequireExpenseEntryFlag.Set(nil)
}

// UnsetRequireExpenseEntryFlag ensures that no value is present for RequireExpenseEntryFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRequireExpenseEntryFlag() {
	o.RequireExpenseEntryFlag.Unset()
}

// GetRequireTimeSheetEntryFlag returns the RequireTimeSheetEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRequireTimeSheetEntryFlag() bool {
	if o == nil || IsNil(o.RequireTimeSheetEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireTimeSheetEntryFlag.Get()
}

// GetRequireTimeSheetEntryFlagOk returns a tuple with the RequireTimeSheetEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRequireTimeSheetEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireTimeSheetEntryFlag.Get(), o.RequireTimeSheetEntryFlag.IsSet()
}

// HasRequireTimeSheetEntryFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRequireTimeSheetEntryFlag() bool {
	if o != nil && o.RequireTimeSheetEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireTimeSheetEntryFlag gets a reference to the given NullableBool and assigns it to the RequireTimeSheetEntryFlag field.
func (o *MemberTemplate) SetRequireTimeSheetEntryFlag(v bool) {
	o.RequireTimeSheetEntryFlag.Set(&v)
}

// SetRequireTimeSheetEntryFlagNil sets the value for RequireTimeSheetEntryFlag to be an explicit nil
func (o *MemberTemplate) SetRequireTimeSheetEntryFlagNil() {
	o.RequireTimeSheetEntryFlag.Set(nil)
}

// UnsetRequireTimeSheetEntryFlag ensures that no value is present for RequireTimeSheetEntryFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRequireTimeSheetEntryFlag() {
	o.RequireTimeSheetEntryFlag.Unset()
}

// GetRequireStartAndEndTimeOnTimeEntryFlag returns the RequireStartAndEndTimeOnTimeEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o == nil || IsNil(o.RequireStartAndEndTimeOnTimeEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
}

// GetRequireStartAndEndTimeOnTimeEntryFlagOk returns a tuple with the RequireStartAndEndTimeOnTimeEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRequireStartAndEndTimeOnTimeEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireStartAndEndTimeOnTimeEntryFlag.Get(), o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet()
}

// HasRequireStartAndEndTimeOnTimeEntryFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o != nil && o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireStartAndEndTimeOnTimeEntryFlag gets a reference to the given NullableBool and assigns it to the RequireStartAndEndTimeOnTimeEntryFlag field.
func (o *MemberTemplate) SetRequireStartAndEndTimeOnTimeEntryFlag(v bool) {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(&v)
}

// SetRequireStartAndEndTimeOnTimeEntryFlagNil sets the value for RequireStartAndEndTimeOnTimeEntryFlag to be an explicit nil
func (o *MemberTemplate) SetRequireStartAndEndTimeOnTimeEntryFlagNil() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(nil)
}

// UnsetRequireStartAndEndTimeOnTimeEntryFlag ensures that no value is present for RequireStartAndEndTimeOnTimeEntryFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRequireStartAndEndTimeOnTimeEntryFlag() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Unset()
}

// GetAllowInCellEntryOnTimeSheet returns the AllowInCellEntryOnTimeSheet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetAllowInCellEntryOnTimeSheet() bool {
	if o == nil || IsNil(o.AllowInCellEntryOnTimeSheet.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowInCellEntryOnTimeSheet.Get()
}

// GetAllowInCellEntryOnTimeSheetOk returns a tuple with the AllowInCellEntryOnTimeSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetAllowInCellEntryOnTimeSheetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowInCellEntryOnTimeSheet.Get(), o.AllowInCellEntryOnTimeSheet.IsSet()
}

// HasAllowInCellEntryOnTimeSheet returns a boolean if a field has been set.
func (o *MemberTemplate) HasAllowInCellEntryOnTimeSheet() bool {
	if o != nil && o.AllowInCellEntryOnTimeSheet.IsSet() {
		return true
	}

	return false
}

// SetAllowInCellEntryOnTimeSheet gets a reference to the given NullableBool and assigns it to the AllowInCellEntryOnTimeSheet field.
func (o *MemberTemplate) SetAllowInCellEntryOnTimeSheet(v bool) {
	o.AllowInCellEntryOnTimeSheet.Set(&v)
}

// SetAllowInCellEntryOnTimeSheetNil sets the value for AllowInCellEntryOnTimeSheet to be an explicit nil
func (o *MemberTemplate) SetAllowInCellEntryOnTimeSheetNil() {
	o.AllowInCellEntryOnTimeSheet.Set(nil)
}

// UnsetAllowInCellEntryOnTimeSheet ensures that no value is present for AllowInCellEntryOnTimeSheet, not even an explicit nil
func (o *MemberTemplate) UnsetAllowInCellEntryOnTimeSheet() {
	o.AllowInCellEntryOnTimeSheet.Unset()
}

// GetEnterTimeAgainstCompanyFlag returns the EnterTimeAgainstCompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetEnterTimeAgainstCompanyFlag() bool {
	if o == nil || IsNil(o.EnterTimeAgainstCompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnterTimeAgainstCompanyFlag.Get()
}

// GetEnterTimeAgainstCompanyFlagOk returns a tuple with the EnterTimeAgainstCompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetEnterTimeAgainstCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnterTimeAgainstCompanyFlag.Get(), o.EnterTimeAgainstCompanyFlag.IsSet()
}

// HasEnterTimeAgainstCompanyFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasEnterTimeAgainstCompanyFlag() bool {
	if o != nil && o.EnterTimeAgainstCompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetEnterTimeAgainstCompanyFlag gets a reference to the given NullableBool and assigns it to the EnterTimeAgainstCompanyFlag field.
func (o *MemberTemplate) SetEnterTimeAgainstCompanyFlag(v bool) {
	o.EnterTimeAgainstCompanyFlag.Set(&v)
}

// SetEnterTimeAgainstCompanyFlagNil sets the value for EnterTimeAgainstCompanyFlag to be an explicit nil
func (o *MemberTemplate) SetEnterTimeAgainstCompanyFlagNil() {
	o.EnterTimeAgainstCompanyFlag.Set(nil)
}

// UnsetEnterTimeAgainstCompanyFlag ensures that no value is present for EnterTimeAgainstCompanyFlag, not even an explicit nil
func (o *MemberTemplate) UnsetEnterTimeAgainstCompanyFlag() {
	o.EnterTimeAgainstCompanyFlag.Unset()
}

// GetAllowExpensesEnteredAgainstCompaniesFlag returns the AllowExpensesEnteredAgainstCompaniesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o == nil || IsNil(o.AllowExpensesEnteredAgainstCompaniesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
}

// GetAllowExpensesEnteredAgainstCompaniesFlagOk returns a tuple with the AllowExpensesEnteredAgainstCompaniesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetAllowExpensesEnteredAgainstCompaniesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowExpensesEnteredAgainstCompaniesFlag.Get(), o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet()
}

// HasAllowExpensesEnteredAgainstCompaniesFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o != nil && o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		return true
	}

	return false
}

// SetAllowExpensesEnteredAgainstCompaniesFlag gets a reference to the given NullableBool and assigns it to the AllowExpensesEnteredAgainstCompaniesFlag field.
func (o *MemberTemplate) SetAllowExpensesEnteredAgainstCompaniesFlag(v bool) {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(&v)
}

// SetAllowExpensesEnteredAgainstCompaniesFlagNil sets the value for AllowExpensesEnteredAgainstCompaniesFlag to be an explicit nil
func (o *MemberTemplate) SetAllowExpensesEnteredAgainstCompaniesFlagNil() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(nil)
}

// UnsetAllowExpensesEnteredAgainstCompaniesFlag ensures that no value is present for AllowExpensesEnteredAgainstCompaniesFlag, not even an explicit nil
func (o *MemberTemplate) UnsetAllowExpensesEnteredAgainstCompaniesFlag() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Unset()
}

// GetTimeReminderEmailFlag returns the TimeReminderEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetTimeReminderEmailFlag() bool {
	if o == nil || IsNil(o.TimeReminderEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeReminderEmailFlag.Get()
}

// GetTimeReminderEmailFlagOk returns a tuple with the TimeReminderEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetTimeReminderEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeReminderEmailFlag.Get(), o.TimeReminderEmailFlag.IsSet()
}

// HasTimeReminderEmailFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasTimeReminderEmailFlag() bool {
	if o != nil && o.TimeReminderEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeReminderEmailFlag gets a reference to the given NullableBool and assigns it to the TimeReminderEmailFlag field.
func (o *MemberTemplate) SetTimeReminderEmailFlag(v bool) {
	o.TimeReminderEmailFlag.Set(&v)
}

// SetTimeReminderEmailFlagNil sets the value for TimeReminderEmailFlag to be an explicit nil
func (o *MemberTemplate) SetTimeReminderEmailFlagNil() {
	o.TimeReminderEmailFlag.Set(nil)
}

// UnsetTimeReminderEmailFlag ensures that no value is present for TimeReminderEmailFlag, not even an explicit nil
func (o *MemberTemplate) UnsetTimeReminderEmailFlag() {
	o.TimeReminderEmailFlag.Unset()
}

// GetDaysTolerance returns the DaysTolerance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetDaysTolerance() int32 {
	if o == nil || IsNil(o.DaysTolerance.Get()) {
		var ret int32
		return ret
	}
	return *o.DaysTolerance.Get()
}

// GetDaysToleranceOk returns a tuple with the DaysTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetDaysToleranceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysTolerance.Get(), o.DaysTolerance.IsSet()
}

// HasDaysTolerance returns a boolean if a field has been set.
func (o *MemberTemplate) HasDaysTolerance() bool {
	if o != nil && o.DaysTolerance.IsSet() {
		return true
	}

	return false
}

// SetDaysTolerance gets a reference to the given NullableInt32 and assigns it to the DaysTolerance field.
func (o *MemberTemplate) SetDaysTolerance(v int32) {
	o.DaysTolerance.Set(&v)
}

// SetDaysToleranceNil sets the value for DaysTolerance to be an explicit nil
func (o *MemberTemplate) SetDaysToleranceNil() {
	o.DaysTolerance.Set(nil)
}

// UnsetDaysTolerance ensures that no value is present for DaysTolerance, not even an explicit nil
func (o *MemberTemplate) UnsetDaysTolerance() {
	o.DaysTolerance.Unset()
}

// GetMinimumHours returns the MinimumHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetMinimumHours() float64 {
	if o == nil || IsNil(o.MinimumHours.Get()) {
		var ret float64
		return ret
	}
	return *o.MinimumHours.Get()
}

// GetMinimumHoursOk returns a tuple with the MinimumHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetMinimumHoursOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumHours.Get(), o.MinimumHours.IsSet()
}

// HasMinimumHours returns a boolean if a field has been set.
func (o *MemberTemplate) HasMinimumHours() bool {
	if o != nil && o.MinimumHours.IsSet() {
		return true
	}

	return false
}

// SetMinimumHours gets a reference to the given NullableFloat64 and assigns it to the MinimumHours field.
func (o *MemberTemplate) SetMinimumHours(v float64) {
	o.MinimumHours.Set(&v)
}

// SetMinimumHoursNil sets the value for MinimumHours to be an explicit nil
func (o *MemberTemplate) SetMinimumHoursNil() {
	o.MinimumHours.Set(nil)
}

// UnsetMinimumHours ensures that no value is present for MinimumHours, not even an explicit nil
func (o *MemberTemplate) UnsetMinimumHours() {
	o.MinimumHours.Unset()
}

// GetTimeSheetStartDate returns the TimeSheetStartDate field value if set, zero value otherwise.
func (o *MemberTemplate) GetTimeSheetStartDate() string {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		var ret string
		return ret
	}
	return *o.TimeSheetStartDate
}

// GetTimeSheetStartDateOk returns a tuple with the TimeSheetStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTimeSheetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		return nil, false
	}
	return o.TimeSheetStartDate, true
}

// HasTimeSheetStartDate returns a boolean if a field has been set.
func (o *MemberTemplate) HasTimeSheetStartDate() bool {
	if o != nil && !IsNil(o.TimeSheetStartDate) {
		return true
	}

	return false
}

// SetTimeSheetStartDate gets a reference to the given string and assigns it to the TimeSheetStartDate field.
func (o *MemberTemplate) SetTimeSheetStartDate(v string) {
	o.TimeSheetStartDate = &v
}

// GetServiceDefaultLocation returns the ServiceDefaultLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetServiceDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ServiceDefaultLocation
}

// GetServiceDefaultLocationOk returns a tuple with the ServiceDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetServiceDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		return nil, false
	}
	return o.ServiceDefaultLocation, true
}

// HasServiceDefaultLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasServiceDefaultLocation() bool {
	if o != nil && !IsNil(o.ServiceDefaultLocation) {
		return true
	}

	return false
}

// SetServiceDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ServiceDefaultLocation field.
func (o *MemberTemplate) SetServiceDefaultLocation(v SystemLocationReference) {
	o.ServiceDefaultLocation = &v
}

// GetServiceDefaultDepartment returns the ServiceDefaultDepartment field value if set, zero value otherwise.
func (o *MemberTemplate) GetServiceDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ServiceDefaultDepartment
}

// GetServiceDefaultDepartmentOk returns a tuple with the ServiceDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetServiceDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		return nil, false
	}
	return o.ServiceDefaultDepartment, true
}

// HasServiceDefaultDepartment returns a boolean if a field has been set.
func (o *MemberTemplate) HasServiceDefaultDepartment() bool {
	if o != nil && !IsNil(o.ServiceDefaultDepartment) {
		return true
	}

	return false
}

// SetServiceDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ServiceDefaultDepartment field.
func (o *MemberTemplate) SetServiceDefaultDepartment(v SystemDepartmentReference) {
	o.ServiceDefaultDepartment = &v
}

// GetServiceDefaultBoard returns the ServiceDefaultBoard field value if set, zero value otherwise.
func (o *MemberTemplate) GetServiceDefaultBoard() BoardReference {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceDefaultBoard
}

// GetServiceDefaultBoardOk returns a tuple with the ServiceDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetServiceDefaultBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		return nil, false
	}
	return o.ServiceDefaultBoard, true
}

// HasServiceDefaultBoard returns a boolean if a field has been set.
func (o *MemberTemplate) HasServiceDefaultBoard() bool {
	if o != nil && !IsNil(o.ServiceDefaultBoard) {
		return true
	}

	return false
}

// SetServiceDefaultBoard gets a reference to the given BoardReference and assigns it to the ServiceDefaultBoard field.
func (o *MemberTemplate) SetServiceDefaultBoard(v BoardReference) {
	o.ServiceDefaultBoard = &v
}

// GetRestrictServiceDefaultLocationFlag returns the RestrictServiceDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictServiceDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultLocationFlag.Get()
}

// GetRestrictServiceDefaultLocationFlagOk returns a tuple with the RestrictServiceDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictServiceDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultLocationFlag.Get(), o.RestrictServiceDefaultLocationFlag.IsSet()
}

// HasRestrictServiceDefaultLocationFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictServiceDefaultLocationFlag() bool {
	if o != nil && o.RestrictServiceDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultLocationFlag field.
func (o *MemberTemplate) SetRestrictServiceDefaultLocationFlag(v bool) {
	o.RestrictServiceDefaultLocationFlag.Set(&v)
}

// SetRestrictServiceDefaultLocationFlagNil sets the value for RestrictServiceDefaultLocationFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictServiceDefaultLocationFlagNil() {
	o.RestrictServiceDefaultLocationFlag.Set(nil)
}

// UnsetRestrictServiceDefaultLocationFlag ensures that no value is present for RestrictServiceDefaultLocationFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictServiceDefaultLocationFlag() {
	o.RestrictServiceDefaultLocationFlag.Unset()
}

// GetRestrictServiceDefaultDepartmentFlag returns the RestrictServiceDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictServiceDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultDepartmentFlag.Get()
}

// GetRestrictServiceDefaultDepartmentFlagOk returns a tuple with the RestrictServiceDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictServiceDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultDepartmentFlag.Get(), o.RestrictServiceDefaultDepartmentFlag.IsSet()
}

// HasRestrictServiceDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictServiceDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultDepartmentFlag field.
func (o *MemberTemplate) SetRestrictServiceDefaultDepartmentFlag(v bool) {
	o.RestrictServiceDefaultDepartmentFlag.Set(&v)
}

// SetRestrictServiceDefaultDepartmentFlagNil sets the value for RestrictServiceDefaultDepartmentFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictServiceDefaultDepartmentFlagNil() {
	o.RestrictServiceDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictServiceDefaultDepartmentFlag ensures that no value is present for RestrictServiceDefaultDepartmentFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictServiceDefaultDepartmentFlag() {
	o.RestrictServiceDefaultDepartmentFlag.Unset()
}

// GetExcludedServiceBoardIds returns the ExcludedServiceBoardIds field value if set, zero value otherwise.
func (o *MemberTemplate) GetExcludedServiceBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedServiceBoardIds
}

// GetExcludedServiceBoardIdsOk returns a tuple with the ExcludedServiceBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetExcludedServiceBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		return nil, false
	}
	return o.ExcludedServiceBoardIds, true
}

// HasExcludedServiceBoardIds returns a boolean if a field has been set.
func (o *MemberTemplate) HasExcludedServiceBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedServiceBoardIds) {
		return true
	}

	return false
}

// SetExcludedServiceBoardIds gets a reference to the given []int32 and assigns it to the ExcludedServiceBoardIds field.
func (o *MemberTemplate) SetExcludedServiceBoardIds(v []int32) {
	o.ExcludedServiceBoardIds = v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *MemberTemplate) GetTeams() []int32 {
	if o == nil || IsNil(o.Teams) {
		var ret []int32
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetTeamsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *MemberTemplate) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []int32 and assigns it to the Teams field.
func (o *MemberTemplate) SetTeams(v []int32) {
	o.Teams = v
}

// GetServiceBoardTeamIds returns the ServiceBoardTeamIds field value if set, zero value otherwise.
func (o *MemberTemplate) GetServiceBoardTeamIds() []int32 {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		var ret []int32
		return ret
	}
	return o.ServiceBoardTeamIds
}

// GetServiceBoardTeamIdsOk returns a tuple with the ServiceBoardTeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetServiceBoardTeamIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		return nil, false
	}
	return o.ServiceBoardTeamIds, true
}

// HasServiceBoardTeamIds returns a boolean if a field has been set.
func (o *MemberTemplate) HasServiceBoardTeamIds() bool {
	if o != nil && !IsNil(o.ServiceBoardTeamIds) {
		return true
	}

	return false
}

// SetServiceBoardTeamIds gets a reference to the given []int32 and assigns it to the ServiceBoardTeamIds field.
func (o *MemberTemplate) SetServiceBoardTeamIds(v []int32) {
	o.ServiceBoardTeamIds = v
}

// GetProjectDefaultLocation returns the ProjectDefaultLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetProjectDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ProjectDefaultLocation
}

// GetProjectDefaultLocationOk returns a tuple with the ProjectDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetProjectDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		return nil, false
	}
	return o.ProjectDefaultLocation, true
}

// HasProjectDefaultLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasProjectDefaultLocation() bool {
	if o != nil && !IsNil(o.ProjectDefaultLocation) {
		return true
	}

	return false
}

// SetProjectDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ProjectDefaultLocation field.
func (o *MemberTemplate) SetProjectDefaultLocation(v SystemLocationReference) {
	o.ProjectDefaultLocation = &v
}

// GetProjectDefaultDepartment returns the ProjectDefaultDepartment field value if set, zero value otherwise.
func (o *MemberTemplate) GetProjectDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ProjectDefaultDepartment
}

// GetProjectDefaultDepartmentOk returns a tuple with the ProjectDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetProjectDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		return nil, false
	}
	return o.ProjectDefaultDepartment, true
}

// HasProjectDefaultDepartment returns a boolean if a field has been set.
func (o *MemberTemplate) HasProjectDefaultDepartment() bool {
	if o != nil && !IsNil(o.ProjectDefaultDepartment) {
		return true
	}

	return false
}

// SetProjectDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ProjectDefaultDepartment field.
func (o *MemberTemplate) SetProjectDefaultDepartment(v SystemDepartmentReference) {
	o.ProjectDefaultDepartment = &v
}

// GetProjectDefaultBoard returns the ProjectDefaultBoard field value if set, zero value otherwise.
func (o *MemberTemplate) GetProjectDefaultBoard() ProjectBoardReference {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		var ret ProjectBoardReference
		return ret
	}
	return *o.ProjectDefaultBoard
}

// GetProjectDefaultBoardOk returns a tuple with the ProjectDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetProjectDefaultBoardOk() (*ProjectBoardReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		return nil, false
	}
	return o.ProjectDefaultBoard, true
}

// HasProjectDefaultBoard returns a boolean if a field has been set.
func (o *MemberTemplate) HasProjectDefaultBoard() bool {
	if o != nil && !IsNil(o.ProjectDefaultBoard) {
		return true
	}

	return false
}

// SetProjectDefaultBoard gets a reference to the given ProjectBoardReference and assigns it to the ProjectDefaultBoard field.
func (o *MemberTemplate) SetProjectDefaultBoard(v ProjectBoardReference) {
	o.ProjectDefaultBoard = &v
}

// GetRestrictProjectDefaultLocationFlag returns the RestrictProjectDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictProjectDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultLocationFlag.Get()
}

// GetRestrictProjectDefaultLocationFlagOk returns a tuple with the RestrictProjectDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictProjectDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultLocationFlag.Get(), o.RestrictProjectDefaultLocationFlag.IsSet()
}

// HasRestrictProjectDefaultLocationFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictProjectDefaultLocationFlag() bool {
	if o != nil && o.RestrictProjectDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultLocationFlag field.
func (o *MemberTemplate) SetRestrictProjectDefaultLocationFlag(v bool) {
	o.RestrictProjectDefaultLocationFlag.Set(&v)
}

// SetRestrictProjectDefaultLocationFlagNil sets the value for RestrictProjectDefaultLocationFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictProjectDefaultLocationFlagNil() {
	o.RestrictProjectDefaultLocationFlag.Set(nil)
}

// UnsetRestrictProjectDefaultLocationFlag ensures that no value is present for RestrictProjectDefaultLocationFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictProjectDefaultLocationFlag() {
	o.RestrictProjectDefaultLocationFlag.Unset()
}

// GetRestrictProjectDefaultDepartmentFlag returns the RestrictProjectDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictProjectDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultDepartmentFlag.Get()
}

// GetRestrictProjectDefaultDepartmentFlagOk returns a tuple with the RestrictProjectDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictProjectDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultDepartmentFlag.Get(), o.RestrictProjectDefaultDepartmentFlag.IsSet()
}

// HasRestrictProjectDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictProjectDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultDepartmentFlag field.
func (o *MemberTemplate) SetRestrictProjectDefaultDepartmentFlag(v bool) {
	o.RestrictProjectDefaultDepartmentFlag.Set(&v)
}

// SetRestrictProjectDefaultDepartmentFlagNil sets the value for RestrictProjectDefaultDepartmentFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictProjectDefaultDepartmentFlagNil() {
	o.RestrictProjectDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictProjectDefaultDepartmentFlag ensures that no value is present for RestrictProjectDefaultDepartmentFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictProjectDefaultDepartmentFlag() {
	o.RestrictProjectDefaultDepartmentFlag.Unset()
}

// GetExcludedProjectBoardIds returns the ExcludedProjectBoardIds field value if set, zero value otherwise.
func (o *MemberTemplate) GetExcludedProjectBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedProjectBoardIds
}

// GetExcludedProjectBoardIdsOk returns a tuple with the ExcludedProjectBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetExcludedProjectBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		return nil, false
	}
	return o.ExcludedProjectBoardIds, true
}

// HasExcludedProjectBoardIds returns a boolean if a field has been set.
func (o *MemberTemplate) HasExcludedProjectBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedProjectBoardIds) {
		return true
	}

	return false
}

// SetExcludedProjectBoardIds gets a reference to the given []int32 and assigns it to the ExcludedProjectBoardIds field.
func (o *MemberTemplate) SetExcludedProjectBoardIds(v []int32) {
	o.ExcludedProjectBoardIds = v
}

// GetScheduleDefaultLocation returns the ScheduleDefaultLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetScheduleDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ScheduleDefaultLocation
}

// GetScheduleDefaultLocationOk returns a tuple with the ScheduleDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetScheduleDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		return nil, false
	}
	return o.ScheduleDefaultLocation, true
}

// HasScheduleDefaultLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasScheduleDefaultLocation() bool {
	if o != nil && !IsNil(o.ScheduleDefaultLocation) {
		return true
	}

	return false
}

// SetScheduleDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ScheduleDefaultLocation field.
func (o *MemberTemplate) SetScheduleDefaultLocation(v SystemLocationReference) {
	o.ScheduleDefaultLocation = &v
}

// GetScheduleDefaultDepartment returns the ScheduleDefaultDepartment field value if set, zero value otherwise.
func (o *MemberTemplate) GetScheduleDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ScheduleDefaultDepartment
}

// GetScheduleDefaultDepartmentOk returns a tuple with the ScheduleDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetScheduleDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		return nil, false
	}
	return o.ScheduleDefaultDepartment, true
}

// HasScheduleDefaultDepartment returns a boolean if a field has been set.
func (o *MemberTemplate) HasScheduleDefaultDepartment() bool {
	if o != nil && !IsNil(o.ScheduleDefaultDepartment) {
		return true
	}

	return false
}

// SetScheduleDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ScheduleDefaultDepartment field.
func (o *MemberTemplate) SetScheduleDefaultDepartment(v SystemDepartmentReference) {
	o.ScheduleDefaultDepartment = &v
}

// GetScheduleCapacity returns the ScheduleCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetScheduleCapacity() float64 {
	if o == nil || IsNil(o.ScheduleCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.ScheduleCapacity.Get()
}

// GetScheduleCapacityOk returns a tuple with the ScheduleCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetScheduleCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleCapacity.Get(), o.ScheduleCapacity.IsSet()
}

// HasScheduleCapacity returns a boolean if a field has been set.
func (o *MemberTemplate) HasScheduleCapacity() bool {
	if o != nil && o.ScheduleCapacity.IsSet() {
		return true
	}

	return false
}

// SetScheduleCapacity gets a reference to the given NullableFloat64 and assigns it to the ScheduleCapacity field.
func (o *MemberTemplate) SetScheduleCapacity(v float64) {
	o.ScheduleCapacity.Set(&v)
}

// SetScheduleCapacityNil sets the value for ScheduleCapacity to be an explicit nil
func (o *MemberTemplate) SetScheduleCapacityNil() {
	o.ScheduleCapacity.Set(nil)
}

// UnsetScheduleCapacity ensures that no value is present for ScheduleCapacity, not even an explicit nil
func (o *MemberTemplate) UnsetScheduleCapacity() {
	o.ScheduleCapacity.Unset()
}

// GetServiceLocation returns the ServiceLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetServiceLocation() ServiceLocationReference {
	if o == nil || IsNil(o.ServiceLocation) {
		var ret ServiceLocationReference
		return ret
	}
	return *o.ServiceLocation
}

// GetServiceLocationOk returns a tuple with the ServiceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetServiceLocationOk() (*ServiceLocationReference, bool) {
	if o == nil || IsNil(o.ServiceLocation) {
		return nil, false
	}
	return o.ServiceLocation, true
}

// HasServiceLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasServiceLocation() bool {
	if o != nil && !IsNil(o.ServiceLocation) {
		return true
	}

	return false
}

// SetServiceLocation gets a reference to the given ServiceLocationReference and assigns it to the ServiceLocation field.
func (o *MemberTemplate) SetServiceLocation(v ServiceLocationReference) {
	o.ServiceLocation = &v
}

// GetRestrictScheduleFlag returns the RestrictScheduleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictScheduleFlag() bool {
	if o == nil || IsNil(o.RestrictScheduleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictScheduleFlag.Get()
}

// GetRestrictScheduleFlagOk returns a tuple with the RestrictScheduleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictScheduleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictScheduleFlag.Get(), o.RestrictScheduleFlag.IsSet()
}

// HasRestrictScheduleFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictScheduleFlag() bool {
	if o != nil && o.RestrictScheduleFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictScheduleFlag gets a reference to the given NullableBool and assigns it to the RestrictScheduleFlag field.
func (o *MemberTemplate) SetRestrictScheduleFlag(v bool) {
	o.RestrictScheduleFlag.Set(&v)
}

// SetRestrictScheduleFlagNil sets the value for RestrictScheduleFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictScheduleFlagNil() {
	o.RestrictScheduleFlag.Set(nil)
}

// UnsetRestrictScheduleFlag ensures that no value is present for RestrictScheduleFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictScheduleFlag() {
	o.RestrictScheduleFlag.Unset()
}

// GetHideMemberInDispatchPortalFlag returns the HideMemberInDispatchPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetHideMemberInDispatchPortalFlag() bool {
	if o == nil || IsNil(o.HideMemberInDispatchPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HideMemberInDispatchPortalFlag.Get()
}

// GetHideMemberInDispatchPortalFlagOk returns a tuple with the HideMemberInDispatchPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetHideMemberInDispatchPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HideMemberInDispatchPortalFlag.Get(), o.HideMemberInDispatchPortalFlag.IsSet()
}

// HasHideMemberInDispatchPortalFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasHideMemberInDispatchPortalFlag() bool {
	if o != nil && o.HideMemberInDispatchPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetHideMemberInDispatchPortalFlag gets a reference to the given NullableBool and assigns it to the HideMemberInDispatchPortalFlag field.
func (o *MemberTemplate) SetHideMemberInDispatchPortalFlag(v bool) {
	o.HideMemberInDispatchPortalFlag.Set(&v)
}

// SetHideMemberInDispatchPortalFlagNil sets the value for HideMemberInDispatchPortalFlag to be an explicit nil
func (o *MemberTemplate) SetHideMemberInDispatchPortalFlagNil() {
	o.HideMemberInDispatchPortalFlag.Set(nil)
}

// UnsetHideMemberInDispatchPortalFlag ensures that no value is present for HideMemberInDispatchPortalFlag, not even an explicit nil
func (o *MemberTemplate) UnsetHideMemberInDispatchPortalFlag() {
	o.HideMemberInDispatchPortalFlag.Unset()
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *MemberTemplate) GetCalendar() CalendarReference {
	if o == nil || IsNil(o.Calendar) {
		var ret CalendarReference
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetCalendarOk() (*CalendarReference, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *MemberTemplate) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given CalendarReference and assigns it to the Calendar field.
func (o *MemberTemplate) SetCalendar(v CalendarReference) {
	o.Calendar = &v
}

// GetSalesDefaultLocation returns the SalesDefaultLocation field value if set, zero value otherwise.
func (o *MemberTemplate) GetSalesDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SalesDefaultLocation
}

// GetSalesDefaultLocationOk returns a tuple with the SalesDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetSalesDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		return nil, false
	}
	return o.SalesDefaultLocation, true
}

// HasSalesDefaultLocation returns a boolean if a field has been set.
func (o *MemberTemplate) HasSalesDefaultLocation() bool {
	if o != nil && !IsNil(o.SalesDefaultLocation) {
		return true
	}

	return false
}

// SetSalesDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the SalesDefaultLocation field.
func (o *MemberTemplate) SetSalesDefaultLocation(v SystemLocationReference) {
	o.SalesDefaultLocation = &v
}

// GetRestrictDefaultSalesTerritoryFlag returns the RestrictDefaultSalesTerritoryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictDefaultSalesTerritoryFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultSalesTerritoryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultSalesTerritoryFlag.Get()
}

// GetRestrictDefaultSalesTerritoryFlagOk returns a tuple with the RestrictDefaultSalesTerritoryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictDefaultSalesTerritoryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultSalesTerritoryFlag.Get(), o.RestrictDefaultSalesTerritoryFlag.IsSet()
}

// HasRestrictDefaultSalesTerritoryFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictDefaultSalesTerritoryFlag() bool {
	if o != nil && o.RestrictDefaultSalesTerritoryFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultSalesTerritoryFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultSalesTerritoryFlag field.
func (o *MemberTemplate) SetRestrictDefaultSalesTerritoryFlag(v bool) {
	o.RestrictDefaultSalesTerritoryFlag.Set(&v)
}

// SetRestrictDefaultSalesTerritoryFlagNil sets the value for RestrictDefaultSalesTerritoryFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictDefaultSalesTerritoryFlagNil() {
	o.RestrictDefaultSalesTerritoryFlag.Set(nil)
}

// UnsetRestrictDefaultSalesTerritoryFlag ensures that no value is present for RestrictDefaultSalesTerritoryFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictDefaultSalesTerritoryFlag() {
	o.RestrictDefaultSalesTerritoryFlag.Unset()
}

// GetWarehouse returns the Warehouse field value if set, zero value otherwise.
func (o *MemberTemplate) GetWarehouse() WarehouseReference {
	if o == nil || IsNil(o.Warehouse) {
		var ret WarehouseReference
		return ret
	}
	return *o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil || IsNil(o.Warehouse) {
		return nil, false
	}
	return o.Warehouse, true
}

// HasWarehouse returns a boolean if a field has been set.
func (o *MemberTemplate) HasWarehouse() bool {
	if o != nil && !IsNil(o.Warehouse) {
		return true
	}

	return false
}

// SetWarehouse gets a reference to the given WarehouseReference and assigns it to the Warehouse field.
func (o *MemberTemplate) SetWarehouse(v WarehouseReference) {
	o.Warehouse = &v
}

// GetWarehouseBin returns the WarehouseBin field value if set, zero value otherwise.
func (o *MemberTemplate) GetWarehouseBin() WarehouseBinReference {
	if o == nil || IsNil(o.WarehouseBin) {
		var ret WarehouseBinReference
		return ret
	}
	return *o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil || IsNil(o.WarehouseBin) {
		return nil, false
	}
	return o.WarehouseBin, true
}

// HasWarehouseBin returns a boolean if a field has been set.
func (o *MemberTemplate) HasWarehouseBin() bool {
	if o != nil && !IsNil(o.WarehouseBin) {
		return true
	}

	return false
}

// SetWarehouseBin gets a reference to the given WarehouseBinReference and assigns it to the WarehouseBin field.
func (o *MemberTemplate) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = &v
}

// GetRestrictDefaultWarehouseFlag returns the RestrictDefaultWarehouseFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictDefaultWarehouseFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseFlag.Get()
}

// GetRestrictDefaultWarehouseFlagOk returns a tuple with the RestrictDefaultWarehouseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictDefaultWarehouseFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseFlag.Get(), o.RestrictDefaultWarehouseFlag.IsSet()
}

// HasRestrictDefaultWarehouseFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictDefaultWarehouseFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseFlag field.
func (o *MemberTemplate) SetRestrictDefaultWarehouseFlag(v bool) {
	o.RestrictDefaultWarehouseFlag.Set(&v)
}

// SetRestrictDefaultWarehouseFlagNil sets the value for RestrictDefaultWarehouseFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictDefaultWarehouseFlagNil() {
	o.RestrictDefaultWarehouseFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseFlag ensures that no value is present for RestrictDefaultWarehouseFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictDefaultWarehouseFlag() {
	o.RestrictDefaultWarehouseFlag.Unset()
}

// GetRestrictDefaultWarehouseBinFlag returns the RestrictDefaultWarehouseBinFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetRestrictDefaultWarehouseBinFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseBinFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseBinFlag.Get()
}

// GetRestrictDefaultWarehouseBinFlagOk returns a tuple with the RestrictDefaultWarehouseBinFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetRestrictDefaultWarehouseBinFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseBinFlag.Get(), o.RestrictDefaultWarehouseBinFlag.IsSet()
}

// HasRestrictDefaultWarehouseBinFlag returns a boolean if a field has been set.
func (o *MemberTemplate) HasRestrictDefaultWarehouseBinFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseBinFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseBinFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseBinFlag field.
func (o *MemberTemplate) SetRestrictDefaultWarehouseBinFlag(v bool) {
	o.RestrictDefaultWarehouseBinFlag.Set(&v)
}

// SetRestrictDefaultWarehouseBinFlagNil sets the value for RestrictDefaultWarehouseBinFlag to be an explicit nil
func (o *MemberTemplate) SetRestrictDefaultWarehouseBinFlagNil() {
	o.RestrictDefaultWarehouseBinFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseBinFlag ensures that no value is present for RestrictDefaultWarehouseBinFlag, not even an explicit nil
func (o *MemberTemplate) UnsetRestrictDefaultWarehouseBinFlag() {
	o.RestrictDefaultWarehouseBinFlag.Unset()
}

// GetCompanyActivityTabFormat returns the CompanyActivityTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetCompanyActivityTabFormat() string {
	if o == nil || IsNil(o.CompanyActivityTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyActivityTabFormat.Get()
}

// GetCompanyActivityTabFormatOk returns a tuple with the CompanyActivityTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetCompanyActivityTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyActivityTabFormat.Get(), o.CompanyActivityTabFormat.IsSet()
}

// HasCompanyActivityTabFormat returns a boolean if a field has been set.
func (o *MemberTemplate) HasCompanyActivityTabFormat() bool {
	if o != nil && o.CompanyActivityTabFormat.IsSet() {
		return true
	}

	return false
}

// SetCompanyActivityTabFormat gets a reference to the given NullableString and assigns it to the CompanyActivityTabFormat field.
func (o *MemberTemplate) SetCompanyActivityTabFormat(v string) {
	o.CompanyActivityTabFormat.Set(&v)
}

// SetCompanyActivityTabFormatNil sets the value for CompanyActivityTabFormat to be an explicit nil
func (o *MemberTemplate) SetCompanyActivityTabFormatNil() {
	o.CompanyActivityTabFormat.Set(nil)
}

// UnsetCompanyActivityTabFormat ensures that no value is present for CompanyActivityTabFormat, not even an explicit nil
func (o *MemberTemplate) UnsetCompanyActivityTabFormat() {
	o.CompanyActivityTabFormat.Unset()
}

// GetInvoiceTimeTabFormat returns the InvoiceTimeTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetInvoiceTimeTabFormat() string {
	if o == nil || IsNil(o.InvoiceTimeTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceTimeTabFormat.Get()
}

// GetInvoiceTimeTabFormatOk returns a tuple with the InvoiceTimeTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetInvoiceTimeTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceTimeTabFormat.Get(), o.InvoiceTimeTabFormat.IsSet()
}

// HasInvoiceTimeTabFormat returns a boolean if a field has been set.
func (o *MemberTemplate) HasInvoiceTimeTabFormat() bool {
	if o != nil && o.InvoiceTimeTabFormat.IsSet() {
		return true
	}

	return false
}

// SetInvoiceTimeTabFormat gets a reference to the given NullableString and assigns it to the InvoiceTimeTabFormat field.
func (o *MemberTemplate) SetInvoiceTimeTabFormat(v string) {
	o.InvoiceTimeTabFormat.Set(&v)
}

// SetInvoiceTimeTabFormatNil sets the value for InvoiceTimeTabFormat to be an explicit nil
func (o *MemberTemplate) SetInvoiceTimeTabFormatNil() {
	o.InvoiceTimeTabFormat.Set(nil)
}

// UnsetInvoiceTimeTabFormat ensures that no value is present for InvoiceTimeTabFormat, not even an explicit nil
func (o *MemberTemplate) UnsetInvoiceTimeTabFormat() {
	o.InvoiceTimeTabFormat.Unset()
}

// GetInvoiceScreenDefaultTabFormat returns the InvoiceScreenDefaultTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetInvoiceScreenDefaultTabFormat() string {
	if o == nil || IsNil(o.InvoiceScreenDefaultTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceScreenDefaultTabFormat.Get()
}

// GetInvoiceScreenDefaultTabFormatOk returns a tuple with the InvoiceScreenDefaultTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetInvoiceScreenDefaultTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceScreenDefaultTabFormat.Get(), o.InvoiceScreenDefaultTabFormat.IsSet()
}

// HasInvoiceScreenDefaultTabFormat returns a boolean if a field has been set.
func (o *MemberTemplate) HasInvoiceScreenDefaultTabFormat() bool {
	if o != nil && o.InvoiceScreenDefaultTabFormat.IsSet() {
		return true
	}

	return false
}

// SetInvoiceScreenDefaultTabFormat gets a reference to the given NullableString and assigns it to the InvoiceScreenDefaultTabFormat field.
func (o *MemberTemplate) SetInvoiceScreenDefaultTabFormat(v string) {
	o.InvoiceScreenDefaultTabFormat.Set(&v)
}

// SetInvoiceScreenDefaultTabFormatNil sets the value for InvoiceScreenDefaultTabFormat to be an explicit nil
func (o *MemberTemplate) SetInvoiceScreenDefaultTabFormatNil() {
	o.InvoiceScreenDefaultTabFormat.Set(nil)
}

// UnsetInvoiceScreenDefaultTabFormat ensures that no value is present for InvoiceScreenDefaultTabFormat, not even an explicit nil
func (o *MemberTemplate) UnsetInvoiceScreenDefaultTabFormat() {
	o.InvoiceScreenDefaultTabFormat.Unset()
}

// GetInvoicingDisplayOptions returns the InvoicingDisplayOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetInvoicingDisplayOptions() string {
	if o == nil || IsNil(o.InvoicingDisplayOptions.Get()) {
		var ret string
		return ret
	}
	return *o.InvoicingDisplayOptions.Get()
}

// GetInvoicingDisplayOptionsOk returns a tuple with the InvoicingDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoicingDisplayOptions.Get(), o.InvoicingDisplayOptions.IsSet()
}

// HasInvoicingDisplayOptions returns a boolean if a field has been set.
func (o *MemberTemplate) HasInvoicingDisplayOptions() bool {
	if o != nil && o.InvoicingDisplayOptions.IsSet() {
		return true
	}

	return false
}

// SetInvoicingDisplayOptions gets a reference to the given NullableString and assigns it to the InvoicingDisplayOptions field.
func (o *MemberTemplate) SetInvoicingDisplayOptions(v string) {
	o.InvoicingDisplayOptions.Set(&v)
}

// SetInvoicingDisplayOptionsNil sets the value for InvoicingDisplayOptions to be an explicit nil
func (o *MemberTemplate) SetInvoicingDisplayOptionsNil() {
	o.InvoicingDisplayOptions.Set(nil)
}

// UnsetInvoicingDisplayOptions ensures that no value is present for InvoicingDisplayOptions, not even an explicit nil
func (o *MemberTemplate) UnsetInvoicingDisplayOptions() {
	o.InvoicingDisplayOptions.Unset()
}

// GetAgreementInvoicingDisplayOptions returns the AgreementInvoicingDisplayOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetAgreementInvoicingDisplayOptions() string {
	if o == nil || IsNil(o.AgreementInvoicingDisplayOptions.Get()) {
		var ret string
		return ret
	}
	return *o.AgreementInvoicingDisplayOptions.Get()
}

// GetAgreementInvoicingDisplayOptionsOk returns a tuple with the AgreementInvoicingDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetAgreementInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementInvoicingDisplayOptions.Get(), o.AgreementInvoicingDisplayOptions.IsSet()
}

// HasAgreementInvoicingDisplayOptions returns a boolean if a field has been set.
func (o *MemberTemplate) HasAgreementInvoicingDisplayOptions() bool {
	if o != nil && o.AgreementInvoicingDisplayOptions.IsSet() {
		return true
	}

	return false
}

// SetAgreementInvoicingDisplayOptions gets a reference to the given NullableString and assigns it to the AgreementInvoicingDisplayOptions field.
func (o *MemberTemplate) SetAgreementInvoicingDisplayOptions(v string) {
	o.AgreementInvoicingDisplayOptions.Set(&v)
}

// SetAgreementInvoicingDisplayOptionsNil sets the value for AgreementInvoicingDisplayOptions to be an explicit nil
func (o *MemberTemplate) SetAgreementInvoicingDisplayOptionsNil() {
	o.AgreementInvoicingDisplayOptions.Set(nil)
}

// UnsetAgreementInvoicingDisplayOptions ensures that no value is present for AgreementInvoicingDisplayOptions, not even an explicit nil
func (o *MemberTemplate) UnsetAgreementInvoicingDisplayOptions() {
	o.AgreementInvoicingDisplayOptions.Unset()
}

// GetAutoStartStopwatch returns the AutoStartStopwatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetAutoStartStopwatch() bool {
	if o == nil || IsNil(o.AutoStartStopwatch.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoStartStopwatch.Get()
}

// GetAutoStartStopwatchOk returns a tuple with the AutoStartStopwatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetAutoStartStopwatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoStartStopwatch.Get(), o.AutoStartStopwatch.IsSet()
}

// HasAutoStartStopwatch returns a boolean if a field has been set.
func (o *MemberTemplate) HasAutoStartStopwatch() bool {
	if o != nil && o.AutoStartStopwatch.IsSet() {
		return true
	}

	return false
}

// SetAutoStartStopwatch gets a reference to the given NullableBool and assigns it to the AutoStartStopwatch field.
func (o *MemberTemplate) SetAutoStartStopwatch(v bool) {
	o.AutoStartStopwatch.Set(&v)
}

// SetAutoStartStopwatchNil sets the value for AutoStartStopwatch to be an explicit nil
func (o *MemberTemplate) SetAutoStartStopwatchNil() {
	o.AutoStartStopwatch.Set(nil)
}

// UnsetAutoStartStopwatch ensures that no value is present for AutoStartStopwatch, not even an explicit nil
func (o *MemberTemplate) UnsetAutoStartStopwatch() {
	o.AutoStartStopwatch.Unset()
}

// GetAutoPopupQuickNotesWithStopwatch returns the AutoPopupQuickNotesWithStopwatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetAutoPopupQuickNotesWithStopwatch() bool {
	if o == nil || IsNil(o.AutoPopupQuickNotesWithStopwatch.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoPopupQuickNotesWithStopwatch.Get()
}

// GetAutoPopupQuickNotesWithStopwatchOk returns a tuple with the AutoPopupQuickNotesWithStopwatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetAutoPopupQuickNotesWithStopwatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoPopupQuickNotesWithStopwatch.Get(), o.AutoPopupQuickNotesWithStopwatch.IsSet()
}

// HasAutoPopupQuickNotesWithStopwatch returns a boolean if a field has been set.
func (o *MemberTemplate) HasAutoPopupQuickNotesWithStopwatch() bool {
	if o != nil && o.AutoPopupQuickNotesWithStopwatch.IsSet() {
		return true
	}

	return false
}

// SetAutoPopupQuickNotesWithStopwatch gets a reference to the given NullableBool and assigns it to the AutoPopupQuickNotesWithStopwatch field.
func (o *MemberTemplate) SetAutoPopupQuickNotesWithStopwatch(v bool) {
	o.AutoPopupQuickNotesWithStopwatch.Set(&v)
}

// SetAutoPopupQuickNotesWithStopwatchNil sets the value for AutoPopupQuickNotesWithStopwatch to be an explicit nil
func (o *MemberTemplate) SetAutoPopupQuickNotesWithStopwatchNil() {
	o.AutoPopupQuickNotesWithStopwatch.Set(nil)
}

// UnsetAutoPopupQuickNotesWithStopwatch ensures that no value is present for AutoPopupQuickNotesWithStopwatch, not even an explicit nil
func (o *MemberTemplate) UnsetAutoPopupQuickNotesWithStopwatch() {
	o.AutoPopupQuickNotesWithStopwatch.Unset()
}

// GetGlobalSearchDefaultTicketFilter returns the GlobalSearchDefaultTicketFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetGlobalSearchDefaultTicketFilter() string {
	if o == nil || IsNil(o.GlobalSearchDefaultTicketFilter.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalSearchDefaultTicketFilter.Get()
}

// GetGlobalSearchDefaultTicketFilterOk returns a tuple with the GlobalSearchDefaultTicketFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetGlobalSearchDefaultTicketFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalSearchDefaultTicketFilter.Get(), o.GlobalSearchDefaultTicketFilter.IsSet()
}

// HasGlobalSearchDefaultTicketFilter returns a boolean if a field has been set.
func (o *MemberTemplate) HasGlobalSearchDefaultTicketFilter() bool {
	if o != nil && o.GlobalSearchDefaultTicketFilter.IsSet() {
		return true
	}

	return false
}

// SetGlobalSearchDefaultTicketFilter gets a reference to the given NullableString and assigns it to the GlobalSearchDefaultTicketFilter field.
func (o *MemberTemplate) SetGlobalSearchDefaultTicketFilter(v string) {
	o.GlobalSearchDefaultTicketFilter.Set(&v)
}

// SetGlobalSearchDefaultTicketFilterNil sets the value for GlobalSearchDefaultTicketFilter to be an explicit nil
func (o *MemberTemplate) SetGlobalSearchDefaultTicketFilterNil() {
	o.GlobalSearchDefaultTicketFilter.Set(nil)
}

// UnsetGlobalSearchDefaultTicketFilter ensures that no value is present for GlobalSearchDefaultTicketFilter, not even an explicit nil
func (o *MemberTemplate) UnsetGlobalSearchDefaultTicketFilter() {
	o.GlobalSearchDefaultTicketFilter.Unset()
}

// GetGlobalSearchDefaultSort returns the GlobalSearchDefaultSort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberTemplate) GetGlobalSearchDefaultSort() string {
	if o == nil || IsNil(o.GlobalSearchDefaultSort.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalSearchDefaultSort.Get()
}

// GetGlobalSearchDefaultSortOk returns a tuple with the GlobalSearchDefaultSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberTemplate) GetGlobalSearchDefaultSortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalSearchDefaultSort.Get(), o.GlobalSearchDefaultSort.IsSet()
}

// HasGlobalSearchDefaultSort returns a boolean if a field has been set.
func (o *MemberTemplate) HasGlobalSearchDefaultSort() bool {
	if o != nil && o.GlobalSearchDefaultSort.IsSet() {
		return true
	}

	return false
}

// SetGlobalSearchDefaultSort gets a reference to the given NullableString and assigns it to the GlobalSearchDefaultSort field.
func (o *MemberTemplate) SetGlobalSearchDefaultSort(v string) {
	o.GlobalSearchDefaultSort.Set(&v)
}

// SetGlobalSearchDefaultSortNil sets the value for GlobalSearchDefaultSort to be an explicit nil
func (o *MemberTemplate) SetGlobalSearchDefaultSortNil() {
	o.GlobalSearchDefaultSort.Set(nil)
}

// UnsetGlobalSearchDefaultSort ensures that no value is present for GlobalSearchDefaultSort, not even an explicit nil
func (o *MemberTemplate) UnsetGlobalSearchDefaultSort() {
	o.GlobalSearchDefaultSort.Unset()
}

// GetPhoneSource returns the PhoneSource field value if set, zero value otherwise.
func (o *MemberTemplate) GetPhoneSource() string {
	if o == nil || IsNil(o.PhoneSource) {
		var ret string
		return ret
	}
	return *o.PhoneSource
}

// GetPhoneSourceOk returns a tuple with the PhoneSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetPhoneSourceOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneSource) {
		return nil, false
	}
	return o.PhoneSource, true
}

// HasPhoneSource returns a boolean if a field has been set.
func (o *MemberTemplate) HasPhoneSource() bool {
	if o != nil && !IsNil(o.PhoneSource) {
		return true
	}

	return false
}

// SetPhoneSource gets a reference to the given string and assigns it to the PhoneSource field.
func (o *MemberTemplate) SetPhoneSource(v string) {
	o.PhoneSource = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *MemberTemplate) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *MemberTemplate) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *MemberTemplate) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCopyPodLayouts returns the CopyPodLayouts field value if set, zero value otherwise.
func (o *MemberTemplate) GetCopyPodLayouts() bool {
	if o == nil || IsNil(o.CopyPodLayouts) {
		var ret bool
		return ret
	}
	return *o.CopyPodLayouts
}

// GetCopyPodLayoutsOk returns a tuple with the CopyPodLayouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetCopyPodLayoutsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyPodLayouts) {
		return nil, false
	}
	return o.CopyPodLayouts, true
}

// HasCopyPodLayouts returns a boolean if a field has been set.
func (o *MemberTemplate) HasCopyPodLayouts() bool {
	if o != nil && !IsNil(o.CopyPodLayouts) {
		return true
	}

	return false
}

// SetCopyPodLayouts gets a reference to the given bool and assigns it to the CopyPodLayouts field.
func (o *MemberTemplate) SetCopyPodLayouts(v bool) {
	o.CopyPodLayouts = &v
}

// GetCopySharedDefaultViews returns the CopySharedDefaultViews field value if set, zero value otherwise.
func (o *MemberTemplate) GetCopySharedDefaultViews() bool {
	if o == nil || IsNil(o.CopySharedDefaultViews) {
		var ret bool
		return ret
	}
	return *o.CopySharedDefaultViews
}

// GetCopySharedDefaultViewsOk returns a tuple with the CopySharedDefaultViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetCopySharedDefaultViewsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopySharedDefaultViews) {
		return nil, false
	}
	return o.CopySharedDefaultViews, true
}

// HasCopySharedDefaultViews returns a boolean if a field has been set.
func (o *MemberTemplate) HasCopySharedDefaultViews() bool {
	if o != nil && !IsNil(o.CopySharedDefaultViews) {
		return true
	}

	return false
}

// SetCopySharedDefaultViews gets a reference to the given bool and assigns it to the CopySharedDefaultViews field.
func (o *MemberTemplate) SetCopySharedDefaultViews(v bool) {
	o.CopySharedDefaultViews = &v
}

// GetCopyColumnLayoutsAndFilters returns the CopyColumnLayoutsAndFilters field value if set, zero value otherwise.
func (o *MemberTemplate) GetCopyColumnLayoutsAndFilters() bool {
	if o == nil || IsNil(o.CopyColumnLayoutsAndFilters) {
		var ret bool
		return ret
	}
	return *o.CopyColumnLayoutsAndFilters
}

// GetCopyColumnLayoutsAndFiltersOk returns a tuple with the CopyColumnLayoutsAndFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetCopyColumnLayoutsAndFiltersOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyColumnLayoutsAndFilters) {
		return nil, false
	}
	return o.CopyColumnLayoutsAndFilters, true
}

// HasCopyColumnLayoutsAndFilters returns a boolean if a field has been set.
func (o *MemberTemplate) HasCopyColumnLayoutsAndFilters() bool {
	if o != nil && !IsNil(o.CopyColumnLayoutsAndFilters) {
		return true
	}

	return false
}

// SetCopyColumnLayoutsAndFilters gets a reference to the given bool and assigns it to the CopyColumnLayoutsAndFilters field.
func (o *MemberTemplate) SetCopyColumnLayoutsAndFilters(v bool) {
	o.CopyColumnLayoutsAndFilters = &v
}

// GetFromMemberRecId returns the FromMemberRecId field value if set, zero value otherwise.
func (o *MemberTemplate) GetFromMemberRecId() int32 {
	if o == nil || IsNil(o.FromMemberRecId) {
		var ret int32
		return ret
	}
	return *o.FromMemberRecId
}

// GetFromMemberRecIdOk returns a tuple with the FromMemberRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetFromMemberRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromMemberRecId) {
		return nil, false
	}
	return o.FromMemberRecId, true
}

// HasFromMemberRecId returns a boolean if a field has been set.
func (o *MemberTemplate) HasFromMemberRecId() bool {
	if o != nil && !IsNil(o.FromMemberRecId) {
		return true
	}

	return false
}

// SetFromMemberRecId gets a reference to the given int32 and assigns it to the FromMemberRecId field.
func (o *MemberTemplate) SetFromMemberRecId(v int32) {
	o.FromMemberRecId = &v
}

// GetFromMemberTemplateRecId returns the FromMemberTemplateRecId field value if set, zero value otherwise.
func (o *MemberTemplate) GetFromMemberTemplateRecId() int32 {
	if o == nil || IsNil(o.FromMemberTemplateRecId) {
		var ret int32
		return ret
	}
	return *o.FromMemberTemplateRecId
}

// GetFromMemberTemplateRecIdOk returns a tuple with the FromMemberTemplateRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetFromMemberTemplateRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromMemberTemplateRecId) {
		return nil, false
	}
	return o.FromMemberTemplateRecId, true
}

// HasFromMemberTemplateRecId returns a boolean if a field has been set.
func (o *MemberTemplate) HasFromMemberTemplateRecId() bool {
	if o != nil && !IsNil(o.FromMemberTemplateRecId) {
		return true
	}

	return false
}

// SetFromMemberTemplateRecId gets a reference to the given int32 and assigns it to the FromMemberTemplateRecId field.
func (o *MemberTemplate) SetFromMemberTemplateRecId(v int32) {
	o.FromMemberTemplateRecId = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *MemberTemplate) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTemplate) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *MemberTemplate) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *MemberTemplate) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o MemberTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["identifier"] = o.Identifier
	if !IsNil(o.TemplateDescription) {
		toSerialize["templateDescription"] = o.TemplateDescription
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ReportCard) {
		toSerialize["reportCard"] = o.ReportCard
	}
	if o.EnableMobileFlag.IsSet() {
		toSerialize["enableMobileFlag"] = o.EnableMobileFlag.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if o.PartnerPortalFlag.IsSet() {
		toSerialize["partnerPortalFlag"] = o.PartnerPortalFlag.Get()
	}
	if !IsNil(o.StsUserAdminUrl) {
		toSerialize["stsUserAdminUrl"] = o.StsUserAdminUrl
	}
	if o.ToastNotificationFlag.IsSet() {
		toSerialize["toastNotificationFlag"] = o.ToastNotificationFlag.Get()
	}
	if !IsNil(o.MemberPersonas) {
		toSerialize["memberPersonas"] = o.MemberPersonas
	}
	if o.AdminFlag.IsSet() {
		toSerialize["adminFlag"] = o.AdminFlag.Get()
	}
	if !IsNil(o.StructureLevel) {
		toSerialize["structureLevel"] = o.StructureLevel
	}
	if !IsNil(o.SecurityLocation) {
		toSerialize["securityLocation"] = o.SecurityLocation
	}
	if !IsNil(o.DefaultLocation) {
		toSerialize["defaultLocation"] = o.DefaultLocation
	}
	if !IsNil(o.DefaultDepartment) {
		toSerialize["defaultDepartment"] = o.DefaultDepartment
	}
	if !IsNil(o.ReportsTo) {
		toSerialize["reportsTo"] = o.ReportsTo
	}
	if o.RestrictLocationFlag.IsSet() {
		toSerialize["restrictLocationFlag"] = o.RestrictLocationFlag.Get()
	}
	if o.RestrictDepartmentFlag.IsSet() {
		toSerialize["restrictDepartmentFlag"] = o.RestrictDepartmentFlag.Get()
	}
	if !IsNil(o.WorkRole) {
		toSerialize["workRole"] = o.WorkRole
	}
	if !IsNil(o.WorkType) {
		toSerialize["workType"] = o.WorkType
	}
	if !IsNil(o.TimeApprover) {
		toSerialize["timeApprover"] = o.TimeApprover
	}
	if !IsNil(o.ExpenseApprover) {
		toSerialize["expenseApprover"] = o.ExpenseApprover
	}
	if o.BillableForecast.IsSet() {
		toSerialize["billableForecast"] = o.BillableForecast.Get()
	}
	if o.DailyCapacity.IsSet() {
		toSerialize["dailyCapacity"] = o.DailyCapacity.Get()
	}
	if o.HourlyCost.IsSet() {
		toSerialize["hourlyCost"] = o.HourlyCost.Get()
	}
	if o.HourlyRate.IsSet() {
		toSerialize["hourlyRate"] = o.HourlyRate.Get()
	}
	if o.IncludeInUtilizationReportingFlag.IsSet() {
		toSerialize["includeInUtilizationReportingFlag"] = o.IncludeInUtilizationReportingFlag.Get()
	}
	if o.RequireExpenseEntryFlag.IsSet() {
		toSerialize["requireExpenseEntryFlag"] = o.RequireExpenseEntryFlag.Get()
	}
	if o.RequireTimeSheetEntryFlag.IsSet() {
		toSerialize["requireTimeSheetEntryFlag"] = o.RequireTimeSheetEntryFlag.Get()
	}
	if o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		toSerialize["requireStartAndEndTimeOnTimeEntryFlag"] = o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
	}
	if o.AllowInCellEntryOnTimeSheet.IsSet() {
		toSerialize["allowInCellEntryOnTimeSheet"] = o.AllowInCellEntryOnTimeSheet.Get()
	}
	if o.EnterTimeAgainstCompanyFlag.IsSet() {
		toSerialize["enterTimeAgainstCompanyFlag"] = o.EnterTimeAgainstCompanyFlag.Get()
	}
	if o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		toSerialize["allowExpensesEnteredAgainstCompaniesFlag"] = o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
	}
	if o.TimeReminderEmailFlag.IsSet() {
		toSerialize["timeReminderEmailFlag"] = o.TimeReminderEmailFlag.Get()
	}
	if o.DaysTolerance.IsSet() {
		toSerialize["daysTolerance"] = o.DaysTolerance.Get()
	}
	if o.MinimumHours.IsSet() {
		toSerialize["minimumHours"] = o.MinimumHours.Get()
	}
	if !IsNil(o.TimeSheetStartDate) {
		toSerialize["timeSheetStartDate"] = o.TimeSheetStartDate
	}
	if !IsNil(o.ServiceDefaultLocation) {
		toSerialize["serviceDefaultLocation"] = o.ServiceDefaultLocation
	}
	if !IsNil(o.ServiceDefaultDepartment) {
		toSerialize["serviceDefaultDepartment"] = o.ServiceDefaultDepartment
	}
	if !IsNil(o.ServiceDefaultBoard) {
		toSerialize["serviceDefaultBoard"] = o.ServiceDefaultBoard
	}
	if o.RestrictServiceDefaultLocationFlag.IsSet() {
		toSerialize["restrictServiceDefaultLocationFlag"] = o.RestrictServiceDefaultLocationFlag.Get()
	}
	if o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictServiceDefaultDepartmentFlag"] = o.RestrictServiceDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedServiceBoardIds) {
		toSerialize["excludedServiceBoardIds"] = o.ExcludedServiceBoardIds
	}
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	if !IsNil(o.ServiceBoardTeamIds) {
		toSerialize["serviceBoardTeamIds"] = o.ServiceBoardTeamIds
	}
	if !IsNil(o.ProjectDefaultLocation) {
		toSerialize["projectDefaultLocation"] = o.ProjectDefaultLocation
	}
	if !IsNil(o.ProjectDefaultDepartment) {
		toSerialize["projectDefaultDepartment"] = o.ProjectDefaultDepartment
	}
	if !IsNil(o.ProjectDefaultBoard) {
		toSerialize["projectDefaultBoard"] = o.ProjectDefaultBoard
	}
	if o.RestrictProjectDefaultLocationFlag.IsSet() {
		toSerialize["restrictProjectDefaultLocationFlag"] = o.RestrictProjectDefaultLocationFlag.Get()
	}
	if o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictProjectDefaultDepartmentFlag"] = o.RestrictProjectDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedProjectBoardIds) {
		toSerialize["excludedProjectBoardIds"] = o.ExcludedProjectBoardIds
	}
	if !IsNil(o.ScheduleDefaultLocation) {
		toSerialize["scheduleDefaultLocation"] = o.ScheduleDefaultLocation
	}
	if !IsNil(o.ScheduleDefaultDepartment) {
		toSerialize["scheduleDefaultDepartment"] = o.ScheduleDefaultDepartment
	}
	if o.ScheduleCapacity.IsSet() {
		toSerialize["scheduleCapacity"] = o.ScheduleCapacity.Get()
	}
	if !IsNil(o.ServiceLocation) {
		toSerialize["serviceLocation"] = o.ServiceLocation
	}
	if o.RestrictScheduleFlag.IsSet() {
		toSerialize["restrictScheduleFlag"] = o.RestrictScheduleFlag.Get()
	}
	if o.HideMemberInDispatchPortalFlag.IsSet() {
		toSerialize["hideMemberInDispatchPortalFlag"] = o.HideMemberInDispatchPortalFlag.Get()
	}
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	if !IsNil(o.SalesDefaultLocation) {
		toSerialize["salesDefaultLocation"] = o.SalesDefaultLocation
	}
	if o.RestrictDefaultSalesTerritoryFlag.IsSet() {
		toSerialize["restrictDefaultSalesTerritoryFlag"] = o.RestrictDefaultSalesTerritoryFlag.Get()
	}
	if !IsNil(o.Warehouse) {
		toSerialize["warehouse"] = o.Warehouse
	}
	if !IsNil(o.WarehouseBin) {
		toSerialize["warehouseBin"] = o.WarehouseBin
	}
	if o.RestrictDefaultWarehouseFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseFlag"] = o.RestrictDefaultWarehouseFlag.Get()
	}
	if o.RestrictDefaultWarehouseBinFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseBinFlag"] = o.RestrictDefaultWarehouseBinFlag.Get()
	}
	if o.CompanyActivityTabFormat.IsSet() {
		toSerialize["companyActivityTabFormat"] = o.CompanyActivityTabFormat.Get()
	}
	if o.InvoiceTimeTabFormat.IsSet() {
		toSerialize["invoiceTimeTabFormat"] = o.InvoiceTimeTabFormat.Get()
	}
	if o.InvoiceScreenDefaultTabFormat.IsSet() {
		toSerialize["invoiceScreenDefaultTabFormat"] = o.InvoiceScreenDefaultTabFormat.Get()
	}
	if o.InvoicingDisplayOptions.IsSet() {
		toSerialize["invoicingDisplayOptions"] = o.InvoicingDisplayOptions.Get()
	}
	if o.AgreementInvoicingDisplayOptions.IsSet() {
		toSerialize["agreementInvoicingDisplayOptions"] = o.AgreementInvoicingDisplayOptions.Get()
	}
	if o.AutoStartStopwatch.IsSet() {
		toSerialize["autoStartStopwatch"] = o.AutoStartStopwatch.Get()
	}
	if o.AutoPopupQuickNotesWithStopwatch.IsSet() {
		toSerialize["autoPopupQuickNotesWithStopwatch"] = o.AutoPopupQuickNotesWithStopwatch.Get()
	}
	if o.GlobalSearchDefaultTicketFilter.IsSet() {
		toSerialize["globalSearchDefaultTicketFilter"] = o.GlobalSearchDefaultTicketFilter.Get()
	}
	if o.GlobalSearchDefaultSort.IsSet() {
		toSerialize["globalSearchDefaultSort"] = o.GlobalSearchDefaultSort.Get()
	}
	if !IsNil(o.PhoneSource) {
		toSerialize["phoneSource"] = o.PhoneSource
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CopyPodLayouts) {
		toSerialize["copyPodLayouts"] = o.CopyPodLayouts
	}
	if !IsNil(o.CopySharedDefaultViews) {
		toSerialize["copySharedDefaultViews"] = o.CopySharedDefaultViews
	}
	if !IsNil(o.CopyColumnLayoutsAndFilters) {
		toSerialize["copyColumnLayoutsAndFilters"] = o.CopyColumnLayoutsAndFilters
	}
	if !IsNil(o.FromMemberRecId) {
		toSerialize["fromMemberRecId"] = o.FromMemberRecId
	}
	if !IsNil(o.FromMemberTemplateRecId) {
		toSerialize["fromMemberTemplateRecId"] = o.FromMemberTemplateRecId
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *MemberTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMemberTemplate := _MemberTemplate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMemberTemplate)

	if err != nil {
		return err
	}

	*o = MemberTemplate(varMemberTemplate)

	return err
}

type NullableMemberTemplate struct {
	value *MemberTemplate
	isSet bool
}

func (v NullableMemberTemplate) Get() *MemberTemplate {
	return v.value
}

func (v *NullableMemberTemplate) Set(val *MemberTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberTemplate(val *MemberTemplate) *NullableMemberTemplate {
	return &NullableMemberTemplate{value: val, isSet: true}
}

func (v NullableMemberTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
