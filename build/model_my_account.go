/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the MyAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MyAccount{}

// MyAccount struct for MyAccount
type MyAccount struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 15;
	Identifier string `json:"identifier"`
	// ConditionallyRequired. API Member will get random password generated Max length: 60;
	Password *string `json:"password,omitempty"`
	//  Max length: 30;
	FirstName string `json:"firstName"`
	//  Max length: 1;
	MiddleInitial *string `json:"middleInitial,omitempty"`
	//  Max length: 30;
	LastName string `json:"lastName"`
	//  Max length: 50;
	Title      *string              `json:"title,omitempty"`
	ReportCard *ReportCardReference `json:"reportCard,omitempty"`
	// F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
	LicenseClass      NullableString       `json:"licenseClass"`
	DisableOnlineFlag NullableBool         `json:"disableOnlineFlag,omitempty"`
	EnableMobileFlag  NullableBool         `json:"enableMobileFlag,omitempty"`
	Type              *MemberTypeReference `json:"type,omitempty"`
	//  Max length: 10;
	EmployeeIdentifer     *string                `json:"employeeIdentifer,omitempty"`
	VendorNumber          *string                `json:"vendorNumber,omitempty"`
	Notes                 *string                `json:"notes,omitempty"`
	TimeZone              TimeZoneSetupReference `json:"timeZone"`
	Country               *CountryReference      `json:"country,omitempty"`
	ServiceBoardTeamIds   []int32                `json:"serviceBoardTeamIds,omitempty"`
	EnableMobileGpsFlag   NullableBool           `json:"enableMobileGpsFlag,omitempty"`
	InactiveDate          *time.Time             `json:"inactiveDate,omitempty"`
	InactiveFlag          NullableBool           `json:"inactiveFlag,omitempty"`
	LastLogin             *string                `json:"lastLogin,omitempty"`
	Photo                 *DocumentReference     `json:"photo,omitempty"`
	PartnerPortalFlag     NullableBool           `json:"partnerPortalFlag,omitempty"`
	ClientId              *string                `json:"clientId,omitempty"`
	StsUserAdminUrl       *string                `json:"stsUserAdminUrl,omitempty"`
	Token                 *string                `json:"token,omitempty"`
	ToastNotificationFlag NullableBool           `json:"toastNotificationFlag,omitempty"`
	MemberPersonas        []int32                `json:"memberPersonas,omitempty"`
	Office365             *MemberOffice365       `json:"office365,omitempty"`
	//  Max length: 250;
	OfficeEmail *string `json:"officeEmail,omitempty"`
	//  Max length: 15;
	OfficePhone *string `json:"officePhone,omitempty"`
	//  Max length: 10;
	OfficeExtension *string `json:"officeExtension,omitempty"`
	//  Max length: 250;
	MobileEmail *string `json:"mobileEmail,omitempty"`
	//  Max length: 15;
	MobilePhone *string `json:"mobilePhone,omitempty"`
	//  Max length: 10;
	MobileExtension *string `json:"mobileExtension,omitempty"`
	//  Max length: 250;
	HomeEmail *string `json:"homeEmail,omitempty"`
	//  Max length: 15;
	HomePhone *string `json:"homePhone,omitempty"`
	//  Max length: 10;
	HomeExtension *string        `json:"homeExtension,omitempty"`
	DefaultEmail  NullableString `json:"defaultEmail"`
	//  Max length: 250;
	PrimaryEmail                             *string                    `json:"primaryEmail,omitempty"`
	DefaultPhone                             NullableString             `json:"defaultPhone"`
	DefaultLocation                          SystemLocationReference    `json:"defaultLocation"`
	DefaultDepartment                        SystemDepartmentReference  `json:"defaultDepartment"`
	ReportsTo                                *MemberReference           `json:"reportsTo,omitempty"`
	WorkRole                                 WorkRoleReference          `json:"workRole"`
	WorkType                                 *WorkTypeReference         `json:"workType,omitempty"`
	TimeApprover                             MemberReference            `json:"timeApprover"`
	ExpenseApprover                          MemberReference            `json:"expenseApprover"`
	BillableForecast                         NullableFloat64            `json:"billableForecast,omitempty"`
	DailyCapacity                            NullableFloat64            `json:"dailyCapacity,omitempty"`
	IncludeInUtilizationReportingFlag        NullableBool               `json:"includeInUtilizationReportingFlag,omitempty"`
	RequireExpenseEntryFlag                  NullableBool               `json:"requireExpenseEntryFlag,omitempty"`
	RequireTimeSheetEntryFlag                NullableBool               `json:"requireTimeSheetEntryFlag,omitempty"`
	RequireStartAndEndTimeOnTimeEntryFlag    NullableBool               `json:"requireStartAndEndTimeOnTimeEntryFlag,omitempty"`
	AllowInCellEntryOnTimeSheet              NullableBool               `json:"allowInCellEntryOnTimeSheet,omitempty"`
	EnterTimeAgainstCompanyFlag              NullableBool               `json:"enterTimeAgainstCompanyFlag,omitempty"`
	AllowExpensesEnteredAgainstCompaniesFlag NullableBool               `json:"allowExpensesEnteredAgainstCompaniesFlag,omitempty"`
	TimeReminderEmailFlag                    NullableBool               `json:"timeReminderEmailFlag,omitempty"`
	DaysTolerance                            NullableInt32              `json:"daysTolerance,omitempty"`
	MinimumHours                             NullableFloat64            `json:"minimumHours,omitempty"`
	TimeSheetStartDate                       *time.Time                 `json:"timeSheetStartDate,omitempty"`
	HireDate                                 time.Time                  `json:"hireDate"`
	ServiceDefaultLocation                   *SystemLocationReference   `json:"serviceDefaultLocation,omitempty"`
	ServiceDefaultDepartment                 *SystemDepartmentReference `json:"serviceDefaultDepartment,omitempty"`
	ServiceDefaultBoard                      *BoardReference            `json:"serviceDefaultBoard,omitempty"`
	ProjectDefaultLocation                   *SystemLocationReference   `json:"projectDefaultLocation,omitempty"`
	ProjectDefaultDepartment                 *SystemDepartmentReference `json:"projectDefaultDepartment,omitempty"`
	ProjectDefaultBoard                      *ProjectBoardReference     `json:"projectDefaultBoard,omitempty"`
	ScheduleDefaultLocation                  *SystemLocationReference   `json:"scheduleDefaultLocation,omitempty"`
	ScheduleDefaultDepartment                *SystemDepartmentReference `json:"scheduleDefaultDepartment,omitempty"`
	ScheduleCapacity                         NullableFloat64            `json:"scheduleCapacity,omitempty"`
	ServiceLocation                          *ServiceLocationReference  `json:"serviceLocation,omitempty"`
	HideMemberInDispatchPortalFlag           NullableBool               `json:"hideMemberInDispatchPortalFlag,omitempty"`
	Calendar                                 *CalendarReference         `json:"calendar,omitempty"`
	SalesDefaultLocation                     SystemLocationReference    `json:"salesDefaultLocation"`
	Warehouse                                *WarehouseReference        `json:"warehouse,omitempty"`
	WarehouseBin                             *WarehouseBinReference     `json:"warehouseBin,omitempty"`
	MapiName                                 *string                    `json:"mapiName,omitempty"`
	CalendarSyncIntegrationFlag              NullableBool               `json:"calendarSyncIntegrationFlag,omitempty"`
	CompanyActivityTabFormat                 NullableString             `json:"companyActivityTabFormat"`
	InvoiceTimeTabFormat                     NullableString             `json:"invoiceTimeTabFormat"`
	InvoiceScreenDefaultTabFormat            NullableString             `json:"invoiceScreenDefaultTabFormat"`
	InvoicingDisplayOptions                  NullableString             `json:"invoicingDisplayOptions"`
	AgreementInvoicingDisplayOptions         NullableString             `json:"agreementInvoicingDisplayOptions"`
	AuthenticationServiceType                NullableString             `json:"authenticationServiceType,omitempty"`
	TimebasedOneTimePasswordActivated        NullableBool               `json:"timebasedOneTimePasswordActivated,omitempty"`
	DirectionalSync                          *DirectionalSyncReference  `json:"directionalSync,omitempty"`
	AutoStartStopwatch                       NullableBool               `json:"autoStartStopwatch,omitempty"`
	AutoPopupQuickNotesWithStopwatch         NullableBool               `json:"autoPopupQuickNotesWithStopwatch,omitempty"`
	Signature                                *string                    `json:"signature,omitempty"`
	GlobalSearchDefaultTicketFilter          NullableString             `json:"globalSearchDefaultTicketFilter,omitempty"`
	GlobalSearchDefaultSort                  NullableString             `json:"globalSearchDefaultSort,omitempty"`
	PhoneSource                              *string                    `json:"phoneSource,omitempty"`
	PhoneIntegrationType                     NullableString             `json:"phoneIntegrationType,omitempty"`
	UseBrowserLanguageFlag                   NullableBool               `json:"useBrowserLanguageFlag,omitempty"`
	Info                                     *map[string]string         `json:"_info,omitempty"`
	CopyPodLayouts                           *bool                      `json:"copyPodLayouts,omitempty"`
	CopySharedDefaultViews                   *bool                      `json:"copySharedDefaultViews,omitempty"`
	CopyColumnLayoutsAndFilters              *bool                      `json:"copyColumnLayoutsAndFilters,omitempty"`
	FromMemberRecId                          *int32                     `json:"fromMemberRecId,omitempty"`
	CustomFields                             []CustomFieldValue         `json:"customFields,omitempty"`
}

type _MyAccount MyAccount

// NewMyAccount instantiates a new MyAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMyAccount(identifier string, firstName string, lastName string, licenseClass NullableString, timeZone TimeZoneSetupReference, defaultEmail NullableString, defaultPhone NullableString, defaultLocation SystemLocationReference, defaultDepartment SystemDepartmentReference, workRole WorkRoleReference, timeApprover MemberReference, expenseApprover MemberReference, hireDate time.Time, salesDefaultLocation SystemLocationReference, companyActivityTabFormat NullableString, invoiceTimeTabFormat NullableString, invoiceScreenDefaultTabFormat NullableString, invoicingDisplayOptions NullableString, agreementInvoicingDisplayOptions NullableString) *MyAccount {
	this := MyAccount{}
	this.Identifier = identifier
	this.FirstName = firstName
	this.LastName = lastName
	this.LicenseClass = licenseClass
	this.TimeZone = timeZone
	this.DefaultEmail = defaultEmail
	this.DefaultPhone = defaultPhone
	this.DefaultLocation = defaultLocation
	this.DefaultDepartment = defaultDepartment
	this.WorkRole = workRole
	this.TimeApprover = timeApprover
	this.ExpenseApprover = expenseApprover
	this.HireDate = hireDate
	this.SalesDefaultLocation = salesDefaultLocation
	this.CompanyActivityTabFormat = companyActivityTabFormat
	this.InvoiceTimeTabFormat = invoiceTimeTabFormat
	this.InvoiceScreenDefaultTabFormat = invoiceScreenDefaultTabFormat
	this.InvoicingDisplayOptions = invoicingDisplayOptions
	this.AgreementInvoicingDisplayOptions = agreementInvoicingDisplayOptions
	return &this
}

// NewMyAccountWithDefaults instantiates a new MyAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMyAccountWithDefaults() *MyAccount {
	this := MyAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MyAccount) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MyAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MyAccount) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value
func (o *MyAccount) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *MyAccount) SetIdentifier(v string) {
	o.Identifier = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MyAccount) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MyAccount) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MyAccount) SetPassword(v string) {
	o.Password = &v
}

// GetFirstName returns the FirstName field value
func (o *MyAccount) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *MyAccount) SetFirstName(v string) {
	o.FirstName = v
}

// GetMiddleInitial returns the MiddleInitial field value if set, zero value otherwise.
func (o *MyAccount) GetMiddleInitial() string {
	if o == nil || IsNil(o.MiddleInitial) {
		var ret string
		return ret
	}
	return *o.MiddleInitial
}

// GetMiddleInitialOk returns a tuple with the MiddleInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetMiddleInitialOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleInitial) {
		return nil, false
	}
	return o.MiddleInitial, true
}

// HasMiddleInitial returns a boolean if a field has been set.
func (o *MyAccount) HasMiddleInitial() bool {
	if o != nil && !IsNil(o.MiddleInitial) {
		return true
	}

	return false
}

// SetMiddleInitial gets a reference to the given string and assigns it to the MiddleInitial field.
func (o *MyAccount) SetMiddleInitial(v string) {
	o.MiddleInitial = &v
}

// GetLastName returns the LastName field value
func (o *MyAccount) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *MyAccount) SetLastName(v string) {
	o.LastName = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MyAccount) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MyAccount) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MyAccount) SetTitle(v string) {
	o.Title = &v
}

// GetReportCard returns the ReportCard field value if set, zero value otherwise.
func (o *MyAccount) GetReportCard() ReportCardReference {
	if o == nil || IsNil(o.ReportCard) {
		var ret ReportCardReference
		return ret
	}
	return *o.ReportCard
}

// GetReportCardOk returns a tuple with the ReportCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetReportCardOk() (*ReportCardReference, bool) {
	if o == nil || IsNil(o.ReportCard) {
		return nil, false
	}
	return o.ReportCard, true
}

// HasReportCard returns a boolean if a field has been set.
func (o *MyAccount) HasReportCard() bool {
	if o != nil && !IsNil(o.ReportCard) {
		return true
	}

	return false
}

// SetReportCard gets a reference to the given ReportCardReference and assigns it to the ReportCard field.
func (o *MyAccount) SetReportCard(v ReportCardReference) {
	o.ReportCard = &v
}

// GetLicenseClass returns the LicenseClass field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetLicenseClass() string {
	if o == nil || o.LicenseClass.Get() == nil {
		var ret string
		return ret
	}

	return *o.LicenseClass.Get()
}

// GetLicenseClassOk returns a tuple with the LicenseClass field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetLicenseClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseClass.Get(), o.LicenseClass.IsSet()
}

// SetLicenseClass sets field value
func (o *MyAccount) SetLicenseClass(v string) {
	o.LicenseClass.Set(&v)
}

// GetDisableOnlineFlag returns the DisableOnlineFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetDisableOnlineFlag() bool {
	if o == nil || IsNil(o.DisableOnlineFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisableOnlineFlag.Get()
}

// GetDisableOnlineFlagOk returns a tuple with the DisableOnlineFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetDisableOnlineFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisableOnlineFlag.Get(), o.DisableOnlineFlag.IsSet()
}

// HasDisableOnlineFlag returns a boolean if a field has been set.
func (o *MyAccount) HasDisableOnlineFlag() bool {
	if o != nil && o.DisableOnlineFlag.IsSet() {
		return true
	}

	return false
}

// SetDisableOnlineFlag gets a reference to the given NullableBool and assigns it to the DisableOnlineFlag field.
func (o *MyAccount) SetDisableOnlineFlag(v bool) {
	o.DisableOnlineFlag.Set(&v)
}

// SetDisableOnlineFlagNil sets the value for DisableOnlineFlag to be an explicit nil
func (o *MyAccount) SetDisableOnlineFlagNil() {
	o.DisableOnlineFlag.Set(nil)
}

// UnsetDisableOnlineFlag ensures that no value is present for DisableOnlineFlag, not even an explicit nil
func (o *MyAccount) UnsetDisableOnlineFlag() {
	o.DisableOnlineFlag.Unset()
}

// GetEnableMobileFlag returns the EnableMobileFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetEnableMobileFlag() bool {
	if o == nil || IsNil(o.EnableMobileFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileFlag.Get()
}

// GetEnableMobileFlagOk returns a tuple with the EnableMobileFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetEnableMobileFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileFlag.Get(), o.EnableMobileFlag.IsSet()
}

// HasEnableMobileFlag returns a boolean if a field has been set.
func (o *MyAccount) HasEnableMobileFlag() bool {
	if o != nil && o.EnableMobileFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileFlag gets a reference to the given NullableBool and assigns it to the EnableMobileFlag field.
func (o *MyAccount) SetEnableMobileFlag(v bool) {
	o.EnableMobileFlag.Set(&v)
}

// SetEnableMobileFlagNil sets the value for EnableMobileFlag to be an explicit nil
func (o *MyAccount) SetEnableMobileFlagNil() {
	o.EnableMobileFlag.Set(nil)
}

// UnsetEnableMobileFlag ensures that no value is present for EnableMobileFlag, not even an explicit nil
func (o *MyAccount) UnsetEnableMobileFlag() {
	o.EnableMobileFlag.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MyAccount) GetType() MemberTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret MemberTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetTypeOk() (*MemberTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MyAccount) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MemberTypeReference and assigns it to the Type field.
func (o *MyAccount) SetType(v MemberTypeReference) {
	o.Type = &v
}

// GetEmployeeIdentifer returns the EmployeeIdentifer field value if set, zero value otherwise.
func (o *MyAccount) GetEmployeeIdentifer() string {
	if o == nil || IsNil(o.EmployeeIdentifer) {
		var ret string
		return ret
	}
	return *o.EmployeeIdentifer
}

// GetEmployeeIdentiferOk returns a tuple with the EmployeeIdentifer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetEmployeeIdentiferOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeIdentifer) {
		return nil, false
	}
	return o.EmployeeIdentifer, true
}

// HasEmployeeIdentifer returns a boolean if a field has been set.
func (o *MyAccount) HasEmployeeIdentifer() bool {
	if o != nil && !IsNil(o.EmployeeIdentifer) {
		return true
	}

	return false
}

// SetEmployeeIdentifer gets a reference to the given string and assigns it to the EmployeeIdentifer field.
func (o *MyAccount) SetEmployeeIdentifer(v string) {
	o.EmployeeIdentifer = &v
}

// GetVendorNumber returns the VendorNumber field value if set, zero value otherwise.
func (o *MyAccount) GetVendorNumber() string {
	if o == nil || IsNil(o.VendorNumber) {
		var ret string
		return ret
	}
	return *o.VendorNumber
}

// GetVendorNumberOk returns a tuple with the VendorNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetVendorNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorNumber) {
		return nil, false
	}
	return o.VendorNumber, true
}

// HasVendorNumber returns a boolean if a field has been set.
func (o *MyAccount) HasVendorNumber() bool {
	if o != nil && !IsNil(o.VendorNumber) {
		return true
	}

	return false
}

// SetVendorNumber gets a reference to the given string and assigns it to the VendorNumber field.
func (o *MyAccount) SetVendorNumber(v string) {
	o.VendorNumber = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *MyAccount) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *MyAccount) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *MyAccount) SetNotes(v string) {
	o.Notes = &v
}

// GetTimeZone returns the TimeZone field value
func (o *MyAccount) GetTimeZone() TimeZoneSetupReference {
	if o == nil {
		var ret TimeZoneSetupReference
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetTimeZoneOk() (*TimeZoneSetupReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *MyAccount) SetTimeZone(v TimeZoneSetupReference) {
	o.TimeZone = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *MyAccount) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *MyAccount) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *MyAccount) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetServiceBoardTeamIds returns the ServiceBoardTeamIds field value if set, zero value otherwise.
func (o *MyAccount) GetServiceBoardTeamIds() []int32 {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		var ret []int32
		return ret
	}
	return o.ServiceBoardTeamIds
}

// GetServiceBoardTeamIdsOk returns a tuple with the ServiceBoardTeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetServiceBoardTeamIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		return nil, false
	}
	return o.ServiceBoardTeamIds, true
}

// HasServiceBoardTeamIds returns a boolean if a field has been set.
func (o *MyAccount) HasServiceBoardTeamIds() bool {
	if o != nil && !IsNil(o.ServiceBoardTeamIds) {
		return true
	}

	return false
}

// SetServiceBoardTeamIds gets a reference to the given []int32 and assigns it to the ServiceBoardTeamIds field.
func (o *MyAccount) SetServiceBoardTeamIds(v []int32) {
	o.ServiceBoardTeamIds = v
}

// GetEnableMobileGpsFlag returns the EnableMobileGpsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetEnableMobileGpsFlag() bool {
	if o == nil || IsNil(o.EnableMobileGpsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileGpsFlag.Get()
}

// GetEnableMobileGpsFlagOk returns a tuple with the EnableMobileGpsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetEnableMobileGpsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileGpsFlag.Get(), o.EnableMobileGpsFlag.IsSet()
}

// HasEnableMobileGpsFlag returns a boolean if a field has been set.
func (o *MyAccount) HasEnableMobileGpsFlag() bool {
	if o != nil && o.EnableMobileGpsFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileGpsFlag gets a reference to the given NullableBool and assigns it to the EnableMobileGpsFlag field.
func (o *MyAccount) SetEnableMobileGpsFlag(v bool) {
	o.EnableMobileGpsFlag.Set(&v)
}

// SetEnableMobileGpsFlagNil sets the value for EnableMobileGpsFlag to be an explicit nil
func (o *MyAccount) SetEnableMobileGpsFlagNil() {
	o.EnableMobileGpsFlag.Set(nil)
}

// UnsetEnableMobileGpsFlag ensures that no value is present for EnableMobileGpsFlag, not even an explicit nil
func (o *MyAccount) UnsetEnableMobileGpsFlag() {
	o.EnableMobileGpsFlag.Unset()
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *MyAccount) GetInactiveDate() time.Time {
	if o == nil || IsNil(o.InactiveDate) {
		var ret time.Time
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetInactiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *MyAccount) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given time.Time and assigns it to the InactiveDate field.
func (o *MyAccount) SetInactiveDate(v time.Time) {
	o.InactiveDate = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *MyAccount) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *MyAccount) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}

// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *MyAccount) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *MyAccount) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *MyAccount) GetLastLogin() string {
	if o == nil || IsNil(o.LastLogin) {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetLastLoginOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *MyAccount) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *MyAccount) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetPhoto returns the Photo field value if set, zero value otherwise.
func (o *MyAccount) GetPhoto() DocumentReference {
	if o == nil || IsNil(o.Photo) {
		var ret DocumentReference
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetPhotoOk() (*DocumentReference, bool) {
	if o == nil || IsNil(o.Photo) {
		return nil, false
	}
	return o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *MyAccount) HasPhoto() bool {
	if o != nil && !IsNil(o.Photo) {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given DocumentReference and assigns it to the Photo field.
func (o *MyAccount) SetPhoto(v DocumentReference) {
	o.Photo = &v
}

// GetPartnerPortalFlag returns the PartnerPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetPartnerPortalFlag() bool {
	if o == nil || IsNil(o.PartnerPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PartnerPortalFlag.Get()
}

// GetPartnerPortalFlagOk returns a tuple with the PartnerPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetPartnerPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerPortalFlag.Get(), o.PartnerPortalFlag.IsSet()
}

// HasPartnerPortalFlag returns a boolean if a field has been set.
func (o *MyAccount) HasPartnerPortalFlag() bool {
	if o != nil && o.PartnerPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetPartnerPortalFlag gets a reference to the given NullableBool and assigns it to the PartnerPortalFlag field.
func (o *MyAccount) SetPartnerPortalFlag(v bool) {
	o.PartnerPortalFlag.Set(&v)
}

// SetPartnerPortalFlagNil sets the value for PartnerPortalFlag to be an explicit nil
func (o *MyAccount) SetPartnerPortalFlagNil() {
	o.PartnerPortalFlag.Set(nil)
}

// UnsetPartnerPortalFlag ensures that no value is present for PartnerPortalFlag, not even an explicit nil
func (o *MyAccount) UnsetPartnerPortalFlag() {
	o.PartnerPortalFlag.Unset()
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *MyAccount) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *MyAccount) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *MyAccount) SetClientId(v string) {
	o.ClientId = &v
}

// GetStsUserAdminUrl returns the StsUserAdminUrl field value if set, zero value otherwise.
func (o *MyAccount) GetStsUserAdminUrl() string {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		var ret string
		return ret
	}
	return *o.StsUserAdminUrl
}

// GetStsUserAdminUrlOk returns a tuple with the StsUserAdminUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetStsUserAdminUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		return nil, false
	}
	return o.StsUserAdminUrl, true
}

// HasStsUserAdminUrl returns a boolean if a field has been set.
func (o *MyAccount) HasStsUserAdminUrl() bool {
	if o != nil && !IsNil(o.StsUserAdminUrl) {
		return true
	}

	return false
}

// SetStsUserAdminUrl gets a reference to the given string and assigns it to the StsUserAdminUrl field.
func (o *MyAccount) SetStsUserAdminUrl(v string) {
	o.StsUserAdminUrl = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *MyAccount) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *MyAccount) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *MyAccount) SetToken(v string) {
	o.Token = &v
}

// GetToastNotificationFlag returns the ToastNotificationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetToastNotificationFlag() bool {
	if o == nil || IsNil(o.ToastNotificationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ToastNotificationFlag.Get()
}

// GetToastNotificationFlagOk returns a tuple with the ToastNotificationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetToastNotificationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToastNotificationFlag.Get(), o.ToastNotificationFlag.IsSet()
}

// HasToastNotificationFlag returns a boolean if a field has been set.
func (o *MyAccount) HasToastNotificationFlag() bool {
	if o != nil && o.ToastNotificationFlag.IsSet() {
		return true
	}

	return false
}

// SetToastNotificationFlag gets a reference to the given NullableBool and assigns it to the ToastNotificationFlag field.
func (o *MyAccount) SetToastNotificationFlag(v bool) {
	o.ToastNotificationFlag.Set(&v)
}

// SetToastNotificationFlagNil sets the value for ToastNotificationFlag to be an explicit nil
func (o *MyAccount) SetToastNotificationFlagNil() {
	o.ToastNotificationFlag.Set(nil)
}

// UnsetToastNotificationFlag ensures that no value is present for ToastNotificationFlag, not even an explicit nil
func (o *MyAccount) UnsetToastNotificationFlag() {
	o.ToastNotificationFlag.Unset()
}

// GetMemberPersonas returns the MemberPersonas field value if set, zero value otherwise.
func (o *MyAccount) GetMemberPersonas() []int32 {
	if o == nil || IsNil(o.MemberPersonas) {
		var ret []int32
		return ret
	}
	return o.MemberPersonas
}

// GetMemberPersonasOk returns a tuple with the MemberPersonas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetMemberPersonasOk() ([]int32, bool) {
	if o == nil || IsNil(o.MemberPersonas) {
		return nil, false
	}
	return o.MemberPersonas, true
}

// HasMemberPersonas returns a boolean if a field has been set.
func (o *MyAccount) HasMemberPersonas() bool {
	if o != nil && !IsNil(o.MemberPersonas) {
		return true
	}

	return false
}

// SetMemberPersonas gets a reference to the given []int32 and assigns it to the MemberPersonas field.
func (o *MyAccount) SetMemberPersonas(v []int32) {
	o.MemberPersonas = v
}

// GetOffice365 returns the Office365 field value if set, zero value otherwise.
func (o *MyAccount) GetOffice365() MemberOffice365 {
	if o == nil || IsNil(o.Office365) {
		var ret MemberOffice365
		return ret
	}
	return *o.Office365
}

// GetOffice365Ok returns a tuple with the Office365 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetOffice365Ok() (*MemberOffice365, bool) {
	if o == nil || IsNil(o.Office365) {
		return nil, false
	}
	return o.Office365, true
}

// HasOffice365 returns a boolean if a field has been set.
func (o *MyAccount) HasOffice365() bool {
	if o != nil && !IsNil(o.Office365) {
		return true
	}

	return false
}

// SetOffice365 gets a reference to the given MemberOffice365 and assigns it to the Office365 field.
func (o *MyAccount) SetOffice365(v MemberOffice365) {
	o.Office365 = &v
}

// GetOfficeEmail returns the OfficeEmail field value if set, zero value otherwise.
func (o *MyAccount) GetOfficeEmail() string {
	if o == nil || IsNil(o.OfficeEmail) {
		var ret string
		return ret
	}
	return *o.OfficeEmail
}

// GetOfficeEmailOk returns a tuple with the OfficeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetOfficeEmailOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeEmail) {
		return nil, false
	}
	return o.OfficeEmail, true
}

// HasOfficeEmail returns a boolean if a field has been set.
func (o *MyAccount) HasOfficeEmail() bool {
	if o != nil && !IsNil(o.OfficeEmail) {
		return true
	}

	return false
}

// SetOfficeEmail gets a reference to the given string and assigns it to the OfficeEmail field.
func (o *MyAccount) SetOfficeEmail(v string) {
	o.OfficeEmail = &v
}

// GetOfficePhone returns the OfficePhone field value if set, zero value otherwise.
func (o *MyAccount) GetOfficePhone() string {
	if o == nil || IsNil(o.OfficePhone) {
		var ret string
		return ret
	}
	return *o.OfficePhone
}

// GetOfficePhoneOk returns a tuple with the OfficePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetOfficePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.OfficePhone) {
		return nil, false
	}
	return o.OfficePhone, true
}

// HasOfficePhone returns a boolean if a field has been set.
func (o *MyAccount) HasOfficePhone() bool {
	if o != nil && !IsNil(o.OfficePhone) {
		return true
	}

	return false
}

// SetOfficePhone gets a reference to the given string and assigns it to the OfficePhone field.
func (o *MyAccount) SetOfficePhone(v string) {
	o.OfficePhone = &v
}

// GetOfficeExtension returns the OfficeExtension field value if set, zero value otherwise.
func (o *MyAccount) GetOfficeExtension() string {
	if o == nil || IsNil(o.OfficeExtension) {
		var ret string
		return ret
	}
	return *o.OfficeExtension
}

// GetOfficeExtensionOk returns a tuple with the OfficeExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetOfficeExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeExtension) {
		return nil, false
	}
	return o.OfficeExtension, true
}

// HasOfficeExtension returns a boolean if a field has been set.
func (o *MyAccount) HasOfficeExtension() bool {
	if o != nil && !IsNil(o.OfficeExtension) {
		return true
	}

	return false
}

// SetOfficeExtension gets a reference to the given string and assigns it to the OfficeExtension field.
func (o *MyAccount) SetOfficeExtension(v string) {
	o.OfficeExtension = &v
}

// GetMobileEmail returns the MobileEmail field value if set, zero value otherwise.
func (o *MyAccount) GetMobileEmail() string {
	if o == nil || IsNil(o.MobileEmail) {
		var ret string
		return ret
	}
	return *o.MobileEmail
}

// GetMobileEmailOk returns a tuple with the MobileEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetMobileEmailOk() (*string, bool) {
	if o == nil || IsNil(o.MobileEmail) {
		return nil, false
	}
	return o.MobileEmail, true
}

// HasMobileEmail returns a boolean if a field has been set.
func (o *MyAccount) HasMobileEmail() bool {
	if o != nil && !IsNil(o.MobileEmail) {
		return true
	}

	return false
}

// SetMobileEmail gets a reference to the given string and assigns it to the MobileEmail field.
func (o *MyAccount) SetMobileEmail(v string) {
	o.MobileEmail = &v
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise.
func (o *MyAccount) GetMobilePhone() string {
	if o == nil || IsNil(o.MobilePhone) {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetMobilePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhone) {
		return nil, false
	}
	return o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *MyAccount) HasMobilePhone() bool {
	if o != nil && !IsNil(o.MobilePhone) {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *MyAccount) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

// GetMobileExtension returns the MobileExtension field value if set, zero value otherwise.
func (o *MyAccount) GetMobileExtension() string {
	if o == nil || IsNil(o.MobileExtension) {
		var ret string
		return ret
	}
	return *o.MobileExtension
}

// GetMobileExtensionOk returns a tuple with the MobileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetMobileExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.MobileExtension) {
		return nil, false
	}
	return o.MobileExtension, true
}

// HasMobileExtension returns a boolean if a field has been set.
func (o *MyAccount) HasMobileExtension() bool {
	if o != nil && !IsNil(o.MobileExtension) {
		return true
	}

	return false
}

// SetMobileExtension gets a reference to the given string and assigns it to the MobileExtension field.
func (o *MyAccount) SetMobileExtension(v string) {
	o.MobileExtension = &v
}

// GetHomeEmail returns the HomeEmail field value if set, zero value otherwise.
func (o *MyAccount) GetHomeEmail() string {
	if o == nil || IsNil(o.HomeEmail) {
		var ret string
		return ret
	}
	return *o.HomeEmail
}

// GetHomeEmailOk returns a tuple with the HomeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetHomeEmailOk() (*string, bool) {
	if o == nil || IsNil(o.HomeEmail) {
		return nil, false
	}
	return o.HomeEmail, true
}

// HasHomeEmail returns a boolean if a field has been set.
func (o *MyAccount) HasHomeEmail() bool {
	if o != nil && !IsNil(o.HomeEmail) {
		return true
	}

	return false
}

// SetHomeEmail gets a reference to the given string and assigns it to the HomeEmail field.
func (o *MyAccount) SetHomeEmail(v string) {
	o.HomeEmail = &v
}

// GetHomePhone returns the HomePhone field value if set, zero value otherwise.
func (o *MyAccount) GetHomePhone() string {
	if o == nil || IsNil(o.HomePhone) {
		var ret string
		return ret
	}
	return *o.HomePhone
}

// GetHomePhoneOk returns a tuple with the HomePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetHomePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.HomePhone) {
		return nil, false
	}
	return o.HomePhone, true
}

// HasHomePhone returns a boolean if a field has been set.
func (o *MyAccount) HasHomePhone() bool {
	if o != nil && !IsNil(o.HomePhone) {
		return true
	}

	return false
}

// SetHomePhone gets a reference to the given string and assigns it to the HomePhone field.
func (o *MyAccount) SetHomePhone(v string) {
	o.HomePhone = &v
}

// GetHomeExtension returns the HomeExtension field value if set, zero value otherwise.
func (o *MyAccount) GetHomeExtension() string {
	if o == nil || IsNil(o.HomeExtension) {
		var ret string
		return ret
	}
	return *o.HomeExtension
}

// GetHomeExtensionOk returns a tuple with the HomeExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetHomeExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.HomeExtension) {
		return nil, false
	}
	return o.HomeExtension, true
}

// HasHomeExtension returns a boolean if a field has been set.
func (o *MyAccount) HasHomeExtension() bool {
	if o != nil && !IsNil(o.HomeExtension) {
		return true
	}

	return false
}

// SetHomeExtension gets a reference to the given string and assigns it to the HomeExtension field.
func (o *MyAccount) SetHomeExtension(v string) {
	o.HomeExtension = &v
}

// GetDefaultEmail returns the DefaultEmail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetDefaultEmail() string {
	if o == nil || o.DefaultEmail.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultEmail.Get()
}

// GetDefaultEmailOk returns a tuple with the DefaultEmail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetDefaultEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultEmail.Get(), o.DefaultEmail.IsSet()
}

// SetDefaultEmail sets field value
func (o *MyAccount) SetDefaultEmail(v string) {
	o.DefaultEmail.Set(&v)
}

// GetPrimaryEmail returns the PrimaryEmail field value if set, zero value otherwise.
func (o *MyAccount) GetPrimaryEmail() string {
	if o == nil || IsNil(o.PrimaryEmail) {
		var ret string
		return ret
	}
	return *o.PrimaryEmail
}

// GetPrimaryEmailOk returns a tuple with the PrimaryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetPrimaryEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEmail) {
		return nil, false
	}
	return o.PrimaryEmail, true
}

// HasPrimaryEmail returns a boolean if a field has been set.
func (o *MyAccount) HasPrimaryEmail() bool {
	if o != nil && !IsNil(o.PrimaryEmail) {
		return true
	}

	return false
}

// SetPrimaryEmail gets a reference to the given string and assigns it to the PrimaryEmail field.
func (o *MyAccount) SetPrimaryEmail(v string) {
	o.PrimaryEmail = &v
}

// GetDefaultPhone returns the DefaultPhone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetDefaultPhone() string {
	if o == nil || o.DefaultPhone.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultPhone.Get()
}

// GetDefaultPhoneOk returns a tuple with the DefaultPhone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetDefaultPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPhone.Get(), o.DefaultPhone.IsSet()
}

// SetDefaultPhone sets field value
func (o *MyAccount) SetDefaultPhone(v string) {
	o.DefaultPhone.Set(&v)
}

// GetDefaultLocation returns the DefaultLocation field value
func (o *MyAccount) GetDefaultLocation() SystemLocationReference {
	if o == nil {
		var ret SystemLocationReference
		return ret
	}

	return o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultLocation, true
}

// SetDefaultLocation sets field value
func (o *MyAccount) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = v
}

// GetDefaultDepartment returns the DefaultDepartment field value
func (o *MyAccount) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil {
		var ret SystemDepartmentReference
		return ret
	}

	return o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultDepartment, true
}

// SetDefaultDepartment sets field value
func (o *MyAccount) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = v
}

// GetReportsTo returns the ReportsTo field value if set, zero value otherwise.
func (o *MyAccount) GetReportsTo() MemberReference {
	if o == nil || IsNil(o.ReportsTo) {
		var ret MemberReference
		return ret
	}
	return *o.ReportsTo
}

// GetReportsToOk returns a tuple with the ReportsTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetReportsToOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ReportsTo) {
		return nil, false
	}
	return o.ReportsTo, true
}

// HasReportsTo returns a boolean if a field has been set.
func (o *MyAccount) HasReportsTo() bool {
	if o != nil && !IsNil(o.ReportsTo) {
		return true
	}

	return false
}

// SetReportsTo gets a reference to the given MemberReference and assigns it to the ReportsTo field.
func (o *MyAccount) SetReportsTo(v MemberReference) {
	o.ReportsTo = &v
}

// GetWorkRole returns the WorkRole field value
func (o *MyAccount) GetWorkRole() WorkRoleReference {
	if o == nil {
		var ret WorkRoleReference
		return ret
	}

	return o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkRole, true
}

// SetWorkRole sets field value
func (o *MyAccount) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = v
}

// GetWorkType returns the WorkType field value if set, zero value otherwise.
func (o *MyAccount) GetWorkType() WorkTypeReference {
	if o == nil || IsNil(o.WorkType) {
		var ret WorkTypeReference
		return ret
	}
	return *o.WorkType
}

// GetWorkTypeOk returns a tuple with the WorkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetWorkTypeOk() (*WorkTypeReference, bool) {
	if o == nil || IsNil(o.WorkType) {
		return nil, false
	}
	return o.WorkType, true
}

// HasWorkType returns a boolean if a field has been set.
func (o *MyAccount) HasWorkType() bool {
	if o != nil && !IsNil(o.WorkType) {
		return true
	}

	return false
}

// SetWorkType gets a reference to the given WorkTypeReference and assigns it to the WorkType field.
func (o *MyAccount) SetWorkType(v WorkTypeReference) {
	o.WorkType = &v
}

// GetTimeApprover returns the TimeApprover field value
func (o *MyAccount) GetTimeApprover() MemberReference {
	if o == nil {
		var ret MemberReference
		return ret
	}

	return o.TimeApprover
}

// GetTimeApproverOk returns a tuple with the TimeApprover field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetTimeApproverOk() (*MemberReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeApprover, true
}

// SetTimeApprover sets field value
func (o *MyAccount) SetTimeApprover(v MemberReference) {
	o.TimeApprover = v
}

// GetExpenseApprover returns the ExpenseApprover field value
func (o *MyAccount) GetExpenseApprover() MemberReference {
	if o == nil {
		var ret MemberReference
		return ret
	}

	return o.ExpenseApprover
}

// GetExpenseApproverOk returns a tuple with the ExpenseApprover field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetExpenseApproverOk() (*MemberReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpenseApprover, true
}

// SetExpenseApprover sets field value
func (o *MyAccount) SetExpenseApprover(v MemberReference) {
	o.ExpenseApprover = v
}

// GetBillableForecast returns the BillableForecast field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetBillableForecast() float64 {
	if o == nil || IsNil(o.BillableForecast.Get()) {
		var ret float64
		return ret
	}
	return *o.BillableForecast.Get()
}

// GetBillableForecastOk returns a tuple with the BillableForecast field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetBillableForecastOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillableForecast.Get(), o.BillableForecast.IsSet()
}

// HasBillableForecast returns a boolean if a field has been set.
func (o *MyAccount) HasBillableForecast() bool {
	if o != nil && o.BillableForecast.IsSet() {
		return true
	}

	return false
}

// SetBillableForecast gets a reference to the given NullableFloat64 and assigns it to the BillableForecast field.
func (o *MyAccount) SetBillableForecast(v float64) {
	o.BillableForecast.Set(&v)
}

// SetBillableForecastNil sets the value for BillableForecast to be an explicit nil
func (o *MyAccount) SetBillableForecastNil() {
	o.BillableForecast.Set(nil)
}

// UnsetBillableForecast ensures that no value is present for BillableForecast, not even an explicit nil
func (o *MyAccount) UnsetBillableForecast() {
	o.BillableForecast.Unset()
}

// GetDailyCapacity returns the DailyCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetDailyCapacity() float64 {
	if o == nil || IsNil(o.DailyCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.DailyCapacity.Get()
}

// GetDailyCapacityOk returns a tuple with the DailyCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetDailyCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DailyCapacity.Get(), o.DailyCapacity.IsSet()
}

// HasDailyCapacity returns a boolean if a field has been set.
func (o *MyAccount) HasDailyCapacity() bool {
	if o != nil && o.DailyCapacity.IsSet() {
		return true
	}

	return false
}

// SetDailyCapacity gets a reference to the given NullableFloat64 and assigns it to the DailyCapacity field.
func (o *MyAccount) SetDailyCapacity(v float64) {
	o.DailyCapacity.Set(&v)
}

// SetDailyCapacityNil sets the value for DailyCapacity to be an explicit nil
func (o *MyAccount) SetDailyCapacityNil() {
	o.DailyCapacity.Set(nil)
}

// UnsetDailyCapacity ensures that no value is present for DailyCapacity, not even an explicit nil
func (o *MyAccount) UnsetDailyCapacity() {
	o.DailyCapacity.Unset()
}

// GetIncludeInUtilizationReportingFlag returns the IncludeInUtilizationReportingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetIncludeInUtilizationReportingFlag() bool {
	if o == nil || IsNil(o.IncludeInUtilizationReportingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeInUtilizationReportingFlag.Get()
}

// GetIncludeInUtilizationReportingFlagOk returns a tuple with the IncludeInUtilizationReportingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetIncludeInUtilizationReportingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeInUtilizationReportingFlag.Get(), o.IncludeInUtilizationReportingFlag.IsSet()
}

// HasIncludeInUtilizationReportingFlag returns a boolean if a field has been set.
func (o *MyAccount) HasIncludeInUtilizationReportingFlag() bool {
	if o != nil && o.IncludeInUtilizationReportingFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeInUtilizationReportingFlag gets a reference to the given NullableBool and assigns it to the IncludeInUtilizationReportingFlag field.
func (o *MyAccount) SetIncludeInUtilizationReportingFlag(v bool) {
	o.IncludeInUtilizationReportingFlag.Set(&v)
}

// SetIncludeInUtilizationReportingFlagNil sets the value for IncludeInUtilizationReportingFlag to be an explicit nil
func (o *MyAccount) SetIncludeInUtilizationReportingFlagNil() {
	o.IncludeInUtilizationReportingFlag.Set(nil)
}

// UnsetIncludeInUtilizationReportingFlag ensures that no value is present for IncludeInUtilizationReportingFlag, not even an explicit nil
func (o *MyAccount) UnsetIncludeInUtilizationReportingFlag() {
	o.IncludeInUtilizationReportingFlag.Unset()
}

// GetRequireExpenseEntryFlag returns the RequireExpenseEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetRequireExpenseEntryFlag() bool {
	if o == nil || IsNil(o.RequireExpenseEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireExpenseEntryFlag.Get()
}

// GetRequireExpenseEntryFlagOk returns a tuple with the RequireExpenseEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetRequireExpenseEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireExpenseEntryFlag.Get(), o.RequireExpenseEntryFlag.IsSet()
}

// HasRequireExpenseEntryFlag returns a boolean if a field has been set.
func (o *MyAccount) HasRequireExpenseEntryFlag() bool {
	if o != nil && o.RequireExpenseEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireExpenseEntryFlag gets a reference to the given NullableBool and assigns it to the RequireExpenseEntryFlag field.
func (o *MyAccount) SetRequireExpenseEntryFlag(v bool) {
	o.RequireExpenseEntryFlag.Set(&v)
}

// SetRequireExpenseEntryFlagNil sets the value for RequireExpenseEntryFlag to be an explicit nil
func (o *MyAccount) SetRequireExpenseEntryFlagNil() {
	o.RequireExpenseEntryFlag.Set(nil)
}

// UnsetRequireExpenseEntryFlag ensures that no value is present for RequireExpenseEntryFlag, not even an explicit nil
func (o *MyAccount) UnsetRequireExpenseEntryFlag() {
	o.RequireExpenseEntryFlag.Unset()
}

// GetRequireTimeSheetEntryFlag returns the RequireTimeSheetEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetRequireTimeSheetEntryFlag() bool {
	if o == nil || IsNil(o.RequireTimeSheetEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireTimeSheetEntryFlag.Get()
}

// GetRequireTimeSheetEntryFlagOk returns a tuple with the RequireTimeSheetEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetRequireTimeSheetEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireTimeSheetEntryFlag.Get(), o.RequireTimeSheetEntryFlag.IsSet()
}

// HasRequireTimeSheetEntryFlag returns a boolean if a field has been set.
func (o *MyAccount) HasRequireTimeSheetEntryFlag() bool {
	if o != nil && o.RequireTimeSheetEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireTimeSheetEntryFlag gets a reference to the given NullableBool and assigns it to the RequireTimeSheetEntryFlag field.
func (o *MyAccount) SetRequireTimeSheetEntryFlag(v bool) {
	o.RequireTimeSheetEntryFlag.Set(&v)
}

// SetRequireTimeSheetEntryFlagNil sets the value for RequireTimeSheetEntryFlag to be an explicit nil
func (o *MyAccount) SetRequireTimeSheetEntryFlagNil() {
	o.RequireTimeSheetEntryFlag.Set(nil)
}

// UnsetRequireTimeSheetEntryFlag ensures that no value is present for RequireTimeSheetEntryFlag, not even an explicit nil
func (o *MyAccount) UnsetRequireTimeSheetEntryFlag() {
	o.RequireTimeSheetEntryFlag.Unset()
}

// GetRequireStartAndEndTimeOnTimeEntryFlag returns the RequireStartAndEndTimeOnTimeEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o == nil || IsNil(o.RequireStartAndEndTimeOnTimeEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
}

// GetRequireStartAndEndTimeOnTimeEntryFlagOk returns a tuple with the RequireStartAndEndTimeOnTimeEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetRequireStartAndEndTimeOnTimeEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireStartAndEndTimeOnTimeEntryFlag.Get(), o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet()
}

// HasRequireStartAndEndTimeOnTimeEntryFlag returns a boolean if a field has been set.
func (o *MyAccount) HasRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o != nil && o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireStartAndEndTimeOnTimeEntryFlag gets a reference to the given NullableBool and assigns it to the RequireStartAndEndTimeOnTimeEntryFlag field.
func (o *MyAccount) SetRequireStartAndEndTimeOnTimeEntryFlag(v bool) {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(&v)
}

// SetRequireStartAndEndTimeOnTimeEntryFlagNil sets the value for RequireStartAndEndTimeOnTimeEntryFlag to be an explicit nil
func (o *MyAccount) SetRequireStartAndEndTimeOnTimeEntryFlagNil() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(nil)
}

// UnsetRequireStartAndEndTimeOnTimeEntryFlag ensures that no value is present for RequireStartAndEndTimeOnTimeEntryFlag, not even an explicit nil
func (o *MyAccount) UnsetRequireStartAndEndTimeOnTimeEntryFlag() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Unset()
}

// GetAllowInCellEntryOnTimeSheet returns the AllowInCellEntryOnTimeSheet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetAllowInCellEntryOnTimeSheet() bool {
	if o == nil || IsNil(o.AllowInCellEntryOnTimeSheet.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowInCellEntryOnTimeSheet.Get()
}

// GetAllowInCellEntryOnTimeSheetOk returns a tuple with the AllowInCellEntryOnTimeSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetAllowInCellEntryOnTimeSheetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowInCellEntryOnTimeSheet.Get(), o.AllowInCellEntryOnTimeSheet.IsSet()
}

// HasAllowInCellEntryOnTimeSheet returns a boolean if a field has been set.
func (o *MyAccount) HasAllowInCellEntryOnTimeSheet() bool {
	if o != nil && o.AllowInCellEntryOnTimeSheet.IsSet() {
		return true
	}

	return false
}

// SetAllowInCellEntryOnTimeSheet gets a reference to the given NullableBool and assigns it to the AllowInCellEntryOnTimeSheet field.
func (o *MyAccount) SetAllowInCellEntryOnTimeSheet(v bool) {
	o.AllowInCellEntryOnTimeSheet.Set(&v)
}

// SetAllowInCellEntryOnTimeSheetNil sets the value for AllowInCellEntryOnTimeSheet to be an explicit nil
func (o *MyAccount) SetAllowInCellEntryOnTimeSheetNil() {
	o.AllowInCellEntryOnTimeSheet.Set(nil)
}

// UnsetAllowInCellEntryOnTimeSheet ensures that no value is present for AllowInCellEntryOnTimeSheet, not even an explicit nil
func (o *MyAccount) UnsetAllowInCellEntryOnTimeSheet() {
	o.AllowInCellEntryOnTimeSheet.Unset()
}

// GetEnterTimeAgainstCompanyFlag returns the EnterTimeAgainstCompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetEnterTimeAgainstCompanyFlag() bool {
	if o == nil || IsNil(o.EnterTimeAgainstCompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnterTimeAgainstCompanyFlag.Get()
}

// GetEnterTimeAgainstCompanyFlagOk returns a tuple with the EnterTimeAgainstCompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetEnterTimeAgainstCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnterTimeAgainstCompanyFlag.Get(), o.EnterTimeAgainstCompanyFlag.IsSet()
}

// HasEnterTimeAgainstCompanyFlag returns a boolean if a field has been set.
func (o *MyAccount) HasEnterTimeAgainstCompanyFlag() bool {
	if o != nil && o.EnterTimeAgainstCompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetEnterTimeAgainstCompanyFlag gets a reference to the given NullableBool and assigns it to the EnterTimeAgainstCompanyFlag field.
func (o *MyAccount) SetEnterTimeAgainstCompanyFlag(v bool) {
	o.EnterTimeAgainstCompanyFlag.Set(&v)
}

// SetEnterTimeAgainstCompanyFlagNil sets the value for EnterTimeAgainstCompanyFlag to be an explicit nil
func (o *MyAccount) SetEnterTimeAgainstCompanyFlagNil() {
	o.EnterTimeAgainstCompanyFlag.Set(nil)
}

// UnsetEnterTimeAgainstCompanyFlag ensures that no value is present for EnterTimeAgainstCompanyFlag, not even an explicit nil
func (o *MyAccount) UnsetEnterTimeAgainstCompanyFlag() {
	o.EnterTimeAgainstCompanyFlag.Unset()
}

// GetAllowExpensesEnteredAgainstCompaniesFlag returns the AllowExpensesEnteredAgainstCompaniesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o == nil || IsNil(o.AllowExpensesEnteredAgainstCompaniesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
}

// GetAllowExpensesEnteredAgainstCompaniesFlagOk returns a tuple with the AllowExpensesEnteredAgainstCompaniesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetAllowExpensesEnteredAgainstCompaniesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowExpensesEnteredAgainstCompaniesFlag.Get(), o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet()
}

// HasAllowExpensesEnteredAgainstCompaniesFlag returns a boolean if a field has been set.
func (o *MyAccount) HasAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o != nil && o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		return true
	}

	return false
}

// SetAllowExpensesEnteredAgainstCompaniesFlag gets a reference to the given NullableBool and assigns it to the AllowExpensesEnteredAgainstCompaniesFlag field.
func (o *MyAccount) SetAllowExpensesEnteredAgainstCompaniesFlag(v bool) {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(&v)
}

// SetAllowExpensesEnteredAgainstCompaniesFlagNil sets the value for AllowExpensesEnteredAgainstCompaniesFlag to be an explicit nil
func (o *MyAccount) SetAllowExpensesEnteredAgainstCompaniesFlagNil() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(nil)
}

// UnsetAllowExpensesEnteredAgainstCompaniesFlag ensures that no value is present for AllowExpensesEnteredAgainstCompaniesFlag, not even an explicit nil
func (o *MyAccount) UnsetAllowExpensesEnteredAgainstCompaniesFlag() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Unset()
}

// GetTimeReminderEmailFlag returns the TimeReminderEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetTimeReminderEmailFlag() bool {
	if o == nil || IsNil(o.TimeReminderEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeReminderEmailFlag.Get()
}

// GetTimeReminderEmailFlagOk returns a tuple with the TimeReminderEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetTimeReminderEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeReminderEmailFlag.Get(), o.TimeReminderEmailFlag.IsSet()
}

// HasTimeReminderEmailFlag returns a boolean if a field has been set.
func (o *MyAccount) HasTimeReminderEmailFlag() bool {
	if o != nil && o.TimeReminderEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeReminderEmailFlag gets a reference to the given NullableBool and assigns it to the TimeReminderEmailFlag field.
func (o *MyAccount) SetTimeReminderEmailFlag(v bool) {
	o.TimeReminderEmailFlag.Set(&v)
}

// SetTimeReminderEmailFlagNil sets the value for TimeReminderEmailFlag to be an explicit nil
func (o *MyAccount) SetTimeReminderEmailFlagNil() {
	o.TimeReminderEmailFlag.Set(nil)
}

// UnsetTimeReminderEmailFlag ensures that no value is present for TimeReminderEmailFlag, not even an explicit nil
func (o *MyAccount) UnsetTimeReminderEmailFlag() {
	o.TimeReminderEmailFlag.Unset()
}

// GetDaysTolerance returns the DaysTolerance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetDaysTolerance() int32 {
	if o == nil || IsNil(o.DaysTolerance.Get()) {
		var ret int32
		return ret
	}
	return *o.DaysTolerance.Get()
}

// GetDaysToleranceOk returns a tuple with the DaysTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetDaysToleranceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysTolerance.Get(), o.DaysTolerance.IsSet()
}

// HasDaysTolerance returns a boolean if a field has been set.
func (o *MyAccount) HasDaysTolerance() bool {
	if o != nil && o.DaysTolerance.IsSet() {
		return true
	}

	return false
}

// SetDaysTolerance gets a reference to the given NullableInt32 and assigns it to the DaysTolerance field.
func (o *MyAccount) SetDaysTolerance(v int32) {
	o.DaysTolerance.Set(&v)
}

// SetDaysToleranceNil sets the value for DaysTolerance to be an explicit nil
func (o *MyAccount) SetDaysToleranceNil() {
	o.DaysTolerance.Set(nil)
}

// UnsetDaysTolerance ensures that no value is present for DaysTolerance, not even an explicit nil
func (o *MyAccount) UnsetDaysTolerance() {
	o.DaysTolerance.Unset()
}

// GetMinimumHours returns the MinimumHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetMinimumHours() float64 {
	if o == nil || IsNil(o.MinimumHours.Get()) {
		var ret float64
		return ret
	}
	return *o.MinimumHours.Get()
}

// GetMinimumHoursOk returns a tuple with the MinimumHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetMinimumHoursOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumHours.Get(), o.MinimumHours.IsSet()
}

// HasMinimumHours returns a boolean if a field has been set.
func (o *MyAccount) HasMinimumHours() bool {
	if o != nil && o.MinimumHours.IsSet() {
		return true
	}

	return false
}

// SetMinimumHours gets a reference to the given NullableFloat64 and assigns it to the MinimumHours field.
func (o *MyAccount) SetMinimumHours(v float64) {
	o.MinimumHours.Set(&v)
}

// SetMinimumHoursNil sets the value for MinimumHours to be an explicit nil
func (o *MyAccount) SetMinimumHoursNil() {
	o.MinimumHours.Set(nil)
}

// UnsetMinimumHours ensures that no value is present for MinimumHours, not even an explicit nil
func (o *MyAccount) UnsetMinimumHours() {
	o.MinimumHours.Unset()
}

// GetTimeSheetStartDate returns the TimeSheetStartDate field value if set, zero value otherwise.
func (o *MyAccount) GetTimeSheetStartDate() time.Time {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		var ret time.Time
		return ret
	}
	return *o.TimeSheetStartDate
}

// GetTimeSheetStartDateOk returns a tuple with the TimeSheetStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetTimeSheetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		return nil, false
	}
	return o.TimeSheetStartDate, true
}

// HasTimeSheetStartDate returns a boolean if a field has been set.
func (o *MyAccount) HasTimeSheetStartDate() bool {
	if o != nil && !IsNil(o.TimeSheetStartDate) {
		return true
	}

	return false
}

// SetTimeSheetStartDate gets a reference to the given time.Time and assigns it to the TimeSheetStartDate field.
func (o *MyAccount) SetTimeSheetStartDate(v time.Time) {
	o.TimeSheetStartDate = &v
}

// GetHireDate returns the HireDate field value
func (o *MyAccount) GetHireDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.HireDate
}

// GetHireDateOk returns a tuple with the HireDate field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetHireDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HireDate, true
}

// SetHireDate sets field value
func (o *MyAccount) SetHireDate(v time.Time) {
	o.HireDate = v
}

// GetServiceDefaultLocation returns the ServiceDefaultLocation field value if set, zero value otherwise.
func (o *MyAccount) GetServiceDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ServiceDefaultLocation
}

// GetServiceDefaultLocationOk returns a tuple with the ServiceDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetServiceDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		return nil, false
	}
	return o.ServiceDefaultLocation, true
}

// HasServiceDefaultLocation returns a boolean if a field has been set.
func (o *MyAccount) HasServiceDefaultLocation() bool {
	if o != nil && !IsNil(o.ServiceDefaultLocation) {
		return true
	}

	return false
}

// SetServiceDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ServiceDefaultLocation field.
func (o *MyAccount) SetServiceDefaultLocation(v SystemLocationReference) {
	o.ServiceDefaultLocation = &v
}

// GetServiceDefaultDepartment returns the ServiceDefaultDepartment field value if set, zero value otherwise.
func (o *MyAccount) GetServiceDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ServiceDefaultDepartment
}

// GetServiceDefaultDepartmentOk returns a tuple with the ServiceDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetServiceDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		return nil, false
	}
	return o.ServiceDefaultDepartment, true
}

// HasServiceDefaultDepartment returns a boolean if a field has been set.
func (o *MyAccount) HasServiceDefaultDepartment() bool {
	if o != nil && !IsNil(o.ServiceDefaultDepartment) {
		return true
	}

	return false
}

// SetServiceDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ServiceDefaultDepartment field.
func (o *MyAccount) SetServiceDefaultDepartment(v SystemDepartmentReference) {
	o.ServiceDefaultDepartment = &v
}

// GetServiceDefaultBoard returns the ServiceDefaultBoard field value if set, zero value otherwise.
func (o *MyAccount) GetServiceDefaultBoard() BoardReference {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceDefaultBoard
}

// GetServiceDefaultBoardOk returns a tuple with the ServiceDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetServiceDefaultBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		return nil, false
	}
	return o.ServiceDefaultBoard, true
}

// HasServiceDefaultBoard returns a boolean if a field has been set.
func (o *MyAccount) HasServiceDefaultBoard() bool {
	if o != nil && !IsNil(o.ServiceDefaultBoard) {
		return true
	}

	return false
}

// SetServiceDefaultBoard gets a reference to the given BoardReference and assigns it to the ServiceDefaultBoard field.
func (o *MyAccount) SetServiceDefaultBoard(v BoardReference) {
	o.ServiceDefaultBoard = &v
}

// GetProjectDefaultLocation returns the ProjectDefaultLocation field value if set, zero value otherwise.
func (o *MyAccount) GetProjectDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ProjectDefaultLocation
}

// GetProjectDefaultLocationOk returns a tuple with the ProjectDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetProjectDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		return nil, false
	}
	return o.ProjectDefaultLocation, true
}

// HasProjectDefaultLocation returns a boolean if a field has been set.
func (o *MyAccount) HasProjectDefaultLocation() bool {
	if o != nil && !IsNil(o.ProjectDefaultLocation) {
		return true
	}

	return false
}

// SetProjectDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ProjectDefaultLocation field.
func (o *MyAccount) SetProjectDefaultLocation(v SystemLocationReference) {
	o.ProjectDefaultLocation = &v
}

// GetProjectDefaultDepartment returns the ProjectDefaultDepartment field value if set, zero value otherwise.
func (o *MyAccount) GetProjectDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ProjectDefaultDepartment
}

// GetProjectDefaultDepartmentOk returns a tuple with the ProjectDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetProjectDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		return nil, false
	}
	return o.ProjectDefaultDepartment, true
}

// HasProjectDefaultDepartment returns a boolean if a field has been set.
func (o *MyAccount) HasProjectDefaultDepartment() bool {
	if o != nil && !IsNil(o.ProjectDefaultDepartment) {
		return true
	}

	return false
}

// SetProjectDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ProjectDefaultDepartment field.
func (o *MyAccount) SetProjectDefaultDepartment(v SystemDepartmentReference) {
	o.ProjectDefaultDepartment = &v
}

// GetProjectDefaultBoard returns the ProjectDefaultBoard field value if set, zero value otherwise.
func (o *MyAccount) GetProjectDefaultBoard() ProjectBoardReference {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		var ret ProjectBoardReference
		return ret
	}
	return *o.ProjectDefaultBoard
}

// GetProjectDefaultBoardOk returns a tuple with the ProjectDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetProjectDefaultBoardOk() (*ProjectBoardReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		return nil, false
	}
	return o.ProjectDefaultBoard, true
}

// HasProjectDefaultBoard returns a boolean if a field has been set.
func (o *MyAccount) HasProjectDefaultBoard() bool {
	if o != nil && !IsNil(o.ProjectDefaultBoard) {
		return true
	}

	return false
}

// SetProjectDefaultBoard gets a reference to the given ProjectBoardReference and assigns it to the ProjectDefaultBoard field.
func (o *MyAccount) SetProjectDefaultBoard(v ProjectBoardReference) {
	o.ProjectDefaultBoard = &v
}

// GetScheduleDefaultLocation returns the ScheduleDefaultLocation field value if set, zero value otherwise.
func (o *MyAccount) GetScheduleDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ScheduleDefaultLocation
}

// GetScheduleDefaultLocationOk returns a tuple with the ScheduleDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetScheduleDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		return nil, false
	}
	return o.ScheduleDefaultLocation, true
}

// HasScheduleDefaultLocation returns a boolean if a field has been set.
func (o *MyAccount) HasScheduleDefaultLocation() bool {
	if o != nil && !IsNil(o.ScheduleDefaultLocation) {
		return true
	}

	return false
}

// SetScheduleDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ScheduleDefaultLocation field.
func (o *MyAccount) SetScheduleDefaultLocation(v SystemLocationReference) {
	o.ScheduleDefaultLocation = &v
}

// GetScheduleDefaultDepartment returns the ScheduleDefaultDepartment field value if set, zero value otherwise.
func (o *MyAccount) GetScheduleDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ScheduleDefaultDepartment
}

// GetScheduleDefaultDepartmentOk returns a tuple with the ScheduleDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetScheduleDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		return nil, false
	}
	return o.ScheduleDefaultDepartment, true
}

// HasScheduleDefaultDepartment returns a boolean if a field has been set.
func (o *MyAccount) HasScheduleDefaultDepartment() bool {
	if o != nil && !IsNil(o.ScheduleDefaultDepartment) {
		return true
	}

	return false
}

// SetScheduleDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ScheduleDefaultDepartment field.
func (o *MyAccount) SetScheduleDefaultDepartment(v SystemDepartmentReference) {
	o.ScheduleDefaultDepartment = &v
}

// GetScheduleCapacity returns the ScheduleCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetScheduleCapacity() float64 {
	if o == nil || IsNil(o.ScheduleCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.ScheduleCapacity.Get()
}

// GetScheduleCapacityOk returns a tuple with the ScheduleCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetScheduleCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleCapacity.Get(), o.ScheduleCapacity.IsSet()
}

// HasScheduleCapacity returns a boolean if a field has been set.
func (o *MyAccount) HasScheduleCapacity() bool {
	if o != nil && o.ScheduleCapacity.IsSet() {
		return true
	}

	return false
}

// SetScheduleCapacity gets a reference to the given NullableFloat64 and assigns it to the ScheduleCapacity field.
func (o *MyAccount) SetScheduleCapacity(v float64) {
	o.ScheduleCapacity.Set(&v)
}

// SetScheduleCapacityNil sets the value for ScheduleCapacity to be an explicit nil
func (o *MyAccount) SetScheduleCapacityNil() {
	o.ScheduleCapacity.Set(nil)
}

// UnsetScheduleCapacity ensures that no value is present for ScheduleCapacity, not even an explicit nil
func (o *MyAccount) UnsetScheduleCapacity() {
	o.ScheduleCapacity.Unset()
}

// GetServiceLocation returns the ServiceLocation field value if set, zero value otherwise.
func (o *MyAccount) GetServiceLocation() ServiceLocationReference {
	if o == nil || IsNil(o.ServiceLocation) {
		var ret ServiceLocationReference
		return ret
	}
	return *o.ServiceLocation
}

// GetServiceLocationOk returns a tuple with the ServiceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetServiceLocationOk() (*ServiceLocationReference, bool) {
	if o == nil || IsNil(o.ServiceLocation) {
		return nil, false
	}
	return o.ServiceLocation, true
}

// HasServiceLocation returns a boolean if a field has been set.
func (o *MyAccount) HasServiceLocation() bool {
	if o != nil && !IsNil(o.ServiceLocation) {
		return true
	}

	return false
}

// SetServiceLocation gets a reference to the given ServiceLocationReference and assigns it to the ServiceLocation field.
func (o *MyAccount) SetServiceLocation(v ServiceLocationReference) {
	o.ServiceLocation = &v
}

// GetHideMemberInDispatchPortalFlag returns the HideMemberInDispatchPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetHideMemberInDispatchPortalFlag() bool {
	if o == nil || IsNil(o.HideMemberInDispatchPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HideMemberInDispatchPortalFlag.Get()
}

// GetHideMemberInDispatchPortalFlagOk returns a tuple with the HideMemberInDispatchPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetHideMemberInDispatchPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HideMemberInDispatchPortalFlag.Get(), o.HideMemberInDispatchPortalFlag.IsSet()
}

// HasHideMemberInDispatchPortalFlag returns a boolean if a field has been set.
func (o *MyAccount) HasHideMemberInDispatchPortalFlag() bool {
	if o != nil && o.HideMemberInDispatchPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetHideMemberInDispatchPortalFlag gets a reference to the given NullableBool and assigns it to the HideMemberInDispatchPortalFlag field.
func (o *MyAccount) SetHideMemberInDispatchPortalFlag(v bool) {
	o.HideMemberInDispatchPortalFlag.Set(&v)
}

// SetHideMemberInDispatchPortalFlagNil sets the value for HideMemberInDispatchPortalFlag to be an explicit nil
func (o *MyAccount) SetHideMemberInDispatchPortalFlagNil() {
	o.HideMemberInDispatchPortalFlag.Set(nil)
}

// UnsetHideMemberInDispatchPortalFlag ensures that no value is present for HideMemberInDispatchPortalFlag, not even an explicit nil
func (o *MyAccount) UnsetHideMemberInDispatchPortalFlag() {
	o.HideMemberInDispatchPortalFlag.Unset()
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *MyAccount) GetCalendar() CalendarReference {
	if o == nil || IsNil(o.Calendar) {
		var ret CalendarReference
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetCalendarOk() (*CalendarReference, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *MyAccount) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given CalendarReference and assigns it to the Calendar field.
func (o *MyAccount) SetCalendar(v CalendarReference) {
	o.Calendar = &v
}

// GetSalesDefaultLocation returns the SalesDefaultLocation field value
func (o *MyAccount) GetSalesDefaultLocation() SystemLocationReference {
	if o == nil {
		var ret SystemLocationReference
		return ret
	}

	return o.SalesDefaultLocation
}

// GetSalesDefaultLocationOk returns a tuple with the SalesDefaultLocation field value
// and a boolean to check if the value has been set.
func (o *MyAccount) GetSalesDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesDefaultLocation, true
}

// SetSalesDefaultLocation sets field value
func (o *MyAccount) SetSalesDefaultLocation(v SystemLocationReference) {
	o.SalesDefaultLocation = v
}

// GetWarehouse returns the Warehouse field value if set, zero value otherwise.
func (o *MyAccount) GetWarehouse() WarehouseReference {
	if o == nil || IsNil(o.Warehouse) {
		var ret WarehouseReference
		return ret
	}
	return *o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil || IsNil(o.Warehouse) {
		return nil, false
	}
	return o.Warehouse, true
}

// HasWarehouse returns a boolean if a field has been set.
func (o *MyAccount) HasWarehouse() bool {
	if o != nil && !IsNil(o.Warehouse) {
		return true
	}

	return false
}

// SetWarehouse gets a reference to the given WarehouseReference and assigns it to the Warehouse field.
func (o *MyAccount) SetWarehouse(v WarehouseReference) {
	o.Warehouse = &v
}

// GetWarehouseBin returns the WarehouseBin field value if set, zero value otherwise.
func (o *MyAccount) GetWarehouseBin() WarehouseBinReference {
	if o == nil || IsNil(o.WarehouseBin) {
		var ret WarehouseBinReference
		return ret
	}
	return *o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil || IsNil(o.WarehouseBin) {
		return nil, false
	}
	return o.WarehouseBin, true
}

// HasWarehouseBin returns a boolean if a field has been set.
func (o *MyAccount) HasWarehouseBin() bool {
	if o != nil && !IsNil(o.WarehouseBin) {
		return true
	}

	return false
}

// SetWarehouseBin gets a reference to the given WarehouseBinReference and assigns it to the WarehouseBin field.
func (o *MyAccount) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = &v
}

// GetMapiName returns the MapiName field value if set, zero value otherwise.
func (o *MyAccount) GetMapiName() string {
	if o == nil || IsNil(o.MapiName) {
		var ret string
		return ret
	}
	return *o.MapiName
}

// GetMapiNameOk returns a tuple with the MapiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetMapiNameOk() (*string, bool) {
	if o == nil || IsNil(o.MapiName) {
		return nil, false
	}
	return o.MapiName, true
}

// HasMapiName returns a boolean if a field has been set.
func (o *MyAccount) HasMapiName() bool {
	if o != nil && !IsNil(o.MapiName) {
		return true
	}

	return false
}

// SetMapiName gets a reference to the given string and assigns it to the MapiName field.
func (o *MyAccount) SetMapiName(v string) {
	o.MapiName = &v
}

// GetCalendarSyncIntegrationFlag returns the CalendarSyncIntegrationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetCalendarSyncIntegrationFlag() bool {
	if o == nil || IsNil(o.CalendarSyncIntegrationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CalendarSyncIntegrationFlag.Get()
}

// GetCalendarSyncIntegrationFlagOk returns a tuple with the CalendarSyncIntegrationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetCalendarSyncIntegrationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CalendarSyncIntegrationFlag.Get(), o.CalendarSyncIntegrationFlag.IsSet()
}

// HasCalendarSyncIntegrationFlag returns a boolean if a field has been set.
func (o *MyAccount) HasCalendarSyncIntegrationFlag() bool {
	if o != nil && o.CalendarSyncIntegrationFlag.IsSet() {
		return true
	}

	return false
}

// SetCalendarSyncIntegrationFlag gets a reference to the given NullableBool and assigns it to the CalendarSyncIntegrationFlag field.
func (o *MyAccount) SetCalendarSyncIntegrationFlag(v bool) {
	o.CalendarSyncIntegrationFlag.Set(&v)
}

// SetCalendarSyncIntegrationFlagNil sets the value for CalendarSyncIntegrationFlag to be an explicit nil
func (o *MyAccount) SetCalendarSyncIntegrationFlagNil() {
	o.CalendarSyncIntegrationFlag.Set(nil)
}

// UnsetCalendarSyncIntegrationFlag ensures that no value is present for CalendarSyncIntegrationFlag, not even an explicit nil
func (o *MyAccount) UnsetCalendarSyncIntegrationFlag() {
	o.CalendarSyncIntegrationFlag.Unset()
}

// GetCompanyActivityTabFormat returns the CompanyActivityTabFormat field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetCompanyActivityTabFormat() string {
	if o == nil || o.CompanyActivityTabFormat.Get() == nil {
		var ret string
		return ret
	}

	return *o.CompanyActivityTabFormat.Get()
}

// GetCompanyActivityTabFormatOk returns a tuple with the CompanyActivityTabFormat field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetCompanyActivityTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyActivityTabFormat.Get(), o.CompanyActivityTabFormat.IsSet()
}

// SetCompanyActivityTabFormat sets field value
func (o *MyAccount) SetCompanyActivityTabFormat(v string) {
	o.CompanyActivityTabFormat.Set(&v)
}

// GetInvoiceTimeTabFormat returns the InvoiceTimeTabFormat field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetInvoiceTimeTabFormat() string {
	if o == nil || o.InvoiceTimeTabFormat.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoiceTimeTabFormat.Get()
}

// GetInvoiceTimeTabFormatOk returns a tuple with the InvoiceTimeTabFormat field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetInvoiceTimeTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceTimeTabFormat.Get(), o.InvoiceTimeTabFormat.IsSet()
}

// SetInvoiceTimeTabFormat sets field value
func (o *MyAccount) SetInvoiceTimeTabFormat(v string) {
	o.InvoiceTimeTabFormat.Set(&v)
}

// GetInvoiceScreenDefaultTabFormat returns the InvoiceScreenDefaultTabFormat field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetInvoiceScreenDefaultTabFormat() string {
	if o == nil || o.InvoiceScreenDefaultTabFormat.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoiceScreenDefaultTabFormat.Get()
}

// GetInvoiceScreenDefaultTabFormatOk returns a tuple with the InvoiceScreenDefaultTabFormat field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetInvoiceScreenDefaultTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceScreenDefaultTabFormat.Get(), o.InvoiceScreenDefaultTabFormat.IsSet()
}

// SetInvoiceScreenDefaultTabFormat sets field value
func (o *MyAccount) SetInvoiceScreenDefaultTabFormat(v string) {
	o.InvoiceScreenDefaultTabFormat.Set(&v)
}

// GetInvoicingDisplayOptions returns the InvoicingDisplayOptions field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetInvoicingDisplayOptions() string {
	if o == nil || o.InvoicingDisplayOptions.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoicingDisplayOptions.Get()
}

// GetInvoicingDisplayOptionsOk returns a tuple with the InvoicingDisplayOptions field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoicingDisplayOptions.Get(), o.InvoicingDisplayOptions.IsSet()
}

// SetInvoicingDisplayOptions sets field value
func (o *MyAccount) SetInvoicingDisplayOptions(v string) {
	o.InvoicingDisplayOptions.Set(&v)
}

// GetAgreementInvoicingDisplayOptions returns the AgreementInvoicingDisplayOptions field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MyAccount) GetAgreementInvoicingDisplayOptions() string {
	if o == nil || o.AgreementInvoicingDisplayOptions.Get() == nil {
		var ret string
		return ret
	}

	return *o.AgreementInvoicingDisplayOptions.Get()
}

// GetAgreementInvoicingDisplayOptionsOk returns a tuple with the AgreementInvoicingDisplayOptions field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetAgreementInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementInvoicingDisplayOptions.Get(), o.AgreementInvoicingDisplayOptions.IsSet()
}

// SetAgreementInvoicingDisplayOptions sets field value
func (o *MyAccount) SetAgreementInvoicingDisplayOptions(v string) {
	o.AgreementInvoicingDisplayOptions.Set(&v)
}

// GetAuthenticationServiceType returns the AuthenticationServiceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetAuthenticationServiceType() string {
	if o == nil || IsNil(o.AuthenticationServiceType.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationServiceType.Get()
}

// GetAuthenticationServiceTypeOk returns a tuple with the AuthenticationServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetAuthenticationServiceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationServiceType.Get(), o.AuthenticationServiceType.IsSet()
}

// HasAuthenticationServiceType returns a boolean if a field has been set.
func (o *MyAccount) HasAuthenticationServiceType() bool {
	if o != nil && o.AuthenticationServiceType.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationServiceType gets a reference to the given NullableString and assigns it to the AuthenticationServiceType field.
func (o *MyAccount) SetAuthenticationServiceType(v string) {
	o.AuthenticationServiceType.Set(&v)
}

// SetAuthenticationServiceTypeNil sets the value for AuthenticationServiceType to be an explicit nil
func (o *MyAccount) SetAuthenticationServiceTypeNil() {
	o.AuthenticationServiceType.Set(nil)
}

// UnsetAuthenticationServiceType ensures that no value is present for AuthenticationServiceType, not even an explicit nil
func (o *MyAccount) UnsetAuthenticationServiceType() {
	o.AuthenticationServiceType.Unset()
}

// GetTimebasedOneTimePasswordActivated returns the TimebasedOneTimePasswordActivated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetTimebasedOneTimePasswordActivated() bool {
	if o == nil || IsNil(o.TimebasedOneTimePasswordActivated.Get()) {
		var ret bool
		return ret
	}
	return *o.TimebasedOneTimePasswordActivated.Get()
}

// GetTimebasedOneTimePasswordActivatedOk returns a tuple with the TimebasedOneTimePasswordActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetTimebasedOneTimePasswordActivatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimebasedOneTimePasswordActivated.Get(), o.TimebasedOneTimePasswordActivated.IsSet()
}

// HasTimebasedOneTimePasswordActivated returns a boolean if a field has been set.
func (o *MyAccount) HasTimebasedOneTimePasswordActivated() bool {
	if o != nil && o.TimebasedOneTimePasswordActivated.IsSet() {
		return true
	}

	return false
}

// SetTimebasedOneTimePasswordActivated gets a reference to the given NullableBool and assigns it to the TimebasedOneTimePasswordActivated field.
func (o *MyAccount) SetTimebasedOneTimePasswordActivated(v bool) {
	o.TimebasedOneTimePasswordActivated.Set(&v)
}

// SetTimebasedOneTimePasswordActivatedNil sets the value for TimebasedOneTimePasswordActivated to be an explicit nil
func (o *MyAccount) SetTimebasedOneTimePasswordActivatedNil() {
	o.TimebasedOneTimePasswordActivated.Set(nil)
}

// UnsetTimebasedOneTimePasswordActivated ensures that no value is present for TimebasedOneTimePasswordActivated, not even an explicit nil
func (o *MyAccount) UnsetTimebasedOneTimePasswordActivated() {
	o.TimebasedOneTimePasswordActivated.Unset()
}

// GetDirectionalSync returns the DirectionalSync field value if set, zero value otherwise.
func (o *MyAccount) GetDirectionalSync() DirectionalSyncReference {
	if o == nil || IsNil(o.DirectionalSync) {
		var ret DirectionalSyncReference
		return ret
	}
	return *o.DirectionalSync
}

// GetDirectionalSyncOk returns a tuple with the DirectionalSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetDirectionalSyncOk() (*DirectionalSyncReference, bool) {
	if o == nil || IsNil(o.DirectionalSync) {
		return nil, false
	}
	return o.DirectionalSync, true
}

// HasDirectionalSync returns a boolean if a field has been set.
func (o *MyAccount) HasDirectionalSync() bool {
	if o != nil && !IsNil(o.DirectionalSync) {
		return true
	}

	return false
}

// SetDirectionalSync gets a reference to the given DirectionalSyncReference and assigns it to the DirectionalSync field.
func (o *MyAccount) SetDirectionalSync(v DirectionalSyncReference) {
	o.DirectionalSync = &v
}

// GetAutoStartStopwatch returns the AutoStartStopwatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetAutoStartStopwatch() bool {
	if o == nil || IsNil(o.AutoStartStopwatch.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoStartStopwatch.Get()
}

// GetAutoStartStopwatchOk returns a tuple with the AutoStartStopwatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetAutoStartStopwatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoStartStopwatch.Get(), o.AutoStartStopwatch.IsSet()
}

// HasAutoStartStopwatch returns a boolean if a field has been set.
func (o *MyAccount) HasAutoStartStopwatch() bool {
	if o != nil && o.AutoStartStopwatch.IsSet() {
		return true
	}

	return false
}

// SetAutoStartStopwatch gets a reference to the given NullableBool and assigns it to the AutoStartStopwatch field.
func (o *MyAccount) SetAutoStartStopwatch(v bool) {
	o.AutoStartStopwatch.Set(&v)
}

// SetAutoStartStopwatchNil sets the value for AutoStartStopwatch to be an explicit nil
func (o *MyAccount) SetAutoStartStopwatchNil() {
	o.AutoStartStopwatch.Set(nil)
}

// UnsetAutoStartStopwatch ensures that no value is present for AutoStartStopwatch, not even an explicit nil
func (o *MyAccount) UnsetAutoStartStopwatch() {
	o.AutoStartStopwatch.Unset()
}

// GetAutoPopupQuickNotesWithStopwatch returns the AutoPopupQuickNotesWithStopwatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetAutoPopupQuickNotesWithStopwatch() bool {
	if o == nil || IsNil(o.AutoPopupQuickNotesWithStopwatch.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoPopupQuickNotesWithStopwatch.Get()
}

// GetAutoPopupQuickNotesWithStopwatchOk returns a tuple with the AutoPopupQuickNotesWithStopwatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetAutoPopupQuickNotesWithStopwatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoPopupQuickNotesWithStopwatch.Get(), o.AutoPopupQuickNotesWithStopwatch.IsSet()
}

// HasAutoPopupQuickNotesWithStopwatch returns a boolean if a field has been set.
func (o *MyAccount) HasAutoPopupQuickNotesWithStopwatch() bool {
	if o != nil && o.AutoPopupQuickNotesWithStopwatch.IsSet() {
		return true
	}

	return false
}

// SetAutoPopupQuickNotesWithStopwatch gets a reference to the given NullableBool and assigns it to the AutoPopupQuickNotesWithStopwatch field.
func (o *MyAccount) SetAutoPopupQuickNotesWithStopwatch(v bool) {
	o.AutoPopupQuickNotesWithStopwatch.Set(&v)
}

// SetAutoPopupQuickNotesWithStopwatchNil sets the value for AutoPopupQuickNotesWithStopwatch to be an explicit nil
func (o *MyAccount) SetAutoPopupQuickNotesWithStopwatchNil() {
	o.AutoPopupQuickNotesWithStopwatch.Set(nil)
}

// UnsetAutoPopupQuickNotesWithStopwatch ensures that no value is present for AutoPopupQuickNotesWithStopwatch, not even an explicit nil
func (o *MyAccount) UnsetAutoPopupQuickNotesWithStopwatch() {
	o.AutoPopupQuickNotesWithStopwatch.Unset()
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *MyAccount) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *MyAccount) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *MyAccount) SetSignature(v string) {
	o.Signature = &v
}

// GetGlobalSearchDefaultTicketFilter returns the GlobalSearchDefaultTicketFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetGlobalSearchDefaultTicketFilter() string {
	if o == nil || IsNil(o.GlobalSearchDefaultTicketFilter.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalSearchDefaultTicketFilter.Get()
}

// GetGlobalSearchDefaultTicketFilterOk returns a tuple with the GlobalSearchDefaultTicketFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetGlobalSearchDefaultTicketFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalSearchDefaultTicketFilter.Get(), o.GlobalSearchDefaultTicketFilter.IsSet()
}

// HasGlobalSearchDefaultTicketFilter returns a boolean if a field has been set.
func (o *MyAccount) HasGlobalSearchDefaultTicketFilter() bool {
	if o != nil && o.GlobalSearchDefaultTicketFilter.IsSet() {
		return true
	}

	return false
}

// SetGlobalSearchDefaultTicketFilter gets a reference to the given NullableString and assigns it to the GlobalSearchDefaultTicketFilter field.
func (o *MyAccount) SetGlobalSearchDefaultTicketFilter(v string) {
	o.GlobalSearchDefaultTicketFilter.Set(&v)
}

// SetGlobalSearchDefaultTicketFilterNil sets the value for GlobalSearchDefaultTicketFilter to be an explicit nil
func (o *MyAccount) SetGlobalSearchDefaultTicketFilterNil() {
	o.GlobalSearchDefaultTicketFilter.Set(nil)
}

// UnsetGlobalSearchDefaultTicketFilter ensures that no value is present for GlobalSearchDefaultTicketFilter, not even an explicit nil
func (o *MyAccount) UnsetGlobalSearchDefaultTicketFilter() {
	o.GlobalSearchDefaultTicketFilter.Unset()
}

// GetGlobalSearchDefaultSort returns the GlobalSearchDefaultSort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetGlobalSearchDefaultSort() string {
	if o == nil || IsNil(o.GlobalSearchDefaultSort.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalSearchDefaultSort.Get()
}

// GetGlobalSearchDefaultSortOk returns a tuple with the GlobalSearchDefaultSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetGlobalSearchDefaultSortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalSearchDefaultSort.Get(), o.GlobalSearchDefaultSort.IsSet()
}

// HasGlobalSearchDefaultSort returns a boolean if a field has been set.
func (o *MyAccount) HasGlobalSearchDefaultSort() bool {
	if o != nil && o.GlobalSearchDefaultSort.IsSet() {
		return true
	}

	return false
}

// SetGlobalSearchDefaultSort gets a reference to the given NullableString and assigns it to the GlobalSearchDefaultSort field.
func (o *MyAccount) SetGlobalSearchDefaultSort(v string) {
	o.GlobalSearchDefaultSort.Set(&v)
}

// SetGlobalSearchDefaultSortNil sets the value for GlobalSearchDefaultSort to be an explicit nil
func (o *MyAccount) SetGlobalSearchDefaultSortNil() {
	o.GlobalSearchDefaultSort.Set(nil)
}

// UnsetGlobalSearchDefaultSort ensures that no value is present for GlobalSearchDefaultSort, not even an explicit nil
func (o *MyAccount) UnsetGlobalSearchDefaultSort() {
	o.GlobalSearchDefaultSort.Unset()
}

// GetPhoneSource returns the PhoneSource field value if set, zero value otherwise.
func (o *MyAccount) GetPhoneSource() string {
	if o == nil || IsNil(o.PhoneSource) {
		var ret string
		return ret
	}
	return *o.PhoneSource
}

// GetPhoneSourceOk returns a tuple with the PhoneSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetPhoneSourceOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneSource) {
		return nil, false
	}
	return o.PhoneSource, true
}

// HasPhoneSource returns a boolean if a field has been set.
func (o *MyAccount) HasPhoneSource() bool {
	if o != nil && !IsNil(o.PhoneSource) {
		return true
	}

	return false
}

// SetPhoneSource gets a reference to the given string and assigns it to the PhoneSource field.
func (o *MyAccount) SetPhoneSource(v string) {
	o.PhoneSource = &v
}

// GetPhoneIntegrationType returns the PhoneIntegrationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetPhoneIntegrationType() string {
	if o == nil || IsNil(o.PhoneIntegrationType.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneIntegrationType.Get()
}

// GetPhoneIntegrationTypeOk returns a tuple with the PhoneIntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetPhoneIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneIntegrationType.Get(), o.PhoneIntegrationType.IsSet()
}

// HasPhoneIntegrationType returns a boolean if a field has been set.
func (o *MyAccount) HasPhoneIntegrationType() bool {
	if o != nil && o.PhoneIntegrationType.IsSet() {
		return true
	}

	return false
}

// SetPhoneIntegrationType gets a reference to the given NullableString and assigns it to the PhoneIntegrationType field.
func (o *MyAccount) SetPhoneIntegrationType(v string) {
	o.PhoneIntegrationType.Set(&v)
}

// SetPhoneIntegrationTypeNil sets the value for PhoneIntegrationType to be an explicit nil
func (o *MyAccount) SetPhoneIntegrationTypeNil() {
	o.PhoneIntegrationType.Set(nil)
}

// UnsetPhoneIntegrationType ensures that no value is present for PhoneIntegrationType, not even an explicit nil
func (o *MyAccount) UnsetPhoneIntegrationType() {
	o.PhoneIntegrationType.Unset()
}

// GetUseBrowserLanguageFlag returns the UseBrowserLanguageFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyAccount) GetUseBrowserLanguageFlag() bool {
	if o == nil || IsNil(o.UseBrowserLanguageFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UseBrowserLanguageFlag.Get()
}

// GetUseBrowserLanguageFlagOk returns a tuple with the UseBrowserLanguageFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyAccount) GetUseBrowserLanguageFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseBrowserLanguageFlag.Get(), o.UseBrowserLanguageFlag.IsSet()
}

// HasUseBrowserLanguageFlag returns a boolean if a field has been set.
func (o *MyAccount) HasUseBrowserLanguageFlag() bool {
	if o != nil && o.UseBrowserLanguageFlag.IsSet() {
		return true
	}

	return false
}

// SetUseBrowserLanguageFlag gets a reference to the given NullableBool and assigns it to the UseBrowserLanguageFlag field.
func (o *MyAccount) SetUseBrowserLanguageFlag(v bool) {
	o.UseBrowserLanguageFlag.Set(&v)
}

// SetUseBrowserLanguageFlagNil sets the value for UseBrowserLanguageFlag to be an explicit nil
func (o *MyAccount) SetUseBrowserLanguageFlagNil() {
	o.UseBrowserLanguageFlag.Set(nil)
}

// UnsetUseBrowserLanguageFlag ensures that no value is present for UseBrowserLanguageFlag, not even an explicit nil
func (o *MyAccount) UnsetUseBrowserLanguageFlag() {
	o.UseBrowserLanguageFlag.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *MyAccount) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *MyAccount) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *MyAccount) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCopyPodLayouts returns the CopyPodLayouts field value if set, zero value otherwise.
func (o *MyAccount) GetCopyPodLayouts() bool {
	if o == nil || IsNil(o.CopyPodLayouts) {
		var ret bool
		return ret
	}
	return *o.CopyPodLayouts
}

// GetCopyPodLayoutsOk returns a tuple with the CopyPodLayouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetCopyPodLayoutsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyPodLayouts) {
		return nil, false
	}
	return o.CopyPodLayouts, true
}

// HasCopyPodLayouts returns a boolean if a field has been set.
func (o *MyAccount) HasCopyPodLayouts() bool {
	if o != nil && !IsNil(o.CopyPodLayouts) {
		return true
	}

	return false
}

// SetCopyPodLayouts gets a reference to the given bool and assigns it to the CopyPodLayouts field.
func (o *MyAccount) SetCopyPodLayouts(v bool) {
	o.CopyPodLayouts = &v
}

// GetCopySharedDefaultViews returns the CopySharedDefaultViews field value if set, zero value otherwise.
func (o *MyAccount) GetCopySharedDefaultViews() bool {
	if o == nil || IsNil(o.CopySharedDefaultViews) {
		var ret bool
		return ret
	}
	return *o.CopySharedDefaultViews
}

// GetCopySharedDefaultViewsOk returns a tuple with the CopySharedDefaultViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetCopySharedDefaultViewsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopySharedDefaultViews) {
		return nil, false
	}
	return o.CopySharedDefaultViews, true
}

// HasCopySharedDefaultViews returns a boolean if a field has been set.
func (o *MyAccount) HasCopySharedDefaultViews() bool {
	if o != nil && !IsNil(o.CopySharedDefaultViews) {
		return true
	}

	return false
}

// SetCopySharedDefaultViews gets a reference to the given bool and assigns it to the CopySharedDefaultViews field.
func (o *MyAccount) SetCopySharedDefaultViews(v bool) {
	o.CopySharedDefaultViews = &v
}

// GetCopyColumnLayoutsAndFilters returns the CopyColumnLayoutsAndFilters field value if set, zero value otherwise.
func (o *MyAccount) GetCopyColumnLayoutsAndFilters() bool {
	if o == nil || IsNil(o.CopyColumnLayoutsAndFilters) {
		var ret bool
		return ret
	}
	return *o.CopyColumnLayoutsAndFilters
}

// GetCopyColumnLayoutsAndFiltersOk returns a tuple with the CopyColumnLayoutsAndFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetCopyColumnLayoutsAndFiltersOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyColumnLayoutsAndFilters) {
		return nil, false
	}
	return o.CopyColumnLayoutsAndFilters, true
}

// HasCopyColumnLayoutsAndFilters returns a boolean if a field has been set.
func (o *MyAccount) HasCopyColumnLayoutsAndFilters() bool {
	if o != nil && !IsNil(o.CopyColumnLayoutsAndFilters) {
		return true
	}

	return false
}

// SetCopyColumnLayoutsAndFilters gets a reference to the given bool and assigns it to the CopyColumnLayoutsAndFilters field.
func (o *MyAccount) SetCopyColumnLayoutsAndFilters(v bool) {
	o.CopyColumnLayoutsAndFilters = &v
}

// GetFromMemberRecId returns the FromMemberRecId field value if set, zero value otherwise.
func (o *MyAccount) GetFromMemberRecId() int32 {
	if o == nil || IsNil(o.FromMemberRecId) {
		var ret int32
		return ret
	}
	return *o.FromMemberRecId
}

// GetFromMemberRecIdOk returns a tuple with the FromMemberRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetFromMemberRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromMemberRecId) {
		return nil, false
	}
	return o.FromMemberRecId, true
}

// HasFromMemberRecId returns a boolean if a field has been set.
func (o *MyAccount) HasFromMemberRecId() bool {
	if o != nil && !IsNil(o.FromMemberRecId) {
		return true
	}

	return false
}

// SetFromMemberRecId gets a reference to the given int32 and assigns it to the FromMemberRecId field.
func (o *MyAccount) SetFromMemberRecId(v int32) {
	o.FromMemberRecId = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *MyAccount) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyAccount) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *MyAccount) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *MyAccount) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o MyAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MyAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["identifier"] = o.Identifier
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["firstName"] = o.FirstName
	if !IsNil(o.MiddleInitial) {
		toSerialize["middleInitial"] = o.MiddleInitial
	}
	toSerialize["lastName"] = o.LastName
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ReportCard) {
		toSerialize["reportCard"] = o.ReportCard
	}
	toSerialize["licenseClass"] = o.LicenseClass.Get()
	if o.DisableOnlineFlag.IsSet() {
		toSerialize["disableOnlineFlag"] = o.DisableOnlineFlag.Get()
	}
	if o.EnableMobileFlag.IsSet() {
		toSerialize["enableMobileFlag"] = o.EnableMobileFlag.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.EmployeeIdentifer) {
		toSerialize["employeeIdentifer"] = o.EmployeeIdentifer
	}
	if !IsNil(o.VendorNumber) {
		toSerialize["vendorNumber"] = o.VendorNumber
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	toSerialize["timeZone"] = o.TimeZone
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.ServiceBoardTeamIds) {
		toSerialize["serviceBoardTeamIds"] = o.ServiceBoardTeamIds
	}
	if o.EnableMobileGpsFlag.IsSet() {
		toSerialize["enableMobileGpsFlag"] = o.EnableMobileGpsFlag.Get()
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.LastLogin) {
		toSerialize["lastLogin"] = o.LastLogin
	}
	if !IsNil(o.Photo) {
		toSerialize["photo"] = o.Photo
	}
	if o.PartnerPortalFlag.IsSet() {
		toSerialize["partnerPortalFlag"] = o.PartnerPortalFlag.Get()
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.StsUserAdminUrl) {
		toSerialize["stsUserAdminUrl"] = o.StsUserAdminUrl
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if o.ToastNotificationFlag.IsSet() {
		toSerialize["toastNotificationFlag"] = o.ToastNotificationFlag.Get()
	}
	if !IsNil(o.MemberPersonas) {
		toSerialize["memberPersonas"] = o.MemberPersonas
	}
	if !IsNil(o.Office365) {
		toSerialize["office365"] = o.Office365
	}
	if !IsNil(o.OfficeEmail) {
		toSerialize["officeEmail"] = o.OfficeEmail
	}
	if !IsNil(o.OfficePhone) {
		toSerialize["officePhone"] = o.OfficePhone
	}
	if !IsNil(o.OfficeExtension) {
		toSerialize["officeExtension"] = o.OfficeExtension
	}
	if !IsNil(o.MobileEmail) {
		toSerialize["mobileEmail"] = o.MobileEmail
	}
	if !IsNil(o.MobilePhone) {
		toSerialize["mobilePhone"] = o.MobilePhone
	}
	if !IsNil(o.MobileExtension) {
		toSerialize["mobileExtension"] = o.MobileExtension
	}
	if !IsNil(o.HomeEmail) {
		toSerialize["homeEmail"] = o.HomeEmail
	}
	if !IsNil(o.HomePhone) {
		toSerialize["homePhone"] = o.HomePhone
	}
	if !IsNil(o.HomeExtension) {
		toSerialize["homeExtension"] = o.HomeExtension
	}
	toSerialize["defaultEmail"] = o.DefaultEmail.Get()
	if !IsNil(o.PrimaryEmail) {
		toSerialize["primaryEmail"] = o.PrimaryEmail
	}
	toSerialize["defaultPhone"] = o.DefaultPhone.Get()
	toSerialize["defaultLocation"] = o.DefaultLocation
	toSerialize["defaultDepartment"] = o.DefaultDepartment
	if !IsNil(o.ReportsTo) {
		toSerialize["reportsTo"] = o.ReportsTo
	}
	toSerialize["workRole"] = o.WorkRole
	if !IsNil(o.WorkType) {
		toSerialize["workType"] = o.WorkType
	}
	toSerialize["timeApprover"] = o.TimeApprover
	toSerialize["expenseApprover"] = o.ExpenseApprover
	if o.BillableForecast.IsSet() {
		toSerialize["billableForecast"] = o.BillableForecast.Get()
	}
	if o.DailyCapacity.IsSet() {
		toSerialize["dailyCapacity"] = o.DailyCapacity.Get()
	}
	if o.IncludeInUtilizationReportingFlag.IsSet() {
		toSerialize["includeInUtilizationReportingFlag"] = o.IncludeInUtilizationReportingFlag.Get()
	}
	if o.RequireExpenseEntryFlag.IsSet() {
		toSerialize["requireExpenseEntryFlag"] = o.RequireExpenseEntryFlag.Get()
	}
	if o.RequireTimeSheetEntryFlag.IsSet() {
		toSerialize["requireTimeSheetEntryFlag"] = o.RequireTimeSheetEntryFlag.Get()
	}
	if o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		toSerialize["requireStartAndEndTimeOnTimeEntryFlag"] = o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
	}
	if o.AllowInCellEntryOnTimeSheet.IsSet() {
		toSerialize["allowInCellEntryOnTimeSheet"] = o.AllowInCellEntryOnTimeSheet.Get()
	}
	if o.EnterTimeAgainstCompanyFlag.IsSet() {
		toSerialize["enterTimeAgainstCompanyFlag"] = o.EnterTimeAgainstCompanyFlag.Get()
	}
	if o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		toSerialize["allowExpensesEnteredAgainstCompaniesFlag"] = o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
	}
	if o.TimeReminderEmailFlag.IsSet() {
		toSerialize["timeReminderEmailFlag"] = o.TimeReminderEmailFlag.Get()
	}
	if o.DaysTolerance.IsSet() {
		toSerialize["daysTolerance"] = o.DaysTolerance.Get()
	}
	if o.MinimumHours.IsSet() {
		toSerialize["minimumHours"] = o.MinimumHours.Get()
	}
	if !IsNil(o.TimeSheetStartDate) {
		toSerialize["timeSheetStartDate"] = o.TimeSheetStartDate
	}
	toSerialize["hireDate"] = o.HireDate
	if !IsNil(o.ServiceDefaultLocation) {
		toSerialize["serviceDefaultLocation"] = o.ServiceDefaultLocation
	}
	if !IsNil(o.ServiceDefaultDepartment) {
		toSerialize["serviceDefaultDepartment"] = o.ServiceDefaultDepartment
	}
	if !IsNil(o.ServiceDefaultBoard) {
		toSerialize["serviceDefaultBoard"] = o.ServiceDefaultBoard
	}
	if !IsNil(o.ProjectDefaultLocation) {
		toSerialize["projectDefaultLocation"] = o.ProjectDefaultLocation
	}
	if !IsNil(o.ProjectDefaultDepartment) {
		toSerialize["projectDefaultDepartment"] = o.ProjectDefaultDepartment
	}
	if !IsNil(o.ProjectDefaultBoard) {
		toSerialize["projectDefaultBoard"] = o.ProjectDefaultBoard
	}
	if !IsNil(o.ScheduleDefaultLocation) {
		toSerialize["scheduleDefaultLocation"] = o.ScheduleDefaultLocation
	}
	if !IsNil(o.ScheduleDefaultDepartment) {
		toSerialize["scheduleDefaultDepartment"] = o.ScheduleDefaultDepartment
	}
	if o.ScheduleCapacity.IsSet() {
		toSerialize["scheduleCapacity"] = o.ScheduleCapacity.Get()
	}
	if !IsNil(o.ServiceLocation) {
		toSerialize["serviceLocation"] = o.ServiceLocation
	}
	if o.HideMemberInDispatchPortalFlag.IsSet() {
		toSerialize["hideMemberInDispatchPortalFlag"] = o.HideMemberInDispatchPortalFlag.Get()
	}
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	toSerialize["salesDefaultLocation"] = o.SalesDefaultLocation
	if !IsNil(o.Warehouse) {
		toSerialize["warehouse"] = o.Warehouse
	}
	if !IsNil(o.WarehouseBin) {
		toSerialize["warehouseBin"] = o.WarehouseBin
	}
	if !IsNil(o.MapiName) {
		toSerialize["mapiName"] = o.MapiName
	}
	if o.CalendarSyncIntegrationFlag.IsSet() {
		toSerialize["calendarSyncIntegrationFlag"] = o.CalendarSyncIntegrationFlag.Get()
	}
	toSerialize["companyActivityTabFormat"] = o.CompanyActivityTabFormat.Get()
	toSerialize["invoiceTimeTabFormat"] = o.InvoiceTimeTabFormat.Get()
	toSerialize["invoiceScreenDefaultTabFormat"] = o.InvoiceScreenDefaultTabFormat.Get()
	toSerialize["invoicingDisplayOptions"] = o.InvoicingDisplayOptions.Get()
	toSerialize["agreementInvoicingDisplayOptions"] = o.AgreementInvoicingDisplayOptions.Get()
	if o.AuthenticationServiceType.IsSet() {
		toSerialize["authenticationServiceType"] = o.AuthenticationServiceType.Get()
	}
	if o.TimebasedOneTimePasswordActivated.IsSet() {
		toSerialize["timebasedOneTimePasswordActivated"] = o.TimebasedOneTimePasswordActivated.Get()
	}
	if !IsNil(o.DirectionalSync) {
		toSerialize["directionalSync"] = o.DirectionalSync
	}
	if o.AutoStartStopwatch.IsSet() {
		toSerialize["autoStartStopwatch"] = o.AutoStartStopwatch.Get()
	}
	if o.AutoPopupQuickNotesWithStopwatch.IsSet() {
		toSerialize["autoPopupQuickNotesWithStopwatch"] = o.AutoPopupQuickNotesWithStopwatch.Get()
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if o.GlobalSearchDefaultTicketFilter.IsSet() {
		toSerialize["globalSearchDefaultTicketFilter"] = o.GlobalSearchDefaultTicketFilter.Get()
	}
	if o.GlobalSearchDefaultSort.IsSet() {
		toSerialize["globalSearchDefaultSort"] = o.GlobalSearchDefaultSort.Get()
	}
	if !IsNil(o.PhoneSource) {
		toSerialize["phoneSource"] = o.PhoneSource
	}
	if o.PhoneIntegrationType.IsSet() {
		toSerialize["phoneIntegrationType"] = o.PhoneIntegrationType.Get()
	}
	if o.UseBrowserLanguageFlag.IsSet() {
		toSerialize["useBrowserLanguageFlag"] = o.UseBrowserLanguageFlag.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CopyPodLayouts) {
		toSerialize["copyPodLayouts"] = o.CopyPodLayouts
	}
	if !IsNil(o.CopySharedDefaultViews) {
		toSerialize["copySharedDefaultViews"] = o.CopySharedDefaultViews
	}
	if !IsNil(o.CopyColumnLayoutsAndFilters) {
		toSerialize["copyColumnLayoutsAndFilters"] = o.CopyColumnLayoutsAndFilters
	}
	if !IsNil(o.FromMemberRecId) {
		toSerialize["fromMemberRecId"] = o.FromMemberRecId
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *MyAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"firstName",
		"lastName",
		"licenseClass",
		"timeZone",
		"defaultEmail",
		"defaultPhone",
		"defaultLocation",
		"defaultDepartment",
		"workRole",
		"timeApprover",
		"expenseApprover",
		"hireDate",
		"salesDefaultLocation",
		"companyActivityTabFormat",
		"invoiceTimeTabFormat",
		"invoiceScreenDefaultTabFormat",
		"invoicingDisplayOptions",
		"agreementInvoicingDisplayOptions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMyAccount := _MyAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMyAccount)

	if err != nil {
		return err
	}

	*o = MyAccount(varMyAccount)

	return err
}

type NullableMyAccount struct {
	value *MyAccount
	isSet bool
}

func (v NullableMyAccount) Get() *MyAccount {
	return v.value
}

func (v *NullableMyAccount) Set(val *MyAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableMyAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableMyAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMyAccount(val *MyAccount) *NullableMyAccount {
	return &NullableMyAccount{value: val, isSet: true}
}

func (v NullableMyAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMyAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
