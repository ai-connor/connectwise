/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the MyMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MyMember{}

// MyMember struct for MyMember
type MyMember struct {
	Id         *int32  `json:"id,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	// ConditionallyRequired. API Member will get random password generated
	Password      *string              `json:"password,omitempty"`
	FirstName     *string              `json:"firstName,omitempty"`
	MiddleInitial *string              `json:"middleInitial,omitempty"`
	LastName      *string              `json:"lastName,omitempty"`
	Title         *string              `json:"title,omitempty"`
	ReportCard    *ReportCardReference `json:"reportCard,omitempty"`
	// F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
	LicenseClass                             NullableString              `json:"licenseClass,omitempty"`
	DisableOnlineFlag                        NullableBool                `json:"disableOnlineFlag,omitempty"`
	EnableMobileFlag                         NullableBool                `json:"enableMobileFlag,omitempty"`
	Type                                     *MemberTypeReference        `json:"type,omitempty"`
	EmployeeIdentifer                        *string                     `json:"employeeIdentifer,omitempty"`
	VendorNumber                             *string                     `json:"vendorNumber,omitempty"`
	Notes                                    *string                     `json:"notes,omitempty"`
	TimeZone                                 *TimeZoneSetupReference     `json:"timeZone,omitempty"`
	Country                                  *CountryReference           `json:"country,omitempty"`
	ServiceBoardTeamIds                      []int32                     `json:"serviceBoardTeamIds,omitempty"`
	EnableMobileGpsFlag                      NullableBool                `json:"enableMobileGpsFlag,omitempty"`
	InactiveDate                             *string                     `json:"inactiveDate,omitempty"`
	InactiveFlag                             NullableBool                `json:"inactiveFlag,omitempty"`
	LastLogin                                *string                     `json:"lastLogin,omitempty"`
	Photo                                    *DocumentReference          `json:"photo,omitempty"`
	ToastNotificationFlag                    NullableBool                `json:"toastNotificationFlag,omitempty"`
	OfficeEmail                              *string                     `json:"officeEmail,omitempty"`
	OfficePhone                              *string                     `json:"officePhone,omitempty"`
	OfficeExtension                          *string                     `json:"officeExtension,omitempty"`
	MobileEmail                              *string                     `json:"mobileEmail,omitempty"`
	MobilePhone                              *string                     `json:"mobilePhone,omitempty"`
	MobileExtension                          *string                     `json:"mobileExtension,omitempty"`
	HomeEmail                                *string                     `json:"homeEmail,omitempty"`
	HomePhone                                *string                     `json:"homePhone,omitempty"`
	HomeExtension                            *string                     `json:"homeExtension,omitempty"`
	DefaultEmail                             NullableString              `json:"defaultEmail,omitempty"`
	DefaultPhone                             NullableString              `json:"defaultPhone,omitempty"`
	SecurityRole                             *SecurityRoleReference      `json:"securityRole,omitempty"`
	AdminFlag                                NullableBool                `json:"adminFlag,omitempty"`
	StructureLevel                           *StructureReference         `json:"structureLevel,omitempty"`
	SecurityLocation                         *SystemLocationReference    `json:"securityLocation,omitempty"`
	DefaultLocation                          *SystemLocationReference    `json:"defaultLocation,omitempty"`
	DefaultDepartment                        *SystemDepartmentReference  `json:"defaultDepartment,omitempty"`
	ReportsTo                                *MemberReference            `json:"reportsTo,omitempty"`
	RestrictLocationFlag                     NullableBool                `json:"restrictLocationFlag,omitempty"`
	RestrictDepartmentFlag                   NullableBool                `json:"restrictDepartmentFlag,omitempty"`
	WorkRole                                 *WorkRoleReference          `json:"workRole,omitempty"`
	WorkType                                 *WorkTypeReference          `json:"workType,omitempty"`
	TimeApprover                             *MemberReference            `json:"timeApprover,omitempty"`
	ExpenseApprover                          *MemberReference            `json:"expenseApprover,omitempty"`
	BillableForecast                         NullableFloat64             `json:"billableForecast,omitempty"`
	DailyCapacity                            NullableFloat64             `json:"dailyCapacity,omitempty"`
	HourlyCost                               NullableFloat64             `json:"hourlyCost,omitempty"`
	HourlyRate                               NullableFloat64             `json:"hourlyRate,omitempty"`
	IncludeInUtilizationReportingFlag        NullableBool                `json:"includeInUtilizationReportingFlag,omitempty"`
	RequireExpenseEntryFlag                  NullableBool                `json:"requireExpenseEntryFlag,omitempty"`
	RequireTimeSheetEntryFlag                NullableBool                `json:"requireTimeSheetEntryFlag,omitempty"`
	RequireStartAndEndTimeOnTimeEntryFlag    NullableBool                `json:"requireStartAndEndTimeOnTimeEntryFlag,omitempty"`
	AllowInCellEntryOnTimeSheet              NullableBool                `json:"allowInCellEntryOnTimeSheet,omitempty"`
	EnterTimeAgainstCompanyFlag              NullableBool                `json:"enterTimeAgainstCompanyFlag,omitempty"`
	AllowExpensesEnteredAgainstCompaniesFlag NullableBool                `json:"allowExpensesEnteredAgainstCompaniesFlag,omitempty"`
	TimeReminderEmailFlag                    NullableBool                `json:"timeReminderEmailFlag,omitempty"`
	DaysTolerance                            NullableInt32               `json:"daysTolerance,omitempty"`
	MinimumHours                             NullableFloat64             `json:"minimumHours,omitempty"`
	TimeSheetStartDate                       *string                     `json:"timeSheetStartDate,omitempty"`
	HireDate                                 *string                     `json:"hireDate,omitempty"`
	ServiceDefaultLocation                   *SystemLocationReference    `json:"serviceDefaultLocation,omitempty"`
	ServiceDefaultDepartment                 *SystemDepartmentReference  `json:"serviceDefaultDepartment,omitempty"`
	ServiceDefaultBoard                      *BoardReference             `json:"serviceDefaultBoard,omitempty"`
	RestrictServiceDefaultLocationFlag       NullableBool                `json:"restrictServiceDefaultLocationFlag,omitempty"`
	RestrictServiceDefaultDepartmentFlag     NullableBool                `json:"restrictServiceDefaultDepartmentFlag,omitempty"`
	ExcludedServiceBoardIds                  []int32                     `json:"excludedServiceBoardIds,omitempty"`
	ProjectDefaultLocation                   *SystemLocationReference    `json:"projectDefaultLocation,omitempty"`
	ProjectDefaultDepartment                 *SystemDepartmentReference  `json:"projectDefaultDepartment,omitempty"`
	ProjectDefaultBoard                      *ProjectBoardReference      `json:"projectDefaultBoard,omitempty"`
	RestrictProjectDefaultLocationFlag       NullableBool                `json:"restrictProjectDefaultLocationFlag,omitempty"`
	RestrictProjectDefaultDepartmentFlag     NullableBool                `json:"restrictProjectDefaultDepartmentFlag,omitempty"`
	ExcludedProjectBoardIds                  []int32                     `json:"excludedProjectBoardIds,omitempty"`
	ScheduleDefaultLocation                  *SystemLocationReference    `json:"scheduleDefaultLocation,omitempty"`
	ScheduleDefaultDepartment                *SystemDepartmentReference  `json:"scheduleDefaultDepartment,omitempty"`
	ScheduleCapacity                         NullableFloat64             `json:"scheduleCapacity,omitempty"`
	ServiceLocation                          *ServiceLocationReference   `json:"serviceLocation,omitempty"`
	RestrictScheduleFlag                     NullableBool                `json:"restrictScheduleFlag,omitempty"`
	HideMemberInDispatchPortalFlag           NullableBool                `json:"hideMemberInDispatchPortalFlag,omitempty"`
	Calendar                                 *CalendarReference          `json:"calendar,omitempty"`
	SalesDefaultLocation                     *SystemLocationReference    `json:"salesDefaultLocation,omitempty"`
	RestrictDefaultSalesTerritoryFlag        NullableBool                `json:"restrictDefaultSalesTerritoryFlag,omitempty"`
	Warehouse                                *WarehouseReference         `json:"warehouse,omitempty"`
	WarehouseBin                             *WarehouseBinReference      `json:"warehouseBin,omitempty"`
	RestrictDefaultWarehouseFlag             NullableBool                `json:"restrictDefaultWarehouseFlag,omitempty"`
	RestrictDefaultWarehouseBinFlag          NullableBool                `json:"restrictDefaultWarehouseBinFlag,omitempty"`
	MapiName                                 *string                     `json:"mapiName,omitempty"`
	CalendarSyncIntegrationFlag              NullableBool                `json:"calendarSyncIntegrationFlag,omitempty"`
	EnableLdapAuthenticationFlag             NullableBool                `json:"enableLdapAuthenticationFlag,omitempty"`
	LdapConfiguration                        *LdapConfigurationReference `json:"ldapConfiguration,omitempty"`
	LdapUserName                             *string                     `json:"ldapUserName,omitempty"`
	CompanyActivityTabFormat                 NullableString              `json:"companyActivityTabFormat,omitempty"`
	InvoiceTimeTabFormat                     NullableString              `json:"invoiceTimeTabFormat,omitempty"`
	InvoiceScreenDefaultTabFormat            NullableString              `json:"invoiceScreenDefaultTabFormat,omitempty"`
	InvoicingDisplayOptions                  NullableString              `json:"invoicingDisplayOptions,omitempty"`
	AgreementInvoicingDisplayOptions         NullableString              `json:"agreementInvoicingDisplayOptions,omitempty"`
	CorelyticsUsername                       *string                     `json:"corelyticsUsername,omitempty"`
	CorelyticsPassword                       *string                     `json:"corelyticsPassword,omitempty"`
	AuthenticationServiceType                NullableString              `json:"authenticationServiceType,omitempty"`
	TimebasedOneTimePasswordActivated        NullableBool                `json:"timebasedOneTimePasswordActivated,omitempty"`
	DirectionalSync                          *DirectionalSyncReference   `json:"directionalSync,omitempty"`
	SsoSessionFlag                           NullableBool                `json:"ssoSessionFlag,omitempty"`
	SsoClientId                              *string                     `json:"ssoClientId,omitempty"`
	Info                                     *map[string]string          `json:"_info,omitempty"`
}

// NewMyMember instantiates a new MyMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMyMember() *MyMember {
	this := MyMember{}
	return &this
}

// NewMyMemberWithDefaults instantiates a new MyMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMyMemberWithDefaults() *MyMember {
	this := MyMember{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MyMember) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MyMember) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MyMember) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MyMember) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MyMember) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MyMember) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MyMember) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MyMember) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MyMember) SetPassword(v string) {
	o.Password = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *MyMember) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *MyMember) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *MyMember) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleInitial returns the MiddleInitial field value if set, zero value otherwise.
func (o *MyMember) GetMiddleInitial() string {
	if o == nil || IsNil(o.MiddleInitial) {
		var ret string
		return ret
	}
	return *o.MiddleInitial
}

// GetMiddleInitialOk returns a tuple with the MiddleInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetMiddleInitialOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleInitial) {
		return nil, false
	}
	return o.MiddleInitial, true
}

// HasMiddleInitial returns a boolean if a field has been set.
func (o *MyMember) HasMiddleInitial() bool {
	if o != nil && !IsNil(o.MiddleInitial) {
		return true
	}

	return false
}

// SetMiddleInitial gets a reference to the given string and assigns it to the MiddleInitial field.
func (o *MyMember) SetMiddleInitial(v string) {
	o.MiddleInitial = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *MyMember) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *MyMember) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *MyMember) SetLastName(v string) {
	o.LastName = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MyMember) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MyMember) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MyMember) SetTitle(v string) {
	o.Title = &v
}

// GetReportCard returns the ReportCard field value if set, zero value otherwise.
func (o *MyMember) GetReportCard() ReportCardReference {
	if o == nil || IsNil(o.ReportCard) {
		var ret ReportCardReference
		return ret
	}
	return *o.ReportCard
}

// GetReportCardOk returns a tuple with the ReportCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetReportCardOk() (*ReportCardReference, bool) {
	if o == nil || IsNil(o.ReportCard) {
		return nil, false
	}
	return o.ReportCard, true
}

// HasReportCard returns a boolean if a field has been set.
func (o *MyMember) HasReportCard() bool {
	if o != nil && !IsNil(o.ReportCard) {
		return true
	}

	return false
}

// SetReportCard gets a reference to the given ReportCardReference and assigns it to the ReportCard field.
func (o *MyMember) SetReportCard(v ReportCardReference) {
	o.ReportCard = &v
}

// GetLicenseClass returns the LicenseClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetLicenseClass() string {
	if o == nil || IsNil(o.LicenseClass.Get()) {
		var ret string
		return ret
	}
	return *o.LicenseClass.Get()
}

// GetLicenseClassOk returns a tuple with the LicenseClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetLicenseClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseClass.Get(), o.LicenseClass.IsSet()
}

// HasLicenseClass returns a boolean if a field has been set.
func (o *MyMember) HasLicenseClass() bool {
	if o != nil && o.LicenseClass.IsSet() {
		return true
	}

	return false
}

// SetLicenseClass gets a reference to the given NullableString and assigns it to the LicenseClass field.
func (o *MyMember) SetLicenseClass(v string) {
	o.LicenseClass.Set(&v)
}

// SetLicenseClassNil sets the value for LicenseClass to be an explicit nil
func (o *MyMember) SetLicenseClassNil() {
	o.LicenseClass.Set(nil)
}

// UnsetLicenseClass ensures that no value is present for LicenseClass, not even an explicit nil
func (o *MyMember) UnsetLicenseClass() {
	o.LicenseClass.Unset()
}

// GetDisableOnlineFlag returns the DisableOnlineFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetDisableOnlineFlag() bool {
	if o == nil || IsNil(o.DisableOnlineFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisableOnlineFlag.Get()
}

// GetDisableOnlineFlagOk returns a tuple with the DisableOnlineFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetDisableOnlineFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisableOnlineFlag.Get(), o.DisableOnlineFlag.IsSet()
}

// HasDisableOnlineFlag returns a boolean if a field has been set.
func (o *MyMember) HasDisableOnlineFlag() bool {
	if o != nil && o.DisableOnlineFlag.IsSet() {
		return true
	}

	return false
}

// SetDisableOnlineFlag gets a reference to the given NullableBool and assigns it to the DisableOnlineFlag field.
func (o *MyMember) SetDisableOnlineFlag(v bool) {
	o.DisableOnlineFlag.Set(&v)
}

// SetDisableOnlineFlagNil sets the value for DisableOnlineFlag to be an explicit nil
func (o *MyMember) SetDisableOnlineFlagNil() {
	o.DisableOnlineFlag.Set(nil)
}

// UnsetDisableOnlineFlag ensures that no value is present for DisableOnlineFlag, not even an explicit nil
func (o *MyMember) UnsetDisableOnlineFlag() {
	o.DisableOnlineFlag.Unset()
}

// GetEnableMobileFlag returns the EnableMobileFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetEnableMobileFlag() bool {
	if o == nil || IsNil(o.EnableMobileFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileFlag.Get()
}

// GetEnableMobileFlagOk returns a tuple with the EnableMobileFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetEnableMobileFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileFlag.Get(), o.EnableMobileFlag.IsSet()
}

// HasEnableMobileFlag returns a boolean if a field has been set.
func (o *MyMember) HasEnableMobileFlag() bool {
	if o != nil && o.EnableMobileFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileFlag gets a reference to the given NullableBool and assigns it to the EnableMobileFlag field.
func (o *MyMember) SetEnableMobileFlag(v bool) {
	o.EnableMobileFlag.Set(&v)
}

// SetEnableMobileFlagNil sets the value for EnableMobileFlag to be an explicit nil
func (o *MyMember) SetEnableMobileFlagNil() {
	o.EnableMobileFlag.Set(nil)
}

// UnsetEnableMobileFlag ensures that no value is present for EnableMobileFlag, not even an explicit nil
func (o *MyMember) UnsetEnableMobileFlag() {
	o.EnableMobileFlag.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MyMember) GetType() MemberTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret MemberTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetTypeOk() (*MemberTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MyMember) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MemberTypeReference and assigns it to the Type field.
func (o *MyMember) SetType(v MemberTypeReference) {
	o.Type = &v
}

// GetEmployeeIdentifer returns the EmployeeIdentifer field value if set, zero value otherwise.
func (o *MyMember) GetEmployeeIdentifer() string {
	if o == nil || IsNil(o.EmployeeIdentifer) {
		var ret string
		return ret
	}
	return *o.EmployeeIdentifer
}

// GetEmployeeIdentiferOk returns a tuple with the EmployeeIdentifer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetEmployeeIdentiferOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeIdentifer) {
		return nil, false
	}
	return o.EmployeeIdentifer, true
}

// HasEmployeeIdentifer returns a boolean if a field has been set.
func (o *MyMember) HasEmployeeIdentifer() bool {
	if o != nil && !IsNil(o.EmployeeIdentifer) {
		return true
	}

	return false
}

// SetEmployeeIdentifer gets a reference to the given string and assigns it to the EmployeeIdentifer field.
func (o *MyMember) SetEmployeeIdentifer(v string) {
	o.EmployeeIdentifer = &v
}

// GetVendorNumber returns the VendorNumber field value if set, zero value otherwise.
func (o *MyMember) GetVendorNumber() string {
	if o == nil || IsNil(o.VendorNumber) {
		var ret string
		return ret
	}
	return *o.VendorNumber
}

// GetVendorNumberOk returns a tuple with the VendorNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetVendorNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorNumber) {
		return nil, false
	}
	return o.VendorNumber, true
}

// HasVendorNumber returns a boolean if a field has been set.
func (o *MyMember) HasVendorNumber() bool {
	if o != nil && !IsNil(o.VendorNumber) {
		return true
	}

	return false
}

// SetVendorNumber gets a reference to the given string and assigns it to the VendorNumber field.
func (o *MyMember) SetVendorNumber(v string) {
	o.VendorNumber = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *MyMember) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *MyMember) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *MyMember) SetNotes(v string) {
	o.Notes = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MyMember) GetTimeZone() TimeZoneSetupReference {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimeZoneSetupReference
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetTimeZoneOk() (*TimeZoneSetupReference, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MyMember) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZoneSetupReference and assigns it to the TimeZone field.
func (o *MyMember) SetTimeZone(v TimeZoneSetupReference) {
	o.TimeZone = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *MyMember) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *MyMember) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *MyMember) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetServiceBoardTeamIds returns the ServiceBoardTeamIds field value if set, zero value otherwise.
func (o *MyMember) GetServiceBoardTeamIds() []int32 {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		var ret []int32
		return ret
	}
	return o.ServiceBoardTeamIds
}

// GetServiceBoardTeamIdsOk returns a tuple with the ServiceBoardTeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetServiceBoardTeamIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ServiceBoardTeamIds) {
		return nil, false
	}
	return o.ServiceBoardTeamIds, true
}

// HasServiceBoardTeamIds returns a boolean if a field has been set.
func (o *MyMember) HasServiceBoardTeamIds() bool {
	if o != nil && !IsNil(o.ServiceBoardTeamIds) {
		return true
	}

	return false
}

// SetServiceBoardTeamIds gets a reference to the given []int32 and assigns it to the ServiceBoardTeamIds field.
func (o *MyMember) SetServiceBoardTeamIds(v []int32) {
	o.ServiceBoardTeamIds = v
}

// GetEnableMobileGpsFlag returns the EnableMobileGpsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetEnableMobileGpsFlag() bool {
	if o == nil || IsNil(o.EnableMobileGpsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableMobileGpsFlag.Get()
}

// GetEnableMobileGpsFlagOk returns a tuple with the EnableMobileGpsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetEnableMobileGpsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableMobileGpsFlag.Get(), o.EnableMobileGpsFlag.IsSet()
}

// HasEnableMobileGpsFlag returns a boolean if a field has been set.
func (o *MyMember) HasEnableMobileGpsFlag() bool {
	if o != nil && o.EnableMobileGpsFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableMobileGpsFlag gets a reference to the given NullableBool and assigns it to the EnableMobileGpsFlag field.
func (o *MyMember) SetEnableMobileGpsFlag(v bool) {
	o.EnableMobileGpsFlag.Set(&v)
}

// SetEnableMobileGpsFlagNil sets the value for EnableMobileGpsFlag to be an explicit nil
func (o *MyMember) SetEnableMobileGpsFlagNil() {
	o.EnableMobileGpsFlag.Set(nil)
}

// UnsetEnableMobileGpsFlag ensures that no value is present for EnableMobileGpsFlag, not even an explicit nil
func (o *MyMember) UnsetEnableMobileGpsFlag() {
	o.EnableMobileGpsFlag.Unset()
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *MyMember) GetInactiveDate() string {
	if o == nil || IsNil(o.InactiveDate) {
		var ret string
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetInactiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *MyMember) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given string and assigns it to the InactiveDate field.
func (o *MyMember) SetInactiveDate(v string) {
	o.InactiveDate = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *MyMember) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *MyMember) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}

// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *MyMember) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *MyMember) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *MyMember) GetLastLogin() string {
	if o == nil || IsNil(o.LastLogin) {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetLastLoginOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *MyMember) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *MyMember) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetPhoto returns the Photo field value if set, zero value otherwise.
func (o *MyMember) GetPhoto() DocumentReference {
	if o == nil || IsNil(o.Photo) {
		var ret DocumentReference
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetPhotoOk() (*DocumentReference, bool) {
	if o == nil || IsNil(o.Photo) {
		return nil, false
	}
	return o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *MyMember) HasPhoto() bool {
	if o != nil && !IsNil(o.Photo) {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given DocumentReference and assigns it to the Photo field.
func (o *MyMember) SetPhoto(v DocumentReference) {
	o.Photo = &v
}

// GetToastNotificationFlag returns the ToastNotificationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetToastNotificationFlag() bool {
	if o == nil || IsNil(o.ToastNotificationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ToastNotificationFlag.Get()
}

// GetToastNotificationFlagOk returns a tuple with the ToastNotificationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetToastNotificationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToastNotificationFlag.Get(), o.ToastNotificationFlag.IsSet()
}

// HasToastNotificationFlag returns a boolean if a field has been set.
func (o *MyMember) HasToastNotificationFlag() bool {
	if o != nil && o.ToastNotificationFlag.IsSet() {
		return true
	}

	return false
}

// SetToastNotificationFlag gets a reference to the given NullableBool and assigns it to the ToastNotificationFlag field.
func (o *MyMember) SetToastNotificationFlag(v bool) {
	o.ToastNotificationFlag.Set(&v)
}

// SetToastNotificationFlagNil sets the value for ToastNotificationFlag to be an explicit nil
func (o *MyMember) SetToastNotificationFlagNil() {
	o.ToastNotificationFlag.Set(nil)
}

// UnsetToastNotificationFlag ensures that no value is present for ToastNotificationFlag, not even an explicit nil
func (o *MyMember) UnsetToastNotificationFlag() {
	o.ToastNotificationFlag.Unset()
}

// GetOfficeEmail returns the OfficeEmail field value if set, zero value otherwise.
func (o *MyMember) GetOfficeEmail() string {
	if o == nil || IsNil(o.OfficeEmail) {
		var ret string
		return ret
	}
	return *o.OfficeEmail
}

// GetOfficeEmailOk returns a tuple with the OfficeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetOfficeEmailOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeEmail) {
		return nil, false
	}
	return o.OfficeEmail, true
}

// HasOfficeEmail returns a boolean if a field has been set.
func (o *MyMember) HasOfficeEmail() bool {
	if o != nil && !IsNil(o.OfficeEmail) {
		return true
	}

	return false
}

// SetOfficeEmail gets a reference to the given string and assigns it to the OfficeEmail field.
func (o *MyMember) SetOfficeEmail(v string) {
	o.OfficeEmail = &v
}

// GetOfficePhone returns the OfficePhone field value if set, zero value otherwise.
func (o *MyMember) GetOfficePhone() string {
	if o == nil || IsNil(o.OfficePhone) {
		var ret string
		return ret
	}
	return *o.OfficePhone
}

// GetOfficePhoneOk returns a tuple with the OfficePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetOfficePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.OfficePhone) {
		return nil, false
	}
	return o.OfficePhone, true
}

// HasOfficePhone returns a boolean if a field has been set.
func (o *MyMember) HasOfficePhone() bool {
	if o != nil && !IsNil(o.OfficePhone) {
		return true
	}

	return false
}

// SetOfficePhone gets a reference to the given string and assigns it to the OfficePhone field.
func (o *MyMember) SetOfficePhone(v string) {
	o.OfficePhone = &v
}

// GetOfficeExtension returns the OfficeExtension field value if set, zero value otherwise.
func (o *MyMember) GetOfficeExtension() string {
	if o == nil || IsNil(o.OfficeExtension) {
		var ret string
		return ret
	}
	return *o.OfficeExtension
}

// GetOfficeExtensionOk returns a tuple with the OfficeExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetOfficeExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeExtension) {
		return nil, false
	}
	return o.OfficeExtension, true
}

// HasOfficeExtension returns a boolean if a field has been set.
func (o *MyMember) HasOfficeExtension() bool {
	if o != nil && !IsNil(o.OfficeExtension) {
		return true
	}

	return false
}

// SetOfficeExtension gets a reference to the given string and assigns it to the OfficeExtension field.
func (o *MyMember) SetOfficeExtension(v string) {
	o.OfficeExtension = &v
}

// GetMobileEmail returns the MobileEmail field value if set, zero value otherwise.
func (o *MyMember) GetMobileEmail() string {
	if o == nil || IsNil(o.MobileEmail) {
		var ret string
		return ret
	}
	return *o.MobileEmail
}

// GetMobileEmailOk returns a tuple with the MobileEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetMobileEmailOk() (*string, bool) {
	if o == nil || IsNil(o.MobileEmail) {
		return nil, false
	}
	return o.MobileEmail, true
}

// HasMobileEmail returns a boolean if a field has been set.
func (o *MyMember) HasMobileEmail() bool {
	if o != nil && !IsNil(o.MobileEmail) {
		return true
	}

	return false
}

// SetMobileEmail gets a reference to the given string and assigns it to the MobileEmail field.
func (o *MyMember) SetMobileEmail(v string) {
	o.MobileEmail = &v
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise.
func (o *MyMember) GetMobilePhone() string {
	if o == nil || IsNil(o.MobilePhone) {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetMobilePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhone) {
		return nil, false
	}
	return o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *MyMember) HasMobilePhone() bool {
	if o != nil && !IsNil(o.MobilePhone) {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *MyMember) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

// GetMobileExtension returns the MobileExtension field value if set, zero value otherwise.
func (o *MyMember) GetMobileExtension() string {
	if o == nil || IsNil(o.MobileExtension) {
		var ret string
		return ret
	}
	return *o.MobileExtension
}

// GetMobileExtensionOk returns a tuple with the MobileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetMobileExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.MobileExtension) {
		return nil, false
	}
	return o.MobileExtension, true
}

// HasMobileExtension returns a boolean if a field has been set.
func (o *MyMember) HasMobileExtension() bool {
	if o != nil && !IsNil(o.MobileExtension) {
		return true
	}

	return false
}

// SetMobileExtension gets a reference to the given string and assigns it to the MobileExtension field.
func (o *MyMember) SetMobileExtension(v string) {
	o.MobileExtension = &v
}

// GetHomeEmail returns the HomeEmail field value if set, zero value otherwise.
func (o *MyMember) GetHomeEmail() string {
	if o == nil || IsNil(o.HomeEmail) {
		var ret string
		return ret
	}
	return *o.HomeEmail
}

// GetHomeEmailOk returns a tuple with the HomeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetHomeEmailOk() (*string, bool) {
	if o == nil || IsNil(o.HomeEmail) {
		return nil, false
	}
	return o.HomeEmail, true
}

// HasHomeEmail returns a boolean if a field has been set.
func (o *MyMember) HasHomeEmail() bool {
	if o != nil && !IsNil(o.HomeEmail) {
		return true
	}

	return false
}

// SetHomeEmail gets a reference to the given string and assigns it to the HomeEmail field.
func (o *MyMember) SetHomeEmail(v string) {
	o.HomeEmail = &v
}

// GetHomePhone returns the HomePhone field value if set, zero value otherwise.
func (o *MyMember) GetHomePhone() string {
	if o == nil || IsNil(o.HomePhone) {
		var ret string
		return ret
	}
	return *o.HomePhone
}

// GetHomePhoneOk returns a tuple with the HomePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetHomePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.HomePhone) {
		return nil, false
	}
	return o.HomePhone, true
}

// HasHomePhone returns a boolean if a field has been set.
func (o *MyMember) HasHomePhone() bool {
	if o != nil && !IsNil(o.HomePhone) {
		return true
	}

	return false
}

// SetHomePhone gets a reference to the given string and assigns it to the HomePhone field.
func (o *MyMember) SetHomePhone(v string) {
	o.HomePhone = &v
}

// GetHomeExtension returns the HomeExtension field value if set, zero value otherwise.
func (o *MyMember) GetHomeExtension() string {
	if o == nil || IsNil(o.HomeExtension) {
		var ret string
		return ret
	}
	return *o.HomeExtension
}

// GetHomeExtensionOk returns a tuple with the HomeExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetHomeExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.HomeExtension) {
		return nil, false
	}
	return o.HomeExtension, true
}

// HasHomeExtension returns a boolean if a field has been set.
func (o *MyMember) HasHomeExtension() bool {
	if o != nil && !IsNil(o.HomeExtension) {
		return true
	}

	return false
}

// SetHomeExtension gets a reference to the given string and assigns it to the HomeExtension field.
func (o *MyMember) SetHomeExtension(v string) {
	o.HomeExtension = &v
}

// GetDefaultEmail returns the DefaultEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetDefaultEmail() string {
	if o == nil || IsNil(o.DefaultEmail.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultEmail.Get()
}

// GetDefaultEmailOk returns a tuple with the DefaultEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetDefaultEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultEmail.Get(), o.DefaultEmail.IsSet()
}

// HasDefaultEmail returns a boolean if a field has been set.
func (o *MyMember) HasDefaultEmail() bool {
	if o != nil && o.DefaultEmail.IsSet() {
		return true
	}

	return false
}

// SetDefaultEmail gets a reference to the given NullableString and assigns it to the DefaultEmail field.
func (o *MyMember) SetDefaultEmail(v string) {
	o.DefaultEmail.Set(&v)
}

// SetDefaultEmailNil sets the value for DefaultEmail to be an explicit nil
func (o *MyMember) SetDefaultEmailNil() {
	o.DefaultEmail.Set(nil)
}

// UnsetDefaultEmail ensures that no value is present for DefaultEmail, not even an explicit nil
func (o *MyMember) UnsetDefaultEmail() {
	o.DefaultEmail.Unset()
}

// GetDefaultPhone returns the DefaultPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetDefaultPhone() string {
	if o == nil || IsNil(o.DefaultPhone.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultPhone.Get()
}

// GetDefaultPhoneOk returns a tuple with the DefaultPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetDefaultPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPhone.Get(), o.DefaultPhone.IsSet()
}

// HasDefaultPhone returns a boolean if a field has been set.
func (o *MyMember) HasDefaultPhone() bool {
	if o != nil && o.DefaultPhone.IsSet() {
		return true
	}

	return false
}

// SetDefaultPhone gets a reference to the given NullableString and assigns it to the DefaultPhone field.
func (o *MyMember) SetDefaultPhone(v string) {
	o.DefaultPhone.Set(&v)
}

// SetDefaultPhoneNil sets the value for DefaultPhone to be an explicit nil
func (o *MyMember) SetDefaultPhoneNil() {
	o.DefaultPhone.Set(nil)
}

// UnsetDefaultPhone ensures that no value is present for DefaultPhone, not even an explicit nil
func (o *MyMember) UnsetDefaultPhone() {
	o.DefaultPhone.Unset()
}

// GetSecurityRole returns the SecurityRole field value if set, zero value otherwise.
func (o *MyMember) GetSecurityRole() SecurityRoleReference {
	if o == nil || IsNil(o.SecurityRole) {
		var ret SecurityRoleReference
		return ret
	}
	return *o.SecurityRole
}

// GetSecurityRoleOk returns a tuple with the SecurityRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetSecurityRoleOk() (*SecurityRoleReference, bool) {
	if o == nil || IsNil(o.SecurityRole) {
		return nil, false
	}
	return o.SecurityRole, true
}

// HasSecurityRole returns a boolean if a field has been set.
func (o *MyMember) HasSecurityRole() bool {
	if o != nil && !IsNil(o.SecurityRole) {
		return true
	}

	return false
}

// SetSecurityRole gets a reference to the given SecurityRoleReference and assigns it to the SecurityRole field.
func (o *MyMember) SetSecurityRole(v SecurityRoleReference) {
	o.SecurityRole = &v
}

// GetAdminFlag returns the AdminFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetAdminFlag() bool {
	if o == nil || IsNil(o.AdminFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AdminFlag.Get()
}

// GetAdminFlagOk returns a tuple with the AdminFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetAdminFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminFlag.Get(), o.AdminFlag.IsSet()
}

// HasAdminFlag returns a boolean if a field has been set.
func (o *MyMember) HasAdminFlag() bool {
	if o != nil && o.AdminFlag.IsSet() {
		return true
	}

	return false
}

// SetAdminFlag gets a reference to the given NullableBool and assigns it to the AdminFlag field.
func (o *MyMember) SetAdminFlag(v bool) {
	o.AdminFlag.Set(&v)
}

// SetAdminFlagNil sets the value for AdminFlag to be an explicit nil
func (o *MyMember) SetAdminFlagNil() {
	o.AdminFlag.Set(nil)
}

// UnsetAdminFlag ensures that no value is present for AdminFlag, not even an explicit nil
func (o *MyMember) UnsetAdminFlag() {
	o.AdminFlag.Unset()
}

// GetStructureLevel returns the StructureLevel field value if set, zero value otherwise.
func (o *MyMember) GetStructureLevel() StructureReference {
	if o == nil || IsNil(o.StructureLevel) {
		var ret StructureReference
		return ret
	}
	return *o.StructureLevel
}

// GetStructureLevelOk returns a tuple with the StructureLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetStructureLevelOk() (*StructureReference, bool) {
	if o == nil || IsNil(o.StructureLevel) {
		return nil, false
	}
	return o.StructureLevel, true
}

// HasStructureLevel returns a boolean if a field has been set.
func (o *MyMember) HasStructureLevel() bool {
	if o != nil && !IsNil(o.StructureLevel) {
		return true
	}

	return false
}

// SetStructureLevel gets a reference to the given StructureReference and assigns it to the StructureLevel field.
func (o *MyMember) SetStructureLevel(v StructureReference) {
	o.StructureLevel = &v
}

// GetSecurityLocation returns the SecurityLocation field value if set, zero value otherwise.
func (o *MyMember) GetSecurityLocation() SystemLocationReference {
	if o == nil || IsNil(o.SecurityLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SecurityLocation
}

// GetSecurityLocationOk returns a tuple with the SecurityLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetSecurityLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SecurityLocation) {
		return nil, false
	}
	return o.SecurityLocation, true
}

// HasSecurityLocation returns a boolean if a field has been set.
func (o *MyMember) HasSecurityLocation() bool {
	if o != nil && !IsNil(o.SecurityLocation) {
		return true
	}

	return false
}

// SetSecurityLocation gets a reference to the given SystemLocationReference and assigns it to the SecurityLocation field.
func (o *MyMember) SetSecurityLocation(v SystemLocationReference) {
	o.SecurityLocation = &v
}

// GetDefaultLocation returns the DefaultLocation field value if set, zero value otherwise.
func (o *MyMember) GetDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.DefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.DefaultLocation) {
		return nil, false
	}
	return o.DefaultLocation, true
}

// HasDefaultLocation returns a boolean if a field has been set.
func (o *MyMember) HasDefaultLocation() bool {
	if o != nil && !IsNil(o.DefaultLocation) {
		return true
	}

	return false
}

// SetDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the DefaultLocation field.
func (o *MyMember) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = &v
}

// GetDefaultDepartment returns the DefaultDepartment field value if set, zero value otherwise.
func (o *MyMember) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.DefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.DefaultDepartment) {
		return nil, false
	}
	return o.DefaultDepartment, true
}

// HasDefaultDepartment returns a boolean if a field has been set.
func (o *MyMember) HasDefaultDepartment() bool {
	if o != nil && !IsNil(o.DefaultDepartment) {
		return true
	}

	return false
}

// SetDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the DefaultDepartment field.
func (o *MyMember) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = &v
}

// GetReportsTo returns the ReportsTo field value if set, zero value otherwise.
func (o *MyMember) GetReportsTo() MemberReference {
	if o == nil || IsNil(o.ReportsTo) {
		var ret MemberReference
		return ret
	}
	return *o.ReportsTo
}

// GetReportsToOk returns a tuple with the ReportsTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetReportsToOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ReportsTo) {
		return nil, false
	}
	return o.ReportsTo, true
}

// HasReportsTo returns a boolean if a field has been set.
func (o *MyMember) HasReportsTo() bool {
	if o != nil && !IsNil(o.ReportsTo) {
		return true
	}

	return false
}

// SetReportsTo gets a reference to the given MemberReference and assigns it to the ReportsTo field.
func (o *MyMember) SetReportsTo(v MemberReference) {
	o.ReportsTo = &v
}

// GetRestrictLocationFlag returns the RestrictLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictLocationFlag() bool {
	if o == nil || IsNil(o.RestrictLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictLocationFlag.Get()
}

// GetRestrictLocationFlagOk returns a tuple with the RestrictLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictLocationFlag.Get(), o.RestrictLocationFlag.IsSet()
}

// HasRestrictLocationFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictLocationFlag() bool {
	if o != nil && o.RestrictLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictLocationFlag field.
func (o *MyMember) SetRestrictLocationFlag(v bool) {
	o.RestrictLocationFlag.Set(&v)
}

// SetRestrictLocationFlagNil sets the value for RestrictLocationFlag to be an explicit nil
func (o *MyMember) SetRestrictLocationFlagNil() {
	o.RestrictLocationFlag.Set(nil)
}

// UnsetRestrictLocationFlag ensures that no value is present for RestrictLocationFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictLocationFlag() {
	o.RestrictLocationFlag.Unset()
}

// GetRestrictDepartmentFlag returns the RestrictDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDepartmentFlag.Get()
}

// GetRestrictDepartmentFlagOk returns a tuple with the RestrictDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDepartmentFlag.Get(), o.RestrictDepartmentFlag.IsSet()
}

// HasRestrictDepartmentFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictDepartmentFlag() bool {
	if o != nil && o.RestrictDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictDepartmentFlag field.
func (o *MyMember) SetRestrictDepartmentFlag(v bool) {
	o.RestrictDepartmentFlag.Set(&v)
}

// SetRestrictDepartmentFlagNil sets the value for RestrictDepartmentFlag to be an explicit nil
func (o *MyMember) SetRestrictDepartmentFlagNil() {
	o.RestrictDepartmentFlag.Set(nil)
}

// UnsetRestrictDepartmentFlag ensures that no value is present for RestrictDepartmentFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictDepartmentFlag() {
	o.RestrictDepartmentFlag.Unset()
}

// GetWorkRole returns the WorkRole field value if set, zero value otherwise.
func (o *MyMember) GetWorkRole() WorkRoleReference {
	if o == nil || IsNil(o.WorkRole) {
		var ret WorkRoleReference
		return ret
	}
	return *o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil || IsNil(o.WorkRole) {
		return nil, false
	}
	return o.WorkRole, true
}

// HasWorkRole returns a boolean if a field has been set.
func (o *MyMember) HasWorkRole() bool {
	if o != nil && !IsNil(o.WorkRole) {
		return true
	}

	return false
}

// SetWorkRole gets a reference to the given WorkRoleReference and assigns it to the WorkRole field.
func (o *MyMember) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = &v
}

// GetWorkType returns the WorkType field value if set, zero value otherwise.
func (o *MyMember) GetWorkType() WorkTypeReference {
	if o == nil || IsNil(o.WorkType) {
		var ret WorkTypeReference
		return ret
	}
	return *o.WorkType
}

// GetWorkTypeOk returns a tuple with the WorkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetWorkTypeOk() (*WorkTypeReference, bool) {
	if o == nil || IsNil(o.WorkType) {
		return nil, false
	}
	return o.WorkType, true
}

// HasWorkType returns a boolean if a field has been set.
func (o *MyMember) HasWorkType() bool {
	if o != nil && !IsNil(o.WorkType) {
		return true
	}

	return false
}

// SetWorkType gets a reference to the given WorkTypeReference and assigns it to the WorkType field.
func (o *MyMember) SetWorkType(v WorkTypeReference) {
	o.WorkType = &v
}

// GetTimeApprover returns the TimeApprover field value if set, zero value otherwise.
func (o *MyMember) GetTimeApprover() MemberReference {
	if o == nil || IsNil(o.TimeApprover) {
		var ret MemberReference
		return ret
	}
	return *o.TimeApprover
}

// GetTimeApproverOk returns a tuple with the TimeApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetTimeApproverOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.TimeApprover) {
		return nil, false
	}
	return o.TimeApprover, true
}

// HasTimeApprover returns a boolean if a field has been set.
func (o *MyMember) HasTimeApprover() bool {
	if o != nil && !IsNil(o.TimeApprover) {
		return true
	}

	return false
}

// SetTimeApprover gets a reference to the given MemberReference and assigns it to the TimeApprover field.
func (o *MyMember) SetTimeApprover(v MemberReference) {
	o.TimeApprover = &v
}

// GetExpenseApprover returns the ExpenseApprover field value if set, zero value otherwise.
func (o *MyMember) GetExpenseApprover() MemberReference {
	if o == nil || IsNil(o.ExpenseApprover) {
		var ret MemberReference
		return ret
	}
	return *o.ExpenseApprover
}

// GetExpenseApproverOk returns a tuple with the ExpenseApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetExpenseApproverOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ExpenseApprover) {
		return nil, false
	}
	return o.ExpenseApprover, true
}

// HasExpenseApprover returns a boolean if a field has been set.
func (o *MyMember) HasExpenseApprover() bool {
	if o != nil && !IsNil(o.ExpenseApprover) {
		return true
	}

	return false
}

// SetExpenseApprover gets a reference to the given MemberReference and assigns it to the ExpenseApprover field.
func (o *MyMember) SetExpenseApprover(v MemberReference) {
	o.ExpenseApprover = &v
}

// GetBillableForecast returns the BillableForecast field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetBillableForecast() float64 {
	if o == nil || IsNil(o.BillableForecast.Get()) {
		var ret float64
		return ret
	}
	return *o.BillableForecast.Get()
}

// GetBillableForecastOk returns a tuple with the BillableForecast field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetBillableForecastOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillableForecast.Get(), o.BillableForecast.IsSet()
}

// HasBillableForecast returns a boolean if a field has been set.
func (o *MyMember) HasBillableForecast() bool {
	if o != nil && o.BillableForecast.IsSet() {
		return true
	}

	return false
}

// SetBillableForecast gets a reference to the given NullableFloat64 and assigns it to the BillableForecast field.
func (o *MyMember) SetBillableForecast(v float64) {
	o.BillableForecast.Set(&v)
}

// SetBillableForecastNil sets the value for BillableForecast to be an explicit nil
func (o *MyMember) SetBillableForecastNil() {
	o.BillableForecast.Set(nil)
}

// UnsetBillableForecast ensures that no value is present for BillableForecast, not even an explicit nil
func (o *MyMember) UnsetBillableForecast() {
	o.BillableForecast.Unset()
}

// GetDailyCapacity returns the DailyCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetDailyCapacity() float64 {
	if o == nil || IsNil(o.DailyCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.DailyCapacity.Get()
}

// GetDailyCapacityOk returns a tuple with the DailyCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetDailyCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DailyCapacity.Get(), o.DailyCapacity.IsSet()
}

// HasDailyCapacity returns a boolean if a field has been set.
func (o *MyMember) HasDailyCapacity() bool {
	if o != nil && o.DailyCapacity.IsSet() {
		return true
	}

	return false
}

// SetDailyCapacity gets a reference to the given NullableFloat64 and assigns it to the DailyCapacity field.
func (o *MyMember) SetDailyCapacity(v float64) {
	o.DailyCapacity.Set(&v)
}

// SetDailyCapacityNil sets the value for DailyCapacity to be an explicit nil
func (o *MyMember) SetDailyCapacityNil() {
	o.DailyCapacity.Set(nil)
}

// UnsetDailyCapacity ensures that no value is present for DailyCapacity, not even an explicit nil
func (o *MyMember) UnsetDailyCapacity() {
	o.DailyCapacity.Unset()
}

// GetHourlyCost returns the HourlyCost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetHourlyCost() float64 {
	if o == nil || IsNil(o.HourlyCost.Get()) {
		var ret float64
		return ret
	}
	return *o.HourlyCost.Get()
}

// GetHourlyCostOk returns a tuple with the HourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetHourlyCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyCost.Get(), o.HourlyCost.IsSet()
}

// HasHourlyCost returns a boolean if a field has been set.
func (o *MyMember) HasHourlyCost() bool {
	if o != nil && o.HourlyCost.IsSet() {
		return true
	}

	return false
}

// SetHourlyCost gets a reference to the given NullableFloat64 and assigns it to the HourlyCost field.
func (o *MyMember) SetHourlyCost(v float64) {
	o.HourlyCost.Set(&v)
}

// SetHourlyCostNil sets the value for HourlyCost to be an explicit nil
func (o *MyMember) SetHourlyCostNil() {
	o.HourlyCost.Set(nil)
}

// UnsetHourlyCost ensures that no value is present for HourlyCost, not even an explicit nil
func (o *MyMember) UnsetHourlyCost() {
	o.HourlyCost.Unset()
}

// GetHourlyRate returns the HourlyRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetHourlyRate() float64 {
	if o == nil || IsNil(o.HourlyRate.Get()) {
		var ret float64
		return ret
	}
	return *o.HourlyRate.Get()
}

// GetHourlyRateOk returns a tuple with the HourlyRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetHourlyRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyRate.Get(), o.HourlyRate.IsSet()
}

// HasHourlyRate returns a boolean if a field has been set.
func (o *MyMember) HasHourlyRate() bool {
	if o != nil && o.HourlyRate.IsSet() {
		return true
	}

	return false
}

// SetHourlyRate gets a reference to the given NullableFloat64 and assigns it to the HourlyRate field.
func (o *MyMember) SetHourlyRate(v float64) {
	o.HourlyRate.Set(&v)
}

// SetHourlyRateNil sets the value for HourlyRate to be an explicit nil
func (o *MyMember) SetHourlyRateNil() {
	o.HourlyRate.Set(nil)
}

// UnsetHourlyRate ensures that no value is present for HourlyRate, not even an explicit nil
func (o *MyMember) UnsetHourlyRate() {
	o.HourlyRate.Unset()
}

// GetIncludeInUtilizationReportingFlag returns the IncludeInUtilizationReportingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetIncludeInUtilizationReportingFlag() bool {
	if o == nil || IsNil(o.IncludeInUtilizationReportingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeInUtilizationReportingFlag.Get()
}

// GetIncludeInUtilizationReportingFlagOk returns a tuple with the IncludeInUtilizationReportingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetIncludeInUtilizationReportingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeInUtilizationReportingFlag.Get(), o.IncludeInUtilizationReportingFlag.IsSet()
}

// HasIncludeInUtilizationReportingFlag returns a boolean if a field has been set.
func (o *MyMember) HasIncludeInUtilizationReportingFlag() bool {
	if o != nil && o.IncludeInUtilizationReportingFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeInUtilizationReportingFlag gets a reference to the given NullableBool and assigns it to the IncludeInUtilizationReportingFlag field.
func (o *MyMember) SetIncludeInUtilizationReportingFlag(v bool) {
	o.IncludeInUtilizationReportingFlag.Set(&v)
}

// SetIncludeInUtilizationReportingFlagNil sets the value for IncludeInUtilizationReportingFlag to be an explicit nil
func (o *MyMember) SetIncludeInUtilizationReportingFlagNil() {
	o.IncludeInUtilizationReportingFlag.Set(nil)
}

// UnsetIncludeInUtilizationReportingFlag ensures that no value is present for IncludeInUtilizationReportingFlag, not even an explicit nil
func (o *MyMember) UnsetIncludeInUtilizationReportingFlag() {
	o.IncludeInUtilizationReportingFlag.Unset()
}

// GetRequireExpenseEntryFlag returns the RequireExpenseEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRequireExpenseEntryFlag() bool {
	if o == nil || IsNil(o.RequireExpenseEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireExpenseEntryFlag.Get()
}

// GetRequireExpenseEntryFlagOk returns a tuple with the RequireExpenseEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRequireExpenseEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireExpenseEntryFlag.Get(), o.RequireExpenseEntryFlag.IsSet()
}

// HasRequireExpenseEntryFlag returns a boolean if a field has been set.
func (o *MyMember) HasRequireExpenseEntryFlag() bool {
	if o != nil && o.RequireExpenseEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireExpenseEntryFlag gets a reference to the given NullableBool and assigns it to the RequireExpenseEntryFlag field.
func (o *MyMember) SetRequireExpenseEntryFlag(v bool) {
	o.RequireExpenseEntryFlag.Set(&v)
}

// SetRequireExpenseEntryFlagNil sets the value for RequireExpenseEntryFlag to be an explicit nil
func (o *MyMember) SetRequireExpenseEntryFlagNil() {
	o.RequireExpenseEntryFlag.Set(nil)
}

// UnsetRequireExpenseEntryFlag ensures that no value is present for RequireExpenseEntryFlag, not even an explicit nil
func (o *MyMember) UnsetRequireExpenseEntryFlag() {
	o.RequireExpenseEntryFlag.Unset()
}

// GetRequireTimeSheetEntryFlag returns the RequireTimeSheetEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRequireTimeSheetEntryFlag() bool {
	if o == nil || IsNil(o.RequireTimeSheetEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireTimeSheetEntryFlag.Get()
}

// GetRequireTimeSheetEntryFlagOk returns a tuple with the RequireTimeSheetEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRequireTimeSheetEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireTimeSheetEntryFlag.Get(), o.RequireTimeSheetEntryFlag.IsSet()
}

// HasRequireTimeSheetEntryFlag returns a boolean if a field has been set.
func (o *MyMember) HasRequireTimeSheetEntryFlag() bool {
	if o != nil && o.RequireTimeSheetEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireTimeSheetEntryFlag gets a reference to the given NullableBool and assigns it to the RequireTimeSheetEntryFlag field.
func (o *MyMember) SetRequireTimeSheetEntryFlag(v bool) {
	o.RequireTimeSheetEntryFlag.Set(&v)
}

// SetRequireTimeSheetEntryFlagNil sets the value for RequireTimeSheetEntryFlag to be an explicit nil
func (o *MyMember) SetRequireTimeSheetEntryFlagNil() {
	o.RequireTimeSheetEntryFlag.Set(nil)
}

// UnsetRequireTimeSheetEntryFlag ensures that no value is present for RequireTimeSheetEntryFlag, not even an explicit nil
func (o *MyMember) UnsetRequireTimeSheetEntryFlag() {
	o.RequireTimeSheetEntryFlag.Unset()
}

// GetRequireStartAndEndTimeOnTimeEntryFlag returns the RequireStartAndEndTimeOnTimeEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o == nil || IsNil(o.RequireStartAndEndTimeOnTimeEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
}

// GetRequireStartAndEndTimeOnTimeEntryFlagOk returns a tuple with the RequireStartAndEndTimeOnTimeEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRequireStartAndEndTimeOnTimeEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireStartAndEndTimeOnTimeEntryFlag.Get(), o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet()
}

// HasRequireStartAndEndTimeOnTimeEntryFlag returns a boolean if a field has been set.
func (o *MyMember) HasRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o != nil && o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireStartAndEndTimeOnTimeEntryFlag gets a reference to the given NullableBool and assigns it to the RequireStartAndEndTimeOnTimeEntryFlag field.
func (o *MyMember) SetRequireStartAndEndTimeOnTimeEntryFlag(v bool) {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(&v)
}

// SetRequireStartAndEndTimeOnTimeEntryFlagNil sets the value for RequireStartAndEndTimeOnTimeEntryFlag to be an explicit nil
func (o *MyMember) SetRequireStartAndEndTimeOnTimeEntryFlagNil() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(nil)
}

// UnsetRequireStartAndEndTimeOnTimeEntryFlag ensures that no value is present for RequireStartAndEndTimeOnTimeEntryFlag, not even an explicit nil
func (o *MyMember) UnsetRequireStartAndEndTimeOnTimeEntryFlag() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Unset()
}

// GetAllowInCellEntryOnTimeSheet returns the AllowInCellEntryOnTimeSheet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetAllowInCellEntryOnTimeSheet() bool {
	if o == nil || IsNil(o.AllowInCellEntryOnTimeSheet.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowInCellEntryOnTimeSheet.Get()
}

// GetAllowInCellEntryOnTimeSheetOk returns a tuple with the AllowInCellEntryOnTimeSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetAllowInCellEntryOnTimeSheetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowInCellEntryOnTimeSheet.Get(), o.AllowInCellEntryOnTimeSheet.IsSet()
}

// HasAllowInCellEntryOnTimeSheet returns a boolean if a field has been set.
func (o *MyMember) HasAllowInCellEntryOnTimeSheet() bool {
	if o != nil && o.AllowInCellEntryOnTimeSheet.IsSet() {
		return true
	}

	return false
}

// SetAllowInCellEntryOnTimeSheet gets a reference to the given NullableBool and assigns it to the AllowInCellEntryOnTimeSheet field.
func (o *MyMember) SetAllowInCellEntryOnTimeSheet(v bool) {
	o.AllowInCellEntryOnTimeSheet.Set(&v)
}

// SetAllowInCellEntryOnTimeSheetNil sets the value for AllowInCellEntryOnTimeSheet to be an explicit nil
func (o *MyMember) SetAllowInCellEntryOnTimeSheetNil() {
	o.AllowInCellEntryOnTimeSheet.Set(nil)
}

// UnsetAllowInCellEntryOnTimeSheet ensures that no value is present for AllowInCellEntryOnTimeSheet, not even an explicit nil
func (o *MyMember) UnsetAllowInCellEntryOnTimeSheet() {
	o.AllowInCellEntryOnTimeSheet.Unset()
}

// GetEnterTimeAgainstCompanyFlag returns the EnterTimeAgainstCompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetEnterTimeAgainstCompanyFlag() bool {
	if o == nil || IsNil(o.EnterTimeAgainstCompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnterTimeAgainstCompanyFlag.Get()
}

// GetEnterTimeAgainstCompanyFlagOk returns a tuple with the EnterTimeAgainstCompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetEnterTimeAgainstCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnterTimeAgainstCompanyFlag.Get(), o.EnterTimeAgainstCompanyFlag.IsSet()
}

// HasEnterTimeAgainstCompanyFlag returns a boolean if a field has been set.
func (o *MyMember) HasEnterTimeAgainstCompanyFlag() bool {
	if o != nil && o.EnterTimeAgainstCompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetEnterTimeAgainstCompanyFlag gets a reference to the given NullableBool and assigns it to the EnterTimeAgainstCompanyFlag field.
func (o *MyMember) SetEnterTimeAgainstCompanyFlag(v bool) {
	o.EnterTimeAgainstCompanyFlag.Set(&v)
}

// SetEnterTimeAgainstCompanyFlagNil sets the value for EnterTimeAgainstCompanyFlag to be an explicit nil
func (o *MyMember) SetEnterTimeAgainstCompanyFlagNil() {
	o.EnterTimeAgainstCompanyFlag.Set(nil)
}

// UnsetEnterTimeAgainstCompanyFlag ensures that no value is present for EnterTimeAgainstCompanyFlag, not even an explicit nil
func (o *MyMember) UnsetEnterTimeAgainstCompanyFlag() {
	o.EnterTimeAgainstCompanyFlag.Unset()
}

// GetAllowExpensesEnteredAgainstCompaniesFlag returns the AllowExpensesEnteredAgainstCompaniesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o == nil || IsNil(o.AllowExpensesEnteredAgainstCompaniesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
}

// GetAllowExpensesEnteredAgainstCompaniesFlagOk returns a tuple with the AllowExpensesEnteredAgainstCompaniesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetAllowExpensesEnteredAgainstCompaniesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowExpensesEnteredAgainstCompaniesFlag.Get(), o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet()
}

// HasAllowExpensesEnteredAgainstCompaniesFlag returns a boolean if a field has been set.
func (o *MyMember) HasAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o != nil && o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		return true
	}

	return false
}

// SetAllowExpensesEnteredAgainstCompaniesFlag gets a reference to the given NullableBool and assigns it to the AllowExpensesEnteredAgainstCompaniesFlag field.
func (o *MyMember) SetAllowExpensesEnteredAgainstCompaniesFlag(v bool) {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(&v)
}

// SetAllowExpensesEnteredAgainstCompaniesFlagNil sets the value for AllowExpensesEnteredAgainstCompaniesFlag to be an explicit nil
func (o *MyMember) SetAllowExpensesEnteredAgainstCompaniesFlagNil() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(nil)
}

// UnsetAllowExpensesEnteredAgainstCompaniesFlag ensures that no value is present for AllowExpensesEnteredAgainstCompaniesFlag, not even an explicit nil
func (o *MyMember) UnsetAllowExpensesEnteredAgainstCompaniesFlag() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Unset()
}

// GetTimeReminderEmailFlag returns the TimeReminderEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetTimeReminderEmailFlag() bool {
	if o == nil || IsNil(o.TimeReminderEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeReminderEmailFlag.Get()
}

// GetTimeReminderEmailFlagOk returns a tuple with the TimeReminderEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetTimeReminderEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeReminderEmailFlag.Get(), o.TimeReminderEmailFlag.IsSet()
}

// HasTimeReminderEmailFlag returns a boolean if a field has been set.
func (o *MyMember) HasTimeReminderEmailFlag() bool {
	if o != nil && o.TimeReminderEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeReminderEmailFlag gets a reference to the given NullableBool and assigns it to the TimeReminderEmailFlag field.
func (o *MyMember) SetTimeReminderEmailFlag(v bool) {
	o.TimeReminderEmailFlag.Set(&v)
}

// SetTimeReminderEmailFlagNil sets the value for TimeReminderEmailFlag to be an explicit nil
func (o *MyMember) SetTimeReminderEmailFlagNil() {
	o.TimeReminderEmailFlag.Set(nil)
}

// UnsetTimeReminderEmailFlag ensures that no value is present for TimeReminderEmailFlag, not even an explicit nil
func (o *MyMember) UnsetTimeReminderEmailFlag() {
	o.TimeReminderEmailFlag.Unset()
}

// GetDaysTolerance returns the DaysTolerance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetDaysTolerance() int32 {
	if o == nil || IsNil(o.DaysTolerance.Get()) {
		var ret int32
		return ret
	}
	return *o.DaysTolerance.Get()
}

// GetDaysToleranceOk returns a tuple with the DaysTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetDaysToleranceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysTolerance.Get(), o.DaysTolerance.IsSet()
}

// HasDaysTolerance returns a boolean if a field has been set.
func (o *MyMember) HasDaysTolerance() bool {
	if o != nil && o.DaysTolerance.IsSet() {
		return true
	}

	return false
}

// SetDaysTolerance gets a reference to the given NullableInt32 and assigns it to the DaysTolerance field.
func (o *MyMember) SetDaysTolerance(v int32) {
	o.DaysTolerance.Set(&v)
}

// SetDaysToleranceNil sets the value for DaysTolerance to be an explicit nil
func (o *MyMember) SetDaysToleranceNil() {
	o.DaysTolerance.Set(nil)
}

// UnsetDaysTolerance ensures that no value is present for DaysTolerance, not even an explicit nil
func (o *MyMember) UnsetDaysTolerance() {
	o.DaysTolerance.Unset()
}

// GetMinimumHours returns the MinimumHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetMinimumHours() float64 {
	if o == nil || IsNil(o.MinimumHours.Get()) {
		var ret float64
		return ret
	}
	return *o.MinimumHours.Get()
}

// GetMinimumHoursOk returns a tuple with the MinimumHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetMinimumHoursOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumHours.Get(), o.MinimumHours.IsSet()
}

// HasMinimumHours returns a boolean if a field has been set.
func (o *MyMember) HasMinimumHours() bool {
	if o != nil && o.MinimumHours.IsSet() {
		return true
	}

	return false
}

// SetMinimumHours gets a reference to the given NullableFloat64 and assigns it to the MinimumHours field.
func (o *MyMember) SetMinimumHours(v float64) {
	o.MinimumHours.Set(&v)
}

// SetMinimumHoursNil sets the value for MinimumHours to be an explicit nil
func (o *MyMember) SetMinimumHoursNil() {
	o.MinimumHours.Set(nil)
}

// UnsetMinimumHours ensures that no value is present for MinimumHours, not even an explicit nil
func (o *MyMember) UnsetMinimumHours() {
	o.MinimumHours.Unset()
}

// GetTimeSheetStartDate returns the TimeSheetStartDate field value if set, zero value otherwise.
func (o *MyMember) GetTimeSheetStartDate() string {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		var ret string
		return ret
	}
	return *o.TimeSheetStartDate
}

// GetTimeSheetStartDateOk returns a tuple with the TimeSheetStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetTimeSheetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.TimeSheetStartDate) {
		return nil, false
	}
	return o.TimeSheetStartDate, true
}

// HasTimeSheetStartDate returns a boolean if a field has been set.
func (o *MyMember) HasTimeSheetStartDate() bool {
	if o != nil && !IsNil(o.TimeSheetStartDate) {
		return true
	}

	return false
}

// SetTimeSheetStartDate gets a reference to the given string and assigns it to the TimeSheetStartDate field.
func (o *MyMember) SetTimeSheetStartDate(v string) {
	o.TimeSheetStartDate = &v
}

// GetHireDate returns the HireDate field value if set, zero value otherwise.
func (o *MyMember) GetHireDate() string {
	if o == nil || IsNil(o.HireDate) {
		var ret string
		return ret
	}
	return *o.HireDate
}

// GetHireDateOk returns a tuple with the HireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetHireDateOk() (*string, bool) {
	if o == nil || IsNil(o.HireDate) {
		return nil, false
	}
	return o.HireDate, true
}

// HasHireDate returns a boolean if a field has been set.
func (o *MyMember) HasHireDate() bool {
	if o != nil && !IsNil(o.HireDate) {
		return true
	}

	return false
}

// SetHireDate gets a reference to the given string and assigns it to the HireDate field.
func (o *MyMember) SetHireDate(v string) {
	o.HireDate = &v
}

// GetServiceDefaultLocation returns the ServiceDefaultLocation field value if set, zero value otherwise.
func (o *MyMember) GetServiceDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ServiceDefaultLocation
}

// GetServiceDefaultLocationOk returns a tuple with the ServiceDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetServiceDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		return nil, false
	}
	return o.ServiceDefaultLocation, true
}

// HasServiceDefaultLocation returns a boolean if a field has been set.
func (o *MyMember) HasServiceDefaultLocation() bool {
	if o != nil && !IsNil(o.ServiceDefaultLocation) {
		return true
	}

	return false
}

// SetServiceDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ServiceDefaultLocation field.
func (o *MyMember) SetServiceDefaultLocation(v SystemLocationReference) {
	o.ServiceDefaultLocation = &v
}

// GetServiceDefaultDepartment returns the ServiceDefaultDepartment field value if set, zero value otherwise.
func (o *MyMember) GetServiceDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ServiceDefaultDepartment
}

// GetServiceDefaultDepartmentOk returns a tuple with the ServiceDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetServiceDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		return nil, false
	}
	return o.ServiceDefaultDepartment, true
}

// HasServiceDefaultDepartment returns a boolean if a field has been set.
func (o *MyMember) HasServiceDefaultDepartment() bool {
	if o != nil && !IsNil(o.ServiceDefaultDepartment) {
		return true
	}

	return false
}

// SetServiceDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ServiceDefaultDepartment field.
func (o *MyMember) SetServiceDefaultDepartment(v SystemDepartmentReference) {
	o.ServiceDefaultDepartment = &v
}

// GetServiceDefaultBoard returns the ServiceDefaultBoard field value if set, zero value otherwise.
func (o *MyMember) GetServiceDefaultBoard() BoardReference {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceDefaultBoard
}

// GetServiceDefaultBoardOk returns a tuple with the ServiceDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetServiceDefaultBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		return nil, false
	}
	return o.ServiceDefaultBoard, true
}

// HasServiceDefaultBoard returns a boolean if a field has been set.
func (o *MyMember) HasServiceDefaultBoard() bool {
	if o != nil && !IsNil(o.ServiceDefaultBoard) {
		return true
	}

	return false
}

// SetServiceDefaultBoard gets a reference to the given BoardReference and assigns it to the ServiceDefaultBoard field.
func (o *MyMember) SetServiceDefaultBoard(v BoardReference) {
	o.ServiceDefaultBoard = &v
}

// GetRestrictServiceDefaultLocationFlag returns the RestrictServiceDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictServiceDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultLocationFlag.Get()
}

// GetRestrictServiceDefaultLocationFlagOk returns a tuple with the RestrictServiceDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictServiceDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultLocationFlag.Get(), o.RestrictServiceDefaultLocationFlag.IsSet()
}

// HasRestrictServiceDefaultLocationFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictServiceDefaultLocationFlag() bool {
	if o != nil && o.RestrictServiceDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultLocationFlag field.
func (o *MyMember) SetRestrictServiceDefaultLocationFlag(v bool) {
	o.RestrictServiceDefaultLocationFlag.Set(&v)
}

// SetRestrictServiceDefaultLocationFlagNil sets the value for RestrictServiceDefaultLocationFlag to be an explicit nil
func (o *MyMember) SetRestrictServiceDefaultLocationFlagNil() {
	o.RestrictServiceDefaultLocationFlag.Set(nil)
}

// UnsetRestrictServiceDefaultLocationFlag ensures that no value is present for RestrictServiceDefaultLocationFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictServiceDefaultLocationFlag() {
	o.RestrictServiceDefaultLocationFlag.Unset()
}

// GetRestrictServiceDefaultDepartmentFlag returns the RestrictServiceDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictServiceDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultDepartmentFlag.Get()
}

// GetRestrictServiceDefaultDepartmentFlagOk returns a tuple with the RestrictServiceDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictServiceDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultDepartmentFlag.Get(), o.RestrictServiceDefaultDepartmentFlag.IsSet()
}

// HasRestrictServiceDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictServiceDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultDepartmentFlag field.
func (o *MyMember) SetRestrictServiceDefaultDepartmentFlag(v bool) {
	o.RestrictServiceDefaultDepartmentFlag.Set(&v)
}

// SetRestrictServiceDefaultDepartmentFlagNil sets the value for RestrictServiceDefaultDepartmentFlag to be an explicit nil
func (o *MyMember) SetRestrictServiceDefaultDepartmentFlagNil() {
	o.RestrictServiceDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictServiceDefaultDepartmentFlag ensures that no value is present for RestrictServiceDefaultDepartmentFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictServiceDefaultDepartmentFlag() {
	o.RestrictServiceDefaultDepartmentFlag.Unset()
}

// GetExcludedServiceBoardIds returns the ExcludedServiceBoardIds field value if set, zero value otherwise.
func (o *MyMember) GetExcludedServiceBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedServiceBoardIds
}

// GetExcludedServiceBoardIdsOk returns a tuple with the ExcludedServiceBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetExcludedServiceBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		return nil, false
	}
	return o.ExcludedServiceBoardIds, true
}

// HasExcludedServiceBoardIds returns a boolean if a field has been set.
func (o *MyMember) HasExcludedServiceBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedServiceBoardIds) {
		return true
	}

	return false
}

// SetExcludedServiceBoardIds gets a reference to the given []int32 and assigns it to the ExcludedServiceBoardIds field.
func (o *MyMember) SetExcludedServiceBoardIds(v []int32) {
	o.ExcludedServiceBoardIds = v
}

// GetProjectDefaultLocation returns the ProjectDefaultLocation field value if set, zero value otherwise.
func (o *MyMember) GetProjectDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ProjectDefaultLocation
}

// GetProjectDefaultLocationOk returns a tuple with the ProjectDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetProjectDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		return nil, false
	}
	return o.ProjectDefaultLocation, true
}

// HasProjectDefaultLocation returns a boolean if a field has been set.
func (o *MyMember) HasProjectDefaultLocation() bool {
	if o != nil && !IsNil(o.ProjectDefaultLocation) {
		return true
	}

	return false
}

// SetProjectDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ProjectDefaultLocation field.
func (o *MyMember) SetProjectDefaultLocation(v SystemLocationReference) {
	o.ProjectDefaultLocation = &v
}

// GetProjectDefaultDepartment returns the ProjectDefaultDepartment field value if set, zero value otherwise.
func (o *MyMember) GetProjectDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ProjectDefaultDepartment
}

// GetProjectDefaultDepartmentOk returns a tuple with the ProjectDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetProjectDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		return nil, false
	}
	return o.ProjectDefaultDepartment, true
}

// HasProjectDefaultDepartment returns a boolean if a field has been set.
func (o *MyMember) HasProjectDefaultDepartment() bool {
	if o != nil && !IsNil(o.ProjectDefaultDepartment) {
		return true
	}

	return false
}

// SetProjectDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ProjectDefaultDepartment field.
func (o *MyMember) SetProjectDefaultDepartment(v SystemDepartmentReference) {
	o.ProjectDefaultDepartment = &v
}

// GetProjectDefaultBoard returns the ProjectDefaultBoard field value if set, zero value otherwise.
func (o *MyMember) GetProjectDefaultBoard() ProjectBoardReference {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		var ret ProjectBoardReference
		return ret
	}
	return *o.ProjectDefaultBoard
}

// GetProjectDefaultBoardOk returns a tuple with the ProjectDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetProjectDefaultBoardOk() (*ProjectBoardReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		return nil, false
	}
	return o.ProjectDefaultBoard, true
}

// HasProjectDefaultBoard returns a boolean if a field has been set.
func (o *MyMember) HasProjectDefaultBoard() bool {
	if o != nil && !IsNil(o.ProjectDefaultBoard) {
		return true
	}

	return false
}

// SetProjectDefaultBoard gets a reference to the given ProjectBoardReference and assigns it to the ProjectDefaultBoard field.
func (o *MyMember) SetProjectDefaultBoard(v ProjectBoardReference) {
	o.ProjectDefaultBoard = &v
}

// GetRestrictProjectDefaultLocationFlag returns the RestrictProjectDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictProjectDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultLocationFlag.Get()
}

// GetRestrictProjectDefaultLocationFlagOk returns a tuple with the RestrictProjectDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictProjectDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultLocationFlag.Get(), o.RestrictProjectDefaultLocationFlag.IsSet()
}

// HasRestrictProjectDefaultLocationFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictProjectDefaultLocationFlag() bool {
	if o != nil && o.RestrictProjectDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultLocationFlag field.
func (o *MyMember) SetRestrictProjectDefaultLocationFlag(v bool) {
	o.RestrictProjectDefaultLocationFlag.Set(&v)
}

// SetRestrictProjectDefaultLocationFlagNil sets the value for RestrictProjectDefaultLocationFlag to be an explicit nil
func (o *MyMember) SetRestrictProjectDefaultLocationFlagNil() {
	o.RestrictProjectDefaultLocationFlag.Set(nil)
}

// UnsetRestrictProjectDefaultLocationFlag ensures that no value is present for RestrictProjectDefaultLocationFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictProjectDefaultLocationFlag() {
	o.RestrictProjectDefaultLocationFlag.Unset()
}

// GetRestrictProjectDefaultDepartmentFlag returns the RestrictProjectDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictProjectDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultDepartmentFlag.Get()
}

// GetRestrictProjectDefaultDepartmentFlagOk returns a tuple with the RestrictProjectDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictProjectDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultDepartmentFlag.Get(), o.RestrictProjectDefaultDepartmentFlag.IsSet()
}

// HasRestrictProjectDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictProjectDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultDepartmentFlag field.
func (o *MyMember) SetRestrictProjectDefaultDepartmentFlag(v bool) {
	o.RestrictProjectDefaultDepartmentFlag.Set(&v)
}

// SetRestrictProjectDefaultDepartmentFlagNil sets the value for RestrictProjectDefaultDepartmentFlag to be an explicit nil
func (o *MyMember) SetRestrictProjectDefaultDepartmentFlagNil() {
	o.RestrictProjectDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictProjectDefaultDepartmentFlag ensures that no value is present for RestrictProjectDefaultDepartmentFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictProjectDefaultDepartmentFlag() {
	o.RestrictProjectDefaultDepartmentFlag.Unset()
}

// GetExcludedProjectBoardIds returns the ExcludedProjectBoardIds field value if set, zero value otherwise.
func (o *MyMember) GetExcludedProjectBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedProjectBoardIds
}

// GetExcludedProjectBoardIdsOk returns a tuple with the ExcludedProjectBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetExcludedProjectBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		return nil, false
	}
	return o.ExcludedProjectBoardIds, true
}

// HasExcludedProjectBoardIds returns a boolean if a field has been set.
func (o *MyMember) HasExcludedProjectBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedProjectBoardIds) {
		return true
	}

	return false
}

// SetExcludedProjectBoardIds gets a reference to the given []int32 and assigns it to the ExcludedProjectBoardIds field.
func (o *MyMember) SetExcludedProjectBoardIds(v []int32) {
	o.ExcludedProjectBoardIds = v
}

// GetScheduleDefaultLocation returns the ScheduleDefaultLocation field value if set, zero value otherwise.
func (o *MyMember) GetScheduleDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ScheduleDefaultLocation
}

// GetScheduleDefaultLocationOk returns a tuple with the ScheduleDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetScheduleDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		return nil, false
	}
	return o.ScheduleDefaultLocation, true
}

// HasScheduleDefaultLocation returns a boolean if a field has been set.
func (o *MyMember) HasScheduleDefaultLocation() bool {
	if o != nil && !IsNil(o.ScheduleDefaultLocation) {
		return true
	}

	return false
}

// SetScheduleDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ScheduleDefaultLocation field.
func (o *MyMember) SetScheduleDefaultLocation(v SystemLocationReference) {
	o.ScheduleDefaultLocation = &v
}

// GetScheduleDefaultDepartment returns the ScheduleDefaultDepartment field value if set, zero value otherwise.
func (o *MyMember) GetScheduleDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ScheduleDefaultDepartment
}

// GetScheduleDefaultDepartmentOk returns a tuple with the ScheduleDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetScheduleDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		return nil, false
	}
	return o.ScheduleDefaultDepartment, true
}

// HasScheduleDefaultDepartment returns a boolean if a field has been set.
func (o *MyMember) HasScheduleDefaultDepartment() bool {
	if o != nil && !IsNil(o.ScheduleDefaultDepartment) {
		return true
	}

	return false
}

// SetScheduleDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ScheduleDefaultDepartment field.
func (o *MyMember) SetScheduleDefaultDepartment(v SystemDepartmentReference) {
	o.ScheduleDefaultDepartment = &v
}

// GetScheduleCapacity returns the ScheduleCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetScheduleCapacity() float64 {
	if o == nil || IsNil(o.ScheduleCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.ScheduleCapacity.Get()
}

// GetScheduleCapacityOk returns a tuple with the ScheduleCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetScheduleCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleCapacity.Get(), o.ScheduleCapacity.IsSet()
}

// HasScheduleCapacity returns a boolean if a field has been set.
func (o *MyMember) HasScheduleCapacity() bool {
	if o != nil && o.ScheduleCapacity.IsSet() {
		return true
	}

	return false
}

// SetScheduleCapacity gets a reference to the given NullableFloat64 and assigns it to the ScheduleCapacity field.
func (o *MyMember) SetScheduleCapacity(v float64) {
	o.ScheduleCapacity.Set(&v)
}

// SetScheduleCapacityNil sets the value for ScheduleCapacity to be an explicit nil
func (o *MyMember) SetScheduleCapacityNil() {
	o.ScheduleCapacity.Set(nil)
}

// UnsetScheduleCapacity ensures that no value is present for ScheduleCapacity, not even an explicit nil
func (o *MyMember) UnsetScheduleCapacity() {
	o.ScheduleCapacity.Unset()
}

// GetServiceLocation returns the ServiceLocation field value if set, zero value otherwise.
func (o *MyMember) GetServiceLocation() ServiceLocationReference {
	if o == nil || IsNil(o.ServiceLocation) {
		var ret ServiceLocationReference
		return ret
	}
	return *o.ServiceLocation
}

// GetServiceLocationOk returns a tuple with the ServiceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetServiceLocationOk() (*ServiceLocationReference, bool) {
	if o == nil || IsNil(o.ServiceLocation) {
		return nil, false
	}
	return o.ServiceLocation, true
}

// HasServiceLocation returns a boolean if a field has been set.
func (o *MyMember) HasServiceLocation() bool {
	if o != nil && !IsNil(o.ServiceLocation) {
		return true
	}

	return false
}

// SetServiceLocation gets a reference to the given ServiceLocationReference and assigns it to the ServiceLocation field.
func (o *MyMember) SetServiceLocation(v ServiceLocationReference) {
	o.ServiceLocation = &v
}

// GetRestrictScheduleFlag returns the RestrictScheduleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictScheduleFlag() bool {
	if o == nil || IsNil(o.RestrictScheduleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictScheduleFlag.Get()
}

// GetRestrictScheduleFlagOk returns a tuple with the RestrictScheduleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictScheduleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictScheduleFlag.Get(), o.RestrictScheduleFlag.IsSet()
}

// HasRestrictScheduleFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictScheduleFlag() bool {
	if o != nil && o.RestrictScheduleFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictScheduleFlag gets a reference to the given NullableBool and assigns it to the RestrictScheduleFlag field.
func (o *MyMember) SetRestrictScheduleFlag(v bool) {
	o.RestrictScheduleFlag.Set(&v)
}

// SetRestrictScheduleFlagNil sets the value for RestrictScheduleFlag to be an explicit nil
func (o *MyMember) SetRestrictScheduleFlagNil() {
	o.RestrictScheduleFlag.Set(nil)
}

// UnsetRestrictScheduleFlag ensures that no value is present for RestrictScheduleFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictScheduleFlag() {
	o.RestrictScheduleFlag.Unset()
}

// GetHideMemberInDispatchPortalFlag returns the HideMemberInDispatchPortalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetHideMemberInDispatchPortalFlag() bool {
	if o == nil || IsNil(o.HideMemberInDispatchPortalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HideMemberInDispatchPortalFlag.Get()
}

// GetHideMemberInDispatchPortalFlagOk returns a tuple with the HideMemberInDispatchPortalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetHideMemberInDispatchPortalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HideMemberInDispatchPortalFlag.Get(), o.HideMemberInDispatchPortalFlag.IsSet()
}

// HasHideMemberInDispatchPortalFlag returns a boolean if a field has been set.
func (o *MyMember) HasHideMemberInDispatchPortalFlag() bool {
	if o != nil && o.HideMemberInDispatchPortalFlag.IsSet() {
		return true
	}

	return false
}

// SetHideMemberInDispatchPortalFlag gets a reference to the given NullableBool and assigns it to the HideMemberInDispatchPortalFlag field.
func (o *MyMember) SetHideMemberInDispatchPortalFlag(v bool) {
	o.HideMemberInDispatchPortalFlag.Set(&v)
}

// SetHideMemberInDispatchPortalFlagNil sets the value for HideMemberInDispatchPortalFlag to be an explicit nil
func (o *MyMember) SetHideMemberInDispatchPortalFlagNil() {
	o.HideMemberInDispatchPortalFlag.Set(nil)
}

// UnsetHideMemberInDispatchPortalFlag ensures that no value is present for HideMemberInDispatchPortalFlag, not even an explicit nil
func (o *MyMember) UnsetHideMemberInDispatchPortalFlag() {
	o.HideMemberInDispatchPortalFlag.Unset()
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *MyMember) GetCalendar() CalendarReference {
	if o == nil || IsNil(o.Calendar) {
		var ret CalendarReference
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetCalendarOk() (*CalendarReference, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *MyMember) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given CalendarReference and assigns it to the Calendar field.
func (o *MyMember) SetCalendar(v CalendarReference) {
	o.Calendar = &v
}

// GetSalesDefaultLocation returns the SalesDefaultLocation field value if set, zero value otherwise.
func (o *MyMember) GetSalesDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SalesDefaultLocation
}

// GetSalesDefaultLocationOk returns a tuple with the SalesDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetSalesDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		return nil, false
	}
	return o.SalesDefaultLocation, true
}

// HasSalesDefaultLocation returns a boolean if a field has been set.
func (o *MyMember) HasSalesDefaultLocation() bool {
	if o != nil && !IsNil(o.SalesDefaultLocation) {
		return true
	}

	return false
}

// SetSalesDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the SalesDefaultLocation field.
func (o *MyMember) SetSalesDefaultLocation(v SystemLocationReference) {
	o.SalesDefaultLocation = &v
}

// GetRestrictDefaultSalesTerritoryFlag returns the RestrictDefaultSalesTerritoryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictDefaultSalesTerritoryFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultSalesTerritoryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultSalesTerritoryFlag.Get()
}

// GetRestrictDefaultSalesTerritoryFlagOk returns a tuple with the RestrictDefaultSalesTerritoryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictDefaultSalesTerritoryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultSalesTerritoryFlag.Get(), o.RestrictDefaultSalesTerritoryFlag.IsSet()
}

// HasRestrictDefaultSalesTerritoryFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictDefaultSalesTerritoryFlag() bool {
	if o != nil && o.RestrictDefaultSalesTerritoryFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultSalesTerritoryFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultSalesTerritoryFlag field.
func (o *MyMember) SetRestrictDefaultSalesTerritoryFlag(v bool) {
	o.RestrictDefaultSalesTerritoryFlag.Set(&v)
}

// SetRestrictDefaultSalesTerritoryFlagNil sets the value for RestrictDefaultSalesTerritoryFlag to be an explicit nil
func (o *MyMember) SetRestrictDefaultSalesTerritoryFlagNil() {
	o.RestrictDefaultSalesTerritoryFlag.Set(nil)
}

// UnsetRestrictDefaultSalesTerritoryFlag ensures that no value is present for RestrictDefaultSalesTerritoryFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictDefaultSalesTerritoryFlag() {
	o.RestrictDefaultSalesTerritoryFlag.Unset()
}

// GetWarehouse returns the Warehouse field value if set, zero value otherwise.
func (o *MyMember) GetWarehouse() WarehouseReference {
	if o == nil || IsNil(o.Warehouse) {
		var ret WarehouseReference
		return ret
	}
	return *o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil || IsNil(o.Warehouse) {
		return nil, false
	}
	return o.Warehouse, true
}

// HasWarehouse returns a boolean if a field has been set.
func (o *MyMember) HasWarehouse() bool {
	if o != nil && !IsNil(o.Warehouse) {
		return true
	}

	return false
}

// SetWarehouse gets a reference to the given WarehouseReference and assigns it to the Warehouse field.
func (o *MyMember) SetWarehouse(v WarehouseReference) {
	o.Warehouse = &v
}

// GetWarehouseBin returns the WarehouseBin field value if set, zero value otherwise.
func (o *MyMember) GetWarehouseBin() WarehouseBinReference {
	if o == nil || IsNil(o.WarehouseBin) {
		var ret WarehouseBinReference
		return ret
	}
	return *o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil || IsNil(o.WarehouseBin) {
		return nil, false
	}
	return o.WarehouseBin, true
}

// HasWarehouseBin returns a boolean if a field has been set.
func (o *MyMember) HasWarehouseBin() bool {
	if o != nil && !IsNil(o.WarehouseBin) {
		return true
	}

	return false
}

// SetWarehouseBin gets a reference to the given WarehouseBinReference and assigns it to the WarehouseBin field.
func (o *MyMember) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = &v
}

// GetRestrictDefaultWarehouseFlag returns the RestrictDefaultWarehouseFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictDefaultWarehouseFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseFlag.Get()
}

// GetRestrictDefaultWarehouseFlagOk returns a tuple with the RestrictDefaultWarehouseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictDefaultWarehouseFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseFlag.Get(), o.RestrictDefaultWarehouseFlag.IsSet()
}

// HasRestrictDefaultWarehouseFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictDefaultWarehouseFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseFlag field.
func (o *MyMember) SetRestrictDefaultWarehouseFlag(v bool) {
	o.RestrictDefaultWarehouseFlag.Set(&v)
}

// SetRestrictDefaultWarehouseFlagNil sets the value for RestrictDefaultWarehouseFlag to be an explicit nil
func (o *MyMember) SetRestrictDefaultWarehouseFlagNil() {
	o.RestrictDefaultWarehouseFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseFlag ensures that no value is present for RestrictDefaultWarehouseFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictDefaultWarehouseFlag() {
	o.RestrictDefaultWarehouseFlag.Unset()
}

// GetRestrictDefaultWarehouseBinFlag returns the RestrictDefaultWarehouseBinFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetRestrictDefaultWarehouseBinFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseBinFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseBinFlag.Get()
}

// GetRestrictDefaultWarehouseBinFlagOk returns a tuple with the RestrictDefaultWarehouseBinFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetRestrictDefaultWarehouseBinFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseBinFlag.Get(), o.RestrictDefaultWarehouseBinFlag.IsSet()
}

// HasRestrictDefaultWarehouseBinFlag returns a boolean if a field has been set.
func (o *MyMember) HasRestrictDefaultWarehouseBinFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseBinFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseBinFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseBinFlag field.
func (o *MyMember) SetRestrictDefaultWarehouseBinFlag(v bool) {
	o.RestrictDefaultWarehouseBinFlag.Set(&v)
}

// SetRestrictDefaultWarehouseBinFlagNil sets the value for RestrictDefaultWarehouseBinFlag to be an explicit nil
func (o *MyMember) SetRestrictDefaultWarehouseBinFlagNil() {
	o.RestrictDefaultWarehouseBinFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseBinFlag ensures that no value is present for RestrictDefaultWarehouseBinFlag, not even an explicit nil
func (o *MyMember) UnsetRestrictDefaultWarehouseBinFlag() {
	o.RestrictDefaultWarehouseBinFlag.Unset()
}

// GetMapiName returns the MapiName field value if set, zero value otherwise.
func (o *MyMember) GetMapiName() string {
	if o == nil || IsNil(o.MapiName) {
		var ret string
		return ret
	}
	return *o.MapiName
}

// GetMapiNameOk returns a tuple with the MapiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetMapiNameOk() (*string, bool) {
	if o == nil || IsNil(o.MapiName) {
		return nil, false
	}
	return o.MapiName, true
}

// HasMapiName returns a boolean if a field has been set.
func (o *MyMember) HasMapiName() bool {
	if o != nil && !IsNil(o.MapiName) {
		return true
	}

	return false
}

// SetMapiName gets a reference to the given string and assigns it to the MapiName field.
func (o *MyMember) SetMapiName(v string) {
	o.MapiName = &v
}

// GetCalendarSyncIntegrationFlag returns the CalendarSyncIntegrationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetCalendarSyncIntegrationFlag() bool {
	if o == nil || IsNil(o.CalendarSyncIntegrationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CalendarSyncIntegrationFlag.Get()
}

// GetCalendarSyncIntegrationFlagOk returns a tuple with the CalendarSyncIntegrationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetCalendarSyncIntegrationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CalendarSyncIntegrationFlag.Get(), o.CalendarSyncIntegrationFlag.IsSet()
}

// HasCalendarSyncIntegrationFlag returns a boolean if a field has been set.
func (o *MyMember) HasCalendarSyncIntegrationFlag() bool {
	if o != nil && o.CalendarSyncIntegrationFlag.IsSet() {
		return true
	}

	return false
}

// SetCalendarSyncIntegrationFlag gets a reference to the given NullableBool and assigns it to the CalendarSyncIntegrationFlag field.
func (o *MyMember) SetCalendarSyncIntegrationFlag(v bool) {
	o.CalendarSyncIntegrationFlag.Set(&v)
}

// SetCalendarSyncIntegrationFlagNil sets the value for CalendarSyncIntegrationFlag to be an explicit nil
func (o *MyMember) SetCalendarSyncIntegrationFlagNil() {
	o.CalendarSyncIntegrationFlag.Set(nil)
}

// UnsetCalendarSyncIntegrationFlag ensures that no value is present for CalendarSyncIntegrationFlag, not even an explicit nil
func (o *MyMember) UnsetCalendarSyncIntegrationFlag() {
	o.CalendarSyncIntegrationFlag.Unset()
}

// GetEnableLdapAuthenticationFlag returns the EnableLdapAuthenticationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetEnableLdapAuthenticationFlag() bool {
	if o == nil || IsNil(o.EnableLdapAuthenticationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableLdapAuthenticationFlag.Get()
}

// GetEnableLdapAuthenticationFlagOk returns a tuple with the EnableLdapAuthenticationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetEnableLdapAuthenticationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableLdapAuthenticationFlag.Get(), o.EnableLdapAuthenticationFlag.IsSet()
}

// HasEnableLdapAuthenticationFlag returns a boolean if a field has been set.
func (o *MyMember) HasEnableLdapAuthenticationFlag() bool {
	if o != nil && o.EnableLdapAuthenticationFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableLdapAuthenticationFlag gets a reference to the given NullableBool and assigns it to the EnableLdapAuthenticationFlag field.
func (o *MyMember) SetEnableLdapAuthenticationFlag(v bool) {
	o.EnableLdapAuthenticationFlag.Set(&v)
}

// SetEnableLdapAuthenticationFlagNil sets the value for EnableLdapAuthenticationFlag to be an explicit nil
func (o *MyMember) SetEnableLdapAuthenticationFlagNil() {
	o.EnableLdapAuthenticationFlag.Set(nil)
}

// UnsetEnableLdapAuthenticationFlag ensures that no value is present for EnableLdapAuthenticationFlag, not even an explicit nil
func (o *MyMember) UnsetEnableLdapAuthenticationFlag() {
	o.EnableLdapAuthenticationFlag.Unset()
}

// GetLdapConfiguration returns the LdapConfiguration field value if set, zero value otherwise.
func (o *MyMember) GetLdapConfiguration() LdapConfigurationReference {
	if o == nil || IsNil(o.LdapConfiguration) {
		var ret LdapConfigurationReference
		return ret
	}
	return *o.LdapConfiguration
}

// GetLdapConfigurationOk returns a tuple with the LdapConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetLdapConfigurationOk() (*LdapConfigurationReference, bool) {
	if o == nil || IsNil(o.LdapConfiguration) {
		return nil, false
	}
	return o.LdapConfiguration, true
}

// HasLdapConfiguration returns a boolean if a field has been set.
func (o *MyMember) HasLdapConfiguration() bool {
	if o != nil && !IsNil(o.LdapConfiguration) {
		return true
	}

	return false
}

// SetLdapConfiguration gets a reference to the given LdapConfigurationReference and assigns it to the LdapConfiguration field.
func (o *MyMember) SetLdapConfiguration(v LdapConfigurationReference) {
	o.LdapConfiguration = &v
}

// GetLdapUserName returns the LdapUserName field value if set, zero value otherwise.
func (o *MyMember) GetLdapUserName() string {
	if o == nil || IsNil(o.LdapUserName) {
		var ret string
		return ret
	}
	return *o.LdapUserName
}

// GetLdapUserNameOk returns a tuple with the LdapUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetLdapUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.LdapUserName) {
		return nil, false
	}
	return o.LdapUserName, true
}

// HasLdapUserName returns a boolean if a field has been set.
func (o *MyMember) HasLdapUserName() bool {
	if o != nil && !IsNil(o.LdapUserName) {
		return true
	}

	return false
}

// SetLdapUserName gets a reference to the given string and assigns it to the LdapUserName field.
func (o *MyMember) SetLdapUserName(v string) {
	o.LdapUserName = &v
}

// GetCompanyActivityTabFormat returns the CompanyActivityTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetCompanyActivityTabFormat() string {
	if o == nil || IsNil(o.CompanyActivityTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyActivityTabFormat.Get()
}

// GetCompanyActivityTabFormatOk returns a tuple with the CompanyActivityTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetCompanyActivityTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyActivityTabFormat.Get(), o.CompanyActivityTabFormat.IsSet()
}

// HasCompanyActivityTabFormat returns a boolean if a field has been set.
func (o *MyMember) HasCompanyActivityTabFormat() bool {
	if o != nil && o.CompanyActivityTabFormat.IsSet() {
		return true
	}

	return false
}

// SetCompanyActivityTabFormat gets a reference to the given NullableString and assigns it to the CompanyActivityTabFormat field.
func (o *MyMember) SetCompanyActivityTabFormat(v string) {
	o.CompanyActivityTabFormat.Set(&v)
}

// SetCompanyActivityTabFormatNil sets the value for CompanyActivityTabFormat to be an explicit nil
func (o *MyMember) SetCompanyActivityTabFormatNil() {
	o.CompanyActivityTabFormat.Set(nil)
}

// UnsetCompanyActivityTabFormat ensures that no value is present for CompanyActivityTabFormat, not even an explicit nil
func (o *MyMember) UnsetCompanyActivityTabFormat() {
	o.CompanyActivityTabFormat.Unset()
}

// GetInvoiceTimeTabFormat returns the InvoiceTimeTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetInvoiceTimeTabFormat() string {
	if o == nil || IsNil(o.InvoiceTimeTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceTimeTabFormat.Get()
}

// GetInvoiceTimeTabFormatOk returns a tuple with the InvoiceTimeTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetInvoiceTimeTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceTimeTabFormat.Get(), o.InvoiceTimeTabFormat.IsSet()
}

// HasInvoiceTimeTabFormat returns a boolean if a field has been set.
func (o *MyMember) HasInvoiceTimeTabFormat() bool {
	if o != nil && o.InvoiceTimeTabFormat.IsSet() {
		return true
	}

	return false
}

// SetInvoiceTimeTabFormat gets a reference to the given NullableString and assigns it to the InvoiceTimeTabFormat field.
func (o *MyMember) SetInvoiceTimeTabFormat(v string) {
	o.InvoiceTimeTabFormat.Set(&v)
}

// SetInvoiceTimeTabFormatNil sets the value for InvoiceTimeTabFormat to be an explicit nil
func (o *MyMember) SetInvoiceTimeTabFormatNil() {
	o.InvoiceTimeTabFormat.Set(nil)
}

// UnsetInvoiceTimeTabFormat ensures that no value is present for InvoiceTimeTabFormat, not even an explicit nil
func (o *MyMember) UnsetInvoiceTimeTabFormat() {
	o.InvoiceTimeTabFormat.Unset()
}

// GetInvoiceScreenDefaultTabFormat returns the InvoiceScreenDefaultTabFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetInvoiceScreenDefaultTabFormat() string {
	if o == nil || IsNil(o.InvoiceScreenDefaultTabFormat.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceScreenDefaultTabFormat.Get()
}

// GetInvoiceScreenDefaultTabFormatOk returns a tuple with the InvoiceScreenDefaultTabFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetInvoiceScreenDefaultTabFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceScreenDefaultTabFormat.Get(), o.InvoiceScreenDefaultTabFormat.IsSet()
}

// HasInvoiceScreenDefaultTabFormat returns a boolean if a field has been set.
func (o *MyMember) HasInvoiceScreenDefaultTabFormat() bool {
	if o != nil && o.InvoiceScreenDefaultTabFormat.IsSet() {
		return true
	}

	return false
}

// SetInvoiceScreenDefaultTabFormat gets a reference to the given NullableString and assigns it to the InvoiceScreenDefaultTabFormat field.
func (o *MyMember) SetInvoiceScreenDefaultTabFormat(v string) {
	o.InvoiceScreenDefaultTabFormat.Set(&v)
}

// SetInvoiceScreenDefaultTabFormatNil sets the value for InvoiceScreenDefaultTabFormat to be an explicit nil
func (o *MyMember) SetInvoiceScreenDefaultTabFormatNil() {
	o.InvoiceScreenDefaultTabFormat.Set(nil)
}

// UnsetInvoiceScreenDefaultTabFormat ensures that no value is present for InvoiceScreenDefaultTabFormat, not even an explicit nil
func (o *MyMember) UnsetInvoiceScreenDefaultTabFormat() {
	o.InvoiceScreenDefaultTabFormat.Unset()
}

// GetInvoicingDisplayOptions returns the InvoicingDisplayOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetInvoicingDisplayOptions() string {
	if o == nil || IsNil(o.InvoicingDisplayOptions.Get()) {
		var ret string
		return ret
	}
	return *o.InvoicingDisplayOptions.Get()
}

// GetInvoicingDisplayOptionsOk returns a tuple with the InvoicingDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoicingDisplayOptions.Get(), o.InvoicingDisplayOptions.IsSet()
}

// HasInvoicingDisplayOptions returns a boolean if a field has been set.
func (o *MyMember) HasInvoicingDisplayOptions() bool {
	if o != nil && o.InvoicingDisplayOptions.IsSet() {
		return true
	}

	return false
}

// SetInvoicingDisplayOptions gets a reference to the given NullableString and assigns it to the InvoicingDisplayOptions field.
func (o *MyMember) SetInvoicingDisplayOptions(v string) {
	o.InvoicingDisplayOptions.Set(&v)
}

// SetInvoicingDisplayOptionsNil sets the value for InvoicingDisplayOptions to be an explicit nil
func (o *MyMember) SetInvoicingDisplayOptionsNil() {
	o.InvoicingDisplayOptions.Set(nil)
}

// UnsetInvoicingDisplayOptions ensures that no value is present for InvoicingDisplayOptions, not even an explicit nil
func (o *MyMember) UnsetInvoicingDisplayOptions() {
	o.InvoicingDisplayOptions.Unset()
}

// GetAgreementInvoicingDisplayOptions returns the AgreementInvoicingDisplayOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetAgreementInvoicingDisplayOptions() string {
	if o == nil || IsNil(o.AgreementInvoicingDisplayOptions.Get()) {
		var ret string
		return ret
	}
	return *o.AgreementInvoicingDisplayOptions.Get()
}

// GetAgreementInvoicingDisplayOptionsOk returns a tuple with the AgreementInvoicingDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetAgreementInvoicingDisplayOptionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementInvoicingDisplayOptions.Get(), o.AgreementInvoicingDisplayOptions.IsSet()
}

// HasAgreementInvoicingDisplayOptions returns a boolean if a field has been set.
func (o *MyMember) HasAgreementInvoicingDisplayOptions() bool {
	if o != nil && o.AgreementInvoicingDisplayOptions.IsSet() {
		return true
	}

	return false
}

// SetAgreementInvoicingDisplayOptions gets a reference to the given NullableString and assigns it to the AgreementInvoicingDisplayOptions field.
func (o *MyMember) SetAgreementInvoicingDisplayOptions(v string) {
	o.AgreementInvoicingDisplayOptions.Set(&v)
}

// SetAgreementInvoicingDisplayOptionsNil sets the value for AgreementInvoicingDisplayOptions to be an explicit nil
func (o *MyMember) SetAgreementInvoicingDisplayOptionsNil() {
	o.AgreementInvoicingDisplayOptions.Set(nil)
}

// UnsetAgreementInvoicingDisplayOptions ensures that no value is present for AgreementInvoicingDisplayOptions, not even an explicit nil
func (o *MyMember) UnsetAgreementInvoicingDisplayOptions() {
	o.AgreementInvoicingDisplayOptions.Unset()
}

// GetCorelyticsUsername returns the CorelyticsUsername field value if set, zero value otherwise.
func (o *MyMember) GetCorelyticsUsername() string {
	if o == nil || IsNil(o.CorelyticsUsername) {
		var ret string
		return ret
	}
	return *o.CorelyticsUsername
}

// GetCorelyticsUsernameOk returns a tuple with the CorelyticsUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetCorelyticsUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.CorelyticsUsername) {
		return nil, false
	}
	return o.CorelyticsUsername, true
}

// HasCorelyticsUsername returns a boolean if a field has been set.
func (o *MyMember) HasCorelyticsUsername() bool {
	if o != nil && !IsNil(o.CorelyticsUsername) {
		return true
	}

	return false
}

// SetCorelyticsUsername gets a reference to the given string and assigns it to the CorelyticsUsername field.
func (o *MyMember) SetCorelyticsUsername(v string) {
	o.CorelyticsUsername = &v
}

// GetCorelyticsPassword returns the CorelyticsPassword field value if set, zero value otherwise.
func (o *MyMember) GetCorelyticsPassword() string {
	if o == nil || IsNil(o.CorelyticsPassword) {
		var ret string
		return ret
	}
	return *o.CorelyticsPassword
}

// GetCorelyticsPasswordOk returns a tuple with the CorelyticsPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetCorelyticsPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.CorelyticsPassword) {
		return nil, false
	}
	return o.CorelyticsPassword, true
}

// HasCorelyticsPassword returns a boolean if a field has been set.
func (o *MyMember) HasCorelyticsPassword() bool {
	if o != nil && !IsNil(o.CorelyticsPassword) {
		return true
	}

	return false
}

// SetCorelyticsPassword gets a reference to the given string and assigns it to the CorelyticsPassword field.
func (o *MyMember) SetCorelyticsPassword(v string) {
	o.CorelyticsPassword = &v
}

// GetAuthenticationServiceType returns the AuthenticationServiceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetAuthenticationServiceType() string {
	if o == nil || IsNil(o.AuthenticationServiceType.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationServiceType.Get()
}

// GetAuthenticationServiceTypeOk returns a tuple with the AuthenticationServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetAuthenticationServiceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationServiceType.Get(), o.AuthenticationServiceType.IsSet()
}

// HasAuthenticationServiceType returns a boolean if a field has been set.
func (o *MyMember) HasAuthenticationServiceType() bool {
	if o != nil && o.AuthenticationServiceType.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationServiceType gets a reference to the given NullableString and assigns it to the AuthenticationServiceType field.
func (o *MyMember) SetAuthenticationServiceType(v string) {
	o.AuthenticationServiceType.Set(&v)
}

// SetAuthenticationServiceTypeNil sets the value for AuthenticationServiceType to be an explicit nil
func (o *MyMember) SetAuthenticationServiceTypeNil() {
	o.AuthenticationServiceType.Set(nil)
}

// UnsetAuthenticationServiceType ensures that no value is present for AuthenticationServiceType, not even an explicit nil
func (o *MyMember) UnsetAuthenticationServiceType() {
	o.AuthenticationServiceType.Unset()
}

// GetTimebasedOneTimePasswordActivated returns the TimebasedOneTimePasswordActivated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetTimebasedOneTimePasswordActivated() bool {
	if o == nil || IsNil(o.TimebasedOneTimePasswordActivated.Get()) {
		var ret bool
		return ret
	}
	return *o.TimebasedOneTimePasswordActivated.Get()
}

// GetTimebasedOneTimePasswordActivatedOk returns a tuple with the TimebasedOneTimePasswordActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetTimebasedOneTimePasswordActivatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimebasedOneTimePasswordActivated.Get(), o.TimebasedOneTimePasswordActivated.IsSet()
}

// HasTimebasedOneTimePasswordActivated returns a boolean if a field has been set.
func (o *MyMember) HasTimebasedOneTimePasswordActivated() bool {
	if o != nil && o.TimebasedOneTimePasswordActivated.IsSet() {
		return true
	}

	return false
}

// SetTimebasedOneTimePasswordActivated gets a reference to the given NullableBool and assigns it to the TimebasedOneTimePasswordActivated field.
func (o *MyMember) SetTimebasedOneTimePasswordActivated(v bool) {
	o.TimebasedOneTimePasswordActivated.Set(&v)
}

// SetTimebasedOneTimePasswordActivatedNil sets the value for TimebasedOneTimePasswordActivated to be an explicit nil
func (o *MyMember) SetTimebasedOneTimePasswordActivatedNil() {
	o.TimebasedOneTimePasswordActivated.Set(nil)
}

// UnsetTimebasedOneTimePasswordActivated ensures that no value is present for TimebasedOneTimePasswordActivated, not even an explicit nil
func (o *MyMember) UnsetTimebasedOneTimePasswordActivated() {
	o.TimebasedOneTimePasswordActivated.Unset()
}

// GetDirectionalSync returns the DirectionalSync field value if set, zero value otherwise.
func (o *MyMember) GetDirectionalSync() DirectionalSyncReference {
	if o == nil || IsNil(o.DirectionalSync) {
		var ret DirectionalSyncReference
		return ret
	}
	return *o.DirectionalSync
}

// GetDirectionalSyncOk returns a tuple with the DirectionalSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetDirectionalSyncOk() (*DirectionalSyncReference, bool) {
	if o == nil || IsNil(o.DirectionalSync) {
		return nil, false
	}
	return o.DirectionalSync, true
}

// HasDirectionalSync returns a boolean if a field has been set.
func (o *MyMember) HasDirectionalSync() bool {
	if o != nil && !IsNil(o.DirectionalSync) {
		return true
	}

	return false
}

// SetDirectionalSync gets a reference to the given DirectionalSyncReference and assigns it to the DirectionalSync field.
func (o *MyMember) SetDirectionalSync(v DirectionalSyncReference) {
	o.DirectionalSync = &v
}

// GetSsoSessionFlag returns the SsoSessionFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMember) GetSsoSessionFlag() bool {
	if o == nil || IsNil(o.SsoSessionFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SsoSessionFlag.Get()
}

// GetSsoSessionFlagOk returns a tuple with the SsoSessionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMember) GetSsoSessionFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SsoSessionFlag.Get(), o.SsoSessionFlag.IsSet()
}

// HasSsoSessionFlag returns a boolean if a field has been set.
func (o *MyMember) HasSsoSessionFlag() bool {
	if o != nil && o.SsoSessionFlag.IsSet() {
		return true
	}

	return false
}

// SetSsoSessionFlag gets a reference to the given NullableBool and assigns it to the SsoSessionFlag field.
func (o *MyMember) SetSsoSessionFlag(v bool) {
	o.SsoSessionFlag.Set(&v)
}

// SetSsoSessionFlagNil sets the value for SsoSessionFlag to be an explicit nil
func (o *MyMember) SetSsoSessionFlagNil() {
	o.SsoSessionFlag.Set(nil)
}

// UnsetSsoSessionFlag ensures that no value is present for SsoSessionFlag, not even an explicit nil
func (o *MyMember) UnsetSsoSessionFlag() {
	o.SsoSessionFlag.Unset()
}

// GetSsoClientId returns the SsoClientId field value if set, zero value otherwise.
func (o *MyMember) GetSsoClientId() string {
	if o == nil || IsNil(o.SsoClientId) {
		var ret string
		return ret
	}
	return *o.SsoClientId
}

// GetSsoClientIdOk returns a tuple with the SsoClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetSsoClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.SsoClientId) {
		return nil, false
	}
	return o.SsoClientId, true
}

// HasSsoClientId returns a boolean if a field has been set.
func (o *MyMember) HasSsoClientId() bool {
	if o != nil && !IsNil(o.SsoClientId) {
		return true
	}

	return false
}

// SetSsoClientId gets a reference to the given string and assigns it to the SsoClientId field.
func (o *MyMember) SetSsoClientId(v string) {
	o.SsoClientId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *MyMember) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMember) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *MyMember) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *MyMember) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o MyMember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MyMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleInitial) {
		toSerialize["middleInitial"] = o.MiddleInitial
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ReportCard) {
		toSerialize["reportCard"] = o.ReportCard
	}
	if o.LicenseClass.IsSet() {
		toSerialize["licenseClass"] = o.LicenseClass.Get()
	}
	if o.DisableOnlineFlag.IsSet() {
		toSerialize["disableOnlineFlag"] = o.DisableOnlineFlag.Get()
	}
	if o.EnableMobileFlag.IsSet() {
		toSerialize["enableMobileFlag"] = o.EnableMobileFlag.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.EmployeeIdentifer) {
		toSerialize["employeeIdentifer"] = o.EmployeeIdentifer
	}
	if !IsNil(o.VendorNumber) {
		toSerialize["vendorNumber"] = o.VendorNumber
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.ServiceBoardTeamIds) {
		toSerialize["serviceBoardTeamIds"] = o.ServiceBoardTeamIds
	}
	if o.EnableMobileGpsFlag.IsSet() {
		toSerialize["enableMobileGpsFlag"] = o.EnableMobileGpsFlag.Get()
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.LastLogin) {
		toSerialize["lastLogin"] = o.LastLogin
	}
	if !IsNil(o.Photo) {
		toSerialize["photo"] = o.Photo
	}
	if o.ToastNotificationFlag.IsSet() {
		toSerialize["toastNotificationFlag"] = o.ToastNotificationFlag.Get()
	}
	if !IsNil(o.OfficeEmail) {
		toSerialize["officeEmail"] = o.OfficeEmail
	}
	if !IsNil(o.OfficePhone) {
		toSerialize["officePhone"] = o.OfficePhone
	}
	if !IsNil(o.OfficeExtension) {
		toSerialize["officeExtension"] = o.OfficeExtension
	}
	if !IsNil(o.MobileEmail) {
		toSerialize["mobileEmail"] = o.MobileEmail
	}
	if !IsNil(o.MobilePhone) {
		toSerialize["mobilePhone"] = o.MobilePhone
	}
	if !IsNil(o.MobileExtension) {
		toSerialize["mobileExtension"] = o.MobileExtension
	}
	if !IsNil(o.HomeEmail) {
		toSerialize["homeEmail"] = o.HomeEmail
	}
	if !IsNil(o.HomePhone) {
		toSerialize["homePhone"] = o.HomePhone
	}
	if !IsNil(o.HomeExtension) {
		toSerialize["homeExtension"] = o.HomeExtension
	}
	if o.DefaultEmail.IsSet() {
		toSerialize["defaultEmail"] = o.DefaultEmail.Get()
	}
	if o.DefaultPhone.IsSet() {
		toSerialize["defaultPhone"] = o.DefaultPhone.Get()
	}
	if !IsNil(o.SecurityRole) {
		toSerialize["securityRole"] = o.SecurityRole
	}
	if o.AdminFlag.IsSet() {
		toSerialize["adminFlag"] = o.AdminFlag.Get()
	}
	if !IsNil(o.StructureLevel) {
		toSerialize["structureLevel"] = o.StructureLevel
	}
	if !IsNil(o.SecurityLocation) {
		toSerialize["securityLocation"] = o.SecurityLocation
	}
	if !IsNil(o.DefaultLocation) {
		toSerialize["defaultLocation"] = o.DefaultLocation
	}
	if !IsNil(o.DefaultDepartment) {
		toSerialize["defaultDepartment"] = o.DefaultDepartment
	}
	if !IsNil(o.ReportsTo) {
		toSerialize["reportsTo"] = o.ReportsTo
	}
	if o.RestrictLocationFlag.IsSet() {
		toSerialize["restrictLocationFlag"] = o.RestrictLocationFlag.Get()
	}
	if o.RestrictDepartmentFlag.IsSet() {
		toSerialize["restrictDepartmentFlag"] = o.RestrictDepartmentFlag.Get()
	}
	if !IsNil(o.WorkRole) {
		toSerialize["workRole"] = o.WorkRole
	}
	if !IsNil(o.WorkType) {
		toSerialize["workType"] = o.WorkType
	}
	if !IsNil(o.TimeApprover) {
		toSerialize["timeApprover"] = o.TimeApprover
	}
	if !IsNil(o.ExpenseApprover) {
		toSerialize["expenseApprover"] = o.ExpenseApprover
	}
	if o.BillableForecast.IsSet() {
		toSerialize["billableForecast"] = o.BillableForecast.Get()
	}
	if o.DailyCapacity.IsSet() {
		toSerialize["dailyCapacity"] = o.DailyCapacity.Get()
	}
	if o.HourlyCost.IsSet() {
		toSerialize["hourlyCost"] = o.HourlyCost.Get()
	}
	if o.HourlyRate.IsSet() {
		toSerialize["hourlyRate"] = o.HourlyRate.Get()
	}
	if o.IncludeInUtilizationReportingFlag.IsSet() {
		toSerialize["includeInUtilizationReportingFlag"] = o.IncludeInUtilizationReportingFlag.Get()
	}
	if o.RequireExpenseEntryFlag.IsSet() {
		toSerialize["requireExpenseEntryFlag"] = o.RequireExpenseEntryFlag.Get()
	}
	if o.RequireTimeSheetEntryFlag.IsSet() {
		toSerialize["requireTimeSheetEntryFlag"] = o.RequireTimeSheetEntryFlag.Get()
	}
	if o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		toSerialize["requireStartAndEndTimeOnTimeEntryFlag"] = o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
	}
	if o.AllowInCellEntryOnTimeSheet.IsSet() {
		toSerialize["allowInCellEntryOnTimeSheet"] = o.AllowInCellEntryOnTimeSheet.Get()
	}
	if o.EnterTimeAgainstCompanyFlag.IsSet() {
		toSerialize["enterTimeAgainstCompanyFlag"] = o.EnterTimeAgainstCompanyFlag.Get()
	}
	if o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		toSerialize["allowExpensesEnteredAgainstCompaniesFlag"] = o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
	}
	if o.TimeReminderEmailFlag.IsSet() {
		toSerialize["timeReminderEmailFlag"] = o.TimeReminderEmailFlag.Get()
	}
	if o.DaysTolerance.IsSet() {
		toSerialize["daysTolerance"] = o.DaysTolerance.Get()
	}
	if o.MinimumHours.IsSet() {
		toSerialize["minimumHours"] = o.MinimumHours.Get()
	}
	if !IsNil(o.TimeSheetStartDate) {
		toSerialize["timeSheetStartDate"] = o.TimeSheetStartDate
	}
	if !IsNil(o.HireDate) {
		toSerialize["hireDate"] = o.HireDate
	}
	if !IsNil(o.ServiceDefaultLocation) {
		toSerialize["serviceDefaultLocation"] = o.ServiceDefaultLocation
	}
	if !IsNil(o.ServiceDefaultDepartment) {
		toSerialize["serviceDefaultDepartment"] = o.ServiceDefaultDepartment
	}
	if !IsNil(o.ServiceDefaultBoard) {
		toSerialize["serviceDefaultBoard"] = o.ServiceDefaultBoard
	}
	if o.RestrictServiceDefaultLocationFlag.IsSet() {
		toSerialize["restrictServiceDefaultLocationFlag"] = o.RestrictServiceDefaultLocationFlag.Get()
	}
	if o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictServiceDefaultDepartmentFlag"] = o.RestrictServiceDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedServiceBoardIds) {
		toSerialize["excludedServiceBoardIds"] = o.ExcludedServiceBoardIds
	}
	if !IsNil(o.ProjectDefaultLocation) {
		toSerialize["projectDefaultLocation"] = o.ProjectDefaultLocation
	}
	if !IsNil(o.ProjectDefaultDepartment) {
		toSerialize["projectDefaultDepartment"] = o.ProjectDefaultDepartment
	}
	if !IsNil(o.ProjectDefaultBoard) {
		toSerialize["projectDefaultBoard"] = o.ProjectDefaultBoard
	}
	if o.RestrictProjectDefaultLocationFlag.IsSet() {
		toSerialize["restrictProjectDefaultLocationFlag"] = o.RestrictProjectDefaultLocationFlag.Get()
	}
	if o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictProjectDefaultDepartmentFlag"] = o.RestrictProjectDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedProjectBoardIds) {
		toSerialize["excludedProjectBoardIds"] = o.ExcludedProjectBoardIds
	}
	if !IsNil(o.ScheduleDefaultLocation) {
		toSerialize["scheduleDefaultLocation"] = o.ScheduleDefaultLocation
	}
	if !IsNil(o.ScheduleDefaultDepartment) {
		toSerialize["scheduleDefaultDepartment"] = o.ScheduleDefaultDepartment
	}
	if o.ScheduleCapacity.IsSet() {
		toSerialize["scheduleCapacity"] = o.ScheduleCapacity.Get()
	}
	if !IsNil(o.ServiceLocation) {
		toSerialize["serviceLocation"] = o.ServiceLocation
	}
	if o.RestrictScheduleFlag.IsSet() {
		toSerialize["restrictScheduleFlag"] = o.RestrictScheduleFlag.Get()
	}
	if o.HideMemberInDispatchPortalFlag.IsSet() {
		toSerialize["hideMemberInDispatchPortalFlag"] = o.HideMemberInDispatchPortalFlag.Get()
	}
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	if !IsNil(o.SalesDefaultLocation) {
		toSerialize["salesDefaultLocation"] = o.SalesDefaultLocation
	}
	if o.RestrictDefaultSalesTerritoryFlag.IsSet() {
		toSerialize["restrictDefaultSalesTerritoryFlag"] = o.RestrictDefaultSalesTerritoryFlag.Get()
	}
	if !IsNil(o.Warehouse) {
		toSerialize["warehouse"] = o.Warehouse
	}
	if !IsNil(o.WarehouseBin) {
		toSerialize["warehouseBin"] = o.WarehouseBin
	}
	if o.RestrictDefaultWarehouseFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseFlag"] = o.RestrictDefaultWarehouseFlag.Get()
	}
	if o.RestrictDefaultWarehouseBinFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseBinFlag"] = o.RestrictDefaultWarehouseBinFlag.Get()
	}
	if !IsNil(o.MapiName) {
		toSerialize["mapiName"] = o.MapiName
	}
	if o.CalendarSyncIntegrationFlag.IsSet() {
		toSerialize["calendarSyncIntegrationFlag"] = o.CalendarSyncIntegrationFlag.Get()
	}
	if o.EnableLdapAuthenticationFlag.IsSet() {
		toSerialize["enableLdapAuthenticationFlag"] = o.EnableLdapAuthenticationFlag.Get()
	}
	if !IsNil(o.LdapConfiguration) {
		toSerialize["ldapConfiguration"] = o.LdapConfiguration
	}
	if !IsNil(o.LdapUserName) {
		toSerialize["ldapUserName"] = o.LdapUserName
	}
	if o.CompanyActivityTabFormat.IsSet() {
		toSerialize["companyActivityTabFormat"] = o.CompanyActivityTabFormat.Get()
	}
	if o.InvoiceTimeTabFormat.IsSet() {
		toSerialize["invoiceTimeTabFormat"] = o.InvoiceTimeTabFormat.Get()
	}
	if o.InvoiceScreenDefaultTabFormat.IsSet() {
		toSerialize["invoiceScreenDefaultTabFormat"] = o.InvoiceScreenDefaultTabFormat.Get()
	}
	if o.InvoicingDisplayOptions.IsSet() {
		toSerialize["invoicingDisplayOptions"] = o.InvoicingDisplayOptions.Get()
	}
	if o.AgreementInvoicingDisplayOptions.IsSet() {
		toSerialize["agreementInvoicingDisplayOptions"] = o.AgreementInvoicingDisplayOptions.Get()
	}
	if !IsNil(o.CorelyticsUsername) {
		toSerialize["corelyticsUsername"] = o.CorelyticsUsername
	}
	if !IsNil(o.CorelyticsPassword) {
		toSerialize["corelyticsPassword"] = o.CorelyticsPassword
	}
	if o.AuthenticationServiceType.IsSet() {
		toSerialize["authenticationServiceType"] = o.AuthenticationServiceType.Get()
	}
	if o.TimebasedOneTimePasswordActivated.IsSet() {
		toSerialize["timebasedOneTimePasswordActivated"] = o.TimebasedOneTimePasswordActivated.Get()
	}
	if !IsNil(o.DirectionalSync) {
		toSerialize["directionalSync"] = o.DirectionalSync
	}
	if o.SsoSessionFlag.IsSet() {
		toSerialize["ssoSessionFlag"] = o.SsoSessionFlag.Get()
	}
	if !IsNil(o.SsoClientId) {
		toSerialize["ssoClientId"] = o.SsoClientId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableMyMember struct {
	value *MyMember
	isSet bool
}

func (v NullableMyMember) Get() *MyMember {
	return v.value
}

func (v *NullableMyMember) Set(val *MyMember) {
	v.value = val
	v.isSet = true
}

func (v NullableMyMember) IsSet() bool {
	return v.isSet
}

func (v *NullableMyMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMyMember(val *MyMember) *NullableMyMember {
	return &NullableMyMember{value: val, isSet: true}
}

func (v NullableMyMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMyMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
