/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the OpportunityToAgreementConversion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpportunityToAgreementConversion{}

// OpportunityToAgreementConversion struct for OpportunityToAgreementConversion
type OpportunityToAgreementConversion struct {
	AgreementId             *int32                  `json:"agreementId,omitempty"`
	Name                    *string                 `json:"name,omitempty"`
	Type                    *AgreementTypeReference `json:"type,omitempty"`
	StartDate               *string                 `json:"startDate,omitempty"`
	EndDate                 *string                 `json:"endDate,omitempty"`
	NoEndingDateFlag        NullableBool            `json:"noEndingDateFlag,omitempty"`
	BillCycleId             NullableInt32           `json:"billCycleId,omitempty"`
	BillOneTimeFlag         NullableBool            `json:"billOneTimeFlag,omitempty"`
	LocationId              NullableInt32           `json:"locationId,omitempty"`
	BusinessUnitId          NullableInt32           `json:"businessUnitId,omitempty"`
	IncludeAllNotesFlag     NullableBool            `json:"includeAllNotesFlag,omitempty"`
	IncludeAllDocumentsFlag NullableBool            `json:"includeAllDocumentsFlag,omitempty"`
	IncludeAllProductsFlag  NullableBool            `json:"includeAllProductsFlag,omitempty"`
	IncludeNoteIds          []int32                 `json:"includeNoteIds,omitempty"`
	IncludeDocumentIds      []int32                 `json:"includeDocumentIds,omitempty"`
	IncludeProductIds       []int32                 `json:"includeProductIds,omitempty"`
}

// NewOpportunityToAgreementConversion instantiates a new OpportunityToAgreementConversion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpportunityToAgreementConversion() *OpportunityToAgreementConversion {
	this := OpportunityToAgreementConversion{}
	return &this
}

// NewOpportunityToAgreementConversionWithDefaults instantiates a new OpportunityToAgreementConversion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpportunityToAgreementConversionWithDefaults() *OpportunityToAgreementConversion {
	this := OpportunityToAgreementConversion{}
	return &this
}

// GetAgreementId returns the AgreementId field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetAgreementId() int32 {
	if o == nil || IsNil(o.AgreementId) {
		var ret int32
		return ret
	}
	return *o.AgreementId
}

// GetAgreementIdOk returns a tuple with the AgreementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetAgreementIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AgreementId) {
		return nil, false
	}
	return o.AgreementId, true
}

// HasAgreementId returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasAgreementId() bool {
	if o != nil && !IsNil(o.AgreementId) {
		return true
	}

	return false
}

// SetAgreementId gets a reference to the given int32 and assigns it to the AgreementId field.
func (o *OpportunityToAgreementConversion) SetAgreementId(v int32) {
	o.AgreementId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpportunityToAgreementConversion) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetType() AgreementTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret AgreementTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetTypeOk() (*AgreementTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AgreementTypeReference and assigns it to the Type field.
func (o *OpportunityToAgreementConversion) SetType(v AgreementTypeReference) {
	o.Type = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *OpportunityToAgreementConversion) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *OpportunityToAgreementConversion) SetEndDate(v string) {
	o.EndDate = &v
}

// GetNoEndingDateFlag returns the NoEndingDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetNoEndingDateFlag() bool {
	if o == nil || IsNil(o.NoEndingDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.NoEndingDateFlag.Get()
}

// GetNoEndingDateFlagOk returns a tuple with the NoEndingDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetNoEndingDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.NoEndingDateFlag.Get(), o.NoEndingDateFlag.IsSet()
}

// HasNoEndingDateFlag returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasNoEndingDateFlag() bool {
	if o != nil && o.NoEndingDateFlag.IsSet() {
		return true
	}

	return false
}

// SetNoEndingDateFlag gets a reference to the given NullableBool and assigns it to the NoEndingDateFlag field.
func (o *OpportunityToAgreementConversion) SetNoEndingDateFlag(v bool) {
	o.NoEndingDateFlag.Set(&v)
}

// SetNoEndingDateFlagNil sets the value for NoEndingDateFlag to be an explicit nil
func (o *OpportunityToAgreementConversion) SetNoEndingDateFlagNil() {
	o.NoEndingDateFlag.Set(nil)
}

// UnsetNoEndingDateFlag ensures that no value is present for NoEndingDateFlag, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetNoEndingDateFlag() {
	o.NoEndingDateFlag.Unset()
}

// GetBillCycleId returns the BillCycleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetBillCycleId() int32 {
	if o == nil || IsNil(o.BillCycleId.Get()) {
		var ret int32
		return ret
	}
	return *o.BillCycleId.Get()
}

// GetBillCycleIdOk returns a tuple with the BillCycleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetBillCycleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillCycleId.Get(), o.BillCycleId.IsSet()
}

// HasBillCycleId returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasBillCycleId() bool {
	if o != nil && o.BillCycleId.IsSet() {
		return true
	}

	return false
}

// SetBillCycleId gets a reference to the given NullableInt32 and assigns it to the BillCycleId field.
func (o *OpportunityToAgreementConversion) SetBillCycleId(v int32) {
	o.BillCycleId.Set(&v)
}

// SetBillCycleIdNil sets the value for BillCycleId to be an explicit nil
func (o *OpportunityToAgreementConversion) SetBillCycleIdNil() {
	o.BillCycleId.Set(nil)
}

// UnsetBillCycleId ensures that no value is present for BillCycleId, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetBillCycleId() {
	o.BillCycleId.Unset()
}

// GetBillOneTimeFlag returns the BillOneTimeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetBillOneTimeFlag() bool {
	if o == nil || IsNil(o.BillOneTimeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillOneTimeFlag.Get()
}

// GetBillOneTimeFlagOk returns a tuple with the BillOneTimeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetBillOneTimeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillOneTimeFlag.Get(), o.BillOneTimeFlag.IsSet()
}

// HasBillOneTimeFlag returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasBillOneTimeFlag() bool {
	if o != nil && o.BillOneTimeFlag.IsSet() {
		return true
	}

	return false
}

// SetBillOneTimeFlag gets a reference to the given NullableBool and assigns it to the BillOneTimeFlag field.
func (o *OpportunityToAgreementConversion) SetBillOneTimeFlag(v bool) {
	o.BillOneTimeFlag.Set(&v)
}

// SetBillOneTimeFlagNil sets the value for BillOneTimeFlag to be an explicit nil
func (o *OpportunityToAgreementConversion) SetBillOneTimeFlagNil() {
	o.BillOneTimeFlag.Set(nil)
}

// UnsetBillOneTimeFlag ensures that no value is present for BillOneTimeFlag, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetBillOneTimeFlag() {
	o.BillOneTimeFlag.Unset()
}

// GetLocationId returns the LocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetLocationId() int32 {
	if o == nil || IsNil(o.LocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.LocationId.Get()
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationId.Get(), o.LocationId.IsSet()
}

// HasLocationId returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasLocationId() bool {
	if o != nil && o.LocationId.IsSet() {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given NullableInt32 and assigns it to the LocationId field.
func (o *OpportunityToAgreementConversion) SetLocationId(v int32) {
	o.LocationId.Set(&v)
}

// SetLocationIdNil sets the value for LocationId to be an explicit nil
func (o *OpportunityToAgreementConversion) SetLocationIdNil() {
	o.LocationId.Set(nil)
}

// UnsetLocationId ensures that no value is present for LocationId, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetLocationId() {
	o.LocationId.Unset()
}

// GetBusinessUnitId returns the BusinessUnitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetBusinessUnitId() int32 {
	if o == nil || IsNil(o.BusinessUnitId.Get()) {
		var ret int32
		return ret
	}
	return *o.BusinessUnitId.Get()
}

// GetBusinessUnitIdOk returns a tuple with the BusinessUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetBusinessUnitIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessUnitId.Get(), o.BusinessUnitId.IsSet()
}

// HasBusinessUnitId returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasBusinessUnitId() bool {
	if o != nil && o.BusinessUnitId.IsSet() {
		return true
	}

	return false
}

// SetBusinessUnitId gets a reference to the given NullableInt32 and assigns it to the BusinessUnitId field.
func (o *OpportunityToAgreementConversion) SetBusinessUnitId(v int32) {
	o.BusinessUnitId.Set(&v)
}

// SetBusinessUnitIdNil sets the value for BusinessUnitId to be an explicit nil
func (o *OpportunityToAgreementConversion) SetBusinessUnitIdNil() {
	o.BusinessUnitId.Set(nil)
}

// UnsetBusinessUnitId ensures that no value is present for BusinessUnitId, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetBusinessUnitId() {
	o.BusinessUnitId.Unset()
}

// GetIncludeAllNotesFlag returns the IncludeAllNotesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetIncludeAllNotesFlag() bool {
	if o == nil || IsNil(o.IncludeAllNotesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAllNotesFlag.Get()
}

// GetIncludeAllNotesFlagOk returns a tuple with the IncludeAllNotesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetIncludeAllNotesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAllNotesFlag.Get(), o.IncludeAllNotesFlag.IsSet()
}

// HasIncludeAllNotesFlag returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasIncludeAllNotesFlag() bool {
	if o != nil && o.IncludeAllNotesFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeAllNotesFlag gets a reference to the given NullableBool and assigns it to the IncludeAllNotesFlag field.
func (o *OpportunityToAgreementConversion) SetIncludeAllNotesFlag(v bool) {
	o.IncludeAllNotesFlag.Set(&v)
}

// SetIncludeAllNotesFlagNil sets the value for IncludeAllNotesFlag to be an explicit nil
func (o *OpportunityToAgreementConversion) SetIncludeAllNotesFlagNil() {
	o.IncludeAllNotesFlag.Set(nil)
}

// UnsetIncludeAllNotesFlag ensures that no value is present for IncludeAllNotesFlag, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetIncludeAllNotesFlag() {
	o.IncludeAllNotesFlag.Unset()
}

// GetIncludeAllDocumentsFlag returns the IncludeAllDocumentsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetIncludeAllDocumentsFlag() bool {
	if o == nil || IsNil(o.IncludeAllDocumentsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAllDocumentsFlag.Get()
}

// GetIncludeAllDocumentsFlagOk returns a tuple with the IncludeAllDocumentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetIncludeAllDocumentsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAllDocumentsFlag.Get(), o.IncludeAllDocumentsFlag.IsSet()
}

// HasIncludeAllDocumentsFlag returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasIncludeAllDocumentsFlag() bool {
	if o != nil && o.IncludeAllDocumentsFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeAllDocumentsFlag gets a reference to the given NullableBool and assigns it to the IncludeAllDocumentsFlag field.
func (o *OpportunityToAgreementConversion) SetIncludeAllDocumentsFlag(v bool) {
	o.IncludeAllDocumentsFlag.Set(&v)
}

// SetIncludeAllDocumentsFlagNil sets the value for IncludeAllDocumentsFlag to be an explicit nil
func (o *OpportunityToAgreementConversion) SetIncludeAllDocumentsFlagNil() {
	o.IncludeAllDocumentsFlag.Set(nil)
}

// UnsetIncludeAllDocumentsFlag ensures that no value is present for IncludeAllDocumentsFlag, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetIncludeAllDocumentsFlag() {
	o.IncludeAllDocumentsFlag.Unset()
}

// GetIncludeAllProductsFlag returns the IncludeAllProductsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToAgreementConversion) GetIncludeAllProductsFlag() bool {
	if o == nil || IsNil(o.IncludeAllProductsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAllProductsFlag.Get()
}

// GetIncludeAllProductsFlagOk returns a tuple with the IncludeAllProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToAgreementConversion) GetIncludeAllProductsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAllProductsFlag.Get(), o.IncludeAllProductsFlag.IsSet()
}

// HasIncludeAllProductsFlag returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasIncludeAllProductsFlag() bool {
	if o != nil && o.IncludeAllProductsFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeAllProductsFlag gets a reference to the given NullableBool and assigns it to the IncludeAllProductsFlag field.
func (o *OpportunityToAgreementConversion) SetIncludeAllProductsFlag(v bool) {
	o.IncludeAllProductsFlag.Set(&v)
}

// SetIncludeAllProductsFlagNil sets the value for IncludeAllProductsFlag to be an explicit nil
func (o *OpportunityToAgreementConversion) SetIncludeAllProductsFlagNil() {
	o.IncludeAllProductsFlag.Set(nil)
}

// UnsetIncludeAllProductsFlag ensures that no value is present for IncludeAllProductsFlag, not even an explicit nil
func (o *OpportunityToAgreementConversion) UnsetIncludeAllProductsFlag() {
	o.IncludeAllProductsFlag.Unset()
}

// GetIncludeNoteIds returns the IncludeNoteIds field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetIncludeNoteIds() []int32 {
	if o == nil || IsNil(o.IncludeNoteIds) {
		var ret []int32
		return ret
	}
	return o.IncludeNoteIds
}

// GetIncludeNoteIdsOk returns a tuple with the IncludeNoteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetIncludeNoteIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludeNoteIds) {
		return nil, false
	}
	return o.IncludeNoteIds, true
}

// HasIncludeNoteIds returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasIncludeNoteIds() bool {
	if o != nil && !IsNil(o.IncludeNoteIds) {
		return true
	}

	return false
}

// SetIncludeNoteIds gets a reference to the given []int32 and assigns it to the IncludeNoteIds field.
func (o *OpportunityToAgreementConversion) SetIncludeNoteIds(v []int32) {
	o.IncludeNoteIds = v
}

// GetIncludeDocumentIds returns the IncludeDocumentIds field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetIncludeDocumentIds() []int32 {
	if o == nil || IsNil(o.IncludeDocumentIds) {
		var ret []int32
		return ret
	}
	return o.IncludeDocumentIds
}

// GetIncludeDocumentIdsOk returns a tuple with the IncludeDocumentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetIncludeDocumentIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludeDocumentIds) {
		return nil, false
	}
	return o.IncludeDocumentIds, true
}

// HasIncludeDocumentIds returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasIncludeDocumentIds() bool {
	if o != nil && !IsNil(o.IncludeDocumentIds) {
		return true
	}

	return false
}

// SetIncludeDocumentIds gets a reference to the given []int32 and assigns it to the IncludeDocumentIds field.
func (o *OpportunityToAgreementConversion) SetIncludeDocumentIds(v []int32) {
	o.IncludeDocumentIds = v
}

// GetIncludeProductIds returns the IncludeProductIds field value if set, zero value otherwise.
func (o *OpportunityToAgreementConversion) GetIncludeProductIds() []int32 {
	if o == nil || IsNil(o.IncludeProductIds) {
		var ret []int32
		return ret
	}
	return o.IncludeProductIds
}

// GetIncludeProductIdsOk returns a tuple with the IncludeProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToAgreementConversion) GetIncludeProductIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludeProductIds) {
		return nil, false
	}
	return o.IncludeProductIds, true
}

// HasIncludeProductIds returns a boolean if a field has been set.
func (o *OpportunityToAgreementConversion) HasIncludeProductIds() bool {
	if o != nil && !IsNil(o.IncludeProductIds) {
		return true
	}

	return false
}

// SetIncludeProductIds gets a reference to the given []int32 and assigns it to the IncludeProductIds field.
func (o *OpportunityToAgreementConversion) SetIncludeProductIds(v []int32) {
	o.IncludeProductIds = v
}

func (o OpportunityToAgreementConversion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpportunityToAgreementConversion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgreementId) {
		toSerialize["agreementId"] = o.AgreementId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if o.NoEndingDateFlag.IsSet() {
		toSerialize["noEndingDateFlag"] = o.NoEndingDateFlag.Get()
	}
	if o.BillCycleId.IsSet() {
		toSerialize["billCycleId"] = o.BillCycleId.Get()
	}
	if o.BillOneTimeFlag.IsSet() {
		toSerialize["billOneTimeFlag"] = o.BillOneTimeFlag.Get()
	}
	if o.LocationId.IsSet() {
		toSerialize["locationId"] = o.LocationId.Get()
	}
	if o.BusinessUnitId.IsSet() {
		toSerialize["businessUnitId"] = o.BusinessUnitId.Get()
	}
	if o.IncludeAllNotesFlag.IsSet() {
		toSerialize["includeAllNotesFlag"] = o.IncludeAllNotesFlag.Get()
	}
	if o.IncludeAllDocumentsFlag.IsSet() {
		toSerialize["includeAllDocumentsFlag"] = o.IncludeAllDocumentsFlag.Get()
	}
	if o.IncludeAllProductsFlag.IsSet() {
		toSerialize["includeAllProductsFlag"] = o.IncludeAllProductsFlag.Get()
	}
	if !IsNil(o.IncludeNoteIds) {
		toSerialize["includeNoteIds"] = o.IncludeNoteIds
	}
	if !IsNil(o.IncludeDocumentIds) {
		toSerialize["includeDocumentIds"] = o.IncludeDocumentIds
	}
	if !IsNil(o.IncludeProductIds) {
		toSerialize["includeProductIds"] = o.IncludeProductIds
	}
	return toSerialize, nil
}

type NullableOpportunityToAgreementConversion struct {
	value *OpportunityToAgreementConversion
	isSet bool
}

func (v NullableOpportunityToAgreementConversion) Get() *OpportunityToAgreementConversion {
	return v.value
}

func (v *NullableOpportunityToAgreementConversion) Set(val *OpportunityToAgreementConversion) {
	v.value = val
	v.isSet = true
}

func (v NullableOpportunityToAgreementConversion) IsSet() bool {
	return v.isSet
}

func (v *NullableOpportunityToAgreementConversion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpportunityToAgreementConversion(val *OpportunityToAgreementConversion) *NullableOpportunityToAgreementConversion {
	return &NullableOpportunityToAgreementConversion{value: val, isSet: true}
}

func (v NullableOpportunityToAgreementConversion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpportunityToAgreementConversion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
