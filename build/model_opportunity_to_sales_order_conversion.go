/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the OpportunityToSalesOrderConversion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpportunityToSalesOrderConversion{}

// OpportunityToSalesOrderConversion struct for OpportunityToSalesOrderConversion
type OpportunityToSalesOrderConversion struct {
	SalesOrderId            *int32       `json:"salesOrderId,omitempty"`
	Name                    *string      `json:"name,omitempty"`
	IncludeAllNotesFlag     NullableBool `json:"includeAllNotesFlag,omitempty"`
	IncludeAllDocumentsFlag NullableBool `json:"includeAllDocumentsFlag,omitempty"`
	IncludeAllProductsFlag  NullableBool `json:"includeAllProductsFlag,omitempty"`
	IncludeNoteIds          []int32      `json:"includeNoteIds,omitempty"`
	IncludeDocumentIds      []int32      `json:"includeDocumentIds,omitempty"`
	IncludeProductIds       []int32      `json:"includeProductIds,omitempty"`
}

// NewOpportunityToSalesOrderConversion instantiates a new OpportunityToSalesOrderConversion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpportunityToSalesOrderConversion() *OpportunityToSalesOrderConversion {
	this := OpportunityToSalesOrderConversion{}
	return &this
}

// NewOpportunityToSalesOrderConversionWithDefaults instantiates a new OpportunityToSalesOrderConversion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpportunityToSalesOrderConversionWithDefaults() *OpportunityToSalesOrderConversion {
	this := OpportunityToSalesOrderConversion{}
	return &this
}

// GetSalesOrderId returns the SalesOrderId field value if set, zero value otherwise.
func (o *OpportunityToSalesOrderConversion) GetSalesOrderId() int32 {
	if o == nil || IsNil(o.SalesOrderId) {
		var ret int32
		return ret
	}
	return *o.SalesOrderId
}

// GetSalesOrderIdOk returns a tuple with the SalesOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToSalesOrderConversion) GetSalesOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SalesOrderId) {
		return nil, false
	}
	return o.SalesOrderId, true
}

// HasSalesOrderId returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasSalesOrderId() bool {
	if o != nil && !IsNil(o.SalesOrderId) {
		return true
	}

	return false
}

// SetSalesOrderId gets a reference to the given int32 and assigns it to the SalesOrderId field.
func (o *OpportunityToSalesOrderConversion) SetSalesOrderId(v int32) {
	o.SalesOrderId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpportunityToSalesOrderConversion) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToSalesOrderConversion) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpportunityToSalesOrderConversion) SetName(v string) {
	o.Name = &v
}

// GetIncludeAllNotesFlag returns the IncludeAllNotesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToSalesOrderConversion) GetIncludeAllNotesFlag() bool {
	if o == nil || IsNil(o.IncludeAllNotesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAllNotesFlag.Get()
}

// GetIncludeAllNotesFlagOk returns a tuple with the IncludeAllNotesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToSalesOrderConversion) GetIncludeAllNotesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAllNotesFlag.Get(), o.IncludeAllNotesFlag.IsSet()
}

// HasIncludeAllNotesFlag returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasIncludeAllNotesFlag() bool {
	if o != nil && o.IncludeAllNotesFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeAllNotesFlag gets a reference to the given NullableBool and assigns it to the IncludeAllNotesFlag field.
func (o *OpportunityToSalesOrderConversion) SetIncludeAllNotesFlag(v bool) {
	o.IncludeAllNotesFlag.Set(&v)
}

// SetIncludeAllNotesFlagNil sets the value for IncludeAllNotesFlag to be an explicit nil
func (o *OpportunityToSalesOrderConversion) SetIncludeAllNotesFlagNil() {
	o.IncludeAllNotesFlag.Set(nil)
}

// UnsetIncludeAllNotesFlag ensures that no value is present for IncludeAllNotesFlag, not even an explicit nil
func (o *OpportunityToSalesOrderConversion) UnsetIncludeAllNotesFlag() {
	o.IncludeAllNotesFlag.Unset()
}

// GetIncludeAllDocumentsFlag returns the IncludeAllDocumentsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToSalesOrderConversion) GetIncludeAllDocumentsFlag() bool {
	if o == nil || IsNil(o.IncludeAllDocumentsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAllDocumentsFlag.Get()
}

// GetIncludeAllDocumentsFlagOk returns a tuple with the IncludeAllDocumentsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToSalesOrderConversion) GetIncludeAllDocumentsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAllDocumentsFlag.Get(), o.IncludeAllDocumentsFlag.IsSet()
}

// HasIncludeAllDocumentsFlag returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasIncludeAllDocumentsFlag() bool {
	if o != nil && o.IncludeAllDocumentsFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeAllDocumentsFlag gets a reference to the given NullableBool and assigns it to the IncludeAllDocumentsFlag field.
func (o *OpportunityToSalesOrderConversion) SetIncludeAllDocumentsFlag(v bool) {
	o.IncludeAllDocumentsFlag.Set(&v)
}

// SetIncludeAllDocumentsFlagNil sets the value for IncludeAllDocumentsFlag to be an explicit nil
func (o *OpportunityToSalesOrderConversion) SetIncludeAllDocumentsFlagNil() {
	o.IncludeAllDocumentsFlag.Set(nil)
}

// UnsetIncludeAllDocumentsFlag ensures that no value is present for IncludeAllDocumentsFlag, not even an explicit nil
func (o *OpportunityToSalesOrderConversion) UnsetIncludeAllDocumentsFlag() {
	o.IncludeAllDocumentsFlag.Unset()
}

// GetIncludeAllProductsFlag returns the IncludeAllProductsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityToSalesOrderConversion) GetIncludeAllProductsFlag() bool {
	if o == nil || IsNil(o.IncludeAllProductsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAllProductsFlag.Get()
}

// GetIncludeAllProductsFlagOk returns a tuple with the IncludeAllProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityToSalesOrderConversion) GetIncludeAllProductsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAllProductsFlag.Get(), o.IncludeAllProductsFlag.IsSet()
}

// HasIncludeAllProductsFlag returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasIncludeAllProductsFlag() bool {
	if o != nil && o.IncludeAllProductsFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeAllProductsFlag gets a reference to the given NullableBool and assigns it to the IncludeAllProductsFlag field.
func (o *OpportunityToSalesOrderConversion) SetIncludeAllProductsFlag(v bool) {
	o.IncludeAllProductsFlag.Set(&v)
}

// SetIncludeAllProductsFlagNil sets the value for IncludeAllProductsFlag to be an explicit nil
func (o *OpportunityToSalesOrderConversion) SetIncludeAllProductsFlagNil() {
	o.IncludeAllProductsFlag.Set(nil)
}

// UnsetIncludeAllProductsFlag ensures that no value is present for IncludeAllProductsFlag, not even an explicit nil
func (o *OpportunityToSalesOrderConversion) UnsetIncludeAllProductsFlag() {
	o.IncludeAllProductsFlag.Unset()
}

// GetIncludeNoteIds returns the IncludeNoteIds field value if set, zero value otherwise.
func (o *OpportunityToSalesOrderConversion) GetIncludeNoteIds() []int32 {
	if o == nil || IsNil(o.IncludeNoteIds) {
		var ret []int32
		return ret
	}
	return o.IncludeNoteIds
}

// GetIncludeNoteIdsOk returns a tuple with the IncludeNoteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToSalesOrderConversion) GetIncludeNoteIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludeNoteIds) {
		return nil, false
	}
	return o.IncludeNoteIds, true
}

// HasIncludeNoteIds returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasIncludeNoteIds() bool {
	if o != nil && !IsNil(o.IncludeNoteIds) {
		return true
	}

	return false
}

// SetIncludeNoteIds gets a reference to the given []int32 and assigns it to the IncludeNoteIds field.
func (o *OpportunityToSalesOrderConversion) SetIncludeNoteIds(v []int32) {
	o.IncludeNoteIds = v
}

// GetIncludeDocumentIds returns the IncludeDocumentIds field value if set, zero value otherwise.
func (o *OpportunityToSalesOrderConversion) GetIncludeDocumentIds() []int32 {
	if o == nil || IsNil(o.IncludeDocumentIds) {
		var ret []int32
		return ret
	}
	return o.IncludeDocumentIds
}

// GetIncludeDocumentIdsOk returns a tuple with the IncludeDocumentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToSalesOrderConversion) GetIncludeDocumentIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludeDocumentIds) {
		return nil, false
	}
	return o.IncludeDocumentIds, true
}

// HasIncludeDocumentIds returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasIncludeDocumentIds() bool {
	if o != nil && !IsNil(o.IncludeDocumentIds) {
		return true
	}

	return false
}

// SetIncludeDocumentIds gets a reference to the given []int32 and assigns it to the IncludeDocumentIds field.
func (o *OpportunityToSalesOrderConversion) SetIncludeDocumentIds(v []int32) {
	o.IncludeDocumentIds = v
}

// GetIncludeProductIds returns the IncludeProductIds field value if set, zero value otherwise.
func (o *OpportunityToSalesOrderConversion) GetIncludeProductIds() []int32 {
	if o == nil || IsNil(o.IncludeProductIds) {
		var ret []int32
		return ret
	}
	return o.IncludeProductIds
}

// GetIncludeProductIdsOk returns a tuple with the IncludeProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityToSalesOrderConversion) GetIncludeProductIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.IncludeProductIds) {
		return nil, false
	}
	return o.IncludeProductIds, true
}

// HasIncludeProductIds returns a boolean if a field has been set.
func (o *OpportunityToSalesOrderConversion) HasIncludeProductIds() bool {
	if o != nil && !IsNil(o.IncludeProductIds) {
		return true
	}

	return false
}

// SetIncludeProductIds gets a reference to the given []int32 and assigns it to the IncludeProductIds field.
func (o *OpportunityToSalesOrderConversion) SetIncludeProductIds(v []int32) {
	o.IncludeProductIds = v
}

func (o OpportunityToSalesOrderConversion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpportunityToSalesOrderConversion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SalesOrderId) {
		toSerialize["salesOrderId"] = o.SalesOrderId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.IncludeAllNotesFlag.IsSet() {
		toSerialize["includeAllNotesFlag"] = o.IncludeAllNotesFlag.Get()
	}
	if o.IncludeAllDocumentsFlag.IsSet() {
		toSerialize["includeAllDocumentsFlag"] = o.IncludeAllDocumentsFlag.Get()
	}
	if o.IncludeAllProductsFlag.IsSet() {
		toSerialize["includeAllProductsFlag"] = o.IncludeAllProductsFlag.Get()
	}
	if !IsNil(o.IncludeNoteIds) {
		toSerialize["includeNoteIds"] = o.IncludeNoteIds
	}
	if !IsNil(o.IncludeDocumentIds) {
		toSerialize["includeDocumentIds"] = o.IncludeDocumentIds
	}
	if !IsNil(o.IncludeProductIds) {
		toSerialize["includeProductIds"] = o.IncludeProductIds
	}
	return toSerialize, nil
}

type NullableOpportunityToSalesOrderConversion struct {
	value *OpportunityToSalesOrderConversion
	isSet bool
}

func (v NullableOpportunityToSalesOrderConversion) Get() *OpportunityToSalesOrderConversion {
	return v.value
}

func (v *NullableOpportunityToSalesOrderConversion) Set(val *OpportunityToSalesOrderConversion) {
	v.value = val
	v.isSet = true
}

func (v NullableOpportunityToSalesOrderConversion) IsSet() bool {
	return v.isSet
}

func (v *NullableOpportunityToSalesOrderConversion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpportunityToSalesOrderConversion(val *OpportunityToSalesOrderConversion) *NullableOpportunityToSalesOrderConversion {
	return &NullableOpportunityToSalesOrderConversion{value: val, isSet: true}
}

func (v NullableOpportunityToSalesOrderConversion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpportunityToSalesOrderConversion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
