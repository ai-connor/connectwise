/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the PortalConfigurationOpportunitySetup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortalConfigurationOpportunitySetup{}

// PortalConfigurationOpportunitySetup struct for PortalConfigurationOpportunitySetup
type PortalConfigurationOpportunitySetup struct {
	Id                                  *int32                      `json:"id,omitempty"`
	OpportunityStatusRecIDs             []int32                     `json:"opportunityStatusRecIDs,omitempty"`
	AddAllOpportunityStatuses           NullableBool                `json:"addAllOpportunityStatuses,omitempty"`
	RemoveAllOpportunityStatuses        NullableBool                `json:"removeAllOpportunityStatuses,omitempty"`
	OpportunityTypeRecIDs               []int32                     `json:"opportunityTypeRecIDs,omitempty"`
	AddAllOpportunityTypes              NullableBool                `json:"addAllOpportunityTypes,omitempty"`
	RemoveAllOpportunityTypes           NullableBool                `json:"removeAllOpportunityTypes,omitempty"`
	RestrictViewByOpportunityStatusFlag NullableBool                `json:"restrictViewByOpportunityStatusFlag,omitempty"`
	RestrictViewByOpportunityTypeFlag   NullableBool                `json:"restrictViewByOpportunityTypeFlag,omitempty"`
	AcceptanceChangeStatusFlag          NullableBool                `json:"acceptanceChangeStatusFlag,omitempty"`
	AcceptanceCreateActivityFlag        NullableBool                `json:"acceptanceCreateActivityFlag,omitempty"`
	AcceptanceOpportunityStatus         *OpportunityStatusReference `json:"acceptanceOpportunityStatus,omitempty"`
	AcceptanceSendEmailFlag             NullableBool                `json:"acceptanceSendEmailFlag,omitempty"`
	AcceptanceEmailFromFirstName        *string                     `json:"acceptanceEmailFromFirstName,omitempty"`
	AcceptanceEmailFromLastName         *string                     `json:"acceptanceEmailFromLastName,omitempty"`
	AcceptanceEmailSubject              *string                     `json:"acceptanceEmailSubject,omitempty"`
	AcceptanceEmailBody                 *string                     `json:"acceptanceEmailBody,omitempty"`
	// Gets or sets             required when acceptanceSendEmailFlag is true.
	AcceptanceFromEmail             *string                     `json:"acceptanceFromEmail,omitempty"`
	AcceptanceEmailActivityType     *ActivityTypeReference      `json:"acceptanceEmailActivityType,omitempty"`
	AcceptanceEmailAssignedByMember *MemberReference            `json:"acceptanceEmailAssignedByMember,omitempty"`
	RejectionChangeStatusFlag       NullableBool                `json:"rejectionChangeStatusFlag,omitempty"`
	RejectionCreateActivityFlag     NullableBool                `json:"rejectionCreateActivityFlag,omitempty"`
	RejectionOpportunityStatus      *OpportunityStatusReference `json:"rejectionOpportunityStatus,omitempty"`
	RejectionSendEmailFlag          NullableBool                `json:"rejectionSendEmailFlag,omitempty"`
	RejectionEmailFromFirstName     *string                     `json:"rejectionEmailFromFirstName,omitempty"`
	RejectionEmailFromLastName      *string                     `json:"rejectionEmailFromLastName,omitempty"`
	// Gets or sets             required when rejectionSendEmailFlag is true.
	RejectionFromEmail                                 *string                `json:"rejectionFromEmail,omitempty"`
	RejectionEmailSubject                              *string                `json:"rejectionEmailSubject,omitempty"`
	RejectionEmailBody                                 *string                `json:"rejectionEmailBody,omitempty"`
	RejectionEmailActivityType                         *ActivityTypeReference `json:"rejectionEmailActivityType,omitempty"`
	RejectionEmailAssignedByMember                     *MemberReference       `json:"rejectionEmailAssignedByMember,omitempty"`
	ConfirmationSendEmailFlag                          NullableBool           `json:"confirmationSendEmailFlag,omitempty"`
	ConfirmationEmailUseDefaultCompanyEmailAddressFlag NullableBool           `json:"confirmationEmailUseDefaultCompanyEmailAddressFlag,omitempty"`
	ConfirmationEmailFromFirstName                     *string                `json:"confirmationEmailFromFirstName,omitempty"`
	ConfirmationEmailFromLastName                      *string                `json:"confirmationEmailFromLastName,omitempty"`
	// Gets or sets             required when confirmationSendEmailFlag is true.
	ConfirmationFromEmail    *string            `json:"confirmationFromEmail,omitempty"`
	ConfirmationEmailSubject *string            `json:"confirmationEmailSubject,omitempty"`
	ConfirmationEmailBody    *string            `json:"confirmationEmailBody,omitempty"`
	Info                     *map[string]string `json:"_info,omitempty"`
}

// NewPortalConfigurationOpportunitySetup instantiates a new PortalConfigurationOpportunitySetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalConfigurationOpportunitySetup() *PortalConfigurationOpportunitySetup {
	this := PortalConfigurationOpportunitySetup{}
	return &this
}

// NewPortalConfigurationOpportunitySetupWithDefaults instantiates a new PortalConfigurationOpportunitySetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalConfigurationOpportunitySetupWithDefaults() *PortalConfigurationOpportunitySetup {
	this := PortalConfigurationOpportunitySetup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PortalConfigurationOpportunitySetup) SetId(v int32) {
	o.Id = &v
}

// GetOpportunityStatusRecIDs returns the OpportunityStatusRecIDs field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetOpportunityStatusRecIDs() []int32 {
	if o == nil || IsNil(o.OpportunityStatusRecIDs) {
		var ret []int32
		return ret
	}
	return o.OpportunityStatusRecIDs
}

// GetOpportunityStatusRecIDsOk returns a tuple with the OpportunityStatusRecIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetOpportunityStatusRecIDsOk() ([]int32, bool) {
	if o == nil || IsNil(o.OpportunityStatusRecIDs) {
		return nil, false
	}
	return o.OpportunityStatusRecIDs, true
}

// HasOpportunityStatusRecIDs returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasOpportunityStatusRecIDs() bool {
	if o != nil && !IsNil(o.OpportunityStatusRecIDs) {
		return true
	}

	return false
}

// SetOpportunityStatusRecIDs gets a reference to the given []int32 and assigns it to the OpportunityStatusRecIDs field.
func (o *PortalConfigurationOpportunitySetup) SetOpportunityStatusRecIDs(v []int32) {
	o.OpportunityStatusRecIDs = v
}

// GetAddAllOpportunityStatuses returns the AddAllOpportunityStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetAddAllOpportunityStatuses() bool {
	if o == nil || IsNil(o.AddAllOpportunityStatuses.Get()) {
		var ret bool
		return ret
	}
	return *o.AddAllOpportunityStatuses.Get()
}

// GetAddAllOpportunityStatusesOk returns a tuple with the AddAllOpportunityStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetAddAllOpportunityStatusesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddAllOpportunityStatuses.Get(), o.AddAllOpportunityStatuses.IsSet()
}

// HasAddAllOpportunityStatuses returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAddAllOpportunityStatuses() bool {
	if o != nil && o.AddAllOpportunityStatuses.IsSet() {
		return true
	}

	return false
}

// SetAddAllOpportunityStatuses gets a reference to the given NullableBool and assigns it to the AddAllOpportunityStatuses field.
func (o *PortalConfigurationOpportunitySetup) SetAddAllOpportunityStatuses(v bool) {
	o.AddAllOpportunityStatuses.Set(&v)
}

// SetAddAllOpportunityStatusesNil sets the value for AddAllOpportunityStatuses to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetAddAllOpportunityStatusesNil() {
	o.AddAllOpportunityStatuses.Set(nil)
}

// UnsetAddAllOpportunityStatuses ensures that no value is present for AddAllOpportunityStatuses, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetAddAllOpportunityStatuses() {
	o.AddAllOpportunityStatuses.Unset()
}

// GetRemoveAllOpportunityStatuses returns the RemoveAllOpportunityStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRemoveAllOpportunityStatuses() bool {
	if o == nil || IsNil(o.RemoveAllOpportunityStatuses.Get()) {
		var ret bool
		return ret
	}
	return *o.RemoveAllOpportunityStatuses.Get()
}

// GetRemoveAllOpportunityStatusesOk returns a tuple with the RemoveAllOpportunityStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRemoveAllOpportunityStatusesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveAllOpportunityStatuses.Get(), o.RemoveAllOpportunityStatuses.IsSet()
}

// HasRemoveAllOpportunityStatuses returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRemoveAllOpportunityStatuses() bool {
	if o != nil && o.RemoveAllOpportunityStatuses.IsSet() {
		return true
	}

	return false
}

// SetRemoveAllOpportunityStatuses gets a reference to the given NullableBool and assigns it to the RemoveAllOpportunityStatuses field.
func (o *PortalConfigurationOpportunitySetup) SetRemoveAllOpportunityStatuses(v bool) {
	o.RemoveAllOpportunityStatuses.Set(&v)
}

// SetRemoveAllOpportunityStatusesNil sets the value for RemoveAllOpportunityStatuses to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRemoveAllOpportunityStatusesNil() {
	o.RemoveAllOpportunityStatuses.Set(nil)
}

// UnsetRemoveAllOpportunityStatuses ensures that no value is present for RemoveAllOpportunityStatuses, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRemoveAllOpportunityStatuses() {
	o.RemoveAllOpportunityStatuses.Unset()
}

// GetOpportunityTypeRecIDs returns the OpportunityTypeRecIDs field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetOpportunityTypeRecIDs() []int32 {
	if o == nil || IsNil(o.OpportunityTypeRecIDs) {
		var ret []int32
		return ret
	}
	return o.OpportunityTypeRecIDs
}

// GetOpportunityTypeRecIDsOk returns a tuple with the OpportunityTypeRecIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetOpportunityTypeRecIDsOk() ([]int32, bool) {
	if o == nil || IsNil(o.OpportunityTypeRecIDs) {
		return nil, false
	}
	return o.OpportunityTypeRecIDs, true
}

// HasOpportunityTypeRecIDs returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasOpportunityTypeRecIDs() bool {
	if o != nil && !IsNil(o.OpportunityTypeRecIDs) {
		return true
	}

	return false
}

// SetOpportunityTypeRecIDs gets a reference to the given []int32 and assigns it to the OpportunityTypeRecIDs field.
func (o *PortalConfigurationOpportunitySetup) SetOpportunityTypeRecIDs(v []int32) {
	o.OpportunityTypeRecIDs = v
}

// GetAddAllOpportunityTypes returns the AddAllOpportunityTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetAddAllOpportunityTypes() bool {
	if o == nil || IsNil(o.AddAllOpportunityTypes.Get()) {
		var ret bool
		return ret
	}
	return *o.AddAllOpportunityTypes.Get()
}

// GetAddAllOpportunityTypesOk returns a tuple with the AddAllOpportunityTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetAddAllOpportunityTypesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddAllOpportunityTypes.Get(), o.AddAllOpportunityTypes.IsSet()
}

// HasAddAllOpportunityTypes returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAddAllOpportunityTypes() bool {
	if o != nil && o.AddAllOpportunityTypes.IsSet() {
		return true
	}

	return false
}

// SetAddAllOpportunityTypes gets a reference to the given NullableBool and assigns it to the AddAllOpportunityTypes field.
func (o *PortalConfigurationOpportunitySetup) SetAddAllOpportunityTypes(v bool) {
	o.AddAllOpportunityTypes.Set(&v)
}

// SetAddAllOpportunityTypesNil sets the value for AddAllOpportunityTypes to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetAddAllOpportunityTypesNil() {
	o.AddAllOpportunityTypes.Set(nil)
}

// UnsetAddAllOpportunityTypes ensures that no value is present for AddAllOpportunityTypes, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetAddAllOpportunityTypes() {
	o.AddAllOpportunityTypes.Unset()
}

// GetRemoveAllOpportunityTypes returns the RemoveAllOpportunityTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRemoveAllOpportunityTypes() bool {
	if o == nil || IsNil(o.RemoveAllOpportunityTypes.Get()) {
		var ret bool
		return ret
	}
	return *o.RemoveAllOpportunityTypes.Get()
}

// GetRemoveAllOpportunityTypesOk returns a tuple with the RemoveAllOpportunityTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRemoveAllOpportunityTypesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveAllOpportunityTypes.Get(), o.RemoveAllOpportunityTypes.IsSet()
}

// HasRemoveAllOpportunityTypes returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRemoveAllOpportunityTypes() bool {
	if o != nil && o.RemoveAllOpportunityTypes.IsSet() {
		return true
	}

	return false
}

// SetRemoveAllOpportunityTypes gets a reference to the given NullableBool and assigns it to the RemoveAllOpportunityTypes field.
func (o *PortalConfigurationOpportunitySetup) SetRemoveAllOpportunityTypes(v bool) {
	o.RemoveAllOpportunityTypes.Set(&v)
}

// SetRemoveAllOpportunityTypesNil sets the value for RemoveAllOpportunityTypes to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRemoveAllOpportunityTypesNil() {
	o.RemoveAllOpportunityTypes.Set(nil)
}

// UnsetRemoveAllOpportunityTypes ensures that no value is present for RemoveAllOpportunityTypes, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRemoveAllOpportunityTypes() {
	o.RemoveAllOpportunityTypes.Unset()
}

// GetRestrictViewByOpportunityStatusFlag returns the RestrictViewByOpportunityStatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRestrictViewByOpportunityStatusFlag() bool {
	if o == nil || IsNil(o.RestrictViewByOpportunityStatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictViewByOpportunityStatusFlag.Get()
}

// GetRestrictViewByOpportunityStatusFlagOk returns a tuple with the RestrictViewByOpportunityStatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRestrictViewByOpportunityStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictViewByOpportunityStatusFlag.Get(), o.RestrictViewByOpportunityStatusFlag.IsSet()
}

// HasRestrictViewByOpportunityStatusFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRestrictViewByOpportunityStatusFlag() bool {
	if o != nil && o.RestrictViewByOpportunityStatusFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictViewByOpportunityStatusFlag gets a reference to the given NullableBool and assigns it to the RestrictViewByOpportunityStatusFlag field.
func (o *PortalConfigurationOpportunitySetup) SetRestrictViewByOpportunityStatusFlag(v bool) {
	o.RestrictViewByOpportunityStatusFlag.Set(&v)
}

// SetRestrictViewByOpportunityStatusFlagNil sets the value for RestrictViewByOpportunityStatusFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRestrictViewByOpportunityStatusFlagNil() {
	o.RestrictViewByOpportunityStatusFlag.Set(nil)
}

// UnsetRestrictViewByOpportunityStatusFlag ensures that no value is present for RestrictViewByOpportunityStatusFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRestrictViewByOpportunityStatusFlag() {
	o.RestrictViewByOpportunityStatusFlag.Unset()
}

// GetRestrictViewByOpportunityTypeFlag returns the RestrictViewByOpportunityTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRestrictViewByOpportunityTypeFlag() bool {
	if o == nil || IsNil(o.RestrictViewByOpportunityTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictViewByOpportunityTypeFlag.Get()
}

// GetRestrictViewByOpportunityTypeFlagOk returns a tuple with the RestrictViewByOpportunityTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRestrictViewByOpportunityTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictViewByOpportunityTypeFlag.Get(), o.RestrictViewByOpportunityTypeFlag.IsSet()
}

// HasRestrictViewByOpportunityTypeFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRestrictViewByOpportunityTypeFlag() bool {
	if o != nil && o.RestrictViewByOpportunityTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictViewByOpportunityTypeFlag gets a reference to the given NullableBool and assigns it to the RestrictViewByOpportunityTypeFlag field.
func (o *PortalConfigurationOpportunitySetup) SetRestrictViewByOpportunityTypeFlag(v bool) {
	o.RestrictViewByOpportunityTypeFlag.Set(&v)
}

// SetRestrictViewByOpportunityTypeFlagNil sets the value for RestrictViewByOpportunityTypeFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRestrictViewByOpportunityTypeFlagNil() {
	o.RestrictViewByOpportunityTypeFlag.Set(nil)
}

// UnsetRestrictViewByOpportunityTypeFlag ensures that no value is present for RestrictViewByOpportunityTypeFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRestrictViewByOpportunityTypeFlag() {
	o.RestrictViewByOpportunityTypeFlag.Unset()
}

// GetAcceptanceChangeStatusFlag returns the AcceptanceChangeStatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceChangeStatusFlag() bool {
	if o == nil || IsNil(o.AcceptanceChangeStatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AcceptanceChangeStatusFlag.Get()
}

// GetAcceptanceChangeStatusFlagOk returns a tuple with the AcceptanceChangeStatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceChangeStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcceptanceChangeStatusFlag.Get(), o.AcceptanceChangeStatusFlag.IsSet()
}

// HasAcceptanceChangeStatusFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceChangeStatusFlag() bool {
	if o != nil && o.AcceptanceChangeStatusFlag.IsSet() {
		return true
	}

	return false
}

// SetAcceptanceChangeStatusFlag gets a reference to the given NullableBool and assigns it to the AcceptanceChangeStatusFlag field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceChangeStatusFlag(v bool) {
	o.AcceptanceChangeStatusFlag.Set(&v)
}

// SetAcceptanceChangeStatusFlagNil sets the value for AcceptanceChangeStatusFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceChangeStatusFlagNil() {
	o.AcceptanceChangeStatusFlag.Set(nil)
}

// UnsetAcceptanceChangeStatusFlag ensures that no value is present for AcceptanceChangeStatusFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetAcceptanceChangeStatusFlag() {
	o.AcceptanceChangeStatusFlag.Unset()
}

// GetAcceptanceCreateActivityFlag returns the AcceptanceCreateActivityFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceCreateActivityFlag() bool {
	if o == nil || IsNil(o.AcceptanceCreateActivityFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AcceptanceCreateActivityFlag.Get()
}

// GetAcceptanceCreateActivityFlagOk returns a tuple with the AcceptanceCreateActivityFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceCreateActivityFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcceptanceCreateActivityFlag.Get(), o.AcceptanceCreateActivityFlag.IsSet()
}

// HasAcceptanceCreateActivityFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceCreateActivityFlag() bool {
	if o != nil && o.AcceptanceCreateActivityFlag.IsSet() {
		return true
	}

	return false
}

// SetAcceptanceCreateActivityFlag gets a reference to the given NullableBool and assigns it to the AcceptanceCreateActivityFlag field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceCreateActivityFlag(v bool) {
	o.AcceptanceCreateActivityFlag.Set(&v)
}

// SetAcceptanceCreateActivityFlagNil sets the value for AcceptanceCreateActivityFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceCreateActivityFlagNil() {
	o.AcceptanceCreateActivityFlag.Set(nil)
}

// UnsetAcceptanceCreateActivityFlag ensures that no value is present for AcceptanceCreateActivityFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetAcceptanceCreateActivityFlag() {
	o.AcceptanceCreateActivityFlag.Unset()
}

// GetAcceptanceOpportunityStatus returns the AcceptanceOpportunityStatus field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceOpportunityStatus() OpportunityStatusReference {
	if o == nil || IsNil(o.AcceptanceOpportunityStatus) {
		var ret OpportunityStatusReference
		return ret
	}
	return *o.AcceptanceOpportunityStatus
}

// GetAcceptanceOpportunityStatusOk returns a tuple with the AcceptanceOpportunityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceOpportunityStatusOk() (*OpportunityStatusReference, bool) {
	if o == nil || IsNil(o.AcceptanceOpportunityStatus) {
		return nil, false
	}
	return o.AcceptanceOpportunityStatus, true
}

// HasAcceptanceOpportunityStatus returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceOpportunityStatus() bool {
	if o != nil && !IsNil(o.AcceptanceOpportunityStatus) {
		return true
	}

	return false
}

// SetAcceptanceOpportunityStatus gets a reference to the given OpportunityStatusReference and assigns it to the AcceptanceOpportunityStatus field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceOpportunityStatus(v OpportunityStatusReference) {
	o.AcceptanceOpportunityStatus = &v
}

// GetAcceptanceSendEmailFlag returns the AcceptanceSendEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceSendEmailFlag() bool {
	if o == nil || IsNil(o.AcceptanceSendEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AcceptanceSendEmailFlag.Get()
}

// GetAcceptanceSendEmailFlagOk returns a tuple with the AcceptanceSendEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceSendEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcceptanceSendEmailFlag.Get(), o.AcceptanceSendEmailFlag.IsSet()
}

// HasAcceptanceSendEmailFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceSendEmailFlag() bool {
	if o != nil && o.AcceptanceSendEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetAcceptanceSendEmailFlag gets a reference to the given NullableBool and assigns it to the AcceptanceSendEmailFlag field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceSendEmailFlag(v bool) {
	o.AcceptanceSendEmailFlag.Set(&v)
}

// SetAcceptanceSendEmailFlagNil sets the value for AcceptanceSendEmailFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceSendEmailFlagNil() {
	o.AcceptanceSendEmailFlag.Set(nil)
}

// UnsetAcceptanceSendEmailFlag ensures that no value is present for AcceptanceSendEmailFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetAcceptanceSendEmailFlag() {
	o.AcceptanceSendEmailFlag.Unset()
}

// GetAcceptanceEmailFromFirstName returns the AcceptanceEmailFromFirstName field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailFromFirstName() string {
	if o == nil || IsNil(o.AcceptanceEmailFromFirstName) {
		var ret string
		return ret
	}
	return *o.AcceptanceEmailFromFirstName
}

// GetAcceptanceEmailFromFirstNameOk returns a tuple with the AcceptanceEmailFromFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailFromFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptanceEmailFromFirstName) {
		return nil, false
	}
	return o.AcceptanceEmailFromFirstName, true
}

// HasAcceptanceEmailFromFirstName returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceEmailFromFirstName() bool {
	if o != nil && !IsNil(o.AcceptanceEmailFromFirstName) {
		return true
	}

	return false
}

// SetAcceptanceEmailFromFirstName gets a reference to the given string and assigns it to the AcceptanceEmailFromFirstName field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceEmailFromFirstName(v string) {
	o.AcceptanceEmailFromFirstName = &v
}

// GetAcceptanceEmailFromLastName returns the AcceptanceEmailFromLastName field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailFromLastName() string {
	if o == nil || IsNil(o.AcceptanceEmailFromLastName) {
		var ret string
		return ret
	}
	return *o.AcceptanceEmailFromLastName
}

// GetAcceptanceEmailFromLastNameOk returns a tuple with the AcceptanceEmailFromLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailFromLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptanceEmailFromLastName) {
		return nil, false
	}
	return o.AcceptanceEmailFromLastName, true
}

// HasAcceptanceEmailFromLastName returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceEmailFromLastName() bool {
	if o != nil && !IsNil(o.AcceptanceEmailFromLastName) {
		return true
	}

	return false
}

// SetAcceptanceEmailFromLastName gets a reference to the given string and assigns it to the AcceptanceEmailFromLastName field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceEmailFromLastName(v string) {
	o.AcceptanceEmailFromLastName = &v
}

// GetAcceptanceEmailSubject returns the AcceptanceEmailSubject field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailSubject() string {
	if o == nil || IsNil(o.AcceptanceEmailSubject) {
		var ret string
		return ret
	}
	return *o.AcceptanceEmailSubject
}

// GetAcceptanceEmailSubjectOk returns a tuple with the AcceptanceEmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptanceEmailSubject) {
		return nil, false
	}
	return o.AcceptanceEmailSubject, true
}

// HasAcceptanceEmailSubject returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceEmailSubject() bool {
	if o != nil && !IsNil(o.AcceptanceEmailSubject) {
		return true
	}

	return false
}

// SetAcceptanceEmailSubject gets a reference to the given string and assigns it to the AcceptanceEmailSubject field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceEmailSubject(v string) {
	o.AcceptanceEmailSubject = &v
}

// GetAcceptanceEmailBody returns the AcceptanceEmailBody field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailBody() string {
	if o == nil || IsNil(o.AcceptanceEmailBody) {
		var ret string
		return ret
	}
	return *o.AcceptanceEmailBody
}

// GetAcceptanceEmailBodyOk returns a tuple with the AcceptanceEmailBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailBodyOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptanceEmailBody) {
		return nil, false
	}
	return o.AcceptanceEmailBody, true
}

// HasAcceptanceEmailBody returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceEmailBody() bool {
	if o != nil && !IsNil(o.AcceptanceEmailBody) {
		return true
	}

	return false
}

// SetAcceptanceEmailBody gets a reference to the given string and assigns it to the AcceptanceEmailBody field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceEmailBody(v string) {
	o.AcceptanceEmailBody = &v
}

// GetAcceptanceFromEmail returns the AcceptanceFromEmail field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceFromEmail() string {
	if o == nil || IsNil(o.AcceptanceFromEmail) {
		var ret string
		return ret
	}
	return *o.AcceptanceFromEmail
}

// GetAcceptanceFromEmailOk returns a tuple with the AcceptanceFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptanceFromEmail) {
		return nil, false
	}
	return o.AcceptanceFromEmail, true
}

// HasAcceptanceFromEmail returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceFromEmail() bool {
	if o != nil && !IsNil(o.AcceptanceFromEmail) {
		return true
	}

	return false
}

// SetAcceptanceFromEmail gets a reference to the given string and assigns it to the AcceptanceFromEmail field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceFromEmail(v string) {
	o.AcceptanceFromEmail = &v
}

// GetAcceptanceEmailActivityType returns the AcceptanceEmailActivityType field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailActivityType() ActivityTypeReference {
	if o == nil || IsNil(o.AcceptanceEmailActivityType) {
		var ret ActivityTypeReference
		return ret
	}
	return *o.AcceptanceEmailActivityType
}

// GetAcceptanceEmailActivityTypeOk returns a tuple with the AcceptanceEmailActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailActivityTypeOk() (*ActivityTypeReference, bool) {
	if o == nil || IsNil(o.AcceptanceEmailActivityType) {
		return nil, false
	}
	return o.AcceptanceEmailActivityType, true
}

// HasAcceptanceEmailActivityType returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceEmailActivityType() bool {
	if o != nil && !IsNil(o.AcceptanceEmailActivityType) {
		return true
	}

	return false
}

// SetAcceptanceEmailActivityType gets a reference to the given ActivityTypeReference and assigns it to the AcceptanceEmailActivityType field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceEmailActivityType(v ActivityTypeReference) {
	o.AcceptanceEmailActivityType = &v
}

// GetAcceptanceEmailAssignedByMember returns the AcceptanceEmailAssignedByMember field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailAssignedByMember() MemberReference {
	if o == nil || IsNil(o.AcceptanceEmailAssignedByMember) {
		var ret MemberReference
		return ret
	}
	return *o.AcceptanceEmailAssignedByMember
}

// GetAcceptanceEmailAssignedByMemberOk returns a tuple with the AcceptanceEmailAssignedByMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetAcceptanceEmailAssignedByMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.AcceptanceEmailAssignedByMember) {
		return nil, false
	}
	return o.AcceptanceEmailAssignedByMember, true
}

// HasAcceptanceEmailAssignedByMember returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasAcceptanceEmailAssignedByMember() bool {
	if o != nil && !IsNil(o.AcceptanceEmailAssignedByMember) {
		return true
	}

	return false
}

// SetAcceptanceEmailAssignedByMember gets a reference to the given MemberReference and assigns it to the AcceptanceEmailAssignedByMember field.
func (o *PortalConfigurationOpportunitySetup) SetAcceptanceEmailAssignedByMember(v MemberReference) {
	o.AcceptanceEmailAssignedByMember = &v
}

// GetRejectionChangeStatusFlag returns the RejectionChangeStatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRejectionChangeStatusFlag() bool {
	if o == nil || IsNil(o.RejectionChangeStatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RejectionChangeStatusFlag.Get()
}

// GetRejectionChangeStatusFlagOk returns a tuple with the RejectionChangeStatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRejectionChangeStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectionChangeStatusFlag.Get(), o.RejectionChangeStatusFlag.IsSet()
}

// HasRejectionChangeStatusFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionChangeStatusFlag() bool {
	if o != nil && o.RejectionChangeStatusFlag.IsSet() {
		return true
	}

	return false
}

// SetRejectionChangeStatusFlag gets a reference to the given NullableBool and assigns it to the RejectionChangeStatusFlag field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionChangeStatusFlag(v bool) {
	o.RejectionChangeStatusFlag.Set(&v)
}

// SetRejectionChangeStatusFlagNil sets the value for RejectionChangeStatusFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRejectionChangeStatusFlagNil() {
	o.RejectionChangeStatusFlag.Set(nil)
}

// UnsetRejectionChangeStatusFlag ensures that no value is present for RejectionChangeStatusFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRejectionChangeStatusFlag() {
	o.RejectionChangeStatusFlag.Unset()
}

// GetRejectionCreateActivityFlag returns the RejectionCreateActivityFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRejectionCreateActivityFlag() bool {
	if o == nil || IsNil(o.RejectionCreateActivityFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RejectionCreateActivityFlag.Get()
}

// GetRejectionCreateActivityFlagOk returns a tuple with the RejectionCreateActivityFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRejectionCreateActivityFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectionCreateActivityFlag.Get(), o.RejectionCreateActivityFlag.IsSet()
}

// HasRejectionCreateActivityFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionCreateActivityFlag() bool {
	if o != nil && o.RejectionCreateActivityFlag.IsSet() {
		return true
	}

	return false
}

// SetRejectionCreateActivityFlag gets a reference to the given NullableBool and assigns it to the RejectionCreateActivityFlag field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionCreateActivityFlag(v bool) {
	o.RejectionCreateActivityFlag.Set(&v)
}

// SetRejectionCreateActivityFlagNil sets the value for RejectionCreateActivityFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRejectionCreateActivityFlagNil() {
	o.RejectionCreateActivityFlag.Set(nil)
}

// UnsetRejectionCreateActivityFlag ensures that no value is present for RejectionCreateActivityFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRejectionCreateActivityFlag() {
	o.RejectionCreateActivityFlag.Unset()
}

// GetRejectionOpportunityStatus returns the RejectionOpportunityStatus field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionOpportunityStatus() OpportunityStatusReference {
	if o == nil || IsNil(o.RejectionOpportunityStatus) {
		var ret OpportunityStatusReference
		return ret
	}
	return *o.RejectionOpportunityStatus
}

// GetRejectionOpportunityStatusOk returns a tuple with the RejectionOpportunityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionOpportunityStatusOk() (*OpportunityStatusReference, bool) {
	if o == nil || IsNil(o.RejectionOpportunityStatus) {
		return nil, false
	}
	return o.RejectionOpportunityStatus, true
}

// HasRejectionOpportunityStatus returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionOpportunityStatus() bool {
	if o != nil && !IsNil(o.RejectionOpportunityStatus) {
		return true
	}

	return false
}

// SetRejectionOpportunityStatus gets a reference to the given OpportunityStatusReference and assigns it to the RejectionOpportunityStatus field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionOpportunityStatus(v OpportunityStatusReference) {
	o.RejectionOpportunityStatus = &v
}

// GetRejectionSendEmailFlag returns the RejectionSendEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetRejectionSendEmailFlag() bool {
	if o == nil || IsNil(o.RejectionSendEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RejectionSendEmailFlag.Get()
}

// GetRejectionSendEmailFlagOk returns a tuple with the RejectionSendEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetRejectionSendEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectionSendEmailFlag.Get(), o.RejectionSendEmailFlag.IsSet()
}

// HasRejectionSendEmailFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionSendEmailFlag() bool {
	if o != nil && o.RejectionSendEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetRejectionSendEmailFlag gets a reference to the given NullableBool and assigns it to the RejectionSendEmailFlag field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionSendEmailFlag(v bool) {
	o.RejectionSendEmailFlag.Set(&v)
}

// SetRejectionSendEmailFlagNil sets the value for RejectionSendEmailFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetRejectionSendEmailFlagNil() {
	o.RejectionSendEmailFlag.Set(nil)
}

// UnsetRejectionSendEmailFlag ensures that no value is present for RejectionSendEmailFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetRejectionSendEmailFlag() {
	o.RejectionSendEmailFlag.Unset()
}

// GetRejectionEmailFromFirstName returns the RejectionEmailFromFirstName field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailFromFirstName() string {
	if o == nil || IsNil(o.RejectionEmailFromFirstName) {
		var ret string
		return ret
	}
	return *o.RejectionEmailFromFirstName
}

// GetRejectionEmailFromFirstNameOk returns a tuple with the RejectionEmailFromFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailFromFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionEmailFromFirstName) {
		return nil, false
	}
	return o.RejectionEmailFromFirstName, true
}

// HasRejectionEmailFromFirstName returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionEmailFromFirstName() bool {
	if o != nil && !IsNil(o.RejectionEmailFromFirstName) {
		return true
	}

	return false
}

// SetRejectionEmailFromFirstName gets a reference to the given string and assigns it to the RejectionEmailFromFirstName field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionEmailFromFirstName(v string) {
	o.RejectionEmailFromFirstName = &v
}

// GetRejectionEmailFromLastName returns the RejectionEmailFromLastName field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailFromLastName() string {
	if o == nil || IsNil(o.RejectionEmailFromLastName) {
		var ret string
		return ret
	}
	return *o.RejectionEmailFromLastName
}

// GetRejectionEmailFromLastNameOk returns a tuple with the RejectionEmailFromLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailFromLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionEmailFromLastName) {
		return nil, false
	}
	return o.RejectionEmailFromLastName, true
}

// HasRejectionEmailFromLastName returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionEmailFromLastName() bool {
	if o != nil && !IsNil(o.RejectionEmailFromLastName) {
		return true
	}

	return false
}

// SetRejectionEmailFromLastName gets a reference to the given string and assigns it to the RejectionEmailFromLastName field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionEmailFromLastName(v string) {
	o.RejectionEmailFromLastName = &v
}

// GetRejectionFromEmail returns the RejectionFromEmail field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionFromEmail() string {
	if o == nil || IsNil(o.RejectionFromEmail) {
		var ret string
		return ret
	}
	return *o.RejectionFromEmail
}

// GetRejectionFromEmailOk returns a tuple with the RejectionFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionFromEmail) {
		return nil, false
	}
	return o.RejectionFromEmail, true
}

// HasRejectionFromEmail returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionFromEmail() bool {
	if o != nil && !IsNil(o.RejectionFromEmail) {
		return true
	}

	return false
}

// SetRejectionFromEmail gets a reference to the given string and assigns it to the RejectionFromEmail field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionFromEmail(v string) {
	o.RejectionFromEmail = &v
}

// GetRejectionEmailSubject returns the RejectionEmailSubject field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailSubject() string {
	if o == nil || IsNil(o.RejectionEmailSubject) {
		var ret string
		return ret
	}
	return *o.RejectionEmailSubject
}

// GetRejectionEmailSubjectOk returns a tuple with the RejectionEmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionEmailSubject) {
		return nil, false
	}
	return o.RejectionEmailSubject, true
}

// HasRejectionEmailSubject returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionEmailSubject() bool {
	if o != nil && !IsNil(o.RejectionEmailSubject) {
		return true
	}

	return false
}

// SetRejectionEmailSubject gets a reference to the given string and assigns it to the RejectionEmailSubject field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionEmailSubject(v string) {
	o.RejectionEmailSubject = &v
}

// GetRejectionEmailBody returns the RejectionEmailBody field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailBody() string {
	if o == nil || IsNil(o.RejectionEmailBody) {
		var ret string
		return ret
	}
	return *o.RejectionEmailBody
}

// GetRejectionEmailBodyOk returns a tuple with the RejectionEmailBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailBodyOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionEmailBody) {
		return nil, false
	}
	return o.RejectionEmailBody, true
}

// HasRejectionEmailBody returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionEmailBody() bool {
	if o != nil && !IsNil(o.RejectionEmailBody) {
		return true
	}

	return false
}

// SetRejectionEmailBody gets a reference to the given string and assigns it to the RejectionEmailBody field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionEmailBody(v string) {
	o.RejectionEmailBody = &v
}

// GetRejectionEmailActivityType returns the RejectionEmailActivityType field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailActivityType() ActivityTypeReference {
	if o == nil || IsNil(o.RejectionEmailActivityType) {
		var ret ActivityTypeReference
		return ret
	}
	return *o.RejectionEmailActivityType
}

// GetRejectionEmailActivityTypeOk returns a tuple with the RejectionEmailActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailActivityTypeOk() (*ActivityTypeReference, bool) {
	if o == nil || IsNil(o.RejectionEmailActivityType) {
		return nil, false
	}
	return o.RejectionEmailActivityType, true
}

// HasRejectionEmailActivityType returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionEmailActivityType() bool {
	if o != nil && !IsNil(o.RejectionEmailActivityType) {
		return true
	}

	return false
}

// SetRejectionEmailActivityType gets a reference to the given ActivityTypeReference and assigns it to the RejectionEmailActivityType field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionEmailActivityType(v ActivityTypeReference) {
	o.RejectionEmailActivityType = &v
}

// GetRejectionEmailAssignedByMember returns the RejectionEmailAssignedByMember field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailAssignedByMember() MemberReference {
	if o == nil || IsNil(o.RejectionEmailAssignedByMember) {
		var ret MemberReference
		return ret
	}
	return *o.RejectionEmailAssignedByMember
}

// GetRejectionEmailAssignedByMemberOk returns a tuple with the RejectionEmailAssignedByMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetRejectionEmailAssignedByMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.RejectionEmailAssignedByMember) {
		return nil, false
	}
	return o.RejectionEmailAssignedByMember, true
}

// HasRejectionEmailAssignedByMember returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasRejectionEmailAssignedByMember() bool {
	if o != nil && !IsNil(o.RejectionEmailAssignedByMember) {
		return true
	}

	return false
}

// SetRejectionEmailAssignedByMember gets a reference to the given MemberReference and assigns it to the RejectionEmailAssignedByMember field.
func (o *PortalConfigurationOpportunitySetup) SetRejectionEmailAssignedByMember(v MemberReference) {
	o.RejectionEmailAssignedByMember = &v
}

// GetConfirmationSendEmailFlag returns the ConfirmationSendEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetConfirmationSendEmailFlag() bool {
	if o == nil || IsNil(o.ConfirmationSendEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ConfirmationSendEmailFlag.Get()
}

// GetConfirmationSendEmailFlagOk returns a tuple with the ConfirmationSendEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetConfirmationSendEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfirmationSendEmailFlag.Get(), o.ConfirmationSendEmailFlag.IsSet()
}

// HasConfirmationSendEmailFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationSendEmailFlag() bool {
	if o != nil && o.ConfirmationSendEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetConfirmationSendEmailFlag gets a reference to the given NullableBool and assigns it to the ConfirmationSendEmailFlag field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationSendEmailFlag(v bool) {
	o.ConfirmationSendEmailFlag.Set(&v)
}

// SetConfirmationSendEmailFlagNil sets the value for ConfirmationSendEmailFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetConfirmationSendEmailFlagNil() {
	o.ConfirmationSendEmailFlag.Set(nil)
}

// UnsetConfirmationSendEmailFlag ensures that no value is present for ConfirmationSendEmailFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetConfirmationSendEmailFlag() {
	o.ConfirmationSendEmailFlag.Unset()
}

// GetConfirmationEmailUseDefaultCompanyEmailAddressFlag returns the ConfirmationEmailUseDefaultCompanyEmailAddressFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailUseDefaultCompanyEmailAddressFlag() bool {
	if o == nil || IsNil(o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Get()
}

// GetConfirmationEmailUseDefaultCompanyEmailAddressFlagOk returns a tuple with the ConfirmationEmailUseDefaultCompanyEmailAddressFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailUseDefaultCompanyEmailAddressFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Get(), o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.IsSet()
}

// HasConfirmationEmailUseDefaultCompanyEmailAddressFlag returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationEmailUseDefaultCompanyEmailAddressFlag() bool {
	if o != nil && o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.IsSet() {
		return true
	}

	return false
}

// SetConfirmationEmailUseDefaultCompanyEmailAddressFlag gets a reference to the given NullableBool and assigns it to the ConfirmationEmailUseDefaultCompanyEmailAddressFlag field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationEmailUseDefaultCompanyEmailAddressFlag(v bool) {
	o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Set(&v)
}

// SetConfirmationEmailUseDefaultCompanyEmailAddressFlagNil sets the value for ConfirmationEmailUseDefaultCompanyEmailAddressFlag to be an explicit nil
func (o *PortalConfigurationOpportunitySetup) SetConfirmationEmailUseDefaultCompanyEmailAddressFlagNil() {
	o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Set(nil)
}

// UnsetConfirmationEmailUseDefaultCompanyEmailAddressFlag ensures that no value is present for ConfirmationEmailUseDefaultCompanyEmailAddressFlag, not even an explicit nil
func (o *PortalConfigurationOpportunitySetup) UnsetConfirmationEmailUseDefaultCompanyEmailAddressFlag() {
	o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Unset()
}

// GetConfirmationEmailFromFirstName returns the ConfirmationEmailFromFirstName field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailFromFirstName() string {
	if o == nil || IsNil(o.ConfirmationEmailFromFirstName) {
		var ret string
		return ret
	}
	return *o.ConfirmationEmailFromFirstName
}

// GetConfirmationEmailFromFirstNameOk returns a tuple with the ConfirmationEmailFromFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailFromFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationEmailFromFirstName) {
		return nil, false
	}
	return o.ConfirmationEmailFromFirstName, true
}

// HasConfirmationEmailFromFirstName returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationEmailFromFirstName() bool {
	if o != nil && !IsNil(o.ConfirmationEmailFromFirstName) {
		return true
	}

	return false
}

// SetConfirmationEmailFromFirstName gets a reference to the given string and assigns it to the ConfirmationEmailFromFirstName field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationEmailFromFirstName(v string) {
	o.ConfirmationEmailFromFirstName = &v
}

// GetConfirmationEmailFromLastName returns the ConfirmationEmailFromLastName field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailFromLastName() string {
	if o == nil || IsNil(o.ConfirmationEmailFromLastName) {
		var ret string
		return ret
	}
	return *o.ConfirmationEmailFromLastName
}

// GetConfirmationEmailFromLastNameOk returns a tuple with the ConfirmationEmailFromLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailFromLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationEmailFromLastName) {
		return nil, false
	}
	return o.ConfirmationEmailFromLastName, true
}

// HasConfirmationEmailFromLastName returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationEmailFromLastName() bool {
	if o != nil && !IsNil(o.ConfirmationEmailFromLastName) {
		return true
	}

	return false
}

// SetConfirmationEmailFromLastName gets a reference to the given string and assigns it to the ConfirmationEmailFromLastName field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationEmailFromLastName(v string) {
	o.ConfirmationEmailFromLastName = &v
}

// GetConfirmationFromEmail returns the ConfirmationFromEmail field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationFromEmail() string {
	if o == nil || IsNil(o.ConfirmationFromEmail) {
		var ret string
		return ret
	}
	return *o.ConfirmationFromEmail
}

// GetConfirmationFromEmailOk returns a tuple with the ConfirmationFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationFromEmail) {
		return nil, false
	}
	return o.ConfirmationFromEmail, true
}

// HasConfirmationFromEmail returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationFromEmail() bool {
	if o != nil && !IsNil(o.ConfirmationFromEmail) {
		return true
	}

	return false
}

// SetConfirmationFromEmail gets a reference to the given string and assigns it to the ConfirmationFromEmail field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationFromEmail(v string) {
	o.ConfirmationFromEmail = &v
}

// GetConfirmationEmailSubject returns the ConfirmationEmailSubject field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailSubject() string {
	if o == nil || IsNil(o.ConfirmationEmailSubject) {
		var ret string
		return ret
	}
	return *o.ConfirmationEmailSubject
}

// GetConfirmationEmailSubjectOk returns a tuple with the ConfirmationEmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationEmailSubject) {
		return nil, false
	}
	return o.ConfirmationEmailSubject, true
}

// HasConfirmationEmailSubject returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationEmailSubject() bool {
	if o != nil && !IsNil(o.ConfirmationEmailSubject) {
		return true
	}

	return false
}

// SetConfirmationEmailSubject gets a reference to the given string and assigns it to the ConfirmationEmailSubject field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationEmailSubject(v string) {
	o.ConfirmationEmailSubject = &v
}

// GetConfirmationEmailBody returns the ConfirmationEmailBody field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailBody() string {
	if o == nil || IsNil(o.ConfirmationEmailBody) {
		var ret string
		return ret
	}
	return *o.ConfirmationEmailBody
}

// GetConfirmationEmailBodyOk returns a tuple with the ConfirmationEmailBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetConfirmationEmailBodyOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationEmailBody) {
		return nil, false
	}
	return o.ConfirmationEmailBody, true
}

// HasConfirmationEmailBody returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasConfirmationEmailBody() bool {
	if o != nil && !IsNil(o.ConfirmationEmailBody) {
		return true
	}

	return false
}

// SetConfirmationEmailBody gets a reference to the given string and assigns it to the ConfirmationEmailBody field.
func (o *PortalConfigurationOpportunitySetup) SetConfirmationEmailBody(v string) {
	o.ConfirmationEmailBody = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *PortalConfigurationOpportunitySetup) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationOpportunitySetup) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *PortalConfigurationOpportunitySetup) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *PortalConfigurationOpportunitySetup) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o PortalConfigurationOpportunitySetup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortalConfigurationOpportunitySetup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OpportunityStatusRecIDs) {
		toSerialize["opportunityStatusRecIDs"] = o.OpportunityStatusRecIDs
	}
	if o.AddAllOpportunityStatuses.IsSet() {
		toSerialize["addAllOpportunityStatuses"] = o.AddAllOpportunityStatuses.Get()
	}
	if o.RemoveAllOpportunityStatuses.IsSet() {
		toSerialize["removeAllOpportunityStatuses"] = o.RemoveAllOpportunityStatuses.Get()
	}
	if !IsNil(o.OpportunityTypeRecIDs) {
		toSerialize["opportunityTypeRecIDs"] = o.OpportunityTypeRecIDs
	}
	if o.AddAllOpportunityTypes.IsSet() {
		toSerialize["addAllOpportunityTypes"] = o.AddAllOpportunityTypes.Get()
	}
	if o.RemoveAllOpportunityTypes.IsSet() {
		toSerialize["removeAllOpportunityTypes"] = o.RemoveAllOpportunityTypes.Get()
	}
	if o.RestrictViewByOpportunityStatusFlag.IsSet() {
		toSerialize["restrictViewByOpportunityStatusFlag"] = o.RestrictViewByOpportunityStatusFlag.Get()
	}
	if o.RestrictViewByOpportunityTypeFlag.IsSet() {
		toSerialize["restrictViewByOpportunityTypeFlag"] = o.RestrictViewByOpportunityTypeFlag.Get()
	}
	if o.AcceptanceChangeStatusFlag.IsSet() {
		toSerialize["acceptanceChangeStatusFlag"] = o.AcceptanceChangeStatusFlag.Get()
	}
	if o.AcceptanceCreateActivityFlag.IsSet() {
		toSerialize["acceptanceCreateActivityFlag"] = o.AcceptanceCreateActivityFlag.Get()
	}
	if !IsNil(o.AcceptanceOpportunityStatus) {
		toSerialize["acceptanceOpportunityStatus"] = o.AcceptanceOpportunityStatus
	}
	if o.AcceptanceSendEmailFlag.IsSet() {
		toSerialize["acceptanceSendEmailFlag"] = o.AcceptanceSendEmailFlag.Get()
	}
	if !IsNil(o.AcceptanceEmailFromFirstName) {
		toSerialize["acceptanceEmailFromFirstName"] = o.AcceptanceEmailFromFirstName
	}
	if !IsNil(o.AcceptanceEmailFromLastName) {
		toSerialize["acceptanceEmailFromLastName"] = o.AcceptanceEmailFromLastName
	}
	if !IsNil(o.AcceptanceEmailSubject) {
		toSerialize["acceptanceEmailSubject"] = o.AcceptanceEmailSubject
	}
	if !IsNil(o.AcceptanceEmailBody) {
		toSerialize["acceptanceEmailBody"] = o.AcceptanceEmailBody
	}
	if !IsNil(o.AcceptanceFromEmail) {
		toSerialize["acceptanceFromEmail"] = o.AcceptanceFromEmail
	}
	if !IsNil(o.AcceptanceEmailActivityType) {
		toSerialize["acceptanceEmailActivityType"] = o.AcceptanceEmailActivityType
	}
	if !IsNil(o.AcceptanceEmailAssignedByMember) {
		toSerialize["acceptanceEmailAssignedByMember"] = o.AcceptanceEmailAssignedByMember
	}
	if o.RejectionChangeStatusFlag.IsSet() {
		toSerialize["rejectionChangeStatusFlag"] = o.RejectionChangeStatusFlag.Get()
	}
	if o.RejectionCreateActivityFlag.IsSet() {
		toSerialize["rejectionCreateActivityFlag"] = o.RejectionCreateActivityFlag.Get()
	}
	if !IsNil(o.RejectionOpportunityStatus) {
		toSerialize["rejectionOpportunityStatus"] = o.RejectionOpportunityStatus
	}
	if o.RejectionSendEmailFlag.IsSet() {
		toSerialize["rejectionSendEmailFlag"] = o.RejectionSendEmailFlag.Get()
	}
	if !IsNil(o.RejectionEmailFromFirstName) {
		toSerialize["rejectionEmailFromFirstName"] = o.RejectionEmailFromFirstName
	}
	if !IsNil(o.RejectionEmailFromLastName) {
		toSerialize["rejectionEmailFromLastName"] = o.RejectionEmailFromLastName
	}
	if !IsNil(o.RejectionFromEmail) {
		toSerialize["rejectionFromEmail"] = o.RejectionFromEmail
	}
	if !IsNil(o.RejectionEmailSubject) {
		toSerialize["rejectionEmailSubject"] = o.RejectionEmailSubject
	}
	if !IsNil(o.RejectionEmailBody) {
		toSerialize["rejectionEmailBody"] = o.RejectionEmailBody
	}
	if !IsNil(o.RejectionEmailActivityType) {
		toSerialize["rejectionEmailActivityType"] = o.RejectionEmailActivityType
	}
	if !IsNil(o.RejectionEmailAssignedByMember) {
		toSerialize["rejectionEmailAssignedByMember"] = o.RejectionEmailAssignedByMember
	}
	if o.ConfirmationSendEmailFlag.IsSet() {
		toSerialize["confirmationSendEmailFlag"] = o.ConfirmationSendEmailFlag.Get()
	}
	if o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.IsSet() {
		toSerialize["confirmationEmailUseDefaultCompanyEmailAddressFlag"] = o.ConfirmationEmailUseDefaultCompanyEmailAddressFlag.Get()
	}
	if !IsNil(o.ConfirmationEmailFromFirstName) {
		toSerialize["confirmationEmailFromFirstName"] = o.ConfirmationEmailFromFirstName
	}
	if !IsNil(o.ConfirmationEmailFromLastName) {
		toSerialize["confirmationEmailFromLastName"] = o.ConfirmationEmailFromLastName
	}
	if !IsNil(o.ConfirmationFromEmail) {
		toSerialize["confirmationFromEmail"] = o.ConfirmationFromEmail
	}
	if !IsNil(o.ConfirmationEmailSubject) {
		toSerialize["confirmationEmailSubject"] = o.ConfirmationEmailSubject
	}
	if !IsNil(o.ConfirmationEmailBody) {
		toSerialize["confirmationEmailBody"] = o.ConfirmationEmailBody
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullablePortalConfigurationOpportunitySetup struct {
	value *PortalConfigurationOpportunitySetup
	isSet bool
}

func (v NullablePortalConfigurationOpportunitySetup) Get() *PortalConfigurationOpportunitySetup {
	return v.value
}

func (v *NullablePortalConfigurationOpportunitySetup) Set(val *PortalConfigurationOpportunitySetup) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalConfigurationOpportunitySetup) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalConfigurationOpportunitySetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalConfigurationOpportunitySetup(val *PortalConfigurationOpportunitySetup) *NullablePortalConfigurationOpportunitySetup {
	return &NullablePortalConfigurationOpportunitySetup{value: val, isSet: true}
}

func (v NullablePortalConfigurationOpportunitySetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalConfigurationOpportunitySetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
