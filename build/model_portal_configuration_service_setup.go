/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PortalConfigurationServiceSetup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortalConfigurationServiceSetup{}

// PortalConfigurationServiceSetup struct for PortalConfigurationServiceSetup
type PortalConfigurationServiceSetup struct {
	Id                          *int32                  `json:"id,omitempty"`
	ServiceTypeFlag             NullableBool            `json:"serviceTypeFlag,omitempty"`
	ServiceSubTypeFlag          NullableBool            `json:"serviceSubTypeFlag,omitempty"`
	ServiceSubTypeItemFlag      NullableBool            `json:"serviceSubTypeItemFlag,omitempty"`
	StatusFlag                  NullableBool            `json:"statusFlag,omitempty"`
	SiteNameFlag                NullableBool            `json:"siteNameFlag,omitempty"`
	EnteredDateFlag             NullableBool            `json:"enteredDateFlag,omitempty"`
	LastUpdateFlag              NullableBool            `json:"lastUpdateFlag,omitempty"`
	RequiredDateFlag            NullableBool            `json:"requiredDateFlag,omitempty"`
	ContactFlag                 NullableBool            `json:"contactFlag,omitempty"`
	AssignedResourcesFlag       NullableBool            `json:"assignedResourcesFlag,omitempty"`
	SlaInfoFlag                 NullableBool            `json:"slaInfoFlag,omitempty"`
	ServiceBoardFlag            NullableBool            `json:"serviceBoardFlag,omitempty"`
	BudgetHoursFlag             NullableBool            `json:"budgetHoursFlag,omitempty"`
	ActualHoursFlag             NullableBool            `json:"actualHoursFlag,omitempty"`
	ApprovalStatusFlag          NullableBool            `json:"approvalStatusFlag,omitempty"`
	OpenTasksFlag               NullableBool            `json:"openTasksFlag,omitempty"`
	ClosedTasksFlag             NullableBool            `json:"closedTasksFlag,omitempty"`
	EnableChatAssistFlag        NullableBool            `json:"enableChatAssistFlag,omitempty"`
	DisplayClosedTicketsOption  NullableString          `json:"displayClosedTicketsOption"`
	TimeMaterialsTicketTemplate ServiceSignoffReference `json:"timeMaterialsTicketTemplate"`
	FixedFeeTicketTemplate      ServiceSignoffReference `json:"fixedFeeTicketTemplate"`
	Info                        *map[string]string      `json:"_info,omitempty"`
}

type _PortalConfigurationServiceSetup PortalConfigurationServiceSetup

// NewPortalConfigurationServiceSetup instantiates a new PortalConfigurationServiceSetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalConfigurationServiceSetup(displayClosedTicketsOption NullableString, timeMaterialsTicketTemplate ServiceSignoffReference, fixedFeeTicketTemplate ServiceSignoffReference) *PortalConfigurationServiceSetup {
	this := PortalConfigurationServiceSetup{}
	this.DisplayClosedTicketsOption = displayClosedTicketsOption
	this.TimeMaterialsTicketTemplate = timeMaterialsTicketTemplate
	this.FixedFeeTicketTemplate = fixedFeeTicketTemplate
	return &this
}

// NewPortalConfigurationServiceSetupWithDefaults instantiates a new PortalConfigurationServiceSetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalConfigurationServiceSetupWithDefaults() *PortalConfigurationServiceSetup {
	this := PortalConfigurationServiceSetup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortalConfigurationServiceSetup) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationServiceSetup) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PortalConfigurationServiceSetup) SetId(v int32) {
	o.Id = &v
}

// GetServiceTypeFlag returns the ServiceTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetServiceTypeFlag() bool {
	if o == nil || IsNil(o.ServiceTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceTypeFlag.Get()
}

// GetServiceTypeFlagOk returns a tuple with the ServiceTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetServiceTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceTypeFlag.Get(), o.ServiceTypeFlag.IsSet()
}

// HasServiceTypeFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasServiceTypeFlag() bool {
	if o != nil && o.ServiceTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceTypeFlag gets a reference to the given NullableBool and assigns it to the ServiceTypeFlag field.
func (o *PortalConfigurationServiceSetup) SetServiceTypeFlag(v bool) {
	o.ServiceTypeFlag.Set(&v)
}

// SetServiceTypeFlagNil sets the value for ServiceTypeFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetServiceTypeFlagNil() {
	o.ServiceTypeFlag.Set(nil)
}

// UnsetServiceTypeFlag ensures that no value is present for ServiceTypeFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetServiceTypeFlag() {
	o.ServiceTypeFlag.Unset()
}

// GetServiceSubTypeFlag returns the ServiceSubTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetServiceSubTypeFlag() bool {
	if o == nil || IsNil(o.ServiceSubTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceSubTypeFlag.Get()
}

// GetServiceSubTypeFlagOk returns a tuple with the ServiceSubTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetServiceSubTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceSubTypeFlag.Get(), o.ServiceSubTypeFlag.IsSet()
}

// HasServiceSubTypeFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasServiceSubTypeFlag() bool {
	if o != nil && o.ServiceSubTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceSubTypeFlag gets a reference to the given NullableBool and assigns it to the ServiceSubTypeFlag field.
func (o *PortalConfigurationServiceSetup) SetServiceSubTypeFlag(v bool) {
	o.ServiceSubTypeFlag.Set(&v)
}

// SetServiceSubTypeFlagNil sets the value for ServiceSubTypeFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetServiceSubTypeFlagNil() {
	o.ServiceSubTypeFlag.Set(nil)
}

// UnsetServiceSubTypeFlag ensures that no value is present for ServiceSubTypeFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetServiceSubTypeFlag() {
	o.ServiceSubTypeFlag.Unset()
}

// GetServiceSubTypeItemFlag returns the ServiceSubTypeItemFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetServiceSubTypeItemFlag() bool {
	if o == nil || IsNil(o.ServiceSubTypeItemFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceSubTypeItemFlag.Get()
}

// GetServiceSubTypeItemFlagOk returns a tuple with the ServiceSubTypeItemFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetServiceSubTypeItemFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceSubTypeItemFlag.Get(), o.ServiceSubTypeItemFlag.IsSet()
}

// HasServiceSubTypeItemFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasServiceSubTypeItemFlag() bool {
	if o != nil && o.ServiceSubTypeItemFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceSubTypeItemFlag gets a reference to the given NullableBool and assigns it to the ServiceSubTypeItemFlag field.
func (o *PortalConfigurationServiceSetup) SetServiceSubTypeItemFlag(v bool) {
	o.ServiceSubTypeItemFlag.Set(&v)
}

// SetServiceSubTypeItemFlagNil sets the value for ServiceSubTypeItemFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetServiceSubTypeItemFlagNil() {
	o.ServiceSubTypeItemFlag.Set(nil)
}

// UnsetServiceSubTypeItemFlag ensures that no value is present for ServiceSubTypeItemFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetServiceSubTypeItemFlag() {
	o.ServiceSubTypeItemFlag.Unset()
}

// GetStatusFlag returns the StatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetStatusFlag() bool {
	if o == nil || IsNil(o.StatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.StatusFlag.Get()
}

// GetStatusFlagOk returns a tuple with the StatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusFlag.Get(), o.StatusFlag.IsSet()
}

// HasStatusFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasStatusFlag() bool {
	if o != nil && o.StatusFlag.IsSet() {
		return true
	}

	return false
}

// SetStatusFlag gets a reference to the given NullableBool and assigns it to the StatusFlag field.
func (o *PortalConfigurationServiceSetup) SetStatusFlag(v bool) {
	o.StatusFlag.Set(&v)
}

// SetStatusFlagNil sets the value for StatusFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetStatusFlagNil() {
	o.StatusFlag.Set(nil)
}

// UnsetStatusFlag ensures that no value is present for StatusFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetStatusFlag() {
	o.StatusFlag.Unset()
}

// GetSiteNameFlag returns the SiteNameFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetSiteNameFlag() bool {
	if o == nil || IsNil(o.SiteNameFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SiteNameFlag.Get()
}

// GetSiteNameFlagOk returns a tuple with the SiteNameFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetSiteNameFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteNameFlag.Get(), o.SiteNameFlag.IsSet()
}

// HasSiteNameFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasSiteNameFlag() bool {
	if o != nil && o.SiteNameFlag.IsSet() {
		return true
	}

	return false
}

// SetSiteNameFlag gets a reference to the given NullableBool and assigns it to the SiteNameFlag field.
func (o *PortalConfigurationServiceSetup) SetSiteNameFlag(v bool) {
	o.SiteNameFlag.Set(&v)
}

// SetSiteNameFlagNil sets the value for SiteNameFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetSiteNameFlagNil() {
	o.SiteNameFlag.Set(nil)
}

// UnsetSiteNameFlag ensures that no value is present for SiteNameFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetSiteNameFlag() {
	o.SiteNameFlag.Unset()
}

// GetEnteredDateFlag returns the EnteredDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetEnteredDateFlag() bool {
	if o == nil || IsNil(o.EnteredDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnteredDateFlag.Get()
}

// GetEnteredDateFlagOk returns a tuple with the EnteredDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetEnteredDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnteredDateFlag.Get(), o.EnteredDateFlag.IsSet()
}

// HasEnteredDateFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasEnteredDateFlag() bool {
	if o != nil && o.EnteredDateFlag.IsSet() {
		return true
	}

	return false
}

// SetEnteredDateFlag gets a reference to the given NullableBool and assigns it to the EnteredDateFlag field.
func (o *PortalConfigurationServiceSetup) SetEnteredDateFlag(v bool) {
	o.EnteredDateFlag.Set(&v)
}

// SetEnteredDateFlagNil sets the value for EnteredDateFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetEnteredDateFlagNil() {
	o.EnteredDateFlag.Set(nil)
}

// UnsetEnteredDateFlag ensures that no value is present for EnteredDateFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetEnteredDateFlag() {
	o.EnteredDateFlag.Unset()
}

// GetLastUpdateFlag returns the LastUpdateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetLastUpdateFlag() bool {
	if o == nil || IsNil(o.LastUpdateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LastUpdateFlag.Get()
}

// GetLastUpdateFlagOk returns a tuple with the LastUpdateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetLastUpdateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdateFlag.Get(), o.LastUpdateFlag.IsSet()
}

// HasLastUpdateFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasLastUpdateFlag() bool {
	if o != nil && o.LastUpdateFlag.IsSet() {
		return true
	}

	return false
}

// SetLastUpdateFlag gets a reference to the given NullableBool and assigns it to the LastUpdateFlag field.
func (o *PortalConfigurationServiceSetup) SetLastUpdateFlag(v bool) {
	o.LastUpdateFlag.Set(&v)
}

// SetLastUpdateFlagNil sets the value for LastUpdateFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetLastUpdateFlagNil() {
	o.LastUpdateFlag.Set(nil)
}

// UnsetLastUpdateFlag ensures that no value is present for LastUpdateFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetLastUpdateFlag() {
	o.LastUpdateFlag.Unset()
}

// GetRequiredDateFlag returns the RequiredDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetRequiredDateFlag() bool {
	if o == nil || IsNil(o.RequiredDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequiredDateFlag.Get()
}

// GetRequiredDateFlagOk returns a tuple with the RequiredDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetRequiredDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredDateFlag.Get(), o.RequiredDateFlag.IsSet()
}

// HasRequiredDateFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasRequiredDateFlag() bool {
	if o != nil && o.RequiredDateFlag.IsSet() {
		return true
	}

	return false
}

// SetRequiredDateFlag gets a reference to the given NullableBool and assigns it to the RequiredDateFlag field.
func (o *PortalConfigurationServiceSetup) SetRequiredDateFlag(v bool) {
	o.RequiredDateFlag.Set(&v)
}

// SetRequiredDateFlagNil sets the value for RequiredDateFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetRequiredDateFlagNil() {
	o.RequiredDateFlag.Set(nil)
}

// UnsetRequiredDateFlag ensures that no value is present for RequiredDateFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetRequiredDateFlag() {
	o.RequiredDateFlag.Unset()
}

// GetContactFlag returns the ContactFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetContactFlag() bool {
	if o == nil || IsNil(o.ContactFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ContactFlag.Get()
}

// GetContactFlagOk returns a tuple with the ContactFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetContactFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactFlag.Get(), o.ContactFlag.IsSet()
}

// HasContactFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasContactFlag() bool {
	if o != nil && o.ContactFlag.IsSet() {
		return true
	}

	return false
}

// SetContactFlag gets a reference to the given NullableBool and assigns it to the ContactFlag field.
func (o *PortalConfigurationServiceSetup) SetContactFlag(v bool) {
	o.ContactFlag.Set(&v)
}

// SetContactFlagNil sets the value for ContactFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetContactFlagNil() {
	o.ContactFlag.Set(nil)
}

// UnsetContactFlag ensures that no value is present for ContactFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetContactFlag() {
	o.ContactFlag.Unset()
}

// GetAssignedResourcesFlag returns the AssignedResourcesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetAssignedResourcesFlag() bool {
	if o == nil || IsNil(o.AssignedResourcesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AssignedResourcesFlag.Get()
}

// GetAssignedResourcesFlagOk returns a tuple with the AssignedResourcesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetAssignedResourcesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssignedResourcesFlag.Get(), o.AssignedResourcesFlag.IsSet()
}

// HasAssignedResourcesFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasAssignedResourcesFlag() bool {
	if o != nil && o.AssignedResourcesFlag.IsSet() {
		return true
	}

	return false
}

// SetAssignedResourcesFlag gets a reference to the given NullableBool and assigns it to the AssignedResourcesFlag field.
func (o *PortalConfigurationServiceSetup) SetAssignedResourcesFlag(v bool) {
	o.AssignedResourcesFlag.Set(&v)
}

// SetAssignedResourcesFlagNil sets the value for AssignedResourcesFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetAssignedResourcesFlagNil() {
	o.AssignedResourcesFlag.Set(nil)
}

// UnsetAssignedResourcesFlag ensures that no value is present for AssignedResourcesFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetAssignedResourcesFlag() {
	o.AssignedResourcesFlag.Unset()
}

// GetSlaInfoFlag returns the SlaInfoFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetSlaInfoFlag() bool {
	if o == nil || IsNil(o.SlaInfoFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SlaInfoFlag.Get()
}

// GetSlaInfoFlagOk returns a tuple with the SlaInfoFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetSlaInfoFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SlaInfoFlag.Get(), o.SlaInfoFlag.IsSet()
}

// HasSlaInfoFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasSlaInfoFlag() bool {
	if o != nil && o.SlaInfoFlag.IsSet() {
		return true
	}

	return false
}

// SetSlaInfoFlag gets a reference to the given NullableBool and assigns it to the SlaInfoFlag field.
func (o *PortalConfigurationServiceSetup) SetSlaInfoFlag(v bool) {
	o.SlaInfoFlag.Set(&v)
}

// SetSlaInfoFlagNil sets the value for SlaInfoFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetSlaInfoFlagNil() {
	o.SlaInfoFlag.Set(nil)
}

// UnsetSlaInfoFlag ensures that no value is present for SlaInfoFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetSlaInfoFlag() {
	o.SlaInfoFlag.Unset()
}

// GetServiceBoardFlag returns the ServiceBoardFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetServiceBoardFlag() bool {
	if o == nil || IsNil(o.ServiceBoardFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceBoardFlag.Get()
}

// GetServiceBoardFlagOk returns a tuple with the ServiceBoardFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetServiceBoardFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceBoardFlag.Get(), o.ServiceBoardFlag.IsSet()
}

// HasServiceBoardFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasServiceBoardFlag() bool {
	if o != nil && o.ServiceBoardFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceBoardFlag gets a reference to the given NullableBool and assigns it to the ServiceBoardFlag field.
func (o *PortalConfigurationServiceSetup) SetServiceBoardFlag(v bool) {
	o.ServiceBoardFlag.Set(&v)
}

// SetServiceBoardFlagNil sets the value for ServiceBoardFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetServiceBoardFlagNil() {
	o.ServiceBoardFlag.Set(nil)
}

// UnsetServiceBoardFlag ensures that no value is present for ServiceBoardFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetServiceBoardFlag() {
	o.ServiceBoardFlag.Unset()
}

// GetBudgetHoursFlag returns the BudgetHoursFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetBudgetHoursFlag() bool {
	if o == nil || IsNil(o.BudgetHoursFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BudgetHoursFlag.Get()
}

// GetBudgetHoursFlagOk returns a tuple with the BudgetHoursFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetBudgetHoursFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BudgetHoursFlag.Get(), o.BudgetHoursFlag.IsSet()
}

// HasBudgetHoursFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasBudgetHoursFlag() bool {
	if o != nil && o.BudgetHoursFlag.IsSet() {
		return true
	}

	return false
}

// SetBudgetHoursFlag gets a reference to the given NullableBool and assigns it to the BudgetHoursFlag field.
func (o *PortalConfigurationServiceSetup) SetBudgetHoursFlag(v bool) {
	o.BudgetHoursFlag.Set(&v)
}

// SetBudgetHoursFlagNil sets the value for BudgetHoursFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetBudgetHoursFlagNil() {
	o.BudgetHoursFlag.Set(nil)
}

// UnsetBudgetHoursFlag ensures that no value is present for BudgetHoursFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetBudgetHoursFlag() {
	o.BudgetHoursFlag.Unset()
}

// GetActualHoursFlag returns the ActualHoursFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetActualHoursFlag() bool {
	if o == nil || IsNil(o.ActualHoursFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ActualHoursFlag.Get()
}

// GetActualHoursFlagOk returns a tuple with the ActualHoursFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetActualHoursFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualHoursFlag.Get(), o.ActualHoursFlag.IsSet()
}

// HasActualHoursFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasActualHoursFlag() bool {
	if o != nil && o.ActualHoursFlag.IsSet() {
		return true
	}

	return false
}

// SetActualHoursFlag gets a reference to the given NullableBool and assigns it to the ActualHoursFlag field.
func (o *PortalConfigurationServiceSetup) SetActualHoursFlag(v bool) {
	o.ActualHoursFlag.Set(&v)
}

// SetActualHoursFlagNil sets the value for ActualHoursFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetActualHoursFlagNil() {
	o.ActualHoursFlag.Set(nil)
}

// UnsetActualHoursFlag ensures that no value is present for ActualHoursFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetActualHoursFlag() {
	o.ActualHoursFlag.Unset()
}

// GetApprovalStatusFlag returns the ApprovalStatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetApprovalStatusFlag() bool {
	if o == nil || IsNil(o.ApprovalStatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ApprovalStatusFlag.Get()
}

// GetApprovalStatusFlagOk returns a tuple with the ApprovalStatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetApprovalStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApprovalStatusFlag.Get(), o.ApprovalStatusFlag.IsSet()
}

// HasApprovalStatusFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasApprovalStatusFlag() bool {
	if o != nil && o.ApprovalStatusFlag.IsSet() {
		return true
	}

	return false
}

// SetApprovalStatusFlag gets a reference to the given NullableBool and assigns it to the ApprovalStatusFlag field.
func (o *PortalConfigurationServiceSetup) SetApprovalStatusFlag(v bool) {
	o.ApprovalStatusFlag.Set(&v)
}

// SetApprovalStatusFlagNil sets the value for ApprovalStatusFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetApprovalStatusFlagNil() {
	o.ApprovalStatusFlag.Set(nil)
}

// UnsetApprovalStatusFlag ensures that no value is present for ApprovalStatusFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetApprovalStatusFlag() {
	o.ApprovalStatusFlag.Unset()
}

// GetOpenTasksFlag returns the OpenTasksFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetOpenTasksFlag() bool {
	if o == nil || IsNil(o.OpenTasksFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.OpenTasksFlag.Get()
}

// GetOpenTasksFlagOk returns a tuple with the OpenTasksFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetOpenTasksFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpenTasksFlag.Get(), o.OpenTasksFlag.IsSet()
}

// HasOpenTasksFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasOpenTasksFlag() bool {
	if o != nil && o.OpenTasksFlag.IsSet() {
		return true
	}

	return false
}

// SetOpenTasksFlag gets a reference to the given NullableBool and assigns it to the OpenTasksFlag field.
func (o *PortalConfigurationServiceSetup) SetOpenTasksFlag(v bool) {
	o.OpenTasksFlag.Set(&v)
}

// SetOpenTasksFlagNil sets the value for OpenTasksFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetOpenTasksFlagNil() {
	o.OpenTasksFlag.Set(nil)
}

// UnsetOpenTasksFlag ensures that no value is present for OpenTasksFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetOpenTasksFlag() {
	o.OpenTasksFlag.Unset()
}

// GetClosedTasksFlag returns the ClosedTasksFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetClosedTasksFlag() bool {
	if o == nil || IsNil(o.ClosedTasksFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ClosedTasksFlag.Get()
}

// GetClosedTasksFlagOk returns a tuple with the ClosedTasksFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetClosedTasksFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedTasksFlag.Get(), o.ClosedTasksFlag.IsSet()
}

// HasClosedTasksFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasClosedTasksFlag() bool {
	if o != nil && o.ClosedTasksFlag.IsSet() {
		return true
	}

	return false
}

// SetClosedTasksFlag gets a reference to the given NullableBool and assigns it to the ClosedTasksFlag field.
func (o *PortalConfigurationServiceSetup) SetClosedTasksFlag(v bool) {
	o.ClosedTasksFlag.Set(&v)
}

// SetClosedTasksFlagNil sets the value for ClosedTasksFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetClosedTasksFlagNil() {
	o.ClosedTasksFlag.Set(nil)
}

// UnsetClosedTasksFlag ensures that no value is present for ClosedTasksFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetClosedTasksFlag() {
	o.ClosedTasksFlag.Unset()
}

// GetEnableChatAssistFlag returns the EnableChatAssistFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalConfigurationServiceSetup) GetEnableChatAssistFlag() bool {
	if o == nil || IsNil(o.EnableChatAssistFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableChatAssistFlag.Get()
}

// GetEnableChatAssistFlagOk returns a tuple with the EnableChatAssistFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetEnableChatAssistFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableChatAssistFlag.Get(), o.EnableChatAssistFlag.IsSet()
}

// HasEnableChatAssistFlag returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasEnableChatAssistFlag() bool {
	if o != nil && o.EnableChatAssistFlag.IsSet() {
		return true
	}

	return false
}

// SetEnableChatAssistFlag gets a reference to the given NullableBool and assigns it to the EnableChatAssistFlag field.
func (o *PortalConfigurationServiceSetup) SetEnableChatAssistFlag(v bool) {
	o.EnableChatAssistFlag.Set(&v)
}

// SetEnableChatAssistFlagNil sets the value for EnableChatAssistFlag to be an explicit nil
func (o *PortalConfigurationServiceSetup) SetEnableChatAssistFlagNil() {
	o.EnableChatAssistFlag.Set(nil)
}

// UnsetEnableChatAssistFlag ensures that no value is present for EnableChatAssistFlag, not even an explicit nil
func (o *PortalConfigurationServiceSetup) UnsetEnableChatAssistFlag() {
	o.EnableChatAssistFlag.Unset()
}

// GetDisplayClosedTicketsOption returns the DisplayClosedTicketsOption field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PortalConfigurationServiceSetup) GetDisplayClosedTicketsOption() string {
	if o == nil || o.DisplayClosedTicketsOption.Get() == nil {
		var ret string
		return ret
	}

	return *o.DisplayClosedTicketsOption.Get()
}

// GetDisplayClosedTicketsOptionOk returns a tuple with the DisplayClosedTicketsOption field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalConfigurationServiceSetup) GetDisplayClosedTicketsOptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayClosedTicketsOption.Get(), o.DisplayClosedTicketsOption.IsSet()
}

// SetDisplayClosedTicketsOption sets field value
func (o *PortalConfigurationServiceSetup) SetDisplayClosedTicketsOption(v string) {
	o.DisplayClosedTicketsOption.Set(&v)
}

// GetTimeMaterialsTicketTemplate returns the TimeMaterialsTicketTemplate field value
func (o *PortalConfigurationServiceSetup) GetTimeMaterialsTicketTemplate() ServiceSignoffReference {
	if o == nil {
		var ret ServiceSignoffReference
		return ret
	}

	return o.TimeMaterialsTicketTemplate
}

// GetTimeMaterialsTicketTemplateOk returns a tuple with the TimeMaterialsTicketTemplate field value
// and a boolean to check if the value has been set.
func (o *PortalConfigurationServiceSetup) GetTimeMaterialsTicketTemplateOk() (*ServiceSignoffReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeMaterialsTicketTemplate, true
}

// SetTimeMaterialsTicketTemplate sets field value
func (o *PortalConfigurationServiceSetup) SetTimeMaterialsTicketTemplate(v ServiceSignoffReference) {
	o.TimeMaterialsTicketTemplate = v
}

// GetFixedFeeTicketTemplate returns the FixedFeeTicketTemplate field value
func (o *PortalConfigurationServiceSetup) GetFixedFeeTicketTemplate() ServiceSignoffReference {
	if o == nil {
		var ret ServiceSignoffReference
		return ret
	}

	return o.FixedFeeTicketTemplate
}

// GetFixedFeeTicketTemplateOk returns a tuple with the FixedFeeTicketTemplate field value
// and a boolean to check if the value has been set.
func (o *PortalConfigurationServiceSetup) GetFixedFeeTicketTemplateOk() (*ServiceSignoffReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FixedFeeTicketTemplate, true
}

// SetFixedFeeTicketTemplate sets field value
func (o *PortalConfigurationServiceSetup) SetFixedFeeTicketTemplate(v ServiceSignoffReference) {
	o.FixedFeeTicketTemplate = v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *PortalConfigurationServiceSetup) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalConfigurationServiceSetup) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *PortalConfigurationServiceSetup) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *PortalConfigurationServiceSetup) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o PortalConfigurationServiceSetup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortalConfigurationServiceSetup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ServiceTypeFlag.IsSet() {
		toSerialize["serviceTypeFlag"] = o.ServiceTypeFlag.Get()
	}
	if o.ServiceSubTypeFlag.IsSet() {
		toSerialize["serviceSubTypeFlag"] = o.ServiceSubTypeFlag.Get()
	}
	if o.ServiceSubTypeItemFlag.IsSet() {
		toSerialize["serviceSubTypeItemFlag"] = o.ServiceSubTypeItemFlag.Get()
	}
	if o.StatusFlag.IsSet() {
		toSerialize["statusFlag"] = o.StatusFlag.Get()
	}
	if o.SiteNameFlag.IsSet() {
		toSerialize["siteNameFlag"] = o.SiteNameFlag.Get()
	}
	if o.EnteredDateFlag.IsSet() {
		toSerialize["enteredDateFlag"] = o.EnteredDateFlag.Get()
	}
	if o.LastUpdateFlag.IsSet() {
		toSerialize["lastUpdateFlag"] = o.LastUpdateFlag.Get()
	}
	if o.RequiredDateFlag.IsSet() {
		toSerialize["requiredDateFlag"] = o.RequiredDateFlag.Get()
	}
	if o.ContactFlag.IsSet() {
		toSerialize["contactFlag"] = o.ContactFlag.Get()
	}
	if o.AssignedResourcesFlag.IsSet() {
		toSerialize["assignedResourcesFlag"] = o.AssignedResourcesFlag.Get()
	}
	if o.SlaInfoFlag.IsSet() {
		toSerialize["slaInfoFlag"] = o.SlaInfoFlag.Get()
	}
	if o.ServiceBoardFlag.IsSet() {
		toSerialize["serviceBoardFlag"] = o.ServiceBoardFlag.Get()
	}
	if o.BudgetHoursFlag.IsSet() {
		toSerialize["budgetHoursFlag"] = o.BudgetHoursFlag.Get()
	}
	if o.ActualHoursFlag.IsSet() {
		toSerialize["actualHoursFlag"] = o.ActualHoursFlag.Get()
	}
	if o.ApprovalStatusFlag.IsSet() {
		toSerialize["approvalStatusFlag"] = o.ApprovalStatusFlag.Get()
	}
	if o.OpenTasksFlag.IsSet() {
		toSerialize["openTasksFlag"] = o.OpenTasksFlag.Get()
	}
	if o.ClosedTasksFlag.IsSet() {
		toSerialize["closedTasksFlag"] = o.ClosedTasksFlag.Get()
	}
	if o.EnableChatAssistFlag.IsSet() {
		toSerialize["enableChatAssistFlag"] = o.EnableChatAssistFlag.Get()
	}
	toSerialize["displayClosedTicketsOption"] = o.DisplayClosedTicketsOption.Get()
	toSerialize["timeMaterialsTicketTemplate"] = o.TimeMaterialsTicketTemplate
	toSerialize["fixedFeeTicketTemplate"] = o.FixedFeeTicketTemplate
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *PortalConfigurationServiceSetup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayClosedTicketsOption",
		"timeMaterialsTicketTemplate",
		"fixedFeeTicketTemplate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortalConfigurationServiceSetup := _PortalConfigurationServiceSetup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortalConfigurationServiceSetup)

	if err != nil {
		return err
	}

	*o = PortalConfigurationServiceSetup(varPortalConfigurationServiceSetup)

	return err
}

type NullablePortalConfigurationServiceSetup struct {
	value *PortalConfigurationServiceSetup
	isSet bool
}

func (v NullablePortalConfigurationServiceSetup) Get() *PortalConfigurationServiceSetup {
	return v.value
}

func (v *NullablePortalConfigurationServiceSetup) Set(val *PortalConfigurationServiceSetup) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalConfigurationServiceSetup) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalConfigurationServiceSetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalConfigurationServiceSetup(val *PortalConfigurationServiceSetup) *NullablePortalConfigurationServiceSetup {
	return &NullablePortalConfigurationServiceSetup{value: val, isSet: true}
}

func (v NullablePortalConfigurationServiceSetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalConfigurationServiceSetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
