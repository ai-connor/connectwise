/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the PortalSecuritySetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortalSecuritySetting{}

// PortalSecuritySetting struct for PortalSecuritySetting
type PortalSecuritySetting struct {
	Id                  *int32             `json:"id,omitempty"`
	FunctionIdentifier  *string            `json:"functionIdentifier,omitempty"`
	FunctionDescription *string            `json:"functionDescription,omitempty"`
	LevelOne            NullableBool       `json:"levelOne,omitempty"`
	LevelTwo            NullableBool       `json:"levelTwo,omitempty"`
	LevelThree          NullableBool       `json:"levelThree,omitempty"`
	LevelFour           NullableBool       `json:"levelFour,omitempty"`
	LevelFive           NullableBool       `json:"levelFive,omitempty"`
	LevelSix            NullableBool       `json:"levelSix,omitempty"`
	Info                *map[string]string `json:"_info,omitempty"`
}

// NewPortalSecuritySetting instantiates a new PortalSecuritySetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalSecuritySetting() *PortalSecuritySetting {
	this := PortalSecuritySetting{}
	return &this
}

// NewPortalSecuritySettingWithDefaults instantiates a new PortalSecuritySetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalSecuritySettingWithDefaults() *PortalSecuritySetting {
	this := PortalSecuritySetting{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortalSecuritySetting) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalSecuritySetting) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PortalSecuritySetting) SetId(v int32) {
	o.Id = &v
}

// GetFunctionIdentifier returns the FunctionIdentifier field value if set, zero value otherwise.
func (o *PortalSecuritySetting) GetFunctionIdentifier() string {
	if o == nil || IsNil(o.FunctionIdentifier) {
		var ret string
		return ret
	}
	return *o.FunctionIdentifier
}

// GetFunctionIdentifierOk returns a tuple with the FunctionIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalSecuritySetting) GetFunctionIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionIdentifier) {
		return nil, false
	}
	return o.FunctionIdentifier, true
}

// HasFunctionIdentifier returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasFunctionIdentifier() bool {
	if o != nil && !IsNil(o.FunctionIdentifier) {
		return true
	}

	return false
}

// SetFunctionIdentifier gets a reference to the given string and assigns it to the FunctionIdentifier field.
func (o *PortalSecuritySetting) SetFunctionIdentifier(v string) {
	o.FunctionIdentifier = &v
}

// GetFunctionDescription returns the FunctionDescription field value if set, zero value otherwise.
func (o *PortalSecuritySetting) GetFunctionDescription() string {
	if o == nil || IsNil(o.FunctionDescription) {
		var ret string
		return ret
	}
	return *o.FunctionDescription
}

// GetFunctionDescriptionOk returns a tuple with the FunctionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalSecuritySetting) GetFunctionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionDescription) {
		return nil, false
	}
	return o.FunctionDescription, true
}

// HasFunctionDescription returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasFunctionDescription() bool {
	if o != nil && !IsNil(o.FunctionDescription) {
		return true
	}

	return false
}

// SetFunctionDescription gets a reference to the given string and assigns it to the FunctionDescription field.
func (o *PortalSecuritySetting) SetFunctionDescription(v string) {
	o.FunctionDescription = &v
}

// GetLevelOne returns the LevelOne field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalSecuritySetting) GetLevelOne() bool {
	if o == nil || IsNil(o.LevelOne.Get()) {
		var ret bool
		return ret
	}
	return *o.LevelOne.Get()
}

// GetLevelOneOk returns a tuple with the LevelOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalSecuritySetting) GetLevelOneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LevelOne.Get(), o.LevelOne.IsSet()
}

// HasLevelOne returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasLevelOne() bool {
	if o != nil && o.LevelOne.IsSet() {
		return true
	}

	return false
}

// SetLevelOne gets a reference to the given NullableBool and assigns it to the LevelOne field.
func (o *PortalSecuritySetting) SetLevelOne(v bool) {
	o.LevelOne.Set(&v)
}

// SetLevelOneNil sets the value for LevelOne to be an explicit nil
func (o *PortalSecuritySetting) SetLevelOneNil() {
	o.LevelOne.Set(nil)
}

// UnsetLevelOne ensures that no value is present for LevelOne, not even an explicit nil
func (o *PortalSecuritySetting) UnsetLevelOne() {
	o.LevelOne.Unset()
}

// GetLevelTwo returns the LevelTwo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalSecuritySetting) GetLevelTwo() bool {
	if o == nil || IsNil(o.LevelTwo.Get()) {
		var ret bool
		return ret
	}
	return *o.LevelTwo.Get()
}

// GetLevelTwoOk returns a tuple with the LevelTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalSecuritySetting) GetLevelTwoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LevelTwo.Get(), o.LevelTwo.IsSet()
}

// HasLevelTwo returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasLevelTwo() bool {
	if o != nil && o.LevelTwo.IsSet() {
		return true
	}

	return false
}

// SetLevelTwo gets a reference to the given NullableBool and assigns it to the LevelTwo field.
func (o *PortalSecuritySetting) SetLevelTwo(v bool) {
	o.LevelTwo.Set(&v)
}

// SetLevelTwoNil sets the value for LevelTwo to be an explicit nil
func (o *PortalSecuritySetting) SetLevelTwoNil() {
	o.LevelTwo.Set(nil)
}

// UnsetLevelTwo ensures that no value is present for LevelTwo, not even an explicit nil
func (o *PortalSecuritySetting) UnsetLevelTwo() {
	o.LevelTwo.Unset()
}

// GetLevelThree returns the LevelThree field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalSecuritySetting) GetLevelThree() bool {
	if o == nil || IsNil(o.LevelThree.Get()) {
		var ret bool
		return ret
	}
	return *o.LevelThree.Get()
}

// GetLevelThreeOk returns a tuple with the LevelThree field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalSecuritySetting) GetLevelThreeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LevelThree.Get(), o.LevelThree.IsSet()
}

// HasLevelThree returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasLevelThree() bool {
	if o != nil && o.LevelThree.IsSet() {
		return true
	}

	return false
}

// SetLevelThree gets a reference to the given NullableBool and assigns it to the LevelThree field.
func (o *PortalSecuritySetting) SetLevelThree(v bool) {
	o.LevelThree.Set(&v)
}

// SetLevelThreeNil sets the value for LevelThree to be an explicit nil
func (o *PortalSecuritySetting) SetLevelThreeNil() {
	o.LevelThree.Set(nil)
}

// UnsetLevelThree ensures that no value is present for LevelThree, not even an explicit nil
func (o *PortalSecuritySetting) UnsetLevelThree() {
	o.LevelThree.Unset()
}

// GetLevelFour returns the LevelFour field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalSecuritySetting) GetLevelFour() bool {
	if o == nil || IsNil(o.LevelFour.Get()) {
		var ret bool
		return ret
	}
	return *o.LevelFour.Get()
}

// GetLevelFourOk returns a tuple with the LevelFour field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalSecuritySetting) GetLevelFourOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LevelFour.Get(), o.LevelFour.IsSet()
}

// HasLevelFour returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasLevelFour() bool {
	if o != nil && o.LevelFour.IsSet() {
		return true
	}

	return false
}

// SetLevelFour gets a reference to the given NullableBool and assigns it to the LevelFour field.
func (o *PortalSecuritySetting) SetLevelFour(v bool) {
	o.LevelFour.Set(&v)
}

// SetLevelFourNil sets the value for LevelFour to be an explicit nil
func (o *PortalSecuritySetting) SetLevelFourNil() {
	o.LevelFour.Set(nil)
}

// UnsetLevelFour ensures that no value is present for LevelFour, not even an explicit nil
func (o *PortalSecuritySetting) UnsetLevelFour() {
	o.LevelFour.Unset()
}

// GetLevelFive returns the LevelFive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalSecuritySetting) GetLevelFive() bool {
	if o == nil || IsNil(o.LevelFive.Get()) {
		var ret bool
		return ret
	}
	return *o.LevelFive.Get()
}

// GetLevelFiveOk returns a tuple with the LevelFive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalSecuritySetting) GetLevelFiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LevelFive.Get(), o.LevelFive.IsSet()
}

// HasLevelFive returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasLevelFive() bool {
	if o != nil && o.LevelFive.IsSet() {
		return true
	}

	return false
}

// SetLevelFive gets a reference to the given NullableBool and assigns it to the LevelFive field.
func (o *PortalSecuritySetting) SetLevelFive(v bool) {
	o.LevelFive.Set(&v)
}

// SetLevelFiveNil sets the value for LevelFive to be an explicit nil
func (o *PortalSecuritySetting) SetLevelFiveNil() {
	o.LevelFive.Set(nil)
}

// UnsetLevelFive ensures that no value is present for LevelFive, not even an explicit nil
func (o *PortalSecuritySetting) UnsetLevelFive() {
	o.LevelFive.Unset()
}

// GetLevelSix returns the LevelSix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortalSecuritySetting) GetLevelSix() bool {
	if o == nil || IsNil(o.LevelSix.Get()) {
		var ret bool
		return ret
	}
	return *o.LevelSix.Get()
}

// GetLevelSixOk returns a tuple with the LevelSix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortalSecuritySetting) GetLevelSixOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LevelSix.Get(), o.LevelSix.IsSet()
}

// HasLevelSix returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasLevelSix() bool {
	if o != nil && o.LevelSix.IsSet() {
		return true
	}

	return false
}

// SetLevelSix gets a reference to the given NullableBool and assigns it to the LevelSix field.
func (o *PortalSecuritySetting) SetLevelSix(v bool) {
	o.LevelSix.Set(&v)
}

// SetLevelSixNil sets the value for LevelSix to be an explicit nil
func (o *PortalSecuritySetting) SetLevelSixNil() {
	o.LevelSix.Set(nil)
}

// UnsetLevelSix ensures that no value is present for LevelSix, not even an explicit nil
func (o *PortalSecuritySetting) UnsetLevelSix() {
	o.LevelSix.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *PortalSecuritySetting) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalSecuritySetting) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *PortalSecuritySetting) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *PortalSecuritySetting) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o PortalSecuritySetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortalSecuritySetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FunctionIdentifier) {
		toSerialize["functionIdentifier"] = o.FunctionIdentifier
	}
	if !IsNil(o.FunctionDescription) {
		toSerialize["functionDescription"] = o.FunctionDescription
	}
	if o.LevelOne.IsSet() {
		toSerialize["levelOne"] = o.LevelOne.Get()
	}
	if o.LevelTwo.IsSet() {
		toSerialize["levelTwo"] = o.LevelTwo.Get()
	}
	if o.LevelThree.IsSet() {
		toSerialize["levelThree"] = o.LevelThree.Get()
	}
	if o.LevelFour.IsSet() {
		toSerialize["levelFour"] = o.LevelFour.Get()
	}
	if o.LevelFive.IsSet() {
		toSerialize["levelFive"] = o.LevelFive.Get()
	}
	if o.LevelSix.IsSet() {
		toSerialize["levelSix"] = o.LevelSix.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullablePortalSecuritySetting struct {
	value *PortalSecuritySetting
	isSet bool
}

func (v NullablePortalSecuritySetting) Get() *PortalSecuritySetting {
	return v.value
}

func (v *NullablePortalSecuritySetting) Set(val *PortalSecuritySetting) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalSecuritySetting) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalSecuritySetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalSecuritySetting(val *PortalSecuritySetting) *NullablePortalSecuritySetting {
	return &NullablePortalSecuritySetting{value: val, isSet: true}
}

func (v NullablePortalSecuritySetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalSecuritySetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
