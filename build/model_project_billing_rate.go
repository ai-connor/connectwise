/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ProjectBillingRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectBillingRate{}

// ProjectBillingRate struct for ProjectBillingRate
type ProjectBillingRate struct {
	Id                 *int32             `json:"id,omitempty"`
	ProjectRecId       *int32             `json:"projectRecId,omitempty"`
	HourlyRate         *float64           `json:"hourlyRate,omitempty"`
	WorkRole           *WorkRoleReference `json:"workRole,omitempty"`
	ActivityClassRecId *int32             `json:"activityClassRecId,omitempty"`
	Member             *MemberReference   `json:"member,omitempty"`
	MemberRecId        *int32             `json:"memberRecId,omitempty"`
	Info               *map[string]string `json:"_info,omitempty"`
}

// NewProjectBillingRate instantiates a new ProjectBillingRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectBillingRate() *ProjectBillingRate {
	this := ProjectBillingRate{}
	return &this
}

// NewProjectBillingRateWithDefaults instantiates a new ProjectBillingRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectBillingRateWithDefaults() *ProjectBillingRate {
	this := ProjectBillingRate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectBillingRate) SetId(v int32) {
	o.Id = &v
}

// GetProjectRecId returns the ProjectRecId field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetProjectRecId() int32 {
	if o == nil || IsNil(o.ProjectRecId) {
		var ret int32
		return ret
	}
	return *o.ProjectRecId
}

// GetProjectRecIdOk returns a tuple with the ProjectRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetProjectRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectRecId) {
		return nil, false
	}
	return o.ProjectRecId, true
}

// HasProjectRecId returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasProjectRecId() bool {
	if o != nil && !IsNil(o.ProjectRecId) {
		return true
	}

	return false
}

// SetProjectRecId gets a reference to the given int32 and assigns it to the ProjectRecId field.
func (o *ProjectBillingRate) SetProjectRecId(v int32) {
	o.ProjectRecId = &v
}

// GetHourlyRate returns the HourlyRate field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetHourlyRate() float64 {
	if o == nil || IsNil(o.HourlyRate) {
		var ret float64
		return ret
	}
	return *o.HourlyRate
}

// GetHourlyRateOk returns a tuple with the HourlyRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetHourlyRateOk() (*float64, bool) {
	if o == nil || IsNil(o.HourlyRate) {
		return nil, false
	}
	return o.HourlyRate, true
}

// HasHourlyRate returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasHourlyRate() bool {
	if o != nil && !IsNil(o.HourlyRate) {
		return true
	}

	return false
}

// SetHourlyRate gets a reference to the given float64 and assigns it to the HourlyRate field.
func (o *ProjectBillingRate) SetHourlyRate(v float64) {
	o.HourlyRate = &v
}

// GetWorkRole returns the WorkRole field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetWorkRole() WorkRoleReference {
	if o == nil || IsNil(o.WorkRole) {
		var ret WorkRoleReference
		return ret
	}
	return *o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil || IsNil(o.WorkRole) {
		return nil, false
	}
	return o.WorkRole, true
}

// HasWorkRole returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasWorkRole() bool {
	if o != nil && !IsNil(o.WorkRole) {
		return true
	}

	return false
}

// SetWorkRole gets a reference to the given WorkRoleReference and assigns it to the WorkRole field.
func (o *ProjectBillingRate) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = &v
}

// GetActivityClassRecId returns the ActivityClassRecId field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetActivityClassRecId() int32 {
	if o == nil || IsNil(o.ActivityClassRecId) {
		var ret int32
		return ret
	}
	return *o.ActivityClassRecId
}

// GetActivityClassRecIdOk returns a tuple with the ActivityClassRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetActivityClassRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActivityClassRecId) {
		return nil, false
	}
	return o.ActivityClassRecId, true
}

// HasActivityClassRecId returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasActivityClassRecId() bool {
	if o != nil && !IsNil(o.ActivityClassRecId) {
		return true
	}

	return false
}

// SetActivityClassRecId gets a reference to the given int32 and assigns it to the ActivityClassRecId field.
func (o *ProjectBillingRate) SetActivityClassRecId(v int32) {
	o.ActivityClassRecId = &v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetMember() MemberReference {
	if o == nil || IsNil(o.Member) {
		var ret MemberReference
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given MemberReference and assigns it to the Member field.
func (o *ProjectBillingRate) SetMember(v MemberReference) {
	o.Member = &v
}

// GetMemberRecId returns the MemberRecId field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetMemberRecId() int32 {
	if o == nil || IsNil(o.MemberRecId) {
		var ret int32
		return ret
	}
	return *o.MemberRecId
}

// GetMemberRecIdOk returns a tuple with the MemberRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetMemberRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MemberRecId) {
		return nil, false
	}
	return o.MemberRecId, true
}

// HasMemberRecId returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasMemberRecId() bool {
	if o != nil && !IsNil(o.MemberRecId) {
		return true
	}

	return false
}

// SetMemberRecId gets a reference to the given int32 and assigns it to the MemberRecId field.
func (o *ProjectBillingRate) SetMemberRecId(v int32) {
	o.MemberRecId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ProjectBillingRate) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBillingRate) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ProjectBillingRate) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ProjectBillingRate) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ProjectBillingRate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectBillingRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectRecId) {
		toSerialize["projectRecId"] = o.ProjectRecId
	}
	if !IsNil(o.HourlyRate) {
		toSerialize["hourlyRate"] = o.HourlyRate
	}
	if !IsNil(o.WorkRole) {
		toSerialize["workRole"] = o.WorkRole
	}
	if !IsNil(o.ActivityClassRecId) {
		toSerialize["activityClassRecId"] = o.ActivityClassRecId
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.MemberRecId) {
		toSerialize["memberRecId"] = o.MemberRecId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableProjectBillingRate struct {
	value *ProjectBillingRate
	isSet bool
}

func (v NullableProjectBillingRate) Get() *ProjectBillingRate {
	return v.value
}

func (v *NullableProjectBillingRate) Set(val *ProjectBillingRate) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectBillingRate) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectBillingRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectBillingRate(val *ProjectBillingRate) *NullableProjectBillingRate {
	return &NullableProjectBillingRate{value: val, isSet: true}
}

func (v NullableProjectBillingRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectBillingRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
