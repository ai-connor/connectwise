/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ProjectTemplatePhase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectTemplatePhase{}

// ProjectTemplatePhase struct for ProjectTemplatePhase
type ProjectTemplatePhase struct {
	Id                    *int32             `json:"id,omitempty"`
	TemplateRecId         *int32             `json:"templateRecId,omitempty"`
	ParentPhase           NullableInt32      `json:"parentPhase,omitempty"`
	Description           *string            `json:"description,omitempty"`
	BudgetHours           NullableFloat64    `json:"budgetHours,omitempty"`
	Notes                 *string            `json:"notes,omitempty"`
	MarkAsMilestone       *bool              `json:"markAsMilestone,omitempty"`
	PhaseBilledSeparately *bool              `json:"phaseBilledSeparately,omitempty"`
	WbsCode               *string            `json:"wbsCode,omitempty"`
	ConnectWiseId         *string            `json:"connectWiseId,omitempty"`
	ParentId              NullableInt32      `json:"parentId,omitempty"`
	ParentConnectWiseId   *string            `json:"parentConnectWiseId,omitempty"`
	Info                  *map[string]string `json:"_info,omitempty"`
}

// NewProjectTemplatePhase instantiates a new ProjectTemplatePhase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectTemplatePhase() *ProjectTemplatePhase {
	this := ProjectTemplatePhase{}
	return &this
}

// NewProjectTemplatePhaseWithDefaults instantiates a new ProjectTemplatePhase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectTemplatePhaseWithDefaults() *ProjectTemplatePhase {
	this := ProjectTemplatePhase{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectTemplatePhase) SetId(v int32) {
	o.Id = &v
}

// GetTemplateRecId returns the TemplateRecId field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetTemplateRecId() int32 {
	if o == nil || IsNil(o.TemplateRecId) {
		var ret int32
		return ret
	}
	return *o.TemplateRecId
}

// GetTemplateRecIdOk returns a tuple with the TemplateRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetTemplateRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateRecId) {
		return nil, false
	}
	return o.TemplateRecId, true
}

// HasTemplateRecId returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasTemplateRecId() bool {
	if o != nil && !IsNil(o.TemplateRecId) {
		return true
	}

	return false
}

// SetTemplateRecId gets a reference to the given int32 and assigns it to the TemplateRecId field.
func (o *ProjectTemplatePhase) SetTemplateRecId(v int32) {
	o.TemplateRecId = &v
}

// GetParentPhase returns the ParentPhase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplatePhase) GetParentPhase() int32 {
	if o == nil || IsNil(o.ParentPhase.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentPhase.Get()
}

// GetParentPhaseOk returns a tuple with the ParentPhase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplatePhase) GetParentPhaseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentPhase.Get(), o.ParentPhase.IsSet()
}

// HasParentPhase returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasParentPhase() bool {
	if o != nil && o.ParentPhase.IsSet() {
		return true
	}

	return false
}

// SetParentPhase gets a reference to the given NullableInt32 and assigns it to the ParentPhase field.
func (o *ProjectTemplatePhase) SetParentPhase(v int32) {
	o.ParentPhase.Set(&v)
}

// SetParentPhaseNil sets the value for ParentPhase to be an explicit nil
func (o *ProjectTemplatePhase) SetParentPhaseNil() {
	o.ParentPhase.Set(nil)
}

// UnsetParentPhase ensures that no value is present for ParentPhase, not even an explicit nil
func (o *ProjectTemplatePhase) UnsetParentPhase() {
	o.ParentPhase.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectTemplatePhase) SetDescription(v string) {
	o.Description = &v
}

// GetBudgetHours returns the BudgetHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplatePhase) GetBudgetHours() float64 {
	if o == nil || IsNil(o.BudgetHours.Get()) {
		var ret float64
		return ret
	}
	return *o.BudgetHours.Get()
}

// GetBudgetHoursOk returns a tuple with the BudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplatePhase) GetBudgetHoursOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BudgetHours.Get(), o.BudgetHours.IsSet()
}

// HasBudgetHours returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasBudgetHours() bool {
	if o != nil && o.BudgetHours.IsSet() {
		return true
	}

	return false
}

// SetBudgetHours gets a reference to the given NullableFloat64 and assigns it to the BudgetHours field.
func (o *ProjectTemplatePhase) SetBudgetHours(v float64) {
	o.BudgetHours.Set(&v)
}

// SetBudgetHoursNil sets the value for BudgetHours to be an explicit nil
func (o *ProjectTemplatePhase) SetBudgetHoursNil() {
	o.BudgetHours.Set(nil)
}

// UnsetBudgetHours ensures that no value is present for BudgetHours, not even an explicit nil
func (o *ProjectTemplatePhase) UnsetBudgetHours() {
	o.BudgetHours.Unset()
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *ProjectTemplatePhase) SetNotes(v string) {
	o.Notes = &v
}

// GetMarkAsMilestone returns the MarkAsMilestone field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetMarkAsMilestone() bool {
	if o == nil || IsNil(o.MarkAsMilestone) {
		var ret bool
		return ret
	}
	return *o.MarkAsMilestone
}

// GetMarkAsMilestoneOk returns a tuple with the MarkAsMilestone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetMarkAsMilestoneOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkAsMilestone) {
		return nil, false
	}
	return o.MarkAsMilestone, true
}

// HasMarkAsMilestone returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasMarkAsMilestone() bool {
	if o != nil && !IsNil(o.MarkAsMilestone) {
		return true
	}

	return false
}

// SetMarkAsMilestone gets a reference to the given bool and assigns it to the MarkAsMilestone field.
func (o *ProjectTemplatePhase) SetMarkAsMilestone(v bool) {
	o.MarkAsMilestone = &v
}

// GetPhaseBilledSeparately returns the PhaseBilledSeparately field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetPhaseBilledSeparately() bool {
	if o == nil || IsNil(o.PhaseBilledSeparately) {
		var ret bool
		return ret
	}
	return *o.PhaseBilledSeparately
}

// GetPhaseBilledSeparatelyOk returns a tuple with the PhaseBilledSeparately field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetPhaseBilledSeparatelyOk() (*bool, bool) {
	if o == nil || IsNil(o.PhaseBilledSeparately) {
		return nil, false
	}
	return o.PhaseBilledSeparately, true
}

// HasPhaseBilledSeparately returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasPhaseBilledSeparately() bool {
	if o != nil && !IsNil(o.PhaseBilledSeparately) {
		return true
	}

	return false
}

// SetPhaseBilledSeparately gets a reference to the given bool and assigns it to the PhaseBilledSeparately field.
func (o *ProjectTemplatePhase) SetPhaseBilledSeparately(v bool) {
	o.PhaseBilledSeparately = &v
}

// GetWbsCode returns the WbsCode field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetWbsCode() string {
	if o == nil || IsNil(o.WbsCode) {
		var ret string
		return ret
	}
	return *o.WbsCode
}

// GetWbsCodeOk returns a tuple with the WbsCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetWbsCodeOk() (*string, bool) {
	if o == nil || IsNil(o.WbsCode) {
		return nil, false
	}
	return o.WbsCode, true
}

// HasWbsCode returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasWbsCode() bool {
	if o != nil && !IsNil(o.WbsCode) {
		return true
	}

	return false
}

// SetWbsCode gets a reference to the given string and assigns it to the WbsCode field.
func (o *ProjectTemplatePhase) SetWbsCode(v string) {
	o.WbsCode = &v
}

// GetConnectWiseId returns the ConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetConnectWiseId() string {
	if o == nil || IsNil(o.ConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ConnectWiseId
}

// GetConnectWiseIdOk returns a tuple with the ConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseId) {
		return nil, false
	}
	return o.ConnectWiseId, true
}

// HasConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasConnectWiseId() bool {
	if o != nil && !IsNil(o.ConnectWiseId) {
		return true
	}

	return false
}

// SetConnectWiseId gets a reference to the given string and assigns it to the ConnectWiseId field.
func (o *ProjectTemplatePhase) SetConnectWiseId(v string) {
	o.ConnectWiseId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplatePhase) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplatePhase) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *ProjectTemplatePhase) SetParentId(v int32) {
	o.ParentId.Set(&v)
}

// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *ProjectTemplatePhase) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *ProjectTemplatePhase) UnsetParentId() {
	o.ParentId.Unset()
}

// GetParentConnectWiseId returns the ParentConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetParentConnectWiseId() string {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ParentConnectWiseId
}

// GetParentConnectWiseIdOk returns a tuple with the ParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		return nil, false
	}
	return o.ParentConnectWiseId, true
}

// HasParentConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasParentConnectWiseId() bool {
	if o != nil && !IsNil(o.ParentConnectWiseId) {
		return true
	}

	return false
}

// SetParentConnectWiseId gets a reference to the given string and assigns it to the ParentConnectWiseId field.
func (o *ProjectTemplatePhase) SetParentConnectWiseId(v string) {
	o.ParentConnectWiseId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ProjectTemplatePhase) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplatePhase) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ProjectTemplatePhase) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ProjectTemplatePhase) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ProjectTemplatePhase) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectTemplatePhase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TemplateRecId) {
		toSerialize["templateRecId"] = o.TemplateRecId
	}
	if o.ParentPhase.IsSet() {
		toSerialize["parentPhase"] = o.ParentPhase.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.BudgetHours.IsSet() {
		toSerialize["budgetHours"] = o.BudgetHours.Get()
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.MarkAsMilestone) {
		toSerialize["markAsMilestone"] = o.MarkAsMilestone
	}
	if !IsNil(o.PhaseBilledSeparately) {
		toSerialize["phaseBilledSeparately"] = o.PhaseBilledSeparately
	}
	if !IsNil(o.WbsCode) {
		toSerialize["wbsCode"] = o.WbsCode
	}
	if !IsNil(o.ConnectWiseId) {
		toSerialize["connectWiseId"] = o.ConnectWiseId
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if !IsNil(o.ParentConnectWiseId) {
		toSerialize["parentConnectWiseId"] = o.ParentConnectWiseId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableProjectTemplatePhase struct {
	value *ProjectTemplatePhase
	isSet bool
}

func (v NullableProjectTemplatePhase) Get() *ProjectTemplatePhase {
	return v.value
}

func (v *NullableProjectTemplatePhase) Set(val *ProjectTemplatePhase) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectTemplatePhase) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectTemplatePhase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectTemplatePhase(val *ProjectTemplatePhase) *NullableProjectTemplatePhase {
	return &NullableProjectTemplatePhase{value: val, isSet: true}
}

func (v NullableProjectTemplatePhase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectTemplatePhase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
