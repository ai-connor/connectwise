/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PurchaseOrderLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurchaseOrderLineItem{}

// PurchaseOrderLineItem struct for PurchaseOrderLineItem
type PurchaseOrderLineItem struct {
	Id              *int32       `json:"id,omitempty"`
	BackorderedFlag NullableBool `json:"backorderedFlag,omitempty"`
	CanceledBy      *string      `json:"canceledBy,omitempty"`
	CanceledFlag    NullableBool `json:"canceledFlag,omitempty"`
	//  Max length: 100;
	CanceledReason  *string      `json:"canceledReason,omitempty"`
	ClosedFlag      NullableBool `json:"closedFlag,omitempty"`
	DateCanceled    *time.Time   `json:"dateCanceled,omitempty"`
	DateCanceledUtc *time.Time   `json:"dateCanceledUtc,omitempty"`
	//  Max length: 6000;
	Description              string       `json:"description"`
	DisplayInternalNotesFlag NullableBool `json:"displayInternalNotesFlag,omitempty"`
	ExpectedShipDate         *time.Time   `json:"expectedShipDate,omitempty"`
	//  Max length: 1000;
	InternalNotes *string       `json:"internalNotes,omitempty"`
	LineNumber    NullableInt32 `json:"lineNumber"`
	//  Max length: 50;
	PackingSlip     *string         `json:"packingSlip,omitempty"`
	Product         IvItemReference `json:"product"`
	PurchaseOrderId NullableInt32   `json:"purchaseOrderId,omitempty"`
	//  Max length: 50;
	PurchaseOrderNumber *string                  `json:"purchaseOrderNumber,omitempty"`
	Quantity            NullableFloat64          `json:"quantity"`
	ReceivedQuantity    NullableInt32            `json:"receivedQuantity,omitempty"`
	SerialNumbers       *string                  `json:"serialNumbers,omitempty"`
	ShipDate            *time.Time               `json:"shipDate,omitempty"`
	ShipmentMethod      *ShipmentMethodReference `json:"shipmentMethod,omitempty"`
	Tax                 NullableFloat64          `json:"tax,omitempty"`
	//  Max length: 50;
	TrackingNumber *string                `json:"trackingNumber,omitempty"`
	UnitCost       NullableFloat64        `json:"unitCost,omitempty"`
	UnitOfMeasure  UnitOfMeasureReference `json:"unitOfMeasure"`
	//  Max length: 50;
	VendorOrderNumber *string `json:"vendorOrderNumber,omitempty"`
	//  Max length: 50;
	VendorSku    *string                `json:"vendorSku,omitempty"`
	Warehouse    *WarehouseReference    `json:"warehouse,omitempty"`
	WarehouseBin *WarehouseBinReference `json:"warehouseBin,omitempty"`
	//  Max length: 10;
	ShipSet             *string               `json:"shipSet,omitempty"`
	DateReceived        *time.Time            `json:"dateReceived,omitempty"`
	ReceivedStatus      NullableString        `json:"receivedStatus,omitempty"`
	Info                *map[string]string    `json:"_info,omitempty"`
	ExtCost             *float64              `json:"extCost,omitempty"`
	ExpectedArrivalDate *time.Time            `json:"expectedArrivalDate,omitempty"`
	IsDetachAvailable   *bool                 `json:"isDetachAvailable,omitempty"`
	BatchedFlag         *bool                 `json:"batchedFlag,omitempty"`
	UnbatchedRecId      NullableInt32         `json:"unbatchedRecId,omitempty"`
	SalesOrder          []SalesOrderReference `json:"salesOrder,omitempty"`
	CustomFields        []CustomFieldValue    `json:"customFields,omitempty"`
}

type _PurchaseOrderLineItem PurchaseOrderLineItem

// NewPurchaseOrderLineItem instantiates a new PurchaseOrderLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseOrderLineItem(description string, lineNumber NullableInt32, product IvItemReference, quantity NullableFloat64, unitOfMeasure UnitOfMeasureReference) *PurchaseOrderLineItem {
	this := PurchaseOrderLineItem{}
	this.Description = description
	this.LineNumber = lineNumber
	this.Product = product
	this.Quantity = quantity
	this.UnitOfMeasure = unitOfMeasure
	return &this
}

// NewPurchaseOrderLineItemWithDefaults instantiates a new PurchaseOrderLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseOrderLineItemWithDefaults() *PurchaseOrderLineItem {
	this := PurchaseOrderLineItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PurchaseOrderLineItem) SetId(v int32) {
	o.Id = &v
}

// GetBackorderedFlag returns the BackorderedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetBackorderedFlag() bool {
	if o == nil || IsNil(o.BackorderedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BackorderedFlag.Get()
}

// GetBackorderedFlagOk returns a tuple with the BackorderedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetBackorderedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackorderedFlag.Get(), o.BackorderedFlag.IsSet()
}

// HasBackorderedFlag returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasBackorderedFlag() bool {
	if o != nil && o.BackorderedFlag.IsSet() {
		return true
	}

	return false
}

// SetBackorderedFlag gets a reference to the given NullableBool and assigns it to the BackorderedFlag field.
func (o *PurchaseOrderLineItem) SetBackorderedFlag(v bool) {
	o.BackorderedFlag.Set(&v)
}

// SetBackorderedFlagNil sets the value for BackorderedFlag to be an explicit nil
func (o *PurchaseOrderLineItem) SetBackorderedFlagNil() {
	o.BackorderedFlag.Set(nil)
}

// UnsetBackorderedFlag ensures that no value is present for BackorderedFlag, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetBackorderedFlag() {
	o.BackorderedFlag.Unset()
}

// GetCanceledBy returns the CanceledBy field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetCanceledBy() string {
	if o == nil || IsNil(o.CanceledBy) {
		var ret string
		return ret
	}
	return *o.CanceledBy
}

// GetCanceledByOk returns a tuple with the CanceledBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetCanceledByOk() (*string, bool) {
	if o == nil || IsNil(o.CanceledBy) {
		return nil, false
	}
	return o.CanceledBy, true
}

// HasCanceledBy returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasCanceledBy() bool {
	if o != nil && !IsNil(o.CanceledBy) {
		return true
	}

	return false
}

// SetCanceledBy gets a reference to the given string and assigns it to the CanceledBy field.
func (o *PurchaseOrderLineItem) SetCanceledBy(v string) {
	o.CanceledBy = &v
}

// GetCanceledFlag returns the CanceledFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetCanceledFlag() bool {
	if o == nil || IsNil(o.CanceledFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CanceledFlag.Get()
}

// GetCanceledFlagOk returns a tuple with the CanceledFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetCanceledFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanceledFlag.Get(), o.CanceledFlag.IsSet()
}

// HasCanceledFlag returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasCanceledFlag() bool {
	if o != nil && o.CanceledFlag.IsSet() {
		return true
	}

	return false
}

// SetCanceledFlag gets a reference to the given NullableBool and assigns it to the CanceledFlag field.
func (o *PurchaseOrderLineItem) SetCanceledFlag(v bool) {
	o.CanceledFlag.Set(&v)
}

// SetCanceledFlagNil sets the value for CanceledFlag to be an explicit nil
func (o *PurchaseOrderLineItem) SetCanceledFlagNil() {
	o.CanceledFlag.Set(nil)
}

// UnsetCanceledFlag ensures that no value is present for CanceledFlag, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetCanceledFlag() {
	o.CanceledFlag.Unset()
}

// GetCanceledReason returns the CanceledReason field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetCanceledReason() string {
	if o == nil || IsNil(o.CanceledReason) {
		var ret string
		return ret
	}
	return *o.CanceledReason
}

// GetCanceledReasonOk returns a tuple with the CanceledReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetCanceledReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CanceledReason) {
		return nil, false
	}
	return o.CanceledReason, true
}

// HasCanceledReason returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasCanceledReason() bool {
	if o != nil && !IsNil(o.CanceledReason) {
		return true
	}

	return false
}

// SetCanceledReason gets a reference to the given string and assigns it to the CanceledReason field.
func (o *PurchaseOrderLineItem) SetCanceledReason(v string) {
	o.CanceledReason = &v
}

// GetClosedFlag returns the ClosedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetClosedFlag() bool {
	if o == nil || IsNil(o.ClosedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ClosedFlag.Get()
}

// GetClosedFlagOk returns a tuple with the ClosedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetClosedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedFlag.Get(), o.ClosedFlag.IsSet()
}

// HasClosedFlag returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasClosedFlag() bool {
	if o != nil && o.ClosedFlag.IsSet() {
		return true
	}

	return false
}

// SetClosedFlag gets a reference to the given NullableBool and assigns it to the ClosedFlag field.
func (o *PurchaseOrderLineItem) SetClosedFlag(v bool) {
	o.ClosedFlag.Set(&v)
}

// SetClosedFlagNil sets the value for ClosedFlag to be an explicit nil
func (o *PurchaseOrderLineItem) SetClosedFlagNil() {
	o.ClosedFlag.Set(nil)
}

// UnsetClosedFlag ensures that no value is present for ClosedFlag, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetClosedFlag() {
	o.ClosedFlag.Unset()
}

// GetDateCanceled returns the DateCanceled field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetDateCanceled() time.Time {
	if o == nil || IsNil(o.DateCanceled) {
		var ret time.Time
		return ret
	}
	return *o.DateCanceled
}

// GetDateCanceledOk returns a tuple with the DateCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetDateCanceledOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCanceled) {
		return nil, false
	}
	return o.DateCanceled, true
}

// HasDateCanceled returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasDateCanceled() bool {
	if o != nil && !IsNil(o.DateCanceled) {
		return true
	}

	return false
}

// SetDateCanceled gets a reference to the given time.Time and assigns it to the DateCanceled field.
func (o *PurchaseOrderLineItem) SetDateCanceled(v time.Time) {
	o.DateCanceled = &v
}

// GetDateCanceledUtc returns the DateCanceledUtc field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetDateCanceledUtc() time.Time {
	if o == nil || IsNil(o.DateCanceledUtc) {
		var ret time.Time
		return ret
	}
	return *o.DateCanceledUtc
}

// GetDateCanceledUtcOk returns a tuple with the DateCanceledUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetDateCanceledUtcOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCanceledUtc) {
		return nil, false
	}
	return o.DateCanceledUtc, true
}

// HasDateCanceledUtc returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasDateCanceledUtc() bool {
	if o != nil && !IsNil(o.DateCanceledUtc) {
		return true
	}

	return false
}

// SetDateCanceledUtc gets a reference to the given time.Time and assigns it to the DateCanceledUtc field.
func (o *PurchaseOrderLineItem) SetDateCanceledUtc(v time.Time) {
	o.DateCanceledUtc = &v
}

// GetDescription returns the Description field value
func (o *PurchaseOrderLineItem) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PurchaseOrderLineItem) SetDescription(v string) {
	o.Description = v
}

// GetDisplayInternalNotesFlag returns the DisplayInternalNotesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetDisplayInternalNotesFlag() bool {
	if o == nil || IsNil(o.DisplayInternalNotesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisplayInternalNotesFlag.Get()
}

// GetDisplayInternalNotesFlagOk returns a tuple with the DisplayInternalNotesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetDisplayInternalNotesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayInternalNotesFlag.Get(), o.DisplayInternalNotesFlag.IsSet()
}

// HasDisplayInternalNotesFlag returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasDisplayInternalNotesFlag() bool {
	if o != nil && o.DisplayInternalNotesFlag.IsSet() {
		return true
	}

	return false
}

// SetDisplayInternalNotesFlag gets a reference to the given NullableBool and assigns it to the DisplayInternalNotesFlag field.
func (o *PurchaseOrderLineItem) SetDisplayInternalNotesFlag(v bool) {
	o.DisplayInternalNotesFlag.Set(&v)
}

// SetDisplayInternalNotesFlagNil sets the value for DisplayInternalNotesFlag to be an explicit nil
func (o *PurchaseOrderLineItem) SetDisplayInternalNotesFlagNil() {
	o.DisplayInternalNotesFlag.Set(nil)
}

// UnsetDisplayInternalNotesFlag ensures that no value is present for DisplayInternalNotesFlag, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetDisplayInternalNotesFlag() {
	o.DisplayInternalNotesFlag.Unset()
}

// GetExpectedShipDate returns the ExpectedShipDate field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetExpectedShipDate() time.Time {
	if o == nil || IsNil(o.ExpectedShipDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedShipDate
}

// GetExpectedShipDateOk returns a tuple with the ExpectedShipDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetExpectedShipDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedShipDate) {
		return nil, false
	}
	return o.ExpectedShipDate, true
}

// HasExpectedShipDate returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasExpectedShipDate() bool {
	if o != nil && !IsNil(o.ExpectedShipDate) {
		return true
	}

	return false
}

// SetExpectedShipDate gets a reference to the given time.Time and assigns it to the ExpectedShipDate field.
func (o *PurchaseOrderLineItem) SetExpectedShipDate(v time.Time) {
	o.ExpectedShipDate = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *PurchaseOrderLineItem) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetLineNumber returns the LineNumber field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PurchaseOrderLineItem) GetLineNumber() int32 {
	if o == nil || o.LineNumber.Get() == nil {
		var ret int32
		return ret
	}

	return *o.LineNumber.Get()
}

// GetLineNumberOk returns a tuple with the LineNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetLineNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineNumber.Get(), o.LineNumber.IsSet()
}

// SetLineNumber sets field value
func (o *PurchaseOrderLineItem) SetLineNumber(v int32) {
	o.LineNumber.Set(&v)
}

// GetPackingSlip returns the PackingSlip field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetPackingSlip() string {
	if o == nil || IsNil(o.PackingSlip) {
		var ret string
		return ret
	}
	return *o.PackingSlip
}

// GetPackingSlipOk returns a tuple with the PackingSlip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetPackingSlipOk() (*string, bool) {
	if o == nil || IsNil(o.PackingSlip) {
		return nil, false
	}
	return o.PackingSlip, true
}

// HasPackingSlip returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasPackingSlip() bool {
	if o != nil && !IsNil(o.PackingSlip) {
		return true
	}

	return false
}

// SetPackingSlip gets a reference to the given string and assigns it to the PackingSlip field.
func (o *PurchaseOrderLineItem) SetPackingSlip(v string) {
	o.PackingSlip = &v
}

// GetProduct returns the Product field value
func (o *PurchaseOrderLineItem) GetProduct() IvItemReference {
	if o == nil {
		var ret IvItemReference
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetProductOk() (*IvItemReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *PurchaseOrderLineItem) SetProduct(v IvItemReference) {
	o.Product = v
}

// GetPurchaseOrderId returns the PurchaseOrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetPurchaseOrderId() int32 {
	if o == nil || IsNil(o.PurchaseOrderId.Get()) {
		var ret int32
		return ret
	}
	return *o.PurchaseOrderId.Get()
}

// GetPurchaseOrderIdOk returns a tuple with the PurchaseOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetPurchaseOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseOrderId.Get(), o.PurchaseOrderId.IsSet()
}

// HasPurchaseOrderId returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasPurchaseOrderId() bool {
	if o != nil && o.PurchaseOrderId.IsSet() {
		return true
	}

	return false
}

// SetPurchaseOrderId gets a reference to the given NullableInt32 and assigns it to the PurchaseOrderId field.
func (o *PurchaseOrderLineItem) SetPurchaseOrderId(v int32) {
	o.PurchaseOrderId.Set(&v)
}

// SetPurchaseOrderIdNil sets the value for PurchaseOrderId to be an explicit nil
func (o *PurchaseOrderLineItem) SetPurchaseOrderIdNil() {
	o.PurchaseOrderId.Set(nil)
}

// UnsetPurchaseOrderId ensures that no value is present for PurchaseOrderId, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetPurchaseOrderId() {
	o.PurchaseOrderId.Unset()
}

// GetPurchaseOrderNumber returns the PurchaseOrderNumber field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetPurchaseOrderNumber() string {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNumber
}

// GetPurchaseOrderNumberOk returns a tuple with the PurchaseOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetPurchaseOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		return nil, false
	}
	return o.PurchaseOrderNumber, true
}

// HasPurchaseOrderNumber returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasPurchaseOrderNumber() bool {
	if o != nil && !IsNil(o.PurchaseOrderNumber) {
		return true
	}

	return false
}

// SetPurchaseOrderNumber gets a reference to the given string and assigns it to the PurchaseOrderNumber field.
func (o *PurchaseOrderLineItem) SetPurchaseOrderNumber(v string) {
	o.PurchaseOrderNumber = &v
}

// GetQuantity returns the Quantity field value
// If the value is explicit nil, the zero value for float64 will be returned
func (o *PurchaseOrderLineItem) GetQuantity() float64 {
	if o == nil || o.Quantity.Get() == nil {
		var ret float64
		return ret
	}

	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetQuantityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// SetQuantity sets field value
func (o *PurchaseOrderLineItem) SetQuantity(v float64) {
	o.Quantity.Set(&v)
}

// GetReceivedQuantity returns the ReceivedQuantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetReceivedQuantity() int32 {
	if o == nil || IsNil(o.ReceivedQuantity.Get()) {
		var ret int32
		return ret
	}
	return *o.ReceivedQuantity.Get()
}

// GetReceivedQuantityOk returns a tuple with the ReceivedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetReceivedQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceivedQuantity.Get(), o.ReceivedQuantity.IsSet()
}

// HasReceivedQuantity returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasReceivedQuantity() bool {
	if o != nil && o.ReceivedQuantity.IsSet() {
		return true
	}

	return false
}

// SetReceivedQuantity gets a reference to the given NullableInt32 and assigns it to the ReceivedQuantity field.
func (o *PurchaseOrderLineItem) SetReceivedQuantity(v int32) {
	o.ReceivedQuantity.Set(&v)
}

// SetReceivedQuantityNil sets the value for ReceivedQuantity to be an explicit nil
func (o *PurchaseOrderLineItem) SetReceivedQuantityNil() {
	o.ReceivedQuantity.Set(nil)
}

// UnsetReceivedQuantity ensures that no value is present for ReceivedQuantity, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetReceivedQuantity() {
	o.ReceivedQuantity.Unset()
}

// GetSerialNumbers returns the SerialNumbers field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetSerialNumbers() string {
	if o == nil || IsNil(o.SerialNumbers) {
		var ret string
		return ret
	}
	return *o.SerialNumbers
}

// GetSerialNumbersOk returns a tuple with the SerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetSerialNumbersOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumbers) {
		return nil, false
	}
	return o.SerialNumbers, true
}

// HasSerialNumbers returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasSerialNumbers() bool {
	if o != nil && !IsNil(o.SerialNumbers) {
		return true
	}

	return false
}

// SetSerialNumbers gets a reference to the given string and assigns it to the SerialNumbers field.
func (o *PurchaseOrderLineItem) SetSerialNumbers(v string) {
	o.SerialNumbers = &v
}

// GetShipDate returns the ShipDate field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetShipDate() time.Time {
	if o == nil || IsNil(o.ShipDate) {
		var ret time.Time
		return ret
	}
	return *o.ShipDate
}

// GetShipDateOk returns a tuple with the ShipDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetShipDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ShipDate) {
		return nil, false
	}
	return o.ShipDate, true
}

// HasShipDate returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasShipDate() bool {
	if o != nil && !IsNil(o.ShipDate) {
		return true
	}

	return false
}

// SetShipDate gets a reference to the given time.Time and assigns it to the ShipDate field.
func (o *PurchaseOrderLineItem) SetShipDate(v time.Time) {
	o.ShipDate = &v
}

// GetShipmentMethod returns the ShipmentMethod field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetShipmentMethod() ShipmentMethodReference {
	if o == nil || IsNil(o.ShipmentMethod) {
		var ret ShipmentMethodReference
		return ret
	}
	return *o.ShipmentMethod
}

// GetShipmentMethodOk returns a tuple with the ShipmentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetShipmentMethodOk() (*ShipmentMethodReference, bool) {
	if o == nil || IsNil(o.ShipmentMethod) {
		return nil, false
	}
	return o.ShipmentMethod, true
}

// HasShipmentMethod returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasShipmentMethod() bool {
	if o != nil && !IsNil(o.ShipmentMethod) {
		return true
	}

	return false
}

// SetShipmentMethod gets a reference to the given ShipmentMethodReference and assigns it to the ShipmentMethod field.
func (o *PurchaseOrderLineItem) SetShipmentMethod(v ShipmentMethodReference) {
	o.ShipmentMethod = &v
}

// GetTax returns the Tax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetTax() float64 {
	if o == nil || IsNil(o.Tax.Get()) {
		var ret float64
		return ret
	}
	return *o.Tax.Get()
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetTaxOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tax.Get(), o.Tax.IsSet()
}

// HasTax returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasTax() bool {
	if o != nil && o.Tax.IsSet() {
		return true
	}

	return false
}

// SetTax gets a reference to the given NullableFloat64 and assigns it to the Tax field.
func (o *PurchaseOrderLineItem) SetTax(v float64) {
	o.Tax.Set(&v)
}

// SetTaxNil sets the value for Tax to be an explicit nil
func (o *PurchaseOrderLineItem) SetTaxNil() {
	o.Tax.Set(nil)
}

// UnsetTax ensures that no value is present for Tax, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetTax() {
	o.Tax.Unset()
}

// GetTrackingNumber returns the TrackingNumber field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetTrackingNumber() string {
	if o == nil || IsNil(o.TrackingNumber) {
		var ret string
		return ret
	}
	return *o.TrackingNumber
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingNumber) {
		return nil, false
	}
	return o.TrackingNumber, true
}

// HasTrackingNumber returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasTrackingNumber() bool {
	if o != nil && !IsNil(o.TrackingNumber) {
		return true
	}

	return false
}

// SetTrackingNumber gets a reference to the given string and assigns it to the TrackingNumber field.
func (o *PurchaseOrderLineItem) SetTrackingNumber(v string) {
	o.TrackingNumber = &v
}

// GetUnitCost returns the UnitCost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetUnitCost() float64 {
	if o == nil || IsNil(o.UnitCost.Get()) {
		var ret float64
		return ret
	}
	return *o.UnitCost.Get()
}

// GetUnitCostOk returns a tuple with the UnitCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetUnitCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitCost.Get(), o.UnitCost.IsSet()
}

// HasUnitCost returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasUnitCost() bool {
	if o != nil && o.UnitCost.IsSet() {
		return true
	}

	return false
}

// SetUnitCost gets a reference to the given NullableFloat64 and assigns it to the UnitCost field.
func (o *PurchaseOrderLineItem) SetUnitCost(v float64) {
	o.UnitCost.Set(&v)
}

// SetUnitCostNil sets the value for UnitCost to be an explicit nil
func (o *PurchaseOrderLineItem) SetUnitCostNil() {
	o.UnitCost.Set(nil)
}

// UnsetUnitCost ensures that no value is present for UnitCost, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetUnitCost() {
	o.UnitCost.Unset()
}

// GetUnitOfMeasure returns the UnitOfMeasure field value
func (o *PurchaseOrderLineItem) GetUnitOfMeasure() UnitOfMeasureReference {
	if o == nil {
		var ret UnitOfMeasureReference
		return ret
	}

	return o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetUnitOfMeasureOk() (*UnitOfMeasureReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitOfMeasure, true
}

// SetUnitOfMeasure sets field value
func (o *PurchaseOrderLineItem) SetUnitOfMeasure(v UnitOfMeasureReference) {
	o.UnitOfMeasure = v
}

// GetVendorOrderNumber returns the VendorOrderNumber field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetVendorOrderNumber() string {
	if o == nil || IsNil(o.VendorOrderNumber) {
		var ret string
		return ret
	}
	return *o.VendorOrderNumber
}

// GetVendorOrderNumberOk returns a tuple with the VendorOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetVendorOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VendorOrderNumber) {
		return nil, false
	}
	return o.VendorOrderNumber, true
}

// HasVendorOrderNumber returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasVendorOrderNumber() bool {
	if o != nil && !IsNil(o.VendorOrderNumber) {
		return true
	}

	return false
}

// SetVendorOrderNumber gets a reference to the given string and assigns it to the VendorOrderNumber field.
func (o *PurchaseOrderLineItem) SetVendorOrderNumber(v string) {
	o.VendorOrderNumber = &v
}

// GetVendorSku returns the VendorSku field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetVendorSku() string {
	if o == nil || IsNil(o.VendorSku) {
		var ret string
		return ret
	}
	return *o.VendorSku
}

// GetVendorSkuOk returns a tuple with the VendorSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetVendorSkuOk() (*string, bool) {
	if o == nil || IsNil(o.VendorSku) {
		return nil, false
	}
	return o.VendorSku, true
}

// HasVendorSku returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasVendorSku() bool {
	if o != nil && !IsNil(o.VendorSku) {
		return true
	}

	return false
}

// SetVendorSku gets a reference to the given string and assigns it to the VendorSku field.
func (o *PurchaseOrderLineItem) SetVendorSku(v string) {
	o.VendorSku = &v
}

// GetWarehouse returns the Warehouse field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetWarehouse() WarehouseReference {
	if o == nil || IsNil(o.Warehouse) {
		var ret WarehouseReference
		return ret
	}
	return *o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil || IsNil(o.Warehouse) {
		return nil, false
	}
	return o.Warehouse, true
}

// HasWarehouse returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasWarehouse() bool {
	if o != nil && !IsNil(o.Warehouse) {
		return true
	}

	return false
}

// SetWarehouse gets a reference to the given WarehouseReference and assigns it to the Warehouse field.
func (o *PurchaseOrderLineItem) SetWarehouse(v WarehouseReference) {
	o.Warehouse = &v
}

// GetWarehouseBin returns the WarehouseBin field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetWarehouseBin() WarehouseBinReference {
	if o == nil || IsNil(o.WarehouseBin) {
		var ret WarehouseBinReference
		return ret
	}
	return *o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil || IsNil(o.WarehouseBin) {
		return nil, false
	}
	return o.WarehouseBin, true
}

// HasWarehouseBin returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasWarehouseBin() bool {
	if o != nil && !IsNil(o.WarehouseBin) {
		return true
	}

	return false
}

// SetWarehouseBin gets a reference to the given WarehouseBinReference and assigns it to the WarehouseBin field.
func (o *PurchaseOrderLineItem) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = &v
}

// GetShipSet returns the ShipSet field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetShipSet() string {
	if o == nil || IsNil(o.ShipSet) {
		var ret string
		return ret
	}
	return *o.ShipSet
}

// GetShipSetOk returns a tuple with the ShipSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetShipSetOk() (*string, bool) {
	if o == nil || IsNil(o.ShipSet) {
		return nil, false
	}
	return o.ShipSet, true
}

// HasShipSet returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasShipSet() bool {
	if o != nil && !IsNil(o.ShipSet) {
		return true
	}

	return false
}

// SetShipSet gets a reference to the given string and assigns it to the ShipSet field.
func (o *PurchaseOrderLineItem) SetShipSet(v string) {
	o.ShipSet = &v
}

// GetDateReceived returns the DateReceived field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetDateReceived() time.Time {
	if o == nil || IsNil(o.DateReceived) {
		var ret time.Time
		return ret
	}
	return *o.DateReceived
}

// GetDateReceivedOk returns a tuple with the DateReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetDateReceivedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateReceived) {
		return nil, false
	}
	return o.DateReceived, true
}

// HasDateReceived returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasDateReceived() bool {
	if o != nil && !IsNil(o.DateReceived) {
		return true
	}

	return false
}

// SetDateReceived gets a reference to the given time.Time and assigns it to the DateReceived field.
func (o *PurchaseOrderLineItem) SetDateReceived(v time.Time) {
	o.DateReceived = &v
}

// GetReceivedStatus returns the ReceivedStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetReceivedStatus() string {
	if o == nil || IsNil(o.ReceivedStatus.Get()) {
		var ret string
		return ret
	}
	return *o.ReceivedStatus.Get()
}

// GetReceivedStatusOk returns a tuple with the ReceivedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetReceivedStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceivedStatus.Get(), o.ReceivedStatus.IsSet()
}

// HasReceivedStatus returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasReceivedStatus() bool {
	if o != nil && o.ReceivedStatus.IsSet() {
		return true
	}

	return false
}

// SetReceivedStatus gets a reference to the given NullableString and assigns it to the ReceivedStatus field.
func (o *PurchaseOrderLineItem) SetReceivedStatus(v string) {
	o.ReceivedStatus.Set(&v)
}

// SetReceivedStatusNil sets the value for ReceivedStatus to be an explicit nil
func (o *PurchaseOrderLineItem) SetReceivedStatusNil() {
	o.ReceivedStatus.Set(nil)
}

// UnsetReceivedStatus ensures that no value is present for ReceivedStatus, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetReceivedStatus() {
	o.ReceivedStatus.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *PurchaseOrderLineItem) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetExtCost returns the ExtCost field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetExtCost() float64 {
	if o == nil || IsNil(o.ExtCost) {
		var ret float64
		return ret
	}
	return *o.ExtCost
}

// GetExtCostOk returns a tuple with the ExtCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetExtCostOk() (*float64, bool) {
	if o == nil || IsNil(o.ExtCost) {
		return nil, false
	}
	return o.ExtCost, true
}

// HasExtCost returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasExtCost() bool {
	if o != nil && !IsNil(o.ExtCost) {
		return true
	}

	return false
}

// SetExtCost gets a reference to the given float64 and assigns it to the ExtCost field.
func (o *PurchaseOrderLineItem) SetExtCost(v float64) {
	o.ExtCost = &v
}

// GetExpectedArrivalDate returns the ExpectedArrivalDate field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetExpectedArrivalDate() time.Time {
	if o == nil || IsNil(o.ExpectedArrivalDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedArrivalDate
}

// GetExpectedArrivalDateOk returns a tuple with the ExpectedArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetExpectedArrivalDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedArrivalDate) {
		return nil, false
	}
	return o.ExpectedArrivalDate, true
}

// HasExpectedArrivalDate returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasExpectedArrivalDate() bool {
	if o != nil && !IsNil(o.ExpectedArrivalDate) {
		return true
	}

	return false
}

// SetExpectedArrivalDate gets a reference to the given time.Time and assigns it to the ExpectedArrivalDate field.
func (o *PurchaseOrderLineItem) SetExpectedArrivalDate(v time.Time) {
	o.ExpectedArrivalDate = &v
}

// GetIsDetachAvailable returns the IsDetachAvailable field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetIsDetachAvailable() bool {
	if o == nil || IsNil(o.IsDetachAvailable) {
		var ret bool
		return ret
	}
	return *o.IsDetachAvailable
}

// GetIsDetachAvailableOk returns a tuple with the IsDetachAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetIsDetachAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDetachAvailable) {
		return nil, false
	}
	return o.IsDetachAvailable, true
}

// HasIsDetachAvailable returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasIsDetachAvailable() bool {
	if o != nil && !IsNil(o.IsDetachAvailable) {
		return true
	}

	return false
}

// SetIsDetachAvailable gets a reference to the given bool and assigns it to the IsDetachAvailable field.
func (o *PurchaseOrderLineItem) SetIsDetachAvailable(v bool) {
	o.IsDetachAvailable = &v
}

// GetBatchedFlag returns the BatchedFlag field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetBatchedFlag() bool {
	if o == nil || IsNil(o.BatchedFlag) {
		var ret bool
		return ret
	}
	return *o.BatchedFlag
}

// GetBatchedFlagOk returns a tuple with the BatchedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetBatchedFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.BatchedFlag) {
		return nil, false
	}
	return o.BatchedFlag, true
}

// HasBatchedFlag returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasBatchedFlag() bool {
	if o != nil && !IsNil(o.BatchedFlag) {
		return true
	}

	return false
}

// SetBatchedFlag gets a reference to the given bool and assigns it to the BatchedFlag field.
func (o *PurchaseOrderLineItem) SetBatchedFlag(v bool) {
	o.BatchedFlag = &v
}

// GetUnbatchedRecId returns the UnbatchedRecId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItem) GetUnbatchedRecId() int32 {
	if o == nil || IsNil(o.UnbatchedRecId.Get()) {
		var ret int32
		return ret
	}
	return *o.UnbatchedRecId.Get()
}

// GetUnbatchedRecIdOk returns a tuple with the UnbatchedRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItem) GetUnbatchedRecIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnbatchedRecId.Get(), o.UnbatchedRecId.IsSet()
}

// HasUnbatchedRecId returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasUnbatchedRecId() bool {
	if o != nil && o.UnbatchedRecId.IsSet() {
		return true
	}

	return false
}

// SetUnbatchedRecId gets a reference to the given NullableInt32 and assigns it to the UnbatchedRecId field.
func (o *PurchaseOrderLineItem) SetUnbatchedRecId(v int32) {
	o.UnbatchedRecId.Set(&v)
}

// SetUnbatchedRecIdNil sets the value for UnbatchedRecId to be an explicit nil
func (o *PurchaseOrderLineItem) SetUnbatchedRecIdNil() {
	o.UnbatchedRecId.Set(nil)
}

// UnsetUnbatchedRecId ensures that no value is present for UnbatchedRecId, not even an explicit nil
func (o *PurchaseOrderLineItem) UnsetUnbatchedRecId() {
	o.UnbatchedRecId.Unset()
}

// GetSalesOrder returns the SalesOrder field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetSalesOrder() []SalesOrderReference {
	if o == nil || IsNil(o.SalesOrder) {
		var ret []SalesOrderReference
		return ret
	}
	return o.SalesOrder
}

// GetSalesOrderOk returns a tuple with the SalesOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetSalesOrderOk() ([]SalesOrderReference, bool) {
	if o == nil || IsNil(o.SalesOrder) {
		return nil, false
	}
	return o.SalesOrder, true
}

// HasSalesOrder returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasSalesOrder() bool {
	if o != nil && !IsNil(o.SalesOrder) {
		return true
	}

	return false
}

// SetSalesOrder gets a reference to the given []SalesOrderReference and assigns it to the SalesOrder field.
func (o *PurchaseOrderLineItem) SetSalesOrder(v []SalesOrderReference) {
	o.SalesOrder = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PurchaseOrderLineItem) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItem) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PurchaseOrderLineItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *PurchaseOrderLineItem) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o PurchaseOrderLineItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurchaseOrderLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.BackorderedFlag.IsSet() {
		toSerialize["backorderedFlag"] = o.BackorderedFlag.Get()
	}
	if !IsNil(o.CanceledBy) {
		toSerialize["canceledBy"] = o.CanceledBy
	}
	if o.CanceledFlag.IsSet() {
		toSerialize["canceledFlag"] = o.CanceledFlag.Get()
	}
	if !IsNil(o.CanceledReason) {
		toSerialize["canceledReason"] = o.CanceledReason
	}
	if o.ClosedFlag.IsSet() {
		toSerialize["closedFlag"] = o.ClosedFlag.Get()
	}
	if !IsNil(o.DateCanceled) {
		toSerialize["dateCanceled"] = o.DateCanceled
	}
	if !IsNil(o.DateCanceledUtc) {
		toSerialize["dateCanceledUtc"] = o.DateCanceledUtc
	}
	toSerialize["description"] = o.Description
	if o.DisplayInternalNotesFlag.IsSet() {
		toSerialize["displayInternalNotesFlag"] = o.DisplayInternalNotesFlag.Get()
	}
	if !IsNil(o.ExpectedShipDate) {
		toSerialize["expectedShipDate"] = o.ExpectedShipDate
	}
	if !IsNil(o.InternalNotes) {
		toSerialize["internalNotes"] = o.InternalNotes
	}
	toSerialize["lineNumber"] = o.LineNumber.Get()
	if !IsNil(o.PackingSlip) {
		toSerialize["packingSlip"] = o.PackingSlip
	}
	toSerialize["product"] = o.Product
	if o.PurchaseOrderId.IsSet() {
		toSerialize["purchaseOrderId"] = o.PurchaseOrderId.Get()
	}
	if !IsNil(o.PurchaseOrderNumber) {
		toSerialize["purchaseOrderNumber"] = o.PurchaseOrderNumber
	}
	toSerialize["quantity"] = o.Quantity.Get()
	if o.ReceivedQuantity.IsSet() {
		toSerialize["receivedQuantity"] = o.ReceivedQuantity.Get()
	}
	if !IsNil(o.SerialNumbers) {
		toSerialize["serialNumbers"] = o.SerialNumbers
	}
	if !IsNil(o.ShipDate) {
		toSerialize["shipDate"] = o.ShipDate
	}
	if !IsNil(o.ShipmentMethod) {
		toSerialize["shipmentMethod"] = o.ShipmentMethod
	}
	if o.Tax.IsSet() {
		toSerialize["tax"] = o.Tax.Get()
	}
	if !IsNil(o.TrackingNumber) {
		toSerialize["trackingNumber"] = o.TrackingNumber
	}
	if o.UnitCost.IsSet() {
		toSerialize["unitCost"] = o.UnitCost.Get()
	}
	toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	if !IsNil(o.VendorOrderNumber) {
		toSerialize["vendorOrderNumber"] = o.VendorOrderNumber
	}
	if !IsNil(o.VendorSku) {
		toSerialize["vendorSku"] = o.VendorSku
	}
	if !IsNil(o.Warehouse) {
		toSerialize["warehouse"] = o.Warehouse
	}
	if !IsNil(o.WarehouseBin) {
		toSerialize["warehouseBin"] = o.WarehouseBin
	}
	if !IsNil(o.ShipSet) {
		toSerialize["shipSet"] = o.ShipSet
	}
	if !IsNil(o.DateReceived) {
		toSerialize["dateReceived"] = o.DateReceived
	}
	if o.ReceivedStatus.IsSet() {
		toSerialize["receivedStatus"] = o.ReceivedStatus.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.ExtCost) {
		toSerialize["extCost"] = o.ExtCost
	}
	if !IsNil(o.ExpectedArrivalDate) {
		toSerialize["expectedArrivalDate"] = o.ExpectedArrivalDate
	}
	if !IsNil(o.IsDetachAvailable) {
		toSerialize["isDetachAvailable"] = o.IsDetachAvailable
	}
	if !IsNil(o.BatchedFlag) {
		toSerialize["batchedFlag"] = o.BatchedFlag
	}
	if o.UnbatchedRecId.IsSet() {
		toSerialize["unbatchedRecId"] = o.UnbatchedRecId.Get()
	}
	if !IsNil(o.SalesOrder) {
		toSerialize["salesOrder"] = o.SalesOrder
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *PurchaseOrderLineItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"lineNumber",
		"product",
		"quantity",
		"unitOfMeasure",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPurchaseOrderLineItem := _PurchaseOrderLineItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPurchaseOrderLineItem)

	if err != nil {
		return err
	}

	*o = PurchaseOrderLineItem(varPurchaseOrderLineItem)

	return err
}

type NullablePurchaseOrderLineItem struct {
	value *PurchaseOrderLineItem
	isSet bool
}

func (v NullablePurchaseOrderLineItem) Get() *PurchaseOrderLineItem {
	return v.value
}

func (v *NullablePurchaseOrderLineItem) Set(val *PurchaseOrderLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseOrderLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseOrderLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseOrderLineItem(val *PurchaseOrderLineItem) *NullablePurchaseOrderLineItem {
	return &NullablePurchaseOrderLineItem{value: val, isSet: true}
}

func (v NullablePurchaseOrderLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseOrderLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
