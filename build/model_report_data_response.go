/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ReportDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportDataResponse{}

// ReportDataResponse struct for ReportDataResponse
type ReportDataResponse struct {
	ColumnDefinitions []map[string]ReportColumnDefinition `json:"column_definitions,omitempty"`
	RowValues         [][]map[string]interface{}          `json:"row_values,omitempty"`
}

// NewReportDataResponse instantiates a new ReportDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportDataResponse() *ReportDataResponse {
	this := ReportDataResponse{}
	return &this
}

// NewReportDataResponseWithDefaults instantiates a new ReportDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportDataResponseWithDefaults() *ReportDataResponse {
	this := ReportDataResponse{}
	return &this
}

// GetColumnDefinitions returns the ColumnDefinitions field value if set, zero value otherwise.
func (o *ReportDataResponse) GetColumnDefinitions() []map[string]ReportColumnDefinition {
	if o == nil || IsNil(o.ColumnDefinitions) {
		var ret []map[string]ReportColumnDefinition
		return ret
	}
	return o.ColumnDefinitions
}

// GetColumnDefinitionsOk returns a tuple with the ColumnDefinitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportDataResponse) GetColumnDefinitionsOk() ([]map[string]ReportColumnDefinition, bool) {
	if o == nil || IsNil(o.ColumnDefinitions) {
		return nil, false
	}
	return o.ColumnDefinitions, true
}

// HasColumnDefinitions returns a boolean if a field has been set.
func (o *ReportDataResponse) HasColumnDefinitions() bool {
	if o != nil && !IsNil(o.ColumnDefinitions) {
		return true
	}

	return false
}

// SetColumnDefinitions gets a reference to the given []map[string]ReportColumnDefinition and assigns it to the ColumnDefinitions field.
func (o *ReportDataResponse) SetColumnDefinitions(v []map[string]ReportColumnDefinition) {
	o.ColumnDefinitions = v
}

// GetRowValues returns the RowValues field value if set, zero value otherwise.
func (o *ReportDataResponse) GetRowValues() [][]map[string]interface{} {
	if o == nil || IsNil(o.RowValues) {
		var ret [][]map[string]interface{}
		return ret
	}
	return o.RowValues
}

// GetRowValuesOk returns a tuple with the RowValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportDataResponse) GetRowValuesOk() ([][]map[string]interface{}, bool) {
	if o == nil || IsNil(o.RowValues) {
		return nil, false
	}
	return o.RowValues, true
}

// HasRowValues returns a boolean if a field has been set.
func (o *ReportDataResponse) HasRowValues() bool {
	if o != nil && !IsNil(o.RowValues) {
		return true
	}

	return false
}

// SetRowValues gets a reference to the given [][]map[string]interface{} and assigns it to the RowValues field.
func (o *ReportDataResponse) SetRowValues(v [][]map[string]interface{}) {
	o.RowValues = v
}

func (o ReportDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ColumnDefinitions) {
		toSerialize["column_definitions"] = o.ColumnDefinitions
	}
	if !IsNil(o.RowValues) {
		toSerialize["row_values"] = o.RowValues
	}
	return toSerialize, nil
}

type NullableReportDataResponse struct {
	value *ReportDataResponse
	isSet bool
}

func (v NullableReportDataResponse) Get() *ReportDataResponse {
	return v.value
}

func (v *NullableReportDataResponse) Set(val *ReportDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReportDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReportDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportDataResponse(val *ReportDataResponse) *NullableReportDataResponse {
	return &NullableReportDataResponse{value: val, isSet: true}
}

func (v NullableReportDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
