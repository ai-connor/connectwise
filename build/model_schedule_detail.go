/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ScheduleDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduleDetail{}

// ScheduleDetail struct for ScheduleDetail
type ScheduleDetail struct {
	Id            *int32                  `json:"id,omitempty"`
	ScheduleEntry *ScheduleEntryReference `json:"scheduleEntry,omitempty"`
	DateStart     *string                 `json:"dateStart,omitempty"`
	DateEnd       *string                 `json:"dateEnd,omitempty"`
	Member        *MemberReference        `json:"member,omitempty"`
	Info          *map[string]string      `json:"_info,omitempty"`
}

// NewScheduleDetail instantiates a new ScheduleDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleDetail() *ScheduleDetail {
	this := ScheduleDetail{}
	return &this
}

// NewScheduleDetailWithDefaults instantiates a new ScheduleDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleDetailWithDefaults() *ScheduleDetail {
	this := ScheduleDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScheduleDetail) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDetail) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScheduleDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ScheduleDetail) SetId(v int32) {
	o.Id = &v
}

// GetScheduleEntry returns the ScheduleEntry field value if set, zero value otherwise.
func (o *ScheduleDetail) GetScheduleEntry() ScheduleEntryReference {
	if o == nil || IsNil(o.ScheduleEntry) {
		var ret ScheduleEntryReference
		return ret
	}
	return *o.ScheduleEntry
}

// GetScheduleEntryOk returns a tuple with the ScheduleEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDetail) GetScheduleEntryOk() (*ScheduleEntryReference, bool) {
	if o == nil || IsNil(o.ScheduleEntry) {
		return nil, false
	}
	return o.ScheduleEntry, true
}

// HasScheduleEntry returns a boolean if a field has been set.
func (o *ScheduleDetail) HasScheduleEntry() bool {
	if o != nil && !IsNil(o.ScheduleEntry) {
		return true
	}

	return false
}

// SetScheduleEntry gets a reference to the given ScheduleEntryReference and assigns it to the ScheduleEntry field.
func (o *ScheduleDetail) SetScheduleEntry(v ScheduleEntryReference) {
	o.ScheduleEntry = &v
}

// GetDateStart returns the DateStart field value if set, zero value otherwise.
func (o *ScheduleDetail) GetDateStart() string {
	if o == nil || IsNil(o.DateStart) {
		var ret string
		return ret
	}
	return *o.DateStart
}

// GetDateStartOk returns a tuple with the DateStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDetail) GetDateStartOk() (*string, bool) {
	if o == nil || IsNil(o.DateStart) {
		return nil, false
	}
	return o.DateStart, true
}

// HasDateStart returns a boolean if a field has been set.
func (o *ScheduleDetail) HasDateStart() bool {
	if o != nil && !IsNil(o.DateStart) {
		return true
	}

	return false
}

// SetDateStart gets a reference to the given string and assigns it to the DateStart field.
func (o *ScheduleDetail) SetDateStart(v string) {
	o.DateStart = &v
}

// GetDateEnd returns the DateEnd field value if set, zero value otherwise.
func (o *ScheduleDetail) GetDateEnd() string {
	if o == nil || IsNil(o.DateEnd) {
		var ret string
		return ret
	}
	return *o.DateEnd
}

// GetDateEndOk returns a tuple with the DateEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDetail) GetDateEndOk() (*string, bool) {
	if o == nil || IsNil(o.DateEnd) {
		return nil, false
	}
	return o.DateEnd, true
}

// HasDateEnd returns a boolean if a field has been set.
func (o *ScheduleDetail) HasDateEnd() bool {
	if o != nil && !IsNil(o.DateEnd) {
		return true
	}

	return false
}

// SetDateEnd gets a reference to the given string and assigns it to the DateEnd field.
func (o *ScheduleDetail) SetDateEnd(v string) {
	o.DateEnd = &v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *ScheduleDetail) GetMember() MemberReference {
	if o == nil || IsNil(o.Member) {
		var ret MemberReference
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDetail) GetMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *ScheduleDetail) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given MemberReference and assigns it to the Member field.
func (o *ScheduleDetail) SetMember(v MemberReference) {
	o.Member = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ScheduleDetail) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDetail) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ScheduleDetail) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ScheduleDetail) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ScheduleDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduleDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ScheduleEntry) {
		toSerialize["scheduleEntry"] = o.ScheduleEntry
	}
	if !IsNil(o.DateStart) {
		toSerialize["dateStart"] = o.DateStart
	}
	if !IsNil(o.DateEnd) {
		toSerialize["dateEnd"] = o.DateEnd
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableScheduleDetail struct {
	value *ScheduleDetail
	isSet bool
}

func (v NullableScheduleDetail) Get() *ScheduleDetail {
	return v.value
}

func (v *NullableScheduleDetail) Set(val *ScheduleDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleDetail(val *ScheduleDetail) *NullableScheduleDetail {
	return &NullableScheduleDetail{value: val, isSet: true}
}

func (v NullableScheduleDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
