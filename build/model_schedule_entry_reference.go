/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ScheduleEntryReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduleEntryReference{}

// ScheduleEntryReference struct for ScheduleEntryReference
type ScheduleEntryReference struct {
	Id          NullableInt32      `json:"id,omitempty"`
	Description *string            `json:"description,omitempty"`
	Info        *map[string]string `json:"_info,omitempty"`
}

// NewScheduleEntryReference instantiates a new ScheduleEntryReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleEntryReference() *ScheduleEntryReference {
	this := ScheduleEntryReference{}
	return &this
}

// NewScheduleEntryReferenceWithDefaults instantiates a new ScheduleEntryReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleEntryReferenceWithDefaults() *ScheduleEntryReference {
	this := ScheduleEntryReference{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleEntryReference) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleEntryReference) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ScheduleEntryReference) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *ScheduleEntryReference) SetId(v int32) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *ScheduleEntryReference) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ScheduleEntryReference) UnsetId() {
	o.Id.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ScheduleEntryReference) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryReference) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ScheduleEntryReference) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ScheduleEntryReference) SetDescription(v string) {
	o.Description = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ScheduleEntryReference) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryReference) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ScheduleEntryReference) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ScheduleEntryReference) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ScheduleEntryReference) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduleEntryReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableScheduleEntryReference struct {
	value *ScheduleEntryReference
	isSet bool
}

func (v NullableScheduleEntryReference) Get() *ScheduleEntryReference {
	return v.value
}

func (v *NullableScheduleEntryReference) Set(val *ScheduleEntryReference) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleEntryReference) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleEntryReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleEntryReference(val *ScheduleEntryReference) *NullableScheduleEntryReference {
	return &NullableScheduleEntryReference{value: val, isSet: true}
}

func (v NullableScheduleEntryReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleEntryReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
