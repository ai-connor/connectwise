/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServiceEmailTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceEmailTemplate{}

// ServiceEmailTemplate struct for ServiceEmailTemplate
type ServiceEmailTemplate struct {
	Id            *int32                  `json:"id,omitempty"`
	Type          NullableString          `json:"type"`
	ServiceSurvey *ServiceSurveyReference `json:"serviceSurvey,omitempty"`
	ServiceBoard  *BoardReference         `json:"serviceBoard,omitempty"`
	UseSenderFlag NullableBool            `json:"useSenderFlag,omitempty"`
	// From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100;
	FirstName *string `json:"firstName,omitempty"`
	// From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100;
	LastName *string `json:"lastName,omitempty"`
	// From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100;
	EmailAddress *string `json:"emailAddress,omitempty"`
	//  Max length: 200;
	Subject                      *string                 `json:"subject,omitempty"`
	Body                         *string                 `json:"body,omitempty"`
	CopySenderFlag               NullableBool            `json:"copySenderFlag,omitempty"`
	TasksFlag                    NullableBool            `json:"tasksFlag,omitempty"`
	ResourceRecordsFlag          NullableBool            `json:"resourceRecordsFlag,omitempty"`
	ExternalContactNotifications NullableBool            `json:"externalContactNotifications,omitempty"`
	InternalContactNotifications NullableBool            `json:"internalContactNotifications,omitempty"`
	ServiceStatus                *ServiceStatusReference `json:"serviceStatus,omitempty"`
	Info                         *map[string]string      `json:"_info,omitempty"`
}

type _ServiceEmailTemplate ServiceEmailTemplate

// NewServiceEmailTemplate instantiates a new ServiceEmailTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceEmailTemplate(type_ NullableString) *ServiceEmailTemplate {
	this := ServiceEmailTemplate{}
	this.Type = type_
	return &this
}

// NewServiceEmailTemplateWithDefaults instantiates a new ServiceEmailTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceEmailTemplateWithDefaults() *ServiceEmailTemplate {
	this := ServiceEmailTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceEmailTemplate) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ServiceEmailTemplate) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *ServiceEmailTemplate) SetType(v string) {
	o.Type.Set(&v)
}

// GetServiceSurvey returns the ServiceSurvey field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetServiceSurvey() ServiceSurveyReference {
	if o == nil || IsNil(o.ServiceSurvey) {
		var ret ServiceSurveyReference
		return ret
	}
	return *o.ServiceSurvey
}

// GetServiceSurveyOk returns a tuple with the ServiceSurvey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetServiceSurveyOk() (*ServiceSurveyReference, bool) {
	if o == nil || IsNil(o.ServiceSurvey) {
		return nil, false
	}
	return o.ServiceSurvey, true
}

// HasServiceSurvey returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasServiceSurvey() bool {
	if o != nil && !IsNil(o.ServiceSurvey) {
		return true
	}

	return false
}

// SetServiceSurvey gets a reference to the given ServiceSurveyReference and assigns it to the ServiceSurvey field.
func (o *ServiceEmailTemplate) SetServiceSurvey(v ServiceSurveyReference) {
	o.ServiceSurvey = &v
}

// GetServiceBoard returns the ServiceBoard field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetServiceBoard() BoardReference {
	if o == nil || IsNil(o.ServiceBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceBoard
}

// GetServiceBoardOk returns a tuple with the ServiceBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetServiceBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceBoard) {
		return nil, false
	}
	return o.ServiceBoard, true
}

// HasServiceBoard returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasServiceBoard() bool {
	if o != nil && !IsNil(o.ServiceBoard) {
		return true
	}

	return false
}

// SetServiceBoard gets a reference to the given BoardReference and assigns it to the ServiceBoard field.
func (o *ServiceEmailTemplate) SetServiceBoard(v BoardReference) {
	o.ServiceBoard = &v
}

// GetUseSenderFlag returns the UseSenderFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceEmailTemplate) GetUseSenderFlag() bool {
	if o == nil || IsNil(o.UseSenderFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UseSenderFlag.Get()
}

// GetUseSenderFlagOk returns a tuple with the UseSenderFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetUseSenderFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseSenderFlag.Get(), o.UseSenderFlag.IsSet()
}

// HasUseSenderFlag returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasUseSenderFlag() bool {
	if o != nil && o.UseSenderFlag.IsSet() {
		return true
	}

	return false
}

// SetUseSenderFlag gets a reference to the given NullableBool and assigns it to the UseSenderFlag field.
func (o *ServiceEmailTemplate) SetUseSenderFlag(v bool) {
	o.UseSenderFlag.Set(&v)
}

// SetUseSenderFlagNil sets the value for UseSenderFlag to be an explicit nil
func (o *ServiceEmailTemplate) SetUseSenderFlagNil() {
	o.UseSenderFlag.Set(nil)
}

// UnsetUseSenderFlag ensures that no value is present for UseSenderFlag, not even an explicit nil
func (o *ServiceEmailTemplate) UnsetUseSenderFlag() {
	o.UseSenderFlag.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ServiceEmailTemplate) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ServiceEmailTemplate) SetLastName(v string) {
	o.LastName = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *ServiceEmailTemplate) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ServiceEmailTemplate) SetSubject(v string) {
	o.Subject = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *ServiceEmailTemplate) SetBody(v string) {
	o.Body = &v
}

// GetCopySenderFlag returns the CopySenderFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceEmailTemplate) GetCopySenderFlag() bool {
	if o == nil || IsNil(o.CopySenderFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CopySenderFlag.Get()
}

// GetCopySenderFlagOk returns a tuple with the CopySenderFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetCopySenderFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CopySenderFlag.Get(), o.CopySenderFlag.IsSet()
}

// HasCopySenderFlag returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasCopySenderFlag() bool {
	if o != nil && o.CopySenderFlag.IsSet() {
		return true
	}

	return false
}

// SetCopySenderFlag gets a reference to the given NullableBool and assigns it to the CopySenderFlag field.
func (o *ServiceEmailTemplate) SetCopySenderFlag(v bool) {
	o.CopySenderFlag.Set(&v)
}

// SetCopySenderFlagNil sets the value for CopySenderFlag to be an explicit nil
func (o *ServiceEmailTemplate) SetCopySenderFlagNil() {
	o.CopySenderFlag.Set(nil)
}

// UnsetCopySenderFlag ensures that no value is present for CopySenderFlag, not even an explicit nil
func (o *ServiceEmailTemplate) UnsetCopySenderFlag() {
	o.CopySenderFlag.Unset()
}

// GetTasksFlag returns the TasksFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceEmailTemplate) GetTasksFlag() bool {
	if o == nil || IsNil(o.TasksFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TasksFlag.Get()
}

// GetTasksFlagOk returns a tuple with the TasksFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetTasksFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TasksFlag.Get(), o.TasksFlag.IsSet()
}

// HasTasksFlag returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasTasksFlag() bool {
	if o != nil && o.TasksFlag.IsSet() {
		return true
	}

	return false
}

// SetTasksFlag gets a reference to the given NullableBool and assigns it to the TasksFlag field.
func (o *ServiceEmailTemplate) SetTasksFlag(v bool) {
	o.TasksFlag.Set(&v)
}

// SetTasksFlagNil sets the value for TasksFlag to be an explicit nil
func (o *ServiceEmailTemplate) SetTasksFlagNil() {
	o.TasksFlag.Set(nil)
}

// UnsetTasksFlag ensures that no value is present for TasksFlag, not even an explicit nil
func (o *ServiceEmailTemplate) UnsetTasksFlag() {
	o.TasksFlag.Unset()
}

// GetResourceRecordsFlag returns the ResourceRecordsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceEmailTemplate) GetResourceRecordsFlag() bool {
	if o == nil || IsNil(o.ResourceRecordsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ResourceRecordsFlag.Get()
}

// GetResourceRecordsFlagOk returns a tuple with the ResourceRecordsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetResourceRecordsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceRecordsFlag.Get(), o.ResourceRecordsFlag.IsSet()
}

// HasResourceRecordsFlag returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasResourceRecordsFlag() bool {
	if o != nil && o.ResourceRecordsFlag.IsSet() {
		return true
	}

	return false
}

// SetResourceRecordsFlag gets a reference to the given NullableBool and assigns it to the ResourceRecordsFlag field.
func (o *ServiceEmailTemplate) SetResourceRecordsFlag(v bool) {
	o.ResourceRecordsFlag.Set(&v)
}

// SetResourceRecordsFlagNil sets the value for ResourceRecordsFlag to be an explicit nil
func (o *ServiceEmailTemplate) SetResourceRecordsFlagNil() {
	o.ResourceRecordsFlag.Set(nil)
}

// UnsetResourceRecordsFlag ensures that no value is present for ResourceRecordsFlag, not even an explicit nil
func (o *ServiceEmailTemplate) UnsetResourceRecordsFlag() {
	o.ResourceRecordsFlag.Unset()
}

// GetExternalContactNotifications returns the ExternalContactNotifications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceEmailTemplate) GetExternalContactNotifications() bool {
	if o == nil || IsNil(o.ExternalContactNotifications.Get()) {
		var ret bool
		return ret
	}
	return *o.ExternalContactNotifications.Get()
}

// GetExternalContactNotificationsOk returns a tuple with the ExternalContactNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetExternalContactNotificationsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalContactNotifications.Get(), o.ExternalContactNotifications.IsSet()
}

// HasExternalContactNotifications returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasExternalContactNotifications() bool {
	if o != nil && o.ExternalContactNotifications.IsSet() {
		return true
	}

	return false
}

// SetExternalContactNotifications gets a reference to the given NullableBool and assigns it to the ExternalContactNotifications field.
func (o *ServiceEmailTemplate) SetExternalContactNotifications(v bool) {
	o.ExternalContactNotifications.Set(&v)
}

// SetExternalContactNotificationsNil sets the value for ExternalContactNotifications to be an explicit nil
func (o *ServiceEmailTemplate) SetExternalContactNotificationsNil() {
	o.ExternalContactNotifications.Set(nil)
}

// UnsetExternalContactNotifications ensures that no value is present for ExternalContactNotifications, not even an explicit nil
func (o *ServiceEmailTemplate) UnsetExternalContactNotifications() {
	o.ExternalContactNotifications.Unset()
}

// GetInternalContactNotifications returns the InternalContactNotifications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceEmailTemplate) GetInternalContactNotifications() bool {
	if o == nil || IsNil(o.InternalContactNotifications.Get()) {
		var ret bool
		return ret
	}
	return *o.InternalContactNotifications.Get()
}

// GetInternalContactNotificationsOk returns a tuple with the InternalContactNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceEmailTemplate) GetInternalContactNotificationsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalContactNotifications.Get(), o.InternalContactNotifications.IsSet()
}

// HasInternalContactNotifications returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasInternalContactNotifications() bool {
	if o != nil && o.InternalContactNotifications.IsSet() {
		return true
	}

	return false
}

// SetInternalContactNotifications gets a reference to the given NullableBool and assigns it to the InternalContactNotifications field.
func (o *ServiceEmailTemplate) SetInternalContactNotifications(v bool) {
	o.InternalContactNotifications.Set(&v)
}

// SetInternalContactNotificationsNil sets the value for InternalContactNotifications to be an explicit nil
func (o *ServiceEmailTemplate) SetInternalContactNotificationsNil() {
	o.InternalContactNotifications.Set(nil)
}

// UnsetInternalContactNotifications ensures that no value is present for InternalContactNotifications, not even an explicit nil
func (o *ServiceEmailTemplate) UnsetInternalContactNotifications() {
	o.InternalContactNotifications.Unset()
}

// GetServiceStatus returns the ServiceStatus field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetServiceStatus() ServiceStatusReference {
	if o == nil || IsNil(o.ServiceStatus) {
		var ret ServiceStatusReference
		return ret
	}
	return *o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetServiceStatusOk() (*ServiceStatusReference, bool) {
	if o == nil || IsNil(o.ServiceStatus) {
		return nil, false
	}
	return o.ServiceStatus, true
}

// HasServiceStatus returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasServiceStatus() bool {
	if o != nil && !IsNil(o.ServiceStatus) {
		return true
	}

	return false
}

// SetServiceStatus gets a reference to the given ServiceStatusReference and assigns it to the ServiceStatus field.
func (o *ServiceEmailTemplate) SetServiceStatus(v ServiceStatusReference) {
	o.ServiceStatus = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ServiceEmailTemplate) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEmailTemplate) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ServiceEmailTemplate) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ServiceEmailTemplate) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ServiceEmailTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceEmailTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type.Get()
	if !IsNil(o.ServiceSurvey) {
		toSerialize["serviceSurvey"] = o.ServiceSurvey
	}
	if !IsNil(o.ServiceBoard) {
		toSerialize["serviceBoard"] = o.ServiceBoard
	}
	if o.UseSenderFlag.IsSet() {
		toSerialize["useSenderFlag"] = o.UseSenderFlag.Get()
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if o.CopySenderFlag.IsSet() {
		toSerialize["copySenderFlag"] = o.CopySenderFlag.Get()
	}
	if o.TasksFlag.IsSet() {
		toSerialize["tasksFlag"] = o.TasksFlag.Get()
	}
	if o.ResourceRecordsFlag.IsSet() {
		toSerialize["resourceRecordsFlag"] = o.ResourceRecordsFlag.Get()
	}
	if o.ExternalContactNotifications.IsSet() {
		toSerialize["externalContactNotifications"] = o.ExternalContactNotifications.Get()
	}
	if o.InternalContactNotifications.IsSet() {
		toSerialize["internalContactNotifications"] = o.InternalContactNotifications.Get()
	}
	if !IsNil(o.ServiceStatus) {
		toSerialize["serviceStatus"] = o.ServiceStatus
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ServiceEmailTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceEmailTemplate := _ServiceEmailTemplate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceEmailTemplate)

	if err != nil {
		return err
	}

	*o = ServiceEmailTemplate(varServiceEmailTemplate)

	return err
}

type NullableServiceEmailTemplate struct {
	value *ServiceEmailTemplate
	isSet bool
}

func (v NullableServiceEmailTemplate) Get() *ServiceEmailTemplate {
	return v.value
}

func (v *NullableServiceEmailTemplate) Set(val *ServiceEmailTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceEmailTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceEmailTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceEmailTemplate(val *ServiceEmailTemplate) *NullableServiceEmailTemplate {
	return &NullableServiceEmailTemplate{value: val, isSet: true}
}

func (v NullableServiceEmailTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceEmailTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
