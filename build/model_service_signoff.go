/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServiceSignoff type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceSignoff{}

// ServiceSignoff struct for ServiceSignoff
type ServiceSignoff struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 50;
	Name             string       `json:"name"`
	DefaultFlag      NullableBool `json:"defaultFlag,omitempty"`
	VisibleLogoFlag  NullableBool `json:"visibleLogoFlag,omitempty"`
	CompanyInfoFlag  NullableBool `json:"companyInfoFlag,omitempty"`
	BillingTermsFlag NullableBool `json:"billingTermsFlag,omitempty"`
	SummaryFlag      NullableBool `json:"summaryFlag,omitempty"`
	DiscussionFlag   NullableBool `json:"discussionFlag,omitempty"`
	// On add/post, if this is set to true but no value is set for task, task is defaulted to ServiceTasks.All.
	TaskFlag NullableBool `json:"taskFlag,omitempty"`
	// On add/post, if this is set but no value is set for taskFlag, taskFlag is set to true.
	Task               NullableString `json:"task,omitempty"`
	ConfigurationsFlag NullableBool   `json:"configurationsFlag,omitempty"`
	InternalNotesFlag  NullableBool   `json:"internalNotesFlag,omitempty"`
	ResolutionFlag     NullableBool   `json:"resolutionFlag,omitempty"`
	// On add/post, if any time related flag is set to true, this is also set to true.
	TimeFlag               NullableBool  `json:"timeFlag,omitempty"`
	TimeMemberFlag         NullableBool  `json:"timeMemberFlag,omitempty"`
	TimeDateFlag           NullableBool  `json:"timeDateFlag,omitempty"`
	TimeStartEndFlag       NullableBool  `json:"timeStartEndFlag,omitempty"`
	TimeBillFlag           NullableBool  `json:"timeBillFlag,omitempty"`
	TimeHoursFlag          NullableBool  `json:"timeHoursFlag,omitempty"`
	TimeRateFlag           NullableBool  `json:"timeRateFlag,omitempty"`
	TimeExtendedAmountFlag NullableBool  `json:"timeExtendedAmountFlag,omitempty"`
	TimeWorkTypeFlag       NullableBool  `json:"timeWorkTypeFlag,omitempty"`
	TimeAgreementFlag      NullableBool  `json:"timeAgreementFlag,omitempty"`
	TimeNotesFlag          NullableBool  `json:"timeNotesFlag,omitempty"`
	TimeManualFlag         NullableBool  `json:"timeManualFlag,omitempty"`
	TimeManualEntry        NullableInt32 `json:"timeManualEntry,omitempty"`
	TimeTaxFlag            NullableBool  `json:"timeTaxFlag,omitempty"`
	// On add/post, if any expense related flag is set to true, this is also set to true.
	ExpenseFlag          NullableBool  `json:"expenseFlag,omitempty"`
	ExpenseDateFlag      NullableBool  `json:"expenseDateFlag,omitempty"`
	ExpenseMemberFlag    NullableBool  `json:"expenseMemberFlag,omitempty"`
	ExpenseTypeFlag      NullableBool  `json:"expenseTypeFlag,omitempty"`
	ExpenseBillFlag      NullableBool  `json:"expenseBillFlag,omitempty"`
	ExpenseAmountFlag    NullableBool  `json:"expenseAmountFlag,omitempty"`
	ExpenseAgreementFlag NullableBool  `json:"expenseAgreementFlag,omitempty"`
	ExpenseNotesFlag     NullableBool  `json:"expenseNotesFlag,omitempty"`
	ExpenseTaxFlag       NullableBool  `json:"expenseTaxFlag,omitempty"`
	ExpenseManualFlag    NullableBool  `json:"expenseManualFlag,omitempty"`
	ExpenseManualEntry   NullableInt32 `json:"expenseManualEntry,omitempty"`
	// On add/post, if any product related flag is set to true, this is also set to true.
	ProductFlag               NullableBool  `json:"productFlag,omitempty"`
	ProductDescriptionFlag    NullableBool  `json:"productDescriptionFlag,omitempty"`
	ProductBillFlag           NullableBool  `json:"productBillFlag,omitempty"`
	ProductQuantityFlag       NullableBool  `json:"productQuantityFlag,omitempty"`
	ProductPriceFlag          NullableBool  `json:"productPriceFlag,omitempty"`
	ProductExtendedAmountFlag NullableBool  `json:"productExtendedAmountFlag,omitempty"`
	ProductAgreementFlag      NullableBool  `json:"productAgreementFlag,omitempty"`
	ProductManualFlag         NullableBool  `json:"productManualFlag,omitempty"`
	ProductManualEntry        NullableInt32 `json:"productManualEntry,omitempty"`
	ProductTaxFlag            NullableBool  `json:"productTaxFlag,omitempty"`
	TechnicianSignoffFlag     NullableBool  `json:"technicianSignoffFlag,omitempty"`
	// On add/post, if customerSignoffText.Length > 0, this is set to true.
	CustomerSignoffTextFlag NullableBool `json:"customerSignoffTextFlag,omitempty"`
	//  Max length: 4000;
	CustomerSignoffText       *string      `json:"customerSignoffText,omitempty"`
	CustomerSignoffFieldsFlag NullableBool `json:"customerSignoffFieldsFlag,omitempty"`
	// On add/post, if billingMethodsText.Length > 0, this is set to true.
	BillingMethodsTextFlag NullableBool `json:"billingMethodsTextFlag,omitempty"`
	//  Max length: 2000;
	BillingMethodsText   *string            `json:"billingMethodsText,omitempty"`
	CreditCardFieldsFlag NullableBool       `json:"creditCardFieldsFlag,omitempty"`
	DefaultFFFlag        NullableBool       `json:"defaultFFFlag,omitempty"`
	Info                 *map[string]string `json:"_info,omitempty"`
}

type _ServiceSignoff ServiceSignoff

// NewServiceSignoff instantiates a new ServiceSignoff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSignoff(name string) *ServiceSignoff {
	this := ServiceSignoff{}
	this.Name = name
	return &this
}

// NewServiceSignoffWithDefaults instantiates a new ServiceSignoff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSignoffWithDefaults() *ServiceSignoff {
	this := ServiceSignoff{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceSignoff) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSignoff) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceSignoff) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceSignoff) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ServiceSignoff) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceSignoff) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceSignoff) SetName(v string) {
	o.Name = v
}

// GetDefaultFlag returns the DefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetDefaultFlag() bool {
	if o == nil || IsNil(o.DefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultFlag.Get()
}

// GetDefaultFlagOk returns a tuple with the DefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultFlag.Get(), o.DefaultFlag.IsSet()
}

// HasDefaultFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasDefaultFlag() bool {
	if o != nil && o.DefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultFlag gets a reference to the given NullableBool and assigns it to the DefaultFlag field.
func (o *ServiceSignoff) SetDefaultFlag(v bool) {
	o.DefaultFlag.Set(&v)
}

// SetDefaultFlagNil sets the value for DefaultFlag to be an explicit nil
func (o *ServiceSignoff) SetDefaultFlagNil() {
	o.DefaultFlag.Set(nil)
}

// UnsetDefaultFlag ensures that no value is present for DefaultFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetDefaultFlag() {
	o.DefaultFlag.Unset()
}

// GetVisibleLogoFlag returns the VisibleLogoFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetVisibleLogoFlag() bool {
	if o == nil || IsNil(o.VisibleLogoFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.VisibleLogoFlag.Get()
}

// GetVisibleLogoFlagOk returns a tuple with the VisibleLogoFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetVisibleLogoFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VisibleLogoFlag.Get(), o.VisibleLogoFlag.IsSet()
}

// HasVisibleLogoFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasVisibleLogoFlag() bool {
	if o != nil && o.VisibleLogoFlag.IsSet() {
		return true
	}

	return false
}

// SetVisibleLogoFlag gets a reference to the given NullableBool and assigns it to the VisibleLogoFlag field.
func (o *ServiceSignoff) SetVisibleLogoFlag(v bool) {
	o.VisibleLogoFlag.Set(&v)
}

// SetVisibleLogoFlagNil sets the value for VisibleLogoFlag to be an explicit nil
func (o *ServiceSignoff) SetVisibleLogoFlagNil() {
	o.VisibleLogoFlag.Set(nil)
}

// UnsetVisibleLogoFlag ensures that no value is present for VisibleLogoFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetVisibleLogoFlag() {
	o.VisibleLogoFlag.Unset()
}

// GetCompanyInfoFlag returns the CompanyInfoFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetCompanyInfoFlag() bool {
	if o == nil || IsNil(o.CompanyInfoFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CompanyInfoFlag.Get()
}

// GetCompanyInfoFlagOk returns a tuple with the CompanyInfoFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetCompanyInfoFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyInfoFlag.Get(), o.CompanyInfoFlag.IsSet()
}

// HasCompanyInfoFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasCompanyInfoFlag() bool {
	if o != nil && o.CompanyInfoFlag.IsSet() {
		return true
	}

	return false
}

// SetCompanyInfoFlag gets a reference to the given NullableBool and assigns it to the CompanyInfoFlag field.
func (o *ServiceSignoff) SetCompanyInfoFlag(v bool) {
	o.CompanyInfoFlag.Set(&v)
}

// SetCompanyInfoFlagNil sets the value for CompanyInfoFlag to be an explicit nil
func (o *ServiceSignoff) SetCompanyInfoFlagNil() {
	o.CompanyInfoFlag.Set(nil)
}

// UnsetCompanyInfoFlag ensures that no value is present for CompanyInfoFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetCompanyInfoFlag() {
	o.CompanyInfoFlag.Unset()
}

// GetBillingTermsFlag returns the BillingTermsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetBillingTermsFlag() bool {
	if o == nil || IsNil(o.BillingTermsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillingTermsFlag.Get()
}

// GetBillingTermsFlagOk returns a tuple with the BillingTermsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetBillingTermsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingTermsFlag.Get(), o.BillingTermsFlag.IsSet()
}

// HasBillingTermsFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasBillingTermsFlag() bool {
	if o != nil && o.BillingTermsFlag.IsSet() {
		return true
	}

	return false
}

// SetBillingTermsFlag gets a reference to the given NullableBool and assigns it to the BillingTermsFlag field.
func (o *ServiceSignoff) SetBillingTermsFlag(v bool) {
	o.BillingTermsFlag.Set(&v)
}

// SetBillingTermsFlagNil sets the value for BillingTermsFlag to be an explicit nil
func (o *ServiceSignoff) SetBillingTermsFlagNil() {
	o.BillingTermsFlag.Set(nil)
}

// UnsetBillingTermsFlag ensures that no value is present for BillingTermsFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetBillingTermsFlag() {
	o.BillingTermsFlag.Unset()
}

// GetSummaryFlag returns the SummaryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetSummaryFlag() bool {
	if o == nil || IsNil(o.SummaryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SummaryFlag.Get()
}

// GetSummaryFlagOk returns a tuple with the SummaryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetSummaryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SummaryFlag.Get(), o.SummaryFlag.IsSet()
}

// HasSummaryFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasSummaryFlag() bool {
	if o != nil && o.SummaryFlag.IsSet() {
		return true
	}

	return false
}

// SetSummaryFlag gets a reference to the given NullableBool and assigns it to the SummaryFlag field.
func (o *ServiceSignoff) SetSummaryFlag(v bool) {
	o.SummaryFlag.Set(&v)
}

// SetSummaryFlagNil sets the value for SummaryFlag to be an explicit nil
func (o *ServiceSignoff) SetSummaryFlagNil() {
	o.SummaryFlag.Set(nil)
}

// UnsetSummaryFlag ensures that no value is present for SummaryFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetSummaryFlag() {
	o.SummaryFlag.Unset()
}

// GetDiscussionFlag returns the DiscussionFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetDiscussionFlag() bool {
	if o == nil || IsNil(o.DiscussionFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DiscussionFlag.Get()
}

// GetDiscussionFlagOk returns a tuple with the DiscussionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetDiscussionFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscussionFlag.Get(), o.DiscussionFlag.IsSet()
}

// HasDiscussionFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasDiscussionFlag() bool {
	if o != nil && o.DiscussionFlag.IsSet() {
		return true
	}

	return false
}

// SetDiscussionFlag gets a reference to the given NullableBool and assigns it to the DiscussionFlag field.
func (o *ServiceSignoff) SetDiscussionFlag(v bool) {
	o.DiscussionFlag.Set(&v)
}

// SetDiscussionFlagNil sets the value for DiscussionFlag to be an explicit nil
func (o *ServiceSignoff) SetDiscussionFlagNil() {
	o.DiscussionFlag.Set(nil)
}

// UnsetDiscussionFlag ensures that no value is present for DiscussionFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetDiscussionFlag() {
	o.DiscussionFlag.Unset()
}

// GetTaskFlag returns the TaskFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTaskFlag() bool {
	if o == nil || IsNil(o.TaskFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TaskFlag.Get()
}

// GetTaskFlagOk returns a tuple with the TaskFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTaskFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskFlag.Get(), o.TaskFlag.IsSet()
}

// HasTaskFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTaskFlag() bool {
	if o != nil && o.TaskFlag.IsSet() {
		return true
	}

	return false
}

// SetTaskFlag gets a reference to the given NullableBool and assigns it to the TaskFlag field.
func (o *ServiceSignoff) SetTaskFlag(v bool) {
	o.TaskFlag.Set(&v)
}

// SetTaskFlagNil sets the value for TaskFlag to be an explicit nil
func (o *ServiceSignoff) SetTaskFlagNil() {
	o.TaskFlag.Set(nil)
}

// UnsetTaskFlag ensures that no value is present for TaskFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTaskFlag() {
	o.TaskFlag.Unset()
}

// GetTask returns the Task field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTask() string {
	if o == nil || IsNil(o.Task.Get()) {
		var ret string
		return ret
	}
	return *o.Task.Get()
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Task.Get(), o.Task.IsSet()
}

// HasTask returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTask() bool {
	if o != nil && o.Task.IsSet() {
		return true
	}

	return false
}

// SetTask gets a reference to the given NullableString and assigns it to the Task field.
func (o *ServiceSignoff) SetTask(v string) {
	o.Task.Set(&v)
}

// SetTaskNil sets the value for Task to be an explicit nil
func (o *ServiceSignoff) SetTaskNil() {
	o.Task.Set(nil)
}

// UnsetTask ensures that no value is present for Task, not even an explicit nil
func (o *ServiceSignoff) UnsetTask() {
	o.Task.Unset()
}

// GetConfigurationsFlag returns the ConfigurationsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetConfigurationsFlag() bool {
	if o == nil || IsNil(o.ConfigurationsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ConfigurationsFlag.Get()
}

// GetConfigurationsFlagOk returns a tuple with the ConfigurationsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetConfigurationsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigurationsFlag.Get(), o.ConfigurationsFlag.IsSet()
}

// HasConfigurationsFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasConfigurationsFlag() bool {
	if o != nil && o.ConfigurationsFlag.IsSet() {
		return true
	}

	return false
}

// SetConfigurationsFlag gets a reference to the given NullableBool and assigns it to the ConfigurationsFlag field.
func (o *ServiceSignoff) SetConfigurationsFlag(v bool) {
	o.ConfigurationsFlag.Set(&v)
}

// SetConfigurationsFlagNil sets the value for ConfigurationsFlag to be an explicit nil
func (o *ServiceSignoff) SetConfigurationsFlagNil() {
	o.ConfigurationsFlag.Set(nil)
}

// UnsetConfigurationsFlag ensures that no value is present for ConfigurationsFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetConfigurationsFlag() {
	o.ConfigurationsFlag.Unset()
}

// GetInternalNotesFlag returns the InternalNotesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetInternalNotesFlag() bool {
	if o == nil || IsNil(o.InternalNotesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InternalNotesFlag.Get()
}

// GetInternalNotesFlagOk returns a tuple with the InternalNotesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetInternalNotesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalNotesFlag.Get(), o.InternalNotesFlag.IsSet()
}

// HasInternalNotesFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasInternalNotesFlag() bool {
	if o != nil && o.InternalNotesFlag.IsSet() {
		return true
	}

	return false
}

// SetInternalNotesFlag gets a reference to the given NullableBool and assigns it to the InternalNotesFlag field.
func (o *ServiceSignoff) SetInternalNotesFlag(v bool) {
	o.InternalNotesFlag.Set(&v)
}

// SetInternalNotesFlagNil sets the value for InternalNotesFlag to be an explicit nil
func (o *ServiceSignoff) SetInternalNotesFlagNil() {
	o.InternalNotesFlag.Set(nil)
}

// UnsetInternalNotesFlag ensures that no value is present for InternalNotesFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetInternalNotesFlag() {
	o.InternalNotesFlag.Unset()
}

// GetResolutionFlag returns the ResolutionFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetResolutionFlag() bool {
	if o == nil || IsNil(o.ResolutionFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ResolutionFlag.Get()
}

// GetResolutionFlagOk returns a tuple with the ResolutionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetResolutionFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResolutionFlag.Get(), o.ResolutionFlag.IsSet()
}

// HasResolutionFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasResolutionFlag() bool {
	if o != nil && o.ResolutionFlag.IsSet() {
		return true
	}

	return false
}

// SetResolutionFlag gets a reference to the given NullableBool and assigns it to the ResolutionFlag field.
func (o *ServiceSignoff) SetResolutionFlag(v bool) {
	o.ResolutionFlag.Set(&v)
}

// SetResolutionFlagNil sets the value for ResolutionFlag to be an explicit nil
func (o *ServiceSignoff) SetResolutionFlagNil() {
	o.ResolutionFlag.Set(nil)
}

// UnsetResolutionFlag ensures that no value is present for ResolutionFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetResolutionFlag() {
	o.ResolutionFlag.Unset()
}

// GetTimeFlag returns the TimeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeFlag() bool {
	if o == nil || IsNil(o.TimeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeFlag.Get()
}

// GetTimeFlagOk returns a tuple with the TimeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeFlag.Get(), o.TimeFlag.IsSet()
}

// HasTimeFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeFlag() bool {
	if o != nil && o.TimeFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeFlag gets a reference to the given NullableBool and assigns it to the TimeFlag field.
func (o *ServiceSignoff) SetTimeFlag(v bool) {
	o.TimeFlag.Set(&v)
}

// SetTimeFlagNil sets the value for TimeFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeFlagNil() {
	o.TimeFlag.Set(nil)
}

// UnsetTimeFlag ensures that no value is present for TimeFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeFlag() {
	o.TimeFlag.Unset()
}

// GetTimeMemberFlag returns the TimeMemberFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeMemberFlag() bool {
	if o == nil || IsNil(o.TimeMemberFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeMemberFlag.Get()
}

// GetTimeMemberFlagOk returns a tuple with the TimeMemberFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeMemberFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeMemberFlag.Get(), o.TimeMemberFlag.IsSet()
}

// HasTimeMemberFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeMemberFlag() bool {
	if o != nil && o.TimeMemberFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeMemberFlag gets a reference to the given NullableBool and assigns it to the TimeMemberFlag field.
func (o *ServiceSignoff) SetTimeMemberFlag(v bool) {
	o.TimeMemberFlag.Set(&v)
}

// SetTimeMemberFlagNil sets the value for TimeMemberFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeMemberFlagNil() {
	o.TimeMemberFlag.Set(nil)
}

// UnsetTimeMemberFlag ensures that no value is present for TimeMemberFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeMemberFlag() {
	o.TimeMemberFlag.Unset()
}

// GetTimeDateFlag returns the TimeDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeDateFlag() bool {
	if o == nil || IsNil(o.TimeDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeDateFlag.Get()
}

// GetTimeDateFlagOk returns a tuple with the TimeDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeDateFlag.Get(), o.TimeDateFlag.IsSet()
}

// HasTimeDateFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeDateFlag() bool {
	if o != nil && o.TimeDateFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeDateFlag gets a reference to the given NullableBool and assigns it to the TimeDateFlag field.
func (o *ServiceSignoff) SetTimeDateFlag(v bool) {
	o.TimeDateFlag.Set(&v)
}

// SetTimeDateFlagNil sets the value for TimeDateFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeDateFlagNil() {
	o.TimeDateFlag.Set(nil)
}

// UnsetTimeDateFlag ensures that no value is present for TimeDateFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeDateFlag() {
	o.TimeDateFlag.Unset()
}

// GetTimeStartEndFlag returns the TimeStartEndFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeStartEndFlag() bool {
	if o == nil || IsNil(o.TimeStartEndFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeStartEndFlag.Get()
}

// GetTimeStartEndFlagOk returns a tuple with the TimeStartEndFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeStartEndFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeStartEndFlag.Get(), o.TimeStartEndFlag.IsSet()
}

// HasTimeStartEndFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeStartEndFlag() bool {
	if o != nil && o.TimeStartEndFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeStartEndFlag gets a reference to the given NullableBool and assigns it to the TimeStartEndFlag field.
func (o *ServiceSignoff) SetTimeStartEndFlag(v bool) {
	o.TimeStartEndFlag.Set(&v)
}

// SetTimeStartEndFlagNil sets the value for TimeStartEndFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeStartEndFlagNil() {
	o.TimeStartEndFlag.Set(nil)
}

// UnsetTimeStartEndFlag ensures that no value is present for TimeStartEndFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeStartEndFlag() {
	o.TimeStartEndFlag.Unset()
}

// GetTimeBillFlag returns the TimeBillFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeBillFlag() bool {
	if o == nil || IsNil(o.TimeBillFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeBillFlag.Get()
}

// GetTimeBillFlagOk returns a tuple with the TimeBillFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeBillFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeBillFlag.Get(), o.TimeBillFlag.IsSet()
}

// HasTimeBillFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeBillFlag() bool {
	if o != nil && o.TimeBillFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeBillFlag gets a reference to the given NullableBool and assigns it to the TimeBillFlag field.
func (o *ServiceSignoff) SetTimeBillFlag(v bool) {
	o.TimeBillFlag.Set(&v)
}

// SetTimeBillFlagNil sets the value for TimeBillFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeBillFlagNil() {
	o.TimeBillFlag.Set(nil)
}

// UnsetTimeBillFlag ensures that no value is present for TimeBillFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeBillFlag() {
	o.TimeBillFlag.Unset()
}

// GetTimeHoursFlag returns the TimeHoursFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeHoursFlag() bool {
	if o == nil || IsNil(o.TimeHoursFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeHoursFlag.Get()
}

// GetTimeHoursFlagOk returns a tuple with the TimeHoursFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeHoursFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeHoursFlag.Get(), o.TimeHoursFlag.IsSet()
}

// HasTimeHoursFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeHoursFlag() bool {
	if o != nil && o.TimeHoursFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeHoursFlag gets a reference to the given NullableBool and assigns it to the TimeHoursFlag field.
func (o *ServiceSignoff) SetTimeHoursFlag(v bool) {
	o.TimeHoursFlag.Set(&v)
}

// SetTimeHoursFlagNil sets the value for TimeHoursFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeHoursFlagNil() {
	o.TimeHoursFlag.Set(nil)
}

// UnsetTimeHoursFlag ensures that no value is present for TimeHoursFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeHoursFlag() {
	o.TimeHoursFlag.Unset()
}

// GetTimeRateFlag returns the TimeRateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeRateFlag() bool {
	if o == nil || IsNil(o.TimeRateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeRateFlag.Get()
}

// GetTimeRateFlagOk returns a tuple with the TimeRateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeRateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeRateFlag.Get(), o.TimeRateFlag.IsSet()
}

// HasTimeRateFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeRateFlag() bool {
	if o != nil && o.TimeRateFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeRateFlag gets a reference to the given NullableBool and assigns it to the TimeRateFlag field.
func (o *ServiceSignoff) SetTimeRateFlag(v bool) {
	o.TimeRateFlag.Set(&v)
}

// SetTimeRateFlagNil sets the value for TimeRateFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeRateFlagNil() {
	o.TimeRateFlag.Set(nil)
}

// UnsetTimeRateFlag ensures that no value is present for TimeRateFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeRateFlag() {
	o.TimeRateFlag.Unset()
}

// GetTimeExtendedAmountFlag returns the TimeExtendedAmountFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeExtendedAmountFlag() bool {
	if o == nil || IsNil(o.TimeExtendedAmountFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeExtendedAmountFlag.Get()
}

// GetTimeExtendedAmountFlagOk returns a tuple with the TimeExtendedAmountFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeExtendedAmountFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeExtendedAmountFlag.Get(), o.TimeExtendedAmountFlag.IsSet()
}

// HasTimeExtendedAmountFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeExtendedAmountFlag() bool {
	if o != nil && o.TimeExtendedAmountFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeExtendedAmountFlag gets a reference to the given NullableBool and assigns it to the TimeExtendedAmountFlag field.
func (o *ServiceSignoff) SetTimeExtendedAmountFlag(v bool) {
	o.TimeExtendedAmountFlag.Set(&v)
}

// SetTimeExtendedAmountFlagNil sets the value for TimeExtendedAmountFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeExtendedAmountFlagNil() {
	o.TimeExtendedAmountFlag.Set(nil)
}

// UnsetTimeExtendedAmountFlag ensures that no value is present for TimeExtendedAmountFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeExtendedAmountFlag() {
	o.TimeExtendedAmountFlag.Unset()
}

// GetTimeWorkTypeFlag returns the TimeWorkTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeWorkTypeFlag() bool {
	if o == nil || IsNil(o.TimeWorkTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeWorkTypeFlag.Get()
}

// GetTimeWorkTypeFlagOk returns a tuple with the TimeWorkTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeWorkTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeWorkTypeFlag.Get(), o.TimeWorkTypeFlag.IsSet()
}

// HasTimeWorkTypeFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeWorkTypeFlag() bool {
	if o != nil && o.TimeWorkTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeWorkTypeFlag gets a reference to the given NullableBool and assigns it to the TimeWorkTypeFlag field.
func (o *ServiceSignoff) SetTimeWorkTypeFlag(v bool) {
	o.TimeWorkTypeFlag.Set(&v)
}

// SetTimeWorkTypeFlagNil sets the value for TimeWorkTypeFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeWorkTypeFlagNil() {
	o.TimeWorkTypeFlag.Set(nil)
}

// UnsetTimeWorkTypeFlag ensures that no value is present for TimeWorkTypeFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeWorkTypeFlag() {
	o.TimeWorkTypeFlag.Unset()
}

// GetTimeAgreementFlag returns the TimeAgreementFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeAgreementFlag() bool {
	if o == nil || IsNil(o.TimeAgreementFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeAgreementFlag.Get()
}

// GetTimeAgreementFlagOk returns a tuple with the TimeAgreementFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeAgreementFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeAgreementFlag.Get(), o.TimeAgreementFlag.IsSet()
}

// HasTimeAgreementFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeAgreementFlag() bool {
	if o != nil && o.TimeAgreementFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeAgreementFlag gets a reference to the given NullableBool and assigns it to the TimeAgreementFlag field.
func (o *ServiceSignoff) SetTimeAgreementFlag(v bool) {
	o.TimeAgreementFlag.Set(&v)
}

// SetTimeAgreementFlagNil sets the value for TimeAgreementFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeAgreementFlagNil() {
	o.TimeAgreementFlag.Set(nil)
}

// UnsetTimeAgreementFlag ensures that no value is present for TimeAgreementFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeAgreementFlag() {
	o.TimeAgreementFlag.Unset()
}

// GetTimeNotesFlag returns the TimeNotesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeNotesFlag() bool {
	if o == nil || IsNil(o.TimeNotesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeNotesFlag.Get()
}

// GetTimeNotesFlagOk returns a tuple with the TimeNotesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeNotesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeNotesFlag.Get(), o.TimeNotesFlag.IsSet()
}

// HasTimeNotesFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeNotesFlag() bool {
	if o != nil && o.TimeNotesFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeNotesFlag gets a reference to the given NullableBool and assigns it to the TimeNotesFlag field.
func (o *ServiceSignoff) SetTimeNotesFlag(v bool) {
	o.TimeNotesFlag.Set(&v)
}

// SetTimeNotesFlagNil sets the value for TimeNotesFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeNotesFlagNil() {
	o.TimeNotesFlag.Set(nil)
}

// UnsetTimeNotesFlag ensures that no value is present for TimeNotesFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeNotesFlag() {
	o.TimeNotesFlag.Unset()
}

// GetTimeManualFlag returns the TimeManualFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeManualFlag() bool {
	if o == nil || IsNil(o.TimeManualFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeManualFlag.Get()
}

// GetTimeManualFlagOk returns a tuple with the TimeManualFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeManualFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeManualFlag.Get(), o.TimeManualFlag.IsSet()
}

// HasTimeManualFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeManualFlag() bool {
	if o != nil && o.TimeManualFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeManualFlag gets a reference to the given NullableBool and assigns it to the TimeManualFlag field.
func (o *ServiceSignoff) SetTimeManualFlag(v bool) {
	o.TimeManualFlag.Set(&v)
}

// SetTimeManualFlagNil sets the value for TimeManualFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeManualFlagNil() {
	o.TimeManualFlag.Set(nil)
}

// UnsetTimeManualFlag ensures that no value is present for TimeManualFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeManualFlag() {
	o.TimeManualFlag.Unset()
}

// GetTimeManualEntry returns the TimeManualEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeManualEntry() int32 {
	if o == nil || IsNil(o.TimeManualEntry.Get()) {
		var ret int32
		return ret
	}
	return *o.TimeManualEntry.Get()
}

// GetTimeManualEntryOk returns a tuple with the TimeManualEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeManualEntryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeManualEntry.Get(), o.TimeManualEntry.IsSet()
}

// HasTimeManualEntry returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeManualEntry() bool {
	if o != nil && o.TimeManualEntry.IsSet() {
		return true
	}

	return false
}

// SetTimeManualEntry gets a reference to the given NullableInt32 and assigns it to the TimeManualEntry field.
func (o *ServiceSignoff) SetTimeManualEntry(v int32) {
	o.TimeManualEntry.Set(&v)
}

// SetTimeManualEntryNil sets the value for TimeManualEntry to be an explicit nil
func (o *ServiceSignoff) SetTimeManualEntryNil() {
	o.TimeManualEntry.Set(nil)
}

// UnsetTimeManualEntry ensures that no value is present for TimeManualEntry, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeManualEntry() {
	o.TimeManualEntry.Unset()
}

// GetTimeTaxFlag returns the TimeTaxFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTimeTaxFlag() bool {
	if o == nil || IsNil(o.TimeTaxFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TimeTaxFlag.Get()
}

// GetTimeTaxFlagOk returns a tuple with the TimeTaxFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTimeTaxFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeTaxFlag.Get(), o.TimeTaxFlag.IsSet()
}

// HasTimeTaxFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTimeTaxFlag() bool {
	if o != nil && o.TimeTaxFlag.IsSet() {
		return true
	}

	return false
}

// SetTimeTaxFlag gets a reference to the given NullableBool and assigns it to the TimeTaxFlag field.
func (o *ServiceSignoff) SetTimeTaxFlag(v bool) {
	o.TimeTaxFlag.Set(&v)
}

// SetTimeTaxFlagNil sets the value for TimeTaxFlag to be an explicit nil
func (o *ServiceSignoff) SetTimeTaxFlagNil() {
	o.TimeTaxFlag.Set(nil)
}

// UnsetTimeTaxFlag ensures that no value is present for TimeTaxFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTimeTaxFlag() {
	o.TimeTaxFlag.Unset()
}

// GetExpenseFlag returns the ExpenseFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseFlag() bool {
	if o == nil || IsNil(o.ExpenseFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseFlag.Get()
}

// GetExpenseFlagOk returns a tuple with the ExpenseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseFlag.Get(), o.ExpenseFlag.IsSet()
}

// HasExpenseFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseFlag() bool {
	if o != nil && o.ExpenseFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseFlag gets a reference to the given NullableBool and assigns it to the ExpenseFlag field.
func (o *ServiceSignoff) SetExpenseFlag(v bool) {
	o.ExpenseFlag.Set(&v)
}

// SetExpenseFlagNil sets the value for ExpenseFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseFlagNil() {
	o.ExpenseFlag.Set(nil)
}

// UnsetExpenseFlag ensures that no value is present for ExpenseFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseFlag() {
	o.ExpenseFlag.Unset()
}

// GetExpenseDateFlag returns the ExpenseDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseDateFlag() bool {
	if o == nil || IsNil(o.ExpenseDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseDateFlag.Get()
}

// GetExpenseDateFlagOk returns a tuple with the ExpenseDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseDateFlag.Get(), o.ExpenseDateFlag.IsSet()
}

// HasExpenseDateFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseDateFlag() bool {
	if o != nil && o.ExpenseDateFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseDateFlag gets a reference to the given NullableBool and assigns it to the ExpenseDateFlag field.
func (o *ServiceSignoff) SetExpenseDateFlag(v bool) {
	o.ExpenseDateFlag.Set(&v)
}

// SetExpenseDateFlagNil sets the value for ExpenseDateFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseDateFlagNil() {
	o.ExpenseDateFlag.Set(nil)
}

// UnsetExpenseDateFlag ensures that no value is present for ExpenseDateFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseDateFlag() {
	o.ExpenseDateFlag.Unset()
}

// GetExpenseMemberFlag returns the ExpenseMemberFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseMemberFlag() bool {
	if o == nil || IsNil(o.ExpenseMemberFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseMemberFlag.Get()
}

// GetExpenseMemberFlagOk returns a tuple with the ExpenseMemberFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseMemberFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseMemberFlag.Get(), o.ExpenseMemberFlag.IsSet()
}

// HasExpenseMemberFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseMemberFlag() bool {
	if o != nil && o.ExpenseMemberFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseMemberFlag gets a reference to the given NullableBool and assigns it to the ExpenseMemberFlag field.
func (o *ServiceSignoff) SetExpenseMemberFlag(v bool) {
	o.ExpenseMemberFlag.Set(&v)
}

// SetExpenseMemberFlagNil sets the value for ExpenseMemberFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseMemberFlagNil() {
	o.ExpenseMemberFlag.Set(nil)
}

// UnsetExpenseMemberFlag ensures that no value is present for ExpenseMemberFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseMemberFlag() {
	o.ExpenseMemberFlag.Unset()
}

// GetExpenseTypeFlag returns the ExpenseTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseTypeFlag() bool {
	if o == nil || IsNil(o.ExpenseTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseTypeFlag.Get()
}

// GetExpenseTypeFlagOk returns a tuple with the ExpenseTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseTypeFlag.Get(), o.ExpenseTypeFlag.IsSet()
}

// HasExpenseTypeFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseTypeFlag() bool {
	if o != nil && o.ExpenseTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseTypeFlag gets a reference to the given NullableBool and assigns it to the ExpenseTypeFlag field.
func (o *ServiceSignoff) SetExpenseTypeFlag(v bool) {
	o.ExpenseTypeFlag.Set(&v)
}

// SetExpenseTypeFlagNil sets the value for ExpenseTypeFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseTypeFlagNil() {
	o.ExpenseTypeFlag.Set(nil)
}

// UnsetExpenseTypeFlag ensures that no value is present for ExpenseTypeFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseTypeFlag() {
	o.ExpenseTypeFlag.Unset()
}

// GetExpenseBillFlag returns the ExpenseBillFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseBillFlag() bool {
	if o == nil || IsNil(o.ExpenseBillFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseBillFlag.Get()
}

// GetExpenseBillFlagOk returns a tuple with the ExpenseBillFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseBillFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseBillFlag.Get(), o.ExpenseBillFlag.IsSet()
}

// HasExpenseBillFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseBillFlag() bool {
	if o != nil && o.ExpenseBillFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseBillFlag gets a reference to the given NullableBool and assigns it to the ExpenseBillFlag field.
func (o *ServiceSignoff) SetExpenseBillFlag(v bool) {
	o.ExpenseBillFlag.Set(&v)
}

// SetExpenseBillFlagNil sets the value for ExpenseBillFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseBillFlagNil() {
	o.ExpenseBillFlag.Set(nil)
}

// UnsetExpenseBillFlag ensures that no value is present for ExpenseBillFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseBillFlag() {
	o.ExpenseBillFlag.Unset()
}

// GetExpenseAmountFlag returns the ExpenseAmountFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseAmountFlag() bool {
	if o == nil || IsNil(o.ExpenseAmountFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseAmountFlag.Get()
}

// GetExpenseAmountFlagOk returns a tuple with the ExpenseAmountFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseAmountFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseAmountFlag.Get(), o.ExpenseAmountFlag.IsSet()
}

// HasExpenseAmountFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseAmountFlag() bool {
	if o != nil && o.ExpenseAmountFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseAmountFlag gets a reference to the given NullableBool and assigns it to the ExpenseAmountFlag field.
func (o *ServiceSignoff) SetExpenseAmountFlag(v bool) {
	o.ExpenseAmountFlag.Set(&v)
}

// SetExpenseAmountFlagNil sets the value for ExpenseAmountFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseAmountFlagNil() {
	o.ExpenseAmountFlag.Set(nil)
}

// UnsetExpenseAmountFlag ensures that no value is present for ExpenseAmountFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseAmountFlag() {
	o.ExpenseAmountFlag.Unset()
}

// GetExpenseAgreementFlag returns the ExpenseAgreementFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseAgreementFlag() bool {
	if o == nil || IsNil(o.ExpenseAgreementFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseAgreementFlag.Get()
}

// GetExpenseAgreementFlagOk returns a tuple with the ExpenseAgreementFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseAgreementFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseAgreementFlag.Get(), o.ExpenseAgreementFlag.IsSet()
}

// HasExpenseAgreementFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseAgreementFlag() bool {
	if o != nil && o.ExpenseAgreementFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseAgreementFlag gets a reference to the given NullableBool and assigns it to the ExpenseAgreementFlag field.
func (o *ServiceSignoff) SetExpenseAgreementFlag(v bool) {
	o.ExpenseAgreementFlag.Set(&v)
}

// SetExpenseAgreementFlagNil sets the value for ExpenseAgreementFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseAgreementFlagNil() {
	o.ExpenseAgreementFlag.Set(nil)
}

// UnsetExpenseAgreementFlag ensures that no value is present for ExpenseAgreementFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseAgreementFlag() {
	o.ExpenseAgreementFlag.Unset()
}

// GetExpenseNotesFlag returns the ExpenseNotesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseNotesFlag() bool {
	if o == nil || IsNil(o.ExpenseNotesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseNotesFlag.Get()
}

// GetExpenseNotesFlagOk returns a tuple with the ExpenseNotesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseNotesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseNotesFlag.Get(), o.ExpenseNotesFlag.IsSet()
}

// HasExpenseNotesFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseNotesFlag() bool {
	if o != nil && o.ExpenseNotesFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseNotesFlag gets a reference to the given NullableBool and assigns it to the ExpenseNotesFlag field.
func (o *ServiceSignoff) SetExpenseNotesFlag(v bool) {
	o.ExpenseNotesFlag.Set(&v)
}

// SetExpenseNotesFlagNil sets the value for ExpenseNotesFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseNotesFlagNil() {
	o.ExpenseNotesFlag.Set(nil)
}

// UnsetExpenseNotesFlag ensures that no value is present for ExpenseNotesFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseNotesFlag() {
	o.ExpenseNotesFlag.Unset()
}

// GetExpenseTaxFlag returns the ExpenseTaxFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseTaxFlag() bool {
	if o == nil || IsNil(o.ExpenseTaxFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseTaxFlag.Get()
}

// GetExpenseTaxFlagOk returns a tuple with the ExpenseTaxFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseTaxFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseTaxFlag.Get(), o.ExpenseTaxFlag.IsSet()
}

// HasExpenseTaxFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseTaxFlag() bool {
	if o != nil && o.ExpenseTaxFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseTaxFlag gets a reference to the given NullableBool and assigns it to the ExpenseTaxFlag field.
func (o *ServiceSignoff) SetExpenseTaxFlag(v bool) {
	o.ExpenseTaxFlag.Set(&v)
}

// SetExpenseTaxFlagNil sets the value for ExpenseTaxFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseTaxFlagNil() {
	o.ExpenseTaxFlag.Set(nil)
}

// UnsetExpenseTaxFlag ensures that no value is present for ExpenseTaxFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseTaxFlag() {
	o.ExpenseTaxFlag.Unset()
}

// GetExpenseManualFlag returns the ExpenseManualFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseManualFlag() bool {
	if o == nil || IsNil(o.ExpenseManualFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpenseManualFlag.Get()
}

// GetExpenseManualFlagOk returns a tuple with the ExpenseManualFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseManualFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseManualFlag.Get(), o.ExpenseManualFlag.IsSet()
}

// HasExpenseManualFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseManualFlag() bool {
	if o != nil && o.ExpenseManualFlag.IsSet() {
		return true
	}

	return false
}

// SetExpenseManualFlag gets a reference to the given NullableBool and assigns it to the ExpenseManualFlag field.
func (o *ServiceSignoff) SetExpenseManualFlag(v bool) {
	o.ExpenseManualFlag.Set(&v)
}

// SetExpenseManualFlagNil sets the value for ExpenseManualFlag to be an explicit nil
func (o *ServiceSignoff) SetExpenseManualFlagNil() {
	o.ExpenseManualFlag.Set(nil)
}

// UnsetExpenseManualFlag ensures that no value is present for ExpenseManualFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseManualFlag() {
	o.ExpenseManualFlag.Unset()
}

// GetExpenseManualEntry returns the ExpenseManualEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetExpenseManualEntry() int32 {
	if o == nil || IsNil(o.ExpenseManualEntry.Get()) {
		var ret int32
		return ret
	}
	return *o.ExpenseManualEntry.Get()
}

// GetExpenseManualEntryOk returns a tuple with the ExpenseManualEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetExpenseManualEntryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseManualEntry.Get(), o.ExpenseManualEntry.IsSet()
}

// HasExpenseManualEntry returns a boolean if a field has been set.
func (o *ServiceSignoff) HasExpenseManualEntry() bool {
	if o != nil && o.ExpenseManualEntry.IsSet() {
		return true
	}

	return false
}

// SetExpenseManualEntry gets a reference to the given NullableInt32 and assigns it to the ExpenseManualEntry field.
func (o *ServiceSignoff) SetExpenseManualEntry(v int32) {
	o.ExpenseManualEntry.Set(&v)
}

// SetExpenseManualEntryNil sets the value for ExpenseManualEntry to be an explicit nil
func (o *ServiceSignoff) SetExpenseManualEntryNil() {
	o.ExpenseManualEntry.Set(nil)
}

// UnsetExpenseManualEntry ensures that no value is present for ExpenseManualEntry, not even an explicit nil
func (o *ServiceSignoff) UnsetExpenseManualEntry() {
	o.ExpenseManualEntry.Unset()
}

// GetProductFlag returns the ProductFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductFlag() bool {
	if o == nil || IsNil(o.ProductFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductFlag.Get()
}

// GetProductFlagOk returns a tuple with the ProductFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductFlag.Get(), o.ProductFlag.IsSet()
}

// HasProductFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductFlag() bool {
	if o != nil && o.ProductFlag.IsSet() {
		return true
	}

	return false
}

// SetProductFlag gets a reference to the given NullableBool and assigns it to the ProductFlag field.
func (o *ServiceSignoff) SetProductFlag(v bool) {
	o.ProductFlag.Set(&v)
}

// SetProductFlagNil sets the value for ProductFlag to be an explicit nil
func (o *ServiceSignoff) SetProductFlagNil() {
	o.ProductFlag.Set(nil)
}

// UnsetProductFlag ensures that no value is present for ProductFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductFlag() {
	o.ProductFlag.Unset()
}

// GetProductDescriptionFlag returns the ProductDescriptionFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductDescriptionFlag() bool {
	if o == nil || IsNil(o.ProductDescriptionFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductDescriptionFlag.Get()
}

// GetProductDescriptionFlagOk returns a tuple with the ProductDescriptionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductDescriptionFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductDescriptionFlag.Get(), o.ProductDescriptionFlag.IsSet()
}

// HasProductDescriptionFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductDescriptionFlag() bool {
	if o != nil && o.ProductDescriptionFlag.IsSet() {
		return true
	}

	return false
}

// SetProductDescriptionFlag gets a reference to the given NullableBool and assigns it to the ProductDescriptionFlag field.
func (o *ServiceSignoff) SetProductDescriptionFlag(v bool) {
	o.ProductDescriptionFlag.Set(&v)
}

// SetProductDescriptionFlagNil sets the value for ProductDescriptionFlag to be an explicit nil
func (o *ServiceSignoff) SetProductDescriptionFlagNil() {
	o.ProductDescriptionFlag.Set(nil)
}

// UnsetProductDescriptionFlag ensures that no value is present for ProductDescriptionFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductDescriptionFlag() {
	o.ProductDescriptionFlag.Unset()
}

// GetProductBillFlag returns the ProductBillFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductBillFlag() bool {
	if o == nil || IsNil(o.ProductBillFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductBillFlag.Get()
}

// GetProductBillFlagOk returns a tuple with the ProductBillFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductBillFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductBillFlag.Get(), o.ProductBillFlag.IsSet()
}

// HasProductBillFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductBillFlag() bool {
	if o != nil && o.ProductBillFlag.IsSet() {
		return true
	}

	return false
}

// SetProductBillFlag gets a reference to the given NullableBool and assigns it to the ProductBillFlag field.
func (o *ServiceSignoff) SetProductBillFlag(v bool) {
	o.ProductBillFlag.Set(&v)
}

// SetProductBillFlagNil sets the value for ProductBillFlag to be an explicit nil
func (o *ServiceSignoff) SetProductBillFlagNil() {
	o.ProductBillFlag.Set(nil)
}

// UnsetProductBillFlag ensures that no value is present for ProductBillFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductBillFlag() {
	o.ProductBillFlag.Unset()
}

// GetProductQuantityFlag returns the ProductQuantityFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductQuantityFlag() bool {
	if o == nil || IsNil(o.ProductQuantityFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductQuantityFlag.Get()
}

// GetProductQuantityFlagOk returns a tuple with the ProductQuantityFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductQuantityFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductQuantityFlag.Get(), o.ProductQuantityFlag.IsSet()
}

// HasProductQuantityFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductQuantityFlag() bool {
	if o != nil && o.ProductQuantityFlag.IsSet() {
		return true
	}

	return false
}

// SetProductQuantityFlag gets a reference to the given NullableBool and assigns it to the ProductQuantityFlag field.
func (o *ServiceSignoff) SetProductQuantityFlag(v bool) {
	o.ProductQuantityFlag.Set(&v)
}

// SetProductQuantityFlagNil sets the value for ProductQuantityFlag to be an explicit nil
func (o *ServiceSignoff) SetProductQuantityFlagNil() {
	o.ProductQuantityFlag.Set(nil)
}

// UnsetProductQuantityFlag ensures that no value is present for ProductQuantityFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductQuantityFlag() {
	o.ProductQuantityFlag.Unset()
}

// GetProductPriceFlag returns the ProductPriceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductPriceFlag() bool {
	if o == nil || IsNil(o.ProductPriceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductPriceFlag.Get()
}

// GetProductPriceFlagOk returns a tuple with the ProductPriceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductPriceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductPriceFlag.Get(), o.ProductPriceFlag.IsSet()
}

// HasProductPriceFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductPriceFlag() bool {
	if o != nil && o.ProductPriceFlag.IsSet() {
		return true
	}

	return false
}

// SetProductPriceFlag gets a reference to the given NullableBool and assigns it to the ProductPriceFlag field.
func (o *ServiceSignoff) SetProductPriceFlag(v bool) {
	o.ProductPriceFlag.Set(&v)
}

// SetProductPriceFlagNil sets the value for ProductPriceFlag to be an explicit nil
func (o *ServiceSignoff) SetProductPriceFlagNil() {
	o.ProductPriceFlag.Set(nil)
}

// UnsetProductPriceFlag ensures that no value is present for ProductPriceFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductPriceFlag() {
	o.ProductPriceFlag.Unset()
}

// GetProductExtendedAmountFlag returns the ProductExtendedAmountFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductExtendedAmountFlag() bool {
	if o == nil || IsNil(o.ProductExtendedAmountFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductExtendedAmountFlag.Get()
}

// GetProductExtendedAmountFlagOk returns a tuple with the ProductExtendedAmountFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductExtendedAmountFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductExtendedAmountFlag.Get(), o.ProductExtendedAmountFlag.IsSet()
}

// HasProductExtendedAmountFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductExtendedAmountFlag() bool {
	if o != nil && o.ProductExtendedAmountFlag.IsSet() {
		return true
	}

	return false
}

// SetProductExtendedAmountFlag gets a reference to the given NullableBool and assigns it to the ProductExtendedAmountFlag field.
func (o *ServiceSignoff) SetProductExtendedAmountFlag(v bool) {
	o.ProductExtendedAmountFlag.Set(&v)
}

// SetProductExtendedAmountFlagNil sets the value for ProductExtendedAmountFlag to be an explicit nil
func (o *ServiceSignoff) SetProductExtendedAmountFlagNil() {
	o.ProductExtendedAmountFlag.Set(nil)
}

// UnsetProductExtendedAmountFlag ensures that no value is present for ProductExtendedAmountFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductExtendedAmountFlag() {
	o.ProductExtendedAmountFlag.Unset()
}

// GetProductAgreementFlag returns the ProductAgreementFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductAgreementFlag() bool {
	if o == nil || IsNil(o.ProductAgreementFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductAgreementFlag.Get()
}

// GetProductAgreementFlagOk returns a tuple with the ProductAgreementFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductAgreementFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductAgreementFlag.Get(), o.ProductAgreementFlag.IsSet()
}

// HasProductAgreementFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductAgreementFlag() bool {
	if o != nil && o.ProductAgreementFlag.IsSet() {
		return true
	}

	return false
}

// SetProductAgreementFlag gets a reference to the given NullableBool and assigns it to the ProductAgreementFlag field.
func (o *ServiceSignoff) SetProductAgreementFlag(v bool) {
	o.ProductAgreementFlag.Set(&v)
}

// SetProductAgreementFlagNil sets the value for ProductAgreementFlag to be an explicit nil
func (o *ServiceSignoff) SetProductAgreementFlagNil() {
	o.ProductAgreementFlag.Set(nil)
}

// UnsetProductAgreementFlag ensures that no value is present for ProductAgreementFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductAgreementFlag() {
	o.ProductAgreementFlag.Unset()
}

// GetProductManualFlag returns the ProductManualFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductManualFlag() bool {
	if o == nil || IsNil(o.ProductManualFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductManualFlag.Get()
}

// GetProductManualFlagOk returns a tuple with the ProductManualFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductManualFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductManualFlag.Get(), o.ProductManualFlag.IsSet()
}

// HasProductManualFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductManualFlag() bool {
	if o != nil && o.ProductManualFlag.IsSet() {
		return true
	}

	return false
}

// SetProductManualFlag gets a reference to the given NullableBool and assigns it to the ProductManualFlag field.
func (o *ServiceSignoff) SetProductManualFlag(v bool) {
	o.ProductManualFlag.Set(&v)
}

// SetProductManualFlagNil sets the value for ProductManualFlag to be an explicit nil
func (o *ServiceSignoff) SetProductManualFlagNil() {
	o.ProductManualFlag.Set(nil)
}

// UnsetProductManualFlag ensures that no value is present for ProductManualFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductManualFlag() {
	o.ProductManualFlag.Unset()
}

// GetProductManualEntry returns the ProductManualEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductManualEntry() int32 {
	if o == nil || IsNil(o.ProductManualEntry.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductManualEntry.Get()
}

// GetProductManualEntryOk returns a tuple with the ProductManualEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductManualEntryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductManualEntry.Get(), o.ProductManualEntry.IsSet()
}

// HasProductManualEntry returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductManualEntry() bool {
	if o != nil && o.ProductManualEntry.IsSet() {
		return true
	}

	return false
}

// SetProductManualEntry gets a reference to the given NullableInt32 and assigns it to the ProductManualEntry field.
func (o *ServiceSignoff) SetProductManualEntry(v int32) {
	o.ProductManualEntry.Set(&v)
}

// SetProductManualEntryNil sets the value for ProductManualEntry to be an explicit nil
func (o *ServiceSignoff) SetProductManualEntryNil() {
	o.ProductManualEntry.Set(nil)
}

// UnsetProductManualEntry ensures that no value is present for ProductManualEntry, not even an explicit nil
func (o *ServiceSignoff) UnsetProductManualEntry() {
	o.ProductManualEntry.Unset()
}

// GetProductTaxFlag returns the ProductTaxFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetProductTaxFlag() bool {
	if o == nil || IsNil(o.ProductTaxFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProductTaxFlag.Get()
}

// GetProductTaxFlagOk returns a tuple with the ProductTaxFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetProductTaxFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductTaxFlag.Get(), o.ProductTaxFlag.IsSet()
}

// HasProductTaxFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasProductTaxFlag() bool {
	if o != nil && o.ProductTaxFlag.IsSet() {
		return true
	}

	return false
}

// SetProductTaxFlag gets a reference to the given NullableBool and assigns it to the ProductTaxFlag field.
func (o *ServiceSignoff) SetProductTaxFlag(v bool) {
	o.ProductTaxFlag.Set(&v)
}

// SetProductTaxFlagNil sets the value for ProductTaxFlag to be an explicit nil
func (o *ServiceSignoff) SetProductTaxFlagNil() {
	o.ProductTaxFlag.Set(nil)
}

// UnsetProductTaxFlag ensures that no value is present for ProductTaxFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetProductTaxFlag() {
	o.ProductTaxFlag.Unset()
}

// GetTechnicianSignoffFlag returns the TechnicianSignoffFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetTechnicianSignoffFlag() bool {
	if o == nil || IsNil(o.TechnicianSignoffFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TechnicianSignoffFlag.Get()
}

// GetTechnicianSignoffFlagOk returns a tuple with the TechnicianSignoffFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetTechnicianSignoffFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TechnicianSignoffFlag.Get(), o.TechnicianSignoffFlag.IsSet()
}

// HasTechnicianSignoffFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasTechnicianSignoffFlag() bool {
	if o != nil && o.TechnicianSignoffFlag.IsSet() {
		return true
	}

	return false
}

// SetTechnicianSignoffFlag gets a reference to the given NullableBool and assigns it to the TechnicianSignoffFlag field.
func (o *ServiceSignoff) SetTechnicianSignoffFlag(v bool) {
	o.TechnicianSignoffFlag.Set(&v)
}

// SetTechnicianSignoffFlagNil sets the value for TechnicianSignoffFlag to be an explicit nil
func (o *ServiceSignoff) SetTechnicianSignoffFlagNil() {
	o.TechnicianSignoffFlag.Set(nil)
}

// UnsetTechnicianSignoffFlag ensures that no value is present for TechnicianSignoffFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetTechnicianSignoffFlag() {
	o.TechnicianSignoffFlag.Unset()
}

// GetCustomerSignoffTextFlag returns the CustomerSignoffTextFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetCustomerSignoffTextFlag() bool {
	if o == nil || IsNil(o.CustomerSignoffTextFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CustomerSignoffTextFlag.Get()
}

// GetCustomerSignoffTextFlagOk returns a tuple with the CustomerSignoffTextFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetCustomerSignoffTextFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerSignoffTextFlag.Get(), o.CustomerSignoffTextFlag.IsSet()
}

// HasCustomerSignoffTextFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasCustomerSignoffTextFlag() bool {
	if o != nil && o.CustomerSignoffTextFlag.IsSet() {
		return true
	}

	return false
}

// SetCustomerSignoffTextFlag gets a reference to the given NullableBool and assigns it to the CustomerSignoffTextFlag field.
func (o *ServiceSignoff) SetCustomerSignoffTextFlag(v bool) {
	o.CustomerSignoffTextFlag.Set(&v)
}

// SetCustomerSignoffTextFlagNil sets the value for CustomerSignoffTextFlag to be an explicit nil
func (o *ServiceSignoff) SetCustomerSignoffTextFlagNil() {
	o.CustomerSignoffTextFlag.Set(nil)
}

// UnsetCustomerSignoffTextFlag ensures that no value is present for CustomerSignoffTextFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetCustomerSignoffTextFlag() {
	o.CustomerSignoffTextFlag.Unset()
}

// GetCustomerSignoffText returns the CustomerSignoffText field value if set, zero value otherwise.
func (o *ServiceSignoff) GetCustomerSignoffText() string {
	if o == nil || IsNil(o.CustomerSignoffText) {
		var ret string
		return ret
	}
	return *o.CustomerSignoffText
}

// GetCustomerSignoffTextOk returns a tuple with the CustomerSignoffText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSignoff) GetCustomerSignoffTextOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerSignoffText) {
		return nil, false
	}
	return o.CustomerSignoffText, true
}

// HasCustomerSignoffText returns a boolean if a field has been set.
func (o *ServiceSignoff) HasCustomerSignoffText() bool {
	if o != nil && !IsNil(o.CustomerSignoffText) {
		return true
	}

	return false
}

// SetCustomerSignoffText gets a reference to the given string and assigns it to the CustomerSignoffText field.
func (o *ServiceSignoff) SetCustomerSignoffText(v string) {
	o.CustomerSignoffText = &v
}

// GetCustomerSignoffFieldsFlag returns the CustomerSignoffFieldsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetCustomerSignoffFieldsFlag() bool {
	if o == nil || IsNil(o.CustomerSignoffFieldsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CustomerSignoffFieldsFlag.Get()
}

// GetCustomerSignoffFieldsFlagOk returns a tuple with the CustomerSignoffFieldsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetCustomerSignoffFieldsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerSignoffFieldsFlag.Get(), o.CustomerSignoffFieldsFlag.IsSet()
}

// HasCustomerSignoffFieldsFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasCustomerSignoffFieldsFlag() bool {
	if o != nil && o.CustomerSignoffFieldsFlag.IsSet() {
		return true
	}

	return false
}

// SetCustomerSignoffFieldsFlag gets a reference to the given NullableBool and assigns it to the CustomerSignoffFieldsFlag field.
func (o *ServiceSignoff) SetCustomerSignoffFieldsFlag(v bool) {
	o.CustomerSignoffFieldsFlag.Set(&v)
}

// SetCustomerSignoffFieldsFlagNil sets the value for CustomerSignoffFieldsFlag to be an explicit nil
func (o *ServiceSignoff) SetCustomerSignoffFieldsFlagNil() {
	o.CustomerSignoffFieldsFlag.Set(nil)
}

// UnsetCustomerSignoffFieldsFlag ensures that no value is present for CustomerSignoffFieldsFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetCustomerSignoffFieldsFlag() {
	o.CustomerSignoffFieldsFlag.Unset()
}

// GetBillingMethodsTextFlag returns the BillingMethodsTextFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetBillingMethodsTextFlag() bool {
	if o == nil || IsNil(o.BillingMethodsTextFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillingMethodsTextFlag.Get()
}

// GetBillingMethodsTextFlagOk returns a tuple with the BillingMethodsTextFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetBillingMethodsTextFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingMethodsTextFlag.Get(), o.BillingMethodsTextFlag.IsSet()
}

// HasBillingMethodsTextFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasBillingMethodsTextFlag() bool {
	if o != nil && o.BillingMethodsTextFlag.IsSet() {
		return true
	}

	return false
}

// SetBillingMethodsTextFlag gets a reference to the given NullableBool and assigns it to the BillingMethodsTextFlag field.
func (o *ServiceSignoff) SetBillingMethodsTextFlag(v bool) {
	o.BillingMethodsTextFlag.Set(&v)
}

// SetBillingMethodsTextFlagNil sets the value for BillingMethodsTextFlag to be an explicit nil
func (o *ServiceSignoff) SetBillingMethodsTextFlagNil() {
	o.BillingMethodsTextFlag.Set(nil)
}

// UnsetBillingMethodsTextFlag ensures that no value is present for BillingMethodsTextFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetBillingMethodsTextFlag() {
	o.BillingMethodsTextFlag.Unset()
}

// GetBillingMethodsText returns the BillingMethodsText field value if set, zero value otherwise.
func (o *ServiceSignoff) GetBillingMethodsText() string {
	if o == nil || IsNil(o.BillingMethodsText) {
		var ret string
		return ret
	}
	return *o.BillingMethodsText
}

// GetBillingMethodsTextOk returns a tuple with the BillingMethodsText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSignoff) GetBillingMethodsTextOk() (*string, bool) {
	if o == nil || IsNil(o.BillingMethodsText) {
		return nil, false
	}
	return o.BillingMethodsText, true
}

// HasBillingMethodsText returns a boolean if a field has been set.
func (o *ServiceSignoff) HasBillingMethodsText() bool {
	if o != nil && !IsNil(o.BillingMethodsText) {
		return true
	}

	return false
}

// SetBillingMethodsText gets a reference to the given string and assigns it to the BillingMethodsText field.
func (o *ServiceSignoff) SetBillingMethodsText(v string) {
	o.BillingMethodsText = &v
}

// GetCreditCardFieldsFlag returns the CreditCardFieldsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetCreditCardFieldsFlag() bool {
	if o == nil || IsNil(o.CreditCardFieldsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CreditCardFieldsFlag.Get()
}

// GetCreditCardFieldsFlagOk returns a tuple with the CreditCardFieldsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetCreditCardFieldsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreditCardFieldsFlag.Get(), o.CreditCardFieldsFlag.IsSet()
}

// HasCreditCardFieldsFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasCreditCardFieldsFlag() bool {
	if o != nil && o.CreditCardFieldsFlag.IsSet() {
		return true
	}

	return false
}

// SetCreditCardFieldsFlag gets a reference to the given NullableBool and assigns it to the CreditCardFieldsFlag field.
func (o *ServiceSignoff) SetCreditCardFieldsFlag(v bool) {
	o.CreditCardFieldsFlag.Set(&v)
}

// SetCreditCardFieldsFlagNil sets the value for CreditCardFieldsFlag to be an explicit nil
func (o *ServiceSignoff) SetCreditCardFieldsFlagNil() {
	o.CreditCardFieldsFlag.Set(nil)
}

// UnsetCreditCardFieldsFlag ensures that no value is present for CreditCardFieldsFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetCreditCardFieldsFlag() {
	o.CreditCardFieldsFlag.Unset()
}

// GetDefaultFFFlag returns the DefaultFFFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSignoff) GetDefaultFFFlag() bool {
	if o == nil || IsNil(o.DefaultFFFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultFFFlag.Get()
}

// GetDefaultFFFlagOk returns a tuple with the DefaultFFFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSignoff) GetDefaultFFFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultFFFlag.Get(), o.DefaultFFFlag.IsSet()
}

// HasDefaultFFFlag returns a boolean if a field has been set.
func (o *ServiceSignoff) HasDefaultFFFlag() bool {
	if o != nil && o.DefaultFFFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultFFFlag gets a reference to the given NullableBool and assigns it to the DefaultFFFlag field.
func (o *ServiceSignoff) SetDefaultFFFlag(v bool) {
	o.DefaultFFFlag.Set(&v)
}

// SetDefaultFFFlagNil sets the value for DefaultFFFlag to be an explicit nil
func (o *ServiceSignoff) SetDefaultFFFlagNil() {
	o.DefaultFFFlag.Set(nil)
}

// UnsetDefaultFFFlag ensures that no value is present for DefaultFFFlag, not even an explicit nil
func (o *ServiceSignoff) UnsetDefaultFFFlag() {
	o.DefaultFFFlag.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ServiceSignoff) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSignoff) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ServiceSignoff) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ServiceSignoff) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ServiceSignoff) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceSignoff) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if o.DefaultFlag.IsSet() {
		toSerialize["defaultFlag"] = o.DefaultFlag.Get()
	}
	if o.VisibleLogoFlag.IsSet() {
		toSerialize["visibleLogoFlag"] = o.VisibleLogoFlag.Get()
	}
	if o.CompanyInfoFlag.IsSet() {
		toSerialize["companyInfoFlag"] = o.CompanyInfoFlag.Get()
	}
	if o.BillingTermsFlag.IsSet() {
		toSerialize["billingTermsFlag"] = o.BillingTermsFlag.Get()
	}
	if o.SummaryFlag.IsSet() {
		toSerialize["summaryFlag"] = o.SummaryFlag.Get()
	}
	if o.DiscussionFlag.IsSet() {
		toSerialize["discussionFlag"] = o.DiscussionFlag.Get()
	}
	if o.TaskFlag.IsSet() {
		toSerialize["taskFlag"] = o.TaskFlag.Get()
	}
	if o.Task.IsSet() {
		toSerialize["task"] = o.Task.Get()
	}
	if o.ConfigurationsFlag.IsSet() {
		toSerialize["configurationsFlag"] = o.ConfigurationsFlag.Get()
	}
	if o.InternalNotesFlag.IsSet() {
		toSerialize["internalNotesFlag"] = o.InternalNotesFlag.Get()
	}
	if o.ResolutionFlag.IsSet() {
		toSerialize["resolutionFlag"] = o.ResolutionFlag.Get()
	}
	if o.TimeFlag.IsSet() {
		toSerialize["timeFlag"] = o.TimeFlag.Get()
	}
	if o.TimeMemberFlag.IsSet() {
		toSerialize["timeMemberFlag"] = o.TimeMemberFlag.Get()
	}
	if o.TimeDateFlag.IsSet() {
		toSerialize["timeDateFlag"] = o.TimeDateFlag.Get()
	}
	if o.TimeStartEndFlag.IsSet() {
		toSerialize["timeStartEndFlag"] = o.TimeStartEndFlag.Get()
	}
	if o.TimeBillFlag.IsSet() {
		toSerialize["timeBillFlag"] = o.TimeBillFlag.Get()
	}
	if o.TimeHoursFlag.IsSet() {
		toSerialize["timeHoursFlag"] = o.TimeHoursFlag.Get()
	}
	if o.TimeRateFlag.IsSet() {
		toSerialize["timeRateFlag"] = o.TimeRateFlag.Get()
	}
	if o.TimeExtendedAmountFlag.IsSet() {
		toSerialize["timeExtendedAmountFlag"] = o.TimeExtendedAmountFlag.Get()
	}
	if o.TimeWorkTypeFlag.IsSet() {
		toSerialize["timeWorkTypeFlag"] = o.TimeWorkTypeFlag.Get()
	}
	if o.TimeAgreementFlag.IsSet() {
		toSerialize["timeAgreementFlag"] = o.TimeAgreementFlag.Get()
	}
	if o.TimeNotesFlag.IsSet() {
		toSerialize["timeNotesFlag"] = o.TimeNotesFlag.Get()
	}
	if o.TimeManualFlag.IsSet() {
		toSerialize["timeManualFlag"] = o.TimeManualFlag.Get()
	}
	if o.TimeManualEntry.IsSet() {
		toSerialize["timeManualEntry"] = o.TimeManualEntry.Get()
	}
	if o.TimeTaxFlag.IsSet() {
		toSerialize["timeTaxFlag"] = o.TimeTaxFlag.Get()
	}
	if o.ExpenseFlag.IsSet() {
		toSerialize["expenseFlag"] = o.ExpenseFlag.Get()
	}
	if o.ExpenseDateFlag.IsSet() {
		toSerialize["expenseDateFlag"] = o.ExpenseDateFlag.Get()
	}
	if o.ExpenseMemberFlag.IsSet() {
		toSerialize["expenseMemberFlag"] = o.ExpenseMemberFlag.Get()
	}
	if o.ExpenseTypeFlag.IsSet() {
		toSerialize["expenseTypeFlag"] = o.ExpenseTypeFlag.Get()
	}
	if o.ExpenseBillFlag.IsSet() {
		toSerialize["expenseBillFlag"] = o.ExpenseBillFlag.Get()
	}
	if o.ExpenseAmountFlag.IsSet() {
		toSerialize["expenseAmountFlag"] = o.ExpenseAmountFlag.Get()
	}
	if o.ExpenseAgreementFlag.IsSet() {
		toSerialize["expenseAgreementFlag"] = o.ExpenseAgreementFlag.Get()
	}
	if o.ExpenseNotesFlag.IsSet() {
		toSerialize["expenseNotesFlag"] = o.ExpenseNotesFlag.Get()
	}
	if o.ExpenseTaxFlag.IsSet() {
		toSerialize["expenseTaxFlag"] = o.ExpenseTaxFlag.Get()
	}
	if o.ExpenseManualFlag.IsSet() {
		toSerialize["expenseManualFlag"] = o.ExpenseManualFlag.Get()
	}
	if o.ExpenseManualEntry.IsSet() {
		toSerialize["expenseManualEntry"] = o.ExpenseManualEntry.Get()
	}
	if o.ProductFlag.IsSet() {
		toSerialize["productFlag"] = o.ProductFlag.Get()
	}
	if o.ProductDescriptionFlag.IsSet() {
		toSerialize["productDescriptionFlag"] = o.ProductDescriptionFlag.Get()
	}
	if o.ProductBillFlag.IsSet() {
		toSerialize["productBillFlag"] = o.ProductBillFlag.Get()
	}
	if o.ProductQuantityFlag.IsSet() {
		toSerialize["productQuantityFlag"] = o.ProductQuantityFlag.Get()
	}
	if o.ProductPriceFlag.IsSet() {
		toSerialize["productPriceFlag"] = o.ProductPriceFlag.Get()
	}
	if o.ProductExtendedAmountFlag.IsSet() {
		toSerialize["productExtendedAmountFlag"] = o.ProductExtendedAmountFlag.Get()
	}
	if o.ProductAgreementFlag.IsSet() {
		toSerialize["productAgreementFlag"] = o.ProductAgreementFlag.Get()
	}
	if o.ProductManualFlag.IsSet() {
		toSerialize["productManualFlag"] = o.ProductManualFlag.Get()
	}
	if o.ProductManualEntry.IsSet() {
		toSerialize["productManualEntry"] = o.ProductManualEntry.Get()
	}
	if o.ProductTaxFlag.IsSet() {
		toSerialize["productTaxFlag"] = o.ProductTaxFlag.Get()
	}
	if o.TechnicianSignoffFlag.IsSet() {
		toSerialize["technicianSignoffFlag"] = o.TechnicianSignoffFlag.Get()
	}
	if o.CustomerSignoffTextFlag.IsSet() {
		toSerialize["customerSignoffTextFlag"] = o.CustomerSignoffTextFlag.Get()
	}
	if !IsNil(o.CustomerSignoffText) {
		toSerialize["customerSignoffText"] = o.CustomerSignoffText
	}
	if o.CustomerSignoffFieldsFlag.IsSet() {
		toSerialize["customerSignoffFieldsFlag"] = o.CustomerSignoffFieldsFlag.Get()
	}
	if o.BillingMethodsTextFlag.IsSet() {
		toSerialize["billingMethodsTextFlag"] = o.BillingMethodsTextFlag.Get()
	}
	if !IsNil(o.BillingMethodsText) {
		toSerialize["billingMethodsText"] = o.BillingMethodsText
	}
	if o.CreditCardFieldsFlag.IsSet() {
		toSerialize["creditCardFieldsFlag"] = o.CreditCardFieldsFlag.Get()
	}
	if o.DefaultFFFlag.IsSet() {
		toSerialize["defaultFFFlag"] = o.DefaultFFFlag.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ServiceSignoff) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceSignoff := _ServiceSignoff{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceSignoff)

	if err != nil {
		return err
	}

	*o = ServiceSignoff(varServiceSignoff)

	return err
}

type NullableServiceSignoff struct {
	value *ServiceSignoff
	isSet bool
}

func (v NullableServiceSignoff) Get() *ServiceSignoff {
	return v.value
}

func (v *NullableServiceSignoff) Set(val *ServiceSignoff) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSignoff) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSignoff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSignoff(val *ServiceSignoff) *NullableServiceSignoff {
	return &NullableServiceSignoff{value: val, isSet: true}
}

func (v NullableServiceSignoff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSignoff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
