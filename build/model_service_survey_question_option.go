/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ServiceSurveyQuestionOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceSurveyQuestionOption{}

// ServiceSurveyQuestionOption struct for ServiceSurveyQuestionOption
type ServiceSurveyQuestionOption struct {
	IncludeFlag NullableBool  `json:"includeFlag,omitempty"`
	Caption     *string       `json:"caption,omitempty"`
	Points      NullableInt32 `json:"points,omitempty"`
}

// NewServiceSurveyQuestionOption instantiates a new ServiceSurveyQuestionOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSurveyQuestionOption() *ServiceSurveyQuestionOption {
	this := ServiceSurveyQuestionOption{}
	return &this
}

// NewServiceSurveyQuestionOptionWithDefaults instantiates a new ServiceSurveyQuestionOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSurveyQuestionOptionWithDefaults() *ServiceSurveyQuestionOption {
	this := ServiceSurveyQuestionOption{}
	return &this
}

// GetIncludeFlag returns the IncludeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurveyQuestionOption) GetIncludeFlag() bool {
	if o == nil || IsNil(o.IncludeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeFlag.Get()
}

// GetIncludeFlagOk returns a tuple with the IncludeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurveyQuestionOption) GetIncludeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeFlag.Get(), o.IncludeFlag.IsSet()
}

// HasIncludeFlag returns a boolean if a field has been set.
func (o *ServiceSurveyQuestionOption) HasIncludeFlag() bool {
	if o != nil && o.IncludeFlag.IsSet() {
		return true
	}

	return false
}

// SetIncludeFlag gets a reference to the given NullableBool and assigns it to the IncludeFlag field.
func (o *ServiceSurveyQuestionOption) SetIncludeFlag(v bool) {
	o.IncludeFlag.Set(&v)
}

// SetIncludeFlagNil sets the value for IncludeFlag to be an explicit nil
func (o *ServiceSurveyQuestionOption) SetIncludeFlagNil() {
	o.IncludeFlag.Set(nil)
}

// UnsetIncludeFlag ensures that no value is present for IncludeFlag, not even an explicit nil
func (o *ServiceSurveyQuestionOption) UnsetIncludeFlag() {
	o.IncludeFlag.Unset()
}

// GetCaption returns the Caption field value if set, zero value otherwise.
func (o *ServiceSurveyQuestionOption) GetCaption() string {
	if o == nil || IsNil(o.Caption) {
		var ret string
		return ret
	}
	return *o.Caption
}

// GetCaptionOk returns a tuple with the Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurveyQuestionOption) GetCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Caption) {
		return nil, false
	}
	return o.Caption, true
}

// HasCaption returns a boolean if a field has been set.
func (o *ServiceSurveyQuestionOption) HasCaption() bool {
	if o != nil && !IsNil(o.Caption) {
		return true
	}

	return false
}

// SetCaption gets a reference to the given string and assigns it to the Caption field.
func (o *ServiceSurveyQuestionOption) SetCaption(v string) {
	o.Caption = &v
}

// GetPoints returns the Points field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurveyQuestionOption) GetPoints() int32 {
	if o == nil || IsNil(o.Points.Get()) {
		var ret int32
		return ret
	}
	return *o.Points.Get()
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurveyQuestionOption) GetPointsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Points.Get(), o.Points.IsSet()
}

// HasPoints returns a boolean if a field has been set.
func (o *ServiceSurveyQuestionOption) HasPoints() bool {
	if o != nil && o.Points.IsSet() {
		return true
	}

	return false
}

// SetPoints gets a reference to the given NullableInt32 and assigns it to the Points field.
func (o *ServiceSurveyQuestionOption) SetPoints(v int32) {
	o.Points.Set(&v)
}

// SetPointsNil sets the value for Points to be an explicit nil
func (o *ServiceSurveyQuestionOption) SetPointsNil() {
	o.Points.Set(nil)
}

// UnsetPoints ensures that no value is present for Points, not even an explicit nil
func (o *ServiceSurveyQuestionOption) UnsetPoints() {
	o.Points.Unset()
}

func (o ServiceSurveyQuestionOption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceSurveyQuestionOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeFlag.IsSet() {
		toSerialize["includeFlag"] = o.IncludeFlag.Get()
	}
	if !IsNil(o.Caption) {
		toSerialize["caption"] = o.Caption
	}
	if o.Points.IsSet() {
		toSerialize["points"] = o.Points.Get()
	}
	return toSerialize, nil
}

type NullableServiceSurveyQuestionOption struct {
	value *ServiceSurveyQuestionOption
	isSet bool
}

func (v NullableServiceSurveyQuestionOption) Get() *ServiceSurveyQuestionOption {
	return v.value
}

func (v *NullableServiceSurveyQuestionOption) Set(val *ServiceSurveyQuestionOption) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSurveyQuestionOption) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSurveyQuestionOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSurveyQuestionOption(val *ServiceSurveyQuestionOption) *NullableServiceSurveyQuestionOption {
	return &NullableServiceSurveyQuestionOption{value: val, isSet: true}
}

func (v NullableServiceSurveyQuestionOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSurveyQuestionOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
