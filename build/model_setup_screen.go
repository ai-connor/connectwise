/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the SetupScreen type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetupScreen{}

// SetupScreen struct for SetupScreen
type SetupScreen struct {
	Id                *int32             `json:"id,omitempty"`
	Category          *string            `json:"category,omitempty"`
	Name              *string            `json:"name,omitempty"`
	Description       *string            `json:"description,omitempty"`
	ModuleDescription *string            `json:"moduleDescription,omitempty"`
	ModuleIdentifier  *string            `json:"moduleIdentifier,omitempty"`
	ModuleName        *string            `json:"moduleName,omitempty"`
	Info              *map[string]string `json:"_info,omitempty"`
}

// NewSetupScreen instantiates a new SetupScreen object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetupScreen() *SetupScreen {
	this := SetupScreen{}
	return &this
}

// NewSetupScreenWithDefaults instantiates a new SetupScreen object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetupScreenWithDefaults() *SetupScreen {
	this := SetupScreen{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SetupScreen) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SetupScreen) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SetupScreen) SetId(v int32) {
	o.Id = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SetupScreen) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SetupScreen) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *SetupScreen) SetCategory(v string) {
	o.Category = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SetupScreen) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SetupScreen) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SetupScreen) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SetupScreen) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SetupScreen) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SetupScreen) SetDescription(v string) {
	o.Description = &v
}

// GetModuleDescription returns the ModuleDescription field value if set, zero value otherwise.
func (o *SetupScreen) GetModuleDescription() string {
	if o == nil || IsNil(o.ModuleDescription) {
		var ret string
		return ret
	}
	return *o.ModuleDescription
}

// GetModuleDescriptionOk returns a tuple with the ModuleDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetModuleDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleDescription) {
		return nil, false
	}
	return o.ModuleDescription, true
}

// HasModuleDescription returns a boolean if a field has been set.
func (o *SetupScreen) HasModuleDescription() bool {
	if o != nil && !IsNil(o.ModuleDescription) {
		return true
	}

	return false
}

// SetModuleDescription gets a reference to the given string and assigns it to the ModuleDescription field.
func (o *SetupScreen) SetModuleDescription(v string) {
	o.ModuleDescription = &v
}

// GetModuleIdentifier returns the ModuleIdentifier field value if set, zero value otherwise.
func (o *SetupScreen) GetModuleIdentifier() string {
	if o == nil || IsNil(o.ModuleIdentifier) {
		var ret string
		return ret
	}
	return *o.ModuleIdentifier
}

// GetModuleIdentifierOk returns a tuple with the ModuleIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetModuleIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleIdentifier) {
		return nil, false
	}
	return o.ModuleIdentifier, true
}

// HasModuleIdentifier returns a boolean if a field has been set.
func (o *SetupScreen) HasModuleIdentifier() bool {
	if o != nil && !IsNil(o.ModuleIdentifier) {
		return true
	}

	return false
}

// SetModuleIdentifier gets a reference to the given string and assigns it to the ModuleIdentifier field.
func (o *SetupScreen) SetModuleIdentifier(v string) {
	o.ModuleIdentifier = &v
}

// GetModuleName returns the ModuleName field value if set, zero value otherwise.
func (o *SetupScreen) GetModuleName() string {
	if o == nil || IsNil(o.ModuleName) {
		var ret string
		return ret
	}
	return *o.ModuleName
}

// GetModuleNameOk returns a tuple with the ModuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetModuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleName) {
		return nil, false
	}
	return o.ModuleName, true
}

// HasModuleName returns a boolean if a field has been set.
func (o *SetupScreen) HasModuleName() bool {
	if o != nil && !IsNil(o.ModuleName) {
		return true
	}

	return false
}

// SetModuleName gets a reference to the given string and assigns it to the ModuleName field.
func (o *SetupScreen) SetModuleName(v string) {
	o.ModuleName = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *SetupScreen) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupScreen) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *SetupScreen) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *SetupScreen) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o SetupScreen) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetupScreen) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ModuleDescription) {
		toSerialize["moduleDescription"] = o.ModuleDescription
	}
	if !IsNil(o.ModuleIdentifier) {
		toSerialize["moduleIdentifier"] = o.ModuleIdentifier
	}
	if !IsNil(o.ModuleName) {
		toSerialize["moduleName"] = o.ModuleName
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableSetupScreen struct {
	value *SetupScreen
	isSet bool
}

func (v NullableSetupScreen) Get() *SetupScreen {
	return v.value
}

func (v *NullableSetupScreen) Set(val *SetupScreen) {
	v.value = val
	v.isSet = true
}

func (v NullableSetupScreen) IsSet() bool {
	return v.isSet
}

func (v *NullableSetupScreen) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetupScreen(val *SetupScreen) *NullableSetupScreen {
	return &NullableSetupScreen{value: val, isSet: true}
}

func (v NullableSetupScreen) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetupScreen) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
