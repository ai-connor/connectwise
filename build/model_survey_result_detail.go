/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the SurveyResultDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SurveyResultDetail{}

// SurveyResultDetail struct for SurveyResultDetail
type SurveyResultDetail struct {
	QuestionId NullableInt32 `json:"questionId,omitempty"`
	// If question type is Selection, this should be the option array index.
	Answer map[string]interface{} `json:"answer,omitempty"`
}

// NewSurveyResultDetail instantiates a new SurveyResultDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSurveyResultDetail() *SurveyResultDetail {
	this := SurveyResultDetail{}
	return &this
}

// NewSurveyResultDetailWithDefaults instantiates a new SurveyResultDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSurveyResultDetailWithDefaults() *SurveyResultDetail {
	this := SurveyResultDetail{}
	return &this
}

// GetQuestionId returns the QuestionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SurveyResultDetail) GetQuestionId() int32 {
	if o == nil || IsNil(o.QuestionId.Get()) {
		var ret int32
		return ret
	}
	return *o.QuestionId.Get()
}

// GetQuestionIdOk returns a tuple with the QuestionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SurveyResultDetail) GetQuestionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuestionId.Get(), o.QuestionId.IsSet()
}

// HasQuestionId returns a boolean if a field has been set.
func (o *SurveyResultDetail) HasQuestionId() bool {
	if o != nil && o.QuestionId.IsSet() {
		return true
	}

	return false
}

// SetQuestionId gets a reference to the given NullableInt32 and assigns it to the QuestionId field.
func (o *SurveyResultDetail) SetQuestionId(v int32) {
	o.QuestionId.Set(&v)
}

// SetQuestionIdNil sets the value for QuestionId to be an explicit nil
func (o *SurveyResultDetail) SetQuestionIdNil() {
	o.QuestionId.Set(nil)
}

// UnsetQuestionId ensures that no value is present for QuestionId, not even an explicit nil
func (o *SurveyResultDetail) UnsetQuestionId() {
	o.QuestionId.Unset()
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *SurveyResultDetail) GetAnswer() map[string]interface{} {
	if o == nil || IsNil(o.Answer) {
		var ret map[string]interface{}
		return ret
	}
	return o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveyResultDetail) GetAnswerOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Answer) {
		return map[string]interface{}{}, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *SurveyResultDetail) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given map[string]interface{} and assigns it to the Answer field.
func (o *SurveyResultDetail) SetAnswer(v map[string]interface{}) {
	o.Answer = v
}

func (o SurveyResultDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SurveyResultDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.QuestionId.IsSet() {
		toSerialize["questionId"] = o.QuestionId.Get()
	}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	return toSerialize, nil
}

type NullableSurveyResultDetail struct {
	value *SurveyResultDetail
	isSet bool
}

func (v NullableSurveyResultDetail) Get() *SurveyResultDetail {
	return v.value
}

func (v *NullableSurveyResultDetail) Set(val *SurveyResultDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableSurveyResultDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableSurveyResultDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSurveyResultDetail(val *SurveyResultDetail) *NullableSurveyResultDetail {
	return &NullableSurveyResultDetail{value: val, isSet: true}
}

func (v NullableSurveyResultDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSurveyResultDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
