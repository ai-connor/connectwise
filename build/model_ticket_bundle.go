/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the TicketBundle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TicketBundle{}

// TicketBundle struct for TicketBundle
type TicketBundle struct {
	ChildTicketIds []int32 `json:"childTicketIds,omitempty"`
}

// NewTicketBundle instantiates a new TicketBundle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketBundle() *TicketBundle {
	this := TicketBundle{}
	return &this
}

// NewTicketBundleWithDefaults instantiates a new TicketBundle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketBundleWithDefaults() *TicketBundle {
	this := TicketBundle{}
	return &this
}

// GetChildTicketIds returns the ChildTicketIds field value if set, zero value otherwise.
func (o *TicketBundle) GetChildTicketIds() []int32 {
	if o == nil || IsNil(o.ChildTicketIds) {
		var ret []int32
		return ret
	}
	return o.ChildTicketIds
}

// GetChildTicketIdsOk returns a tuple with the ChildTicketIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketBundle) GetChildTicketIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ChildTicketIds) {
		return nil, false
	}
	return o.ChildTicketIds, true
}

// HasChildTicketIds returns a boolean if a field has been set.
func (o *TicketBundle) HasChildTicketIds() bool {
	if o != nil && !IsNil(o.ChildTicketIds) {
		return true
	}

	return false
}

// SetChildTicketIds gets a reference to the given []int32 and assigns it to the ChildTicketIds field.
func (o *TicketBundle) SetChildTicketIds(v []int32) {
	o.ChildTicketIds = v
}

func (o TicketBundle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TicketBundle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChildTicketIds) {
		toSerialize["childTicketIds"] = o.ChildTicketIds
	}
	return toSerialize, nil
}

type NullableTicketBundle struct {
	value *TicketBundle
	isSet bool
}

func (v NullableTicketBundle) Get() *TicketBundle {
	return v.value
}

func (v *NullableTicketBundle) Set(val *TicketBundle) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketBundle) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketBundle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketBundle(val *TicketBundle) *NullableTicketBundle {
	return &NullableTicketBundle{value: val, isSet: true}
}

func (v NullableTicketBundle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketBundle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
