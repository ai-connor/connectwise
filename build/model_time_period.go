/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the TimePeriod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimePeriod{}

// TimePeriod struct for TimePeriod
type TimePeriod struct {
	Id              *int32                    `json:"id,omitempty"`
	TimePeriodSetup *TimePeriodSetupReference `json:"timePeriodSetup,omitempty"`
	Period          NullableInt32             `json:"period,omitempty"`
	StartDate       *string                   `json:"startDate,omitempty"`
	EndDate         *string                   `json:"endDate,omitempty"`
	DeadlineDate    *string                   `json:"deadlineDate,omitempty"`
	Info            *map[string]string        `json:"_info,omitempty"`
}

// NewTimePeriod instantiates a new TimePeriod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimePeriod() *TimePeriod {
	this := TimePeriod{}
	return &this
}

// NewTimePeriodWithDefaults instantiates a new TimePeriod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimePeriodWithDefaults() *TimePeriod {
	this := TimePeriod{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TimePeriod) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TimePeriod) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TimePeriod) SetId(v int32) {
	o.Id = &v
}

// GetTimePeriodSetup returns the TimePeriodSetup field value if set, zero value otherwise.
func (o *TimePeriod) GetTimePeriodSetup() TimePeriodSetupReference {
	if o == nil || IsNil(o.TimePeriodSetup) {
		var ret TimePeriodSetupReference
		return ret
	}
	return *o.TimePeriodSetup
}

// GetTimePeriodSetupOk returns a tuple with the TimePeriodSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetTimePeriodSetupOk() (*TimePeriodSetupReference, bool) {
	if o == nil || IsNil(o.TimePeriodSetup) {
		return nil, false
	}
	return o.TimePeriodSetup, true
}

// HasTimePeriodSetup returns a boolean if a field has been set.
func (o *TimePeriod) HasTimePeriodSetup() bool {
	if o != nil && !IsNil(o.TimePeriodSetup) {
		return true
	}

	return false
}

// SetTimePeriodSetup gets a reference to the given TimePeriodSetupReference and assigns it to the TimePeriodSetup field.
func (o *TimePeriod) SetTimePeriodSetup(v TimePeriodSetupReference) {
	o.TimePeriodSetup = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimePeriod) GetPeriod() int32 {
	if o == nil || IsNil(o.Period.Get()) {
		var ret int32
		return ret
	}
	return *o.Period.Get()
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriod) GetPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Period.Get(), o.Period.IsSet()
}

// HasPeriod returns a boolean if a field has been set.
func (o *TimePeriod) HasPeriod() bool {
	if o != nil && o.Period.IsSet() {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given NullableInt32 and assigns it to the Period field.
func (o *TimePeriod) SetPeriod(v int32) {
	o.Period.Set(&v)
}

// SetPeriodNil sets the value for Period to be an explicit nil
func (o *TimePeriod) SetPeriodNil() {
	o.Period.Set(nil)
}

// UnsetPeriod ensures that no value is present for Period, not even an explicit nil
func (o *TimePeriod) UnsetPeriod() {
	o.Period.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *TimePeriod) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *TimePeriod) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *TimePeriod) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *TimePeriod) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *TimePeriod) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *TimePeriod) SetEndDate(v string) {
	o.EndDate = &v
}

// GetDeadlineDate returns the DeadlineDate field value if set, zero value otherwise.
func (o *TimePeriod) GetDeadlineDate() string {
	if o == nil || IsNil(o.DeadlineDate) {
		var ret string
		return ret
	}
	return *o.DeadlineDate
}

// GetDeadlineDateOk returns a tuple with the DeadlineDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetDeadlineDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeadlineDate) {
		return nil, false
	}
	return o.DeadlineDate, true
}

// HasDeadlineDate returns a boolean if a field has been set.
func (o *TimePeriod) HasDeadlineDate() bool {
	if o != nil && !IsNil(o.DeadlineDate) {
		return true
	}

	return false
}

// SetDeadlineDate gets a reference to the given string and assigns it to the DeadlineDate field.
func (o *TimePeriod) SetDeadlineDate(v string) {
	o.DeadlineDate = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *TimePeriod) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriod) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *TimePeriod) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *TimePeriod) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o TimePeriod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimePeriod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TimePeriodSetup) {
		toSerialize["timePeriodSetup"] = o.TimePeriodSetup
	}
	if o.Period.IsSet() {
		toSerialize["period"] = o.Period.Get()
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.DeadlineDate) {
		toSerialize["deadlineDate"] = o.DeadlineDate
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableTimePeriod struct {
	value *TimePeriod
	isSet bool
}

func (v NullableTimePeriod) Get() *TimePeriod {
	return v.value
}

func (v *NullableTimePeriod) Set(val *TimePeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableTimePeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableTimePeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimePeriod(val *TimePeriod) *NullableTimePeriod {
	return &NullableTimePeriod{value: val, isSet: true}
}

func (v NullableTimePeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimePeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
