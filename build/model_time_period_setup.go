/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TimePeriodSetup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimePeriodSetup{}

// TimePeriodSetup struct for TimePeriodSetup
type TimePeriodSetup struct {
	Id                  *int32         `json:"id,omitempty"`
	PeriodApplyTo       NullableString `json:"periodApplyTo"`
	Year                NullableInt32  `json:"year"`
	NumberFuturePeriods NullableInt32  `json:"numberFuturePeriods"`
	Type                NullableString `json:"type"`
	//  Max length: 100;
	Description        *string `json:"description,omitempty"`
	FirstPeriodEndDate string  `json:"firstPeriodEndDate"`
	// Only needed when type is monthly
	MonthlyPeriodEnds NullableInt32 `json:"monthlyPeriodEnds,omitempty"`
	// Only needed when type is semi-monthly
	SemiMonthlyFirstPeriod NullableInt32 `json:"semiMonthlyFirstPeriod,omitempty"`
	// Only needed when type is semi-monthly
	SemiMonthlySecondPeriod NullableInt32 `json:"semiMonthlySecondPeriod,omitempty"`
	SemiMonthlyLastDayFlag  NullableBool  `json:"semiMonthlyLastDayFlag,omitempty"`
	// Only needed when type is monthly
	LastDayFlag     NullableBool       `json:"lastDayFlag,omitempty"`
	DaysPastEndDate NullableInt32      `json:"daysPastEndDate"`
	Info            *map[string]string `json:"_info,omitempty"`
}

type _TimePeriodSetup TimePeriodSetup

// NewTimePeriodSetup instantiates a new TimePeriodSetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimePeriodSetup(periodApplyTo NullableString, year NullableInt32, numberFuturePeriods NullableInt32, type_ NullableString, firstPeriodEndDate string, daysPastEndDate NullableInt32) *TimePeriodSetup {
	this := TimePeriodSetup{}
	this.PeriodApplyTo = periodApplyTo
	this.Year = year
	this.NumberFuturePeriods = numberFuturePeriods
	this.Type = type_
	this.FirstPeriodEndDate = firstPeriodEndDate
	this.DaysPastEndDate = daysPastEndDate
	return &this
}

// NewTimePeriodSetupWithDefaults instantiates a new TimePeriodSetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimePeriodSetupWithDefaults() *TimePeriodSetup {
	this := TimePeriodSetup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TimePeriodSetup) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriodSetup) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TimePeriodSetup) SetId(v int32) {
	o.Id = &v
}

// GetPeriodApplyTo returns the PeriodApplyTo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TimePeriodSetup) GetPeriodApplyTo() string {
	if o == nil || o.PeriodApplyTo.Get() == nil {
		var ret string
		return ret
	}

	return *o.PeriodApplyTo.Get()
}

// GetPeriodApplyToOk returns a tuple with the PeriodApplyTo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetPeriodApplyToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeriodApplyTo.Get(), o.PeriodApplyTo.IsSet()
}

// SetPeriodApplyTo sets field value
func (o *TimePeriodSetup) SetPeriodApplyTo(v string) {
	o.PeriodApplyTo.Set(&v)
}

// GetYear returns the Year field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *TimePeriodSetup) GetYear() int32 {
	if o == nil || o.Year.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Year.Get()
}

// GetYearOk returns a tuple with the Year field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Year.Get(), o.Year.IsSet()
}

// SetYear sets field value
func (o *TimePeriodSetup) SetYear(v int32) {
	o.Year.Set(&v)
}

// GetNumberFuturePeriods returns the NumberFuturePeriods field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *TimePeriodSetup) GetNumberFuturePeriods() int32 {
	if o == nil || o.NumberFuturePeriods.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NumberFuturePeriods.Get()
}

// GetNumberFuturePeriodsOk returns a tuple with the NumberFuturePeriods field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetNumberFuturePeriodsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberFuturePeriods.Get(), o.NumberFuturePeriods.IsSet()
}

// SetNumberFuturePeriods sets field value
func (o *TimePeriodSetup) SetNumberFuturePeriods(v int32) {
	o.NumberFuturePeriods.Set(&v)
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TimePeriodSetup) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *TimePeriodSetup) SetType(v string) {
	o.Type.Set(&v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TimePeriodSetup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriodSetup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TimePeriodSetup) SetDescription(v string) {
	o.Description = &v
}

// GetFirstPeriodEndDate returns the FirstPeriodEndDate field value
func (o *TimePeriodSetup) GetFirstPeriodEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstPeriodEndDate
}

// GetFirstPeriodEndDateOk returns a tuple with the FirstPeriodEndDate field value
// and a boolean to check if the value has been set.
func (o *TimePeriodSetup) GetFirstPeriodEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstPeriodEndDate, true
}

// SetFirstPeriodEndDate sets field value
func (o *TimePeriodSetup) SetFirstPeriodEndDate(v string) {
	o.FirstPeriodEndDate = v
}

// GetMonthlyPeriodEnds returns the MonthlyPeriodEnds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimePeriodSetup) GetMonthlyPeriodEnds() int32 {
	if o == nil || IsNil(o.MonthlyPeriodEnds.Get()) {
		var ret int32
		return ret
	}
	return *o.MonthlyPeriodEnds.Get()
}

// GetMonthlyPeriodEndsOk returns a tuple with the MonthlyPeriodEnds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetMonthlyPeriodEndsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MonthlyPeriodEnds.Get(), o.MonthlyPeriodEnds.IsSet()
}

// HasMonthlyPeriodEnds returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasMonthlyPeriodEnds() bool {
	if o != nil && o.MonthlyPeriodEnds.IsSet() {
		return true
	}

	return false
}

// SetMonthlyPeriodEnds gets a reference to the given NullableInt32 and assigns it to the MonthlyPeriodEnds field.
func (o *TimePeriodSetup) SetMonthlyPeriodEnds(v int32) {
	o.MonthlyPeriodEnds.Set(&v)
}

// SetMonthlyPeriodEndsNil sets the value for MonthlyPeriodEnds to be an explicit nil
func (o *TimePeriodSetup) SetMonthlyPeriodEndsNil() {
	o.MonthlyPeriodEnds.Set(nil)
}

// UnsetMonthlyPeriodEnds ensures that no value is present for MonthlyPeriodEnds, not even an explicit nil
func (o *TimePeriodSetup) UnsetMonthlyPeriodEnds() {
	o.MonthlyPeriodEnds.Unset()
}

// GetSemiMonthlyFirstPeriod returns the SemiMonthlyFirstPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimePeriodSetup) GetSemiMonthlyFirstPeriod() int32 {
	if o == nil || IsNil(o.SemiMonthlyFirstPeriod.Get()) {
		var ret int32
		return ret
	}
	return *o.SemiMonthlyFirstPeriod.Get()
}

// GetSemiMonthlyFirstPeriodOk returns a tuple with the SemiMonthlyFirstPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetSemiMonthlyFirstPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SemiMonthlyFirstPeriod.Get(), o.SemiMonthlyFirstPeriod.IsSet()
}

// HasSemiMonthlyFirstPeriod returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasSemiMonthlyFirstPeriod() bool {
	if o != nil && o.SemiMonthlyFirstPeriod.IsSet() {
		return true
	}

	return false
}

// SetSemiMonthlyFirstPeriod gets a reference to the given NullableInt32 and assigns it to the SemiMonthlyFirstPeriod field.
func (o *TimePeriodSetup) SetSemiMonthlyFirstPeriod(v int32) {
	o.SemiMonthlyFirstPeriod.Set(&v)
}

// SetSemiMonthlyFirstPeriodNil sets the value for SemiMonthlyFirstPeriod to be an explicit nil
func (o *TimePeriodSetup) SetSemiMonthlyFirstPeriodNil() {
	o.SemiMonthlyFirstPeriod.Set(nil)
}

// UnsetSemiMonthlyFirstPeriod ensures that no value is present for SemiMonthlyFirstPeriod, not even an explicit nil
func (o *TimePeriodSetup) UnsetSemiMonthlyFirstPeriod() {
	o.SemiMonthlyFirstPeriod.Unset()
}

// GetSemiMonthlySecondPeriod returns the SemiMonthlySecondPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimePeriodSetup) GetSemiMonthlySecondPeriod() int32 {
	if o == nil || IsNil(o.SemiMonthlySecondPeriod.Get()) {
		var ret int32
		return ret
	}
	return *o.SemiMonthlySecondPeriod.Get()
}

// GetSemiMonthlySecondPeriodOk returns a tuple with the SemiMonthlySecondPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetSemiMonthlySecondPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SemiMonthlySecondPeriod.Get(), o.SemiMonthlySecondPeriod.IsSet()
}

// HasSemiMonthlySecondPeriod returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasSemiMonthlySecondPeriod() bool {
	if o != nil && o.SemiMonthlySecondPeriod.IsSet() {
		return true
	}

	return false
}

// SetSemiMonthlySecondPeriod gets a reference to the given NullableInt32 and assigns it to the SemiMonthlySecondPeriod field.
func (o *TimePeriodSetup) SetSemiMonthlySecondPeriod(v int32) {
	o.SemiMonthlySecondPeriod.Set(&v)
}

// SetSemiMonthlySecondPeriodNil sets the value for SemiMonthlySecondPeriod to be an explicit nil
func (o *TimePeriodSetup) SetSemiMonthlySecondPeriodNil() {
	o.SemiMonthlySecondPeriod.Set(nil)
}

// UnsetSemiMonthlySecondPeriod ensures that no value is present for SemiMonthlySecondPeriod, not even an explicit nil
func (o *TimePeriodSetup) UnsetSemiMonthlySecondPeriod() {
	o.SemiMonthlySecondPeriod.Unset()
}

// GetSemiMonthlyLastDayFlag returns the SemiMonthlyLastDayFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimePeriodSetup) GetSemiMonthlyLastDayFlag() bool {
	if o == nil || IsNil(o.SemiMonthlyLastDayFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SemiMonthlyLastDayFlag.Get()
}

// GetSemiMonthlyLastDayFlagOk returns a tuple with the SemiMonthlyLastDayFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetSemiMonthlyLastDayFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SemiMonthlyLastDayFlag.Get(), o.SemiMonthlyLastDayFlag.IsSet()
}

// HasSemiMonthlyLastDayFlag returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasSemiMonthlyLastDayFlag() bool {
	if o != nil && o.SemiMonthlyLastDayFlag.IsSet() {
		return true
	}

	return false
}

// SetSemiMonthlyLastDayFlag gets a reference to the given NullableBool and assigns it to the SemiMonthlyLastDayFlag field.
func (o *TimePeriodSetup) SetSemiMonthlyLastDayFlag(v bool) {
	o.SemiMonthlyLastDayFlag.Set(&v)
}

// SetSemiMonthlyLastDayFlagNil sets the value for SemiMonthlyLastDayFlag to be an explicit nil
func (o *TimePeriodSetup) SetSemiMonthlyLastDayFlagNil() {
	o.SemiMonthlyLastDayFlag.Set(nil)
}

// UnsetSemiMonthlyLastDayFlag ensures that no value is present for SemiMonthlyLastDayFlag, not even an explicit nil
func (o *TimePeriodSetup) UnsetSemiMonthlyLastDayFlag() {
	o.SemiMonthlyLastDayFlag.Unset()
}

// GetLastDayFlag returns the LastDayFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimePeriodSetup) GetLastDayFlag() bool {
	if o == nil || IsNil(o.LastDayFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LastDayFlag.Get()
}

// GetLastDayFlagOk returns a tuple with the LastDayFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetLastDayFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastDayFlag.Get(), o.LastDayFlag.IsSet()
}

// HasLastDayFlag returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasLastDayFlag() bool {
	if o != nil && o.LastDayFlag.IsSet() {
		return true
	}

	return false
}

// SetLastDayFlag gets a reference to the given NullableBool and assigns it to the LastDayFlag field.
func (o *TimePeriodSetup) SetLastDayFlag(v bool) {
	o.LastDayFlag.Set(&v)
}

// SetLastDayFlagNil sets the value for LastDayFlag to be an explicit nil
func (o *TimePeriodSetup) SetLastDayFlagNil() {
	o.LastDayFlag.Set(nil)
}

// UnsetLastDayFlag ensures that no value is present for LastDayFlag, not even an explicit nil
func (o *TimePeriodSetup) UnsetLastDayFlag() {
	o.LastDayFlag.Unset()
}

// GetDaysPastEndDate returns the DaysPastEndDate field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *TimePeriodSetup) GetDaysPastEndDate() int32 {
	if o == nil || o.DaysPastEndDate.Get() == nil {
		var ret int32
		return ret
	}

	return *o.DaysPastEndDate.Get()
}

// GetDaysPastEndDateOk returns a tuple with the DaysPastEndDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimePeriodSetup) GetDaysPastEndDateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysPastEndDate.Get(), o.DaysPastEndDate.IsSet()
}

// SetDaysPastEndDate sets field value
func (o *TimePeriodSetup) SetDaysPastEndDate(v int32) {
	o.DaysPastEndDate.Set(&v)
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *TimePeriodSetup) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimePeriodSetup) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *TimePeriodSetup) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *TimePeriodSetup) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o TimePeriodSetup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimePeriodSetup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["periodApplyTo"] = o.PeriodApplyTo.Get()
	toSerialize["year"] = o.Year.Get()
	toSerialize["numberFuturePeriods"] = o.NumberFuturePeriods.Get()
	toSerialize["type"] = o.Type.Get()
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["firstPeriodEndDate"] = o.FirstPeriodEndDate
	if o.MonthlyPeriodEnds.IsSet() {
		toSerialize["monthlyPeriodEnds"] = o.MonthlyPeriodEnds.Get()
	}
	if o.SemiMonthlyFirstPeriod.IsSet() {
		toSerialize["semiMonthlyFirstPeriod"] = o.SemiMonthlyFirstPeriod.Get()
	}
	if o.SemiMonthlySecondPeriod.IsSet() {
		toSerialize["semiMonthlySecondPeriod"] = o.SemiMonthlySecondPeriod.Get()
	}
	if o.SemiMonthlyLastDayFlag.IsSet() {
		toSerialize["semiMonthlyLastDayFlag"] = o.SemiMonthlyLastDayFlag.Get()
	}
	if o.LastDayFlag.IsSet() {
		toSerialize["lastDayFlag"] = o.LastDayFlag.Get()
	}
	toSerialize["daysPastEndDate"] = o.DaysPastEndDate.Get()
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *TimePeriodSetup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"periodApplyTo",
		"year",
		"numberFuturePeriods",
		"type",
		"firstPeriodEndDate",
		"daysPastEndDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimePeriodSetup := _TimePeriodSetup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimePeriodSetup)

	if err != nil {
		return err
	}

	*o = TimePeriodSetup(varTimePeriodSetup)

	return err
}

type NullableTimePeriodSetup struct {
	value *TimePeriodSetup
	isSet bool
}

func (v NullableTimePeriodSetup) Get() *TimePeriodSetup {
	return v.value
}

func (v *NullableTimePeriodSetup) Set(val *TimePeriodSetup) {
	v.value = val
	v.isSet = true
}

func (v NullableTimePeriodSetup) IsSet() bool {
	return v.isSet
}

func (v *NullableTimePeriodSetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimePeriodSetup(val *TimePeriodSetup) *NullableTimePeriodSetup {
	return &NullableTimePeriodSetup{value: val, isSet: true}
}

func (v NullableTimePeriodSetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimePeriodSetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
