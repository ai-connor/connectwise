/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the TimeZoneSetupInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeZoneSetupInfo{}

// TimeZoneSetupInfo struct for TimeZoneSetupInfo
type TimeZoneSetupInfo struct {
	Id     *int32             `json:"id,omitempty"`
	Name   *string            `json:"name,omitempty"`
	Offset NullableFloat64    `json:"offset,omitempty"`
	Info   *map[string]string `json:"_info,omitempty"`
}

// NewTimeZoneSetupInfo instantiates a new TimeZoneSetupInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeZoneSetupInfo() *TimeZoneSetupInfo {
	this := TimeZoneSetupInfo{}
	return &this
}

// NewTimeZoneSetupInfoWithDefaults instantiates a new TimeZoneSetupInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeZoneSetupInfoWithDefaults() *TimeZoneSetupInfo {
	this := TimeZoneSetupInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TimeZoneSetupInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneSetupInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TimeZoneSetupInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TimeZoneSetupInfo) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TimeZoneSetupInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneSetupInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TimeZoneSetupInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TimeZoneSetupInfo) SetName(v string) {
	o.Name = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimeZoneSetupInfo) GetOffset() float64 {
	if o == nil || IsNil(o.Offset.Get()) {
		var ret float64
		return ret
	}
	return *o.Offset.Get()
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimeZoneSetupInfo) GetOffsetOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Offset.Get(), o.Offset.IsSet()
}

// HasOffset returns a boolean if a field has been set.
func (o *TimeZoneSetupInfo) HasOffset() bool {
	if o != nil && o.Offset.IsSet() {
		return true
	}

	return false
}

// SetOffset gets a reference to the given NullableFloat64 and assigns it to the Offset field.
func (o *TimeZoneSetupInfo) SetOffset(v float64) {
	o.Offset.Set(&v)
}

// SetOffsetNil sets the value for Offset to be an explicit nil
func (o *TimeZoneSetupInfo) SetOffsetNil() {
	o.Offset.Set(nil)
}

// UnsetOffset ensures that no value is present for Offset, not even an explicit nil
func (o *TimeZoneSetupInfo) UnsetOffset() {
	o.Offset.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *TimeZoneSetupInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneSetupInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *TimeZoneSetupInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *TimeZoneSetupInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o TimeZoneSetupInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeZoneSetupInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Offset.IsSet() {
		toSerialize["offset"] = o.Offset.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableTimeZoneSetupInfo struct {
	value *TimeZoneSetupInfo
	isSet bool
}

func (v NullableTimeZoneSetupInfo) Get() *TimeZoneSetupInfo {
	return v.value
}

func (v *NullableTimeZoneSetupInfo) Set(val *TimeZoneSetupInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeZoneSetupInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeZoneSetupInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeZoneSetupInfo(val *TimeZoneSetupInfo) *NullableTimeZoneSetupInfo {
	return &NullableTimeZoneSetupInfo{value: val, isSet: true}
}

func (v NullableTimeZoneSetupInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeZoneSetupInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
