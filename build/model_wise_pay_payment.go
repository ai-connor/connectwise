/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the WisePayPayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WisePayPayment{}

// WisePayPayment struct for WisePayPayment
type WisePayPayment struct {
	PaymentDateUtc   *string              `json:"paymentDateUtc,omitempty"`
	WisePayReference *string              `json:"wisePayReference,omitempty"`
	BatchPayment     *WisePayBatchPayment `json:"batchPayment,omitempty"`
	FeeInvoice       *WisePayFeeInvoice   `json:"feeInvoice,omitempty"`
}

// NewWisePayPayment instantiates a new WisePayPayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWisePayPayment() *WisePayPayment {
	this := WisePayPayment{}
	return &this
}

// NewWisePayPaymentWithDefaults instantiates a new WisePayPayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWisePayPaymentWithDefaults() *WisePayPayment {
	this := WisePayPayment{}
	return &this
}

// GetPaymentDateUtc returns the PaymentDateUtc field value if set, zero value otherwise.
func (o *WisePayPayment) GetPaymentDateUtc() string {
	if o == nil || IsNil(o.PaymentDateUtc) {
		var ret string
		return ret
	}
	return *o.PaymentDateUtc
}

// GetPaymentDateUtcOk returns a tuple with the PaymentDateUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WisePayPayment) GetPaymentDateUtcOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentDateUtc) {
		return nil, false
	}
	return o.PaymentDateUtc, true
}

// HasPaymentDateUtc returns a boolean if a field has been set.
func (o *WisePayPayment) HasPaymentDateUtc() bool {
	if o != nil && !IsNil(o.PaymentDateUtc) {
		return true
	}

	return false
}

// SetPaymentDateUtc gets a reference to the given string and assigns it to the PaymentDateUtc field.
func (o *WisePayPayment) SetPaymentDateUtc(v string) {
	o.PaymentDateUtc = &v
}

// GetWisePayReference returns the WisePayReference field value if set, zero value otherwise.
func (o *WisePayPayment) GetWisePayReference() string {
	if o == nil || IsNil(o.WisePayReference) {
		var ret string
		return ret
	}
	return *o.WisePayReference
}

// GetWisePayReferenceOk returns a tuple with the WisePayReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WisePayPayment) GetWisePayReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.WisePayReference) {
		return nil, false
	}
	return o.WisePayReference, true
}

// HasWisePayReference returns a boolean if a field has been set.
func (o *WisePayPayment) HasWisePayReference() bool {
	if o != nil && !IsNil(o.WisePayReference) {
		return true
	}

	return false
}

// SetWisePayReference gets a reference to the given string and assigns it to the WisePayReference field.
func (o *WisePayPayment) SetWisePayReference(v string) {
	o.WisePayReference = &v
}

// GetBatchPayment returns the BatchPayment field value if set, zero value otherwise.
func (o *WisePayPayment) GetBatchPayment() WisePayBatchPayment {
	if o == nil || IsNil(o.BatchPayment) {
		var ret WisePayBatchPayment
		return ret
	}
	return *o.BatchPayment
}

// GetBatchPaymentOk returns a tuple with the BatchPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WisePayPayment) GetBatchPaymentOk() (*WisePayBatchPayment, bool) {
	if o == nil || IsNil(o.BatchPayment) {
		return nil, false
	}
	return o.BatchPayment, true
}

// HasBatchPayment returns a boolean if a field has been set.
func (o *WisePayPayment) HasBatchPayment() bool {
	if o != nil && !IsNil(o.BatchPayment) {
		return true
	}

	return false
}

// SetBatchPayment gets a reference to the given WisePayBatchPayment and assigns it to the BatchPayment field.
func (o *WisePayPayment) SetBatchPayment(v WisePayBatchPayment) {
	o.BatchPayment = &v
}

// GetFeeInvoice returns the FeeInvoice field value if set, zero value otherwise.
func (o *WisePayPayment) GetFeeInvoice() WisePayFeeInvoice {
	if o == nil || IsNil(o.FeeInvoice) {
		var ret WisePayFeeInvoice
		return ret
	}
	return *o.FeeInvoice
}

// GetFeeInvoiceOk returns a tuple with the FeeInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WisePayPayment) GetFeeInvoiceOk() (*WisePayFeeInvoice, bool) {
	if o == nil || IsNil(o.FeeInvoice) {
		return nil, false
	}
	return o.FeeInvoice, true
}

// HasFeeInvoice returns a boolean if a field has been set.
func (o *WisePayPayment) HasFeeInvoice() bool {
	if o != nil && !IsNil(o.FeeInvoice) {
		return true
	}

	return false
}

// SetFeeInvoice gets a reference to the given WisePayFeeInvoice and assigns it to the FeeInvoice field.
func (o *WisePayPayment) SetFeeInvoice(v WisePayFeeInvoice) {
	o.FeeInvoice = &v
}

func (o WisePayPayment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WisePayPayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentDateUtc) {
		toSerialize["paymentDateUtc"] = o.PaymentDateUtc
	}
	if !IsNil(o.WisePayReference) {
		toSerialize["wisePayReference"] = o.WisePayReference
	}
	if !IsNil(o.BatchPayment) {
		toSerialize["batchPayment"] = o.BatchPayment
	}
	if !IsNil(o.FeeInvoice) {
		toSerialize["feeInvoice"] = o.FeeInvoice
	}
	return toSerialize, nil
}

type NullableWisePayPayment struct {
	value *WisePayPayment
	isSet bool
}

func (v NullableWisePayPayment) Get() *WisePayPayment {
	return v.value
}

func (v *NullableWisePayPayment) Set(val *WisePayPayment) {
	v.value = val
	v.isSet = true
}

func (v NullableWisePayPayment) IsSet() bool {
	return v.isSet
}

func (v *NullableWisePayPayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWisePayPayment(val *WisePayPayment) *NullableWisePayPayment {
	return &NullableWisePayPayment{value: val, isSet: true}
}

func (v NullableWisePayPayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWisePayPayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
