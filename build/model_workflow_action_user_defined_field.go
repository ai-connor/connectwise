/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the WorkflowActionUserDefinedField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowActionUserDefinedField{}

// WorkflowActionUserDefinedField struct for WorkflowActionUserDefinedField
type WorkflowActionUserDefinedField struct {
	Id                 *int32       `json:"id,omitempty"`
	EventId            *int32       `json:"eventId,omitempty"`
	ActionId           *int32       `json:"actionId,omitempty"`
	Caption            *string      `json:"caption,omitempty"`
	UserDefinedFieldId *int32       `json:"userDefinedFieldId,omitempty"`
	Value              *string      `json:"value,omitempty"`
	OverwriteFlag      NullableBool `json:"overwriteFlag,omitempty"`
	PodDescription     *string      `json:"podDescription,omitempty"`
	FieldTypeId        *string      `json:"fieldTypeId,omitempty"`
	EntryTypeId        *string      `json:"entryTypeId,omitempty"`
	RequiredFlag       NullableBool `json:"requiredFlag,omitempty"`
	InactiveFlag       NullableBool `json:"inactiveFlag,omitempty"`
	ConnectWiseID      *string      `json:"connectWiseID,omitempty"`
	// WF_NotifyActions_RecID
	ParentId NullableInt32 `json:"parentId,omitempty"`
	// WF_NotifyEvents_RecID
	GrandParentId            NullableInt32      `json:"grandParentId,omitempty"`
	ParentConnectWiseId      *string            `json:"parentConnectWiseId,omitempty"`
	GrandParentConnectWiseId *string            `json:"grandParentConnectWiseId,omitempty"`
	Info                     *map[string]string `json:"_info,omitempty"`
}

// NewWorkflowActionUserDefinedField instantiates a new WorkflowActionUserDefinedField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowActionUserDefinedField() *WorkflowActionUserDefinedField {
	this := WorkflowActionUserDefinedField{}
	return &this
}

// NewWorkflowActionUserDefinedFieldWithDefaults instantiates a new WorkflowActionUserDefinedField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowActionUserDefinedFieldWithDefaults() *WorkflowActionUserDefinedField {
	this := WorkflowActionUserDefinedField{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WorkflowActionUserDefinedField) SetId(v int32) {
	o.Id = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetEventId() int32 {
	if o == nil || IsNil(o.EventId) {
		var ret int32
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetEventIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int32 and assigns it to the EventId field.
func (o *WorkflowActionUserDefinedField) SetEventId(v int32) {
	o.EventId = &v
}

// GetActionId returns the ActionId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetActionId() int32 {
	if o == nil || IsNil(o.ActionId) {
		var ret int32
		return ret
	}
	return *o.ActionId
}

// GetActionIdOk returns a tuple with the ActionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetActionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActionId) {
		return nil, false
	}
	return o.ActionId, true
}

// HasActionId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasActionId() bool {
	if o != nil && !IsNil(o.ActionId) {
		return true
	}

	return false
}

// SetActionId gets a reference to the given int32 and assigns it to the ActionId field.
func (o *WorkflowActionUserDefinedField) SetActionId(v int32) {
	o.ActionId = &v
}

// GetCaption returns the Caption field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetCaption() string {
	if o == nil || IsNil(o.Caption) {
		var ret string
		return ret
	}
	return *o.Caption
}

// GetCaptionOk returns a tuple with the Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Caption) {
		return nil, false
	}
	return o.Caption, true
}

// HasCaption returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasCaption() bool {
	if o != nil && !IsNil(o.Caption) {
		return true
	}

	return false
}

// SetCaption gets a reference to the given string and assigns it to the Caption field.
func (o *WorkflowActionUserDefinedField) SetCaption(v string) {
	o.Caption = &v
}

// GetUserDefinedFieldId returns the UserDefinedFieldId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetUserDefinedFieldId() int32 {
	if o == nil || IsNil(o.UserDefinedFieldId) {
		var ret int32
		return ret
	}
	return *o.UserDefinedFieldId
}

// GetUserDefinedFieldIdOk returns a tuple with the UserDefinedFieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetUserDefinedFieldIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserDefinedFieldId) {
		return nil, false
	}
	return o.UserDefinedFieldId, true
}

// HasUserDefinedFieldId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasUserDefinedFieldId() bool {
	if o != nil && !IsNil(o.UserDefinedFieldId) {
		return true
	}

	return false
}

// SetUserDefinedFieldId gets a reference to the given int32 and assigns it to the UserDefinedFieldId field.
func (o *WorkflowActionUserDefinedField) SetUserDefinedFieldId(v int32) {
	o.UserDefinedFieldId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *WorkflowActionUserDefinedField) SetValue(v string) {
	o.Value = &v
}

// GetOverwriteFlag returns the OverwriteFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowActionUserDefinedField) GetOverwriteFlag() bool {
	if o == nil || IsNil(o.OverwriteFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.OverwriteFlag.Get()
}

// GetOverwriteFlagOk returns a tuple with the OverwriteFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowActionUserDefinedField) GetOverwriteFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverwriteFlag.Get(), o.OverwriteFlag.IsSet()
}

// HasOverwriteFlag returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasOverwriteFlag() bool {
	if o != nil && o.OverwriteFlag.IsSet() {
		return true
	}

	return false
}

// SetOverwriteFlag gets a reference to the given NullableBool and assigns it to the OverwriteFlag field.
func (o *WorkflowActionUserDefinedField) SetOverwriteFlag(v bool) {
	o.OverwriteFlag.Set(&v)
}

// SetOverwriteFlagNil sets the value for OverwriteFlag to be an explicit nil
func (o *WorkflowActionUserDefinedField) SetOverwriteFlagNil() {
	o.OverwriteFlag.Set(nil)
}

// UnsetOverwriteFlag ensures that no value is present for OverwriteFlag, not even an explicit nil
func (o *WorkflowActionUserDefinedField) UnsetOverwriteFlag() {
	o.OverwriteFlag.Unset()
}

// GetPodDescription returns the PodDescription field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetPodDescription() string {
	if o == nil || IsNil(o.PodDescription) {
		var ret string
		return ret
	}
	return *o.PodDescription
}

// GetPodDescriptionOk returns a tuple with the PodDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetPodDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PodDescription) {
		return nil, false
	}
	return o.PodDescription, true
}

// HasPodDescription returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasPodDescription() bool {
	if o != nil && !IsNil(o.PodDescription) {
		return true
	}

	return false
}

// SetPodDescription gets a reference to the given string and assigns it to the PodDescription field.
func (o *WorkflowActionUserDefinedField) SetPodDescription(v string) {
	o.PodDescription = &v
}

// GetFieldTypeId returns the FieldTypeId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetFieldTypeId() string {
	if o == nil || IsNil(o.FieldTypeId) {
		var ret string
		return ret
	}
	return *o.FieldTypeId
}

// GetFieldTypeIdOk returns a tuple with the FieldTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetFieldTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.FieldTypeId) {
		return nil, false
	}
	return o.FieldTypeId, true
}

// HasFieldTypeId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasFieldTypeId() bool {
	if o != nil && !IsNil(o.FieldTypeId) {
		return true
	}

	return false
}

// SetFieldTypeId gets a reference to the given string and assigns it to the FieldTypeId field.
func (o *WorkflowActionUserDefinedField) SetFieldTypeId(v string) {
	o.FieldTypeId = &v
}

// GetEntryTypeId returns the EntryTypeId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetEntryTypeId() string {
	if o == nil || IsNil(o.EntryTypeId) {
		var ret string
		return ret
	}
	return *o.EntryTypeId
}

// GetEntryTypeIdOk returns a tuple with the EntryTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetEntryTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntryTypeId) {
		return nil, false
	}
	return o.EntryTypeId, true
}

// HasEntryTypeId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasEntryTypeId() bool {
	if o != nil && !IsNil(o.EntryTypeId) {
		return true
	}

	return false
}

// SetEntryTypeId gets a reference to the given string and assigns it to the EntryTypeId field.
func (o *WorkflowActionUserDefinedField) SetEntryTypeId(v string) {
	o.EntryTypeId = &v
}

// GetRequiredFlag returns the RequiredFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowActionUserDefinedField) GetRequiredFlag() bool {
	if o == nil || IsNil(o.RequiredFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequiredFlag.Get()
}

// GetRequiredFlagOk returns a tuple with the RequiredFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowActionUserDefinedField) GetRequiredFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredFlag.Get(), o.RequiredFlag.IsSet()
}

// HasRequiredFlag returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasRequiredFlag() bool {
	if o != nil && o.RequiredFlag.IsSet() {
		return true
	}

	return false
}

// SetRequiredFlag gets a reference to the given NullableBool and assigns it to the RequiredFlag field.
func (o *WorkflowActionUserDefinedField) SetRequiredFlag(v bool) {
	o.RequiredFlag.Set(&v)
}

// SetRequiredFlagNil sets the value for RequiredFlag to be an explicit nil
func (o *WorkflowActionUserDefinedField) SetRequiredFlagNil() {
	o.RequiredFlag.Set(nil)
}

// UnsetRequiredFlag ensures that no value is present for RequiredFlag, not even an explicit nil
func (o *WorkflowActionUserDefinedField) UnsetRequiredFlag() {
	o.RequiredFlag.Unset()
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowActionUserDefinedField) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowActionUserDefinedField) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *WorkflowActionUserDefinedField) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}

// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *WorkflowActionUserDefinedField) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *WorkflowActionUserDefinedField) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetConnectWiseID returns the ConnectWiseID field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetConnectWiseID() string {
	if o == nil || IsNil(o.ConnectWiseID) {
		var ret string
		return ret
	}
	return *o.ConnectWiseID
}

// GetConnectWiseIDOk returns a tuple with the ConnectWiseID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetConnectWiseIDOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseID) {
		return nil, false
	}
	return o.ConnectWiseID, true
}

// HasConnectWiseID returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasConnectWiseID() bool {
	if o != nil && !IsNil(o.ConnectWiseID) {
		return true
	}

	return false
}

// SetConnectWiseID gets a reference to the given string and assigns it to the ConnectWiseID field.
func (o *WorkflowActionUserDefinedField) SetConnectWiseID(v string) {
	o.ConnectWiseID = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowActionUserDefinedField) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowActionUserDefinedField) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *WorkflowActionUserDefinedField) SetParentId(v int32) {
	o.ParentId.Set(&v)
}

// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *WorkflowActionUserDefinedField) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *WorkflowActionUserDefinedField) UnsetParentId() {
	o.ParentId.Unset()
}

// GetGrandParentId returns the GrandParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowActionUserDefinedField) GetGrandParentId() int32 {
	if o == nil || IsNil(o.GrandParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.GrandParentId.Get()
}

// GetGrandParentIdOk returns a tuple with the GrandParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowActionUserDefinedField) GetGrandParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrandParentId.Get(), o.GrandParentId.IsSet()
}

// HasGrandParentId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasGrandParentId() bool {
	if o != nil && o.GrandParentId.IsSet() {
		return true
	}

	return false
}

// SetGrandParentId gets a reference to the given NullableInt32 and assigns it to the GrandParentId field.
func (o *WorkflowActionUserDefinedField) SetGrandParentId(v int32) {
	o.GrandParentId.Set(&v)
}

// SetGrandParentIdNil sets the value for GrandParentId to be an explicit nil
func (o *WorkflowActionUserDefinedField) SetGrandParentIdNil() {
	o.GrandParentId.Set(nil)
}

// UnsetGrandParentId ensures that no value is present for GrandParentId, not even an explicit nil
func (o *WorkflowActionUserDefinedField) UnsetGrandParentId() {
	o.GrandParentId.Unset()
}

// GetParentConnectWiseId returns the ParentConnectWiseId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetParentConnectWiseId() string {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ParentConnectWiseId
}

// GetParentConnectWiseIdOk returns a tuple with the ParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		return nil, false
	}
	return o.ParentConnectWiseId, true
}

// HasParentConnectWiseId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasParentConnectWiseId() bool {
	if o != nil && !IsNil(o.ParentConnectWiseId) {
		return true
	}

	return false
}

// SetParentConnectWiseId gets a reference to the given string and assigns it to the ParentConnectWiseId field.
func (o *WorkflowActionUserDefinedField) SetParentConnectWiseId(v string) {
	o.ParentConnectWiseId = &v
}

// GetGrandParentConnectWiseId returns the GrandParentConnectWiseId field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetGrandParentConnectWiseId() string {
	if o == nil || IsNil(o.GrandParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.GrandParentConnectWiseId
}

// GetGrandParentConnectWiseIdOk returns a tuple with the GrandParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetGrandParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.GrandParentConnectWiseId) {
		return nil, false
	}
	return o.GrandParentConnectWiseId, true
}

// HasGrandParentConnectWiseId returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasGrandParentConnectWiseId() bool {
	if o != nil && !IsNil(o.GrandParentConnectWiseId) {
		return true
	}

	return false
}

// SetGrandParentConnectWiseId gets a reference to the given string and assigns it to the GrandParentConnectWiseId field.
func (o *WorkflowActionUserDefinedField) SetGrandParentConnectWiseId(v string) {
	o.GrandParentConnectWiseId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *WorkflowActionUserDefinedField) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowActionUserDefinedField) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *WorkflowActionUserDefinedField) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *WorkflowActionUserDefinedField) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o WorkflowActionUserDefinedField) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowActionUserDefinedField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.EventId) {
		toSerialize["eventId"] = o.EventId
	}
	if !IsNil(o.ActionId) {
		toSerialize["actionId"] = o.ActionId
	}
	if !IsNil(o.Caption) {
		toSerialize["caption"] = o.Caption
	}
	if !IsNil(o.UserDefinedFieldId) {
		toSerialize["userDefinedFieldId"] = o.UserDefinedFieldId
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if o.OverwriteFlag.IsSet() {
		toSerialize["overwriteFlag"] = o.OverwriteFlag.Get()
	}
	if !IsNil(o.PodDescription) {
		toSerialize["podDescription"] = o.PodDescription
	}
	if !IsNil(o.FieldTypeId) {
		toSerialize["fieldTypeId"] = o.FieldTypeId
	}
	if !IsNil(o.EntryTypeId) {
		toSerialize["entryTypeId"] = o.EntryTypeId
	}
	if o.RequiredFlag.IsSet() {
		toSerialize["requiredFlag"] = o.RequiredFlag.Get()
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.ConnectWiseID) {
		toSerialize["connectWiseID"] = o.ConnectWiseID
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if o.GrandParentId.IsSet() {
		toSerialize["grandParentId"] = o.GrandParentId.Get()
	}
	if !IsNil(o.ParentConnectWiseId) {
		toSerialize["parentConnectWiseId"] = o.ParentConnectWiseId
	}
	if !IsNil(o.GrandParentConnectWiseId) {
		toSerialize["grandParentConnectWiseId"] = o.GrandParentConnectWiseId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableWorkflowActionUserDefinedField struct {
	value *WorkflowActionUserDefinedField
	isSet bool
}

func (v NullableWorkflowActionUserDefinedField) Get() *WorkflowActionUserDefinedField {
	return v.value
}

func (v *NullableWorkflowActionUserDefinedField) Set(val *WorkflowActionUserDefinedField) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowActionUserDefinedField) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowActionUserDefinedField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowActionUserDefinedField(val *WorkflowActionUserDefinedField) *NullableWorkflowActionUserDefinedField {
	return &NullableWorkflowActionUserDefinedField{value: val, isSet: true}
}

func (v NullableWorkflowActionUserDefinedField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowActionUserDefinedField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
