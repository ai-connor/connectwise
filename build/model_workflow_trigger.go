/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the WorkflowTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowTrigger{}

// WorkflowTrigger struct for WorkflowTrigger
type WorkflowTrigger struct {
	Id                  *int32                     `json:"id,omitempty"`
	Name                *string                    `json:"name,omitempty"`
	Description         *string                    `json:"description,omitempty"`
	HasOptionsFlag      NullableBool               `json:"hasOptionsFlag,omitempty"`
	HasOperatorFlag     NullableBool               `json:"hasOperatorFlag,omitempty"`
	CustomField         *UserDefinedFieldReference `json:"customField,omitempty"`
	ExpectedType        *string                    `json:"expectedType,omitempty"`
	ConnectWiseID       *string                    `json:"connectWiseID,omitempty"`
	ParentId            NullableInt32              `json:"parentId,omitempty"`
	ParentConnectWiseId *string                    `json:"parentConnectWiseId,omitempty"`
	Info                *map[string]string         `json:"_info,omitempty"`
}

// NewWorkflowTrigger instantiates a new WorkflowTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTrigger() *WorkflowTrigger {
	this := WorkflowTrigger{}
	return &this
}

// NewWorkflowTriggerWithDefaults instantiates a new WorkflowTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTriggerWithDefaults() *WorkflowTrigger {
	this := WorkflowTrigger{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WorkflowTrigger) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowTrigger) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkflowTrigger) SetDescription(v string) {
	o.Description = &v
}

// GetHasOptionsFlag returns the HasOptionsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTrigger) GetHasOptionsFlag() bool {
	if o == nil || IsNil(o.HasOptionsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HasOptionsFlag.Get()
}

// GetHasOptionsFlagOk returns a tuple with the HasOptionsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTrigger) GetHasOptionsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasOptionsFlag.Get(), o.HasOptionsFlag.IsSet()
}

// HasHasOptionsFlag returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasHasOptionsFlag() bool {
	if o != nil && o.HasOptionsFlag.IsSet() {
		return true
	}

	return false
}

// SetHasOptionsFlag gets a reference to the given NullableBool and assigns it to the HasOptionsFlag field.
func (o *WorkflowTrigger) SetHasOptionsFlag(v bool) {
	o.HasOptionsFlag.Set(&v)
}

// SetHasOptionsFlagNil sets the value for HasOptionsFlag to be an explicit nil
func (o *WorkflowTrigger) SetHasOptionsFlagNil() {
	o.HasOptionsFlag.Set(nil)
}

// UnsetHasOptionsFlag ensures that no value is present for HasOptionsFlag, not even an explicit nil
func (o *WorkflowTrigger) UnsetHasOptionsFlag() {
	o.HasOptionsFlag.Unset()
}

// GetHasOperatorFlag returns the HasOperatorFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTrigger) GetHasOperatorFlag() bool {
	if o == nil || IsNil(o.HasOperatorFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HasOperatorFlag.Get()
}

// GetHasOperatorFlagOk returns a tuple with the HasOperatorFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTrigger) GetHasOperatorFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasOperatorFlag.Get(), o.HasOperatorFlag.IsSet()
}

// HasHasOperatorFlag returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasHasOperatorFlag() bool {
	if o != nil && o.HasOperatorFlag.IsSet() {
		return true
	}

	return false
}

// SetHasOperatorFlag gets a reference to the given NullableBool and assigns it to the HasOperatorFlag field.
func (o *WorkflowTrigger) SetHasOperatorFlag(v bool) {
	o.HasOperatorFlag.Set(&v)
}

// SetHasOperatorFlagNil sets the value for HasOperatorFlag to be an explicit nil
func (o *WorkflowTrigger) SetHasOperatorFlagNil() {
	o.HasOperatorFlag.Set(nil)
}

// UnsetHasOperatorFlag ensures that no value is present for HasOperatorFlag, not even an explicit nil
func (o *WorkflowTrigger) UnsetHasOperatorFlag() {
	o.HasOperatorFlag.Unset()
}

// GetCustomField returns the CustomField field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetCustomField() UserDefinedFieldReference {
	if o == nil || IsNil(o.CustomField) {
		var ret UserDefinedFieldReference
		return ret
	}
	return *o.CustomField
}

// GetCustomFieldOk returns a tuple with the CustomField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetCustomFieldOk() (*UserDefinedFieldReference, bool) {
	if o == nil || IsNil(o.CustomField) {
		return nil, false
	}
	return o.CustomField, true
}

// HasCustomField returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasCustomField() bool {
	if o != nil && !IsNil(o.CustomField) {
		return true
	}

	return false
}

// SetCustomField gets a reference to the given UserDefinedFieldReference and assigns it to the CustomField field.
func (o *WorkflowTrigger) SetCustomField(v UserDefinedFieldReference) {
	o.CustomField = &v
}

// GetExpectedType returns the ExpectedType field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetExpectedType() string {
	if o == nil || IsNil(o.ExpectedType) {
		var ret string
		return ret
	}
	return *o.ExpectedType
}

// GetExpectedTypeOk returns a tuple with the ExpectedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetExpectedTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedType) {
		return nil, false
	}
	return o.ExpectedType, true
}

// HasExpectedType returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasExpectedType() bool {
	if o != nil && !IsNil(o.ExpectedType) {
		return true
	}

	return false
}

// SetExpectedType gets a reference to the given string and assigns it to the ExpectedType field.
func (o *WorkflowTrigger) SetExpectedType(v string) {
	o.ExpectedType = &v
}

// GetConnectWiseID returns the ConnectWiseID field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetConnectWiseID() string {
	if o == nil || IsNil(o.ConnectWiseID) {
		var ret string
		return ret
	}
	return *o.ConnectWiseID
}

// GetConnectWiseIDOk returns a tuple with the ConnectWiseID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetConnectWiseIDOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseID) {
		return nil, false
	}
	return o.ConnectWiseID, true
}

// HasConnectWiseID returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasConnectWiseID() bool {
	if o != nil && !IsNil(o.ConnectWiseID) {
		return true
	}

	return false
}

// SetConnectWiseID gets a reference to the given string and assigns it to the ConnectWiseID field.
func (o *WorkflowTrigger) SetConnectWiseID(v string) {
	o.ConnectWiseID = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTrigger) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTrigger) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *WorkflowTrigger) SetParentId(v int32) {
	o.ParentId.Set(&v)
}

// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *WorkflowTrigger) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *WorkflowTrigger) UnsetParentId() {
	o.ParentId.Unset()
}

// GetParentConnectWiseId returns the ParentConnectWiseId field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetParentConnectWiseId() string {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ParentConnectWiseId
}

// GetParentConnectWiseIdOk returns a tuple with the ParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		return nil, false
	}
	return o.ParentConnectWiseId, true
}

// HasParentConnectWiseId returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasParentConnectWiseId() bool {
	if o != nil && !IsNil(o.ParentConnectWiseId) {
		return true
	}

	return false
}

// SetParentConnectWiseId gets a reference to the given string and assigns it to the ParentConnectWiseId field.
func (o *WorkflowTrigger) SetParentConnectWiseId(v string) {
	o.ParentConnectWiseId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *WorkflowTrigger) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *WorkflowTrigger) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *WorkflowTrigger) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o WorkflowTrigger) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.HasOptionsFlag.IsSet() {
		toSerialize["hasOptionsFlag"] = o.HasOptionsFlag.Get()
	}
	if o.HasOperatorFlag.IsSet() {
		toSerialize["hasOperatorFlag"] = o.HasOperatorFlag.Get()
	}
	if !IsNil(o.CustomField) {
		toSerialize["customField"] = o.CustomField
	}
	if !IsNil(o.ExpectedType) {
		toSerialize["expectedType"] = o.ExpectedType
	}
	if !IsNil(o.ConnectWiseID) {
		toSerialize["connectWiseID"] = o.ConnectWiseID
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if !IsNil(o.ParentConnectWiseId) {
		toSerialize["parentConnectWiseId"] = o.ParentConnectWiseId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableWorkflowTrigger struct {
	value *WorkflowTrigger
	isSet bool
}

func (v NullableWorkflowTrigger) Get() *WorkflowTrigger {
	return v.value
}

func (v *NullableWorkflowTrigger) Set(val *WorkflowTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTrigger(val *WorkflowTrigger) *NullableWorkflowTrigger {
	return &NullableWorkflowTrigger{value: val, isSet: true}
}

func (v NullableWorkflowTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
