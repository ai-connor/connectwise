/*
Connectwise Manage Public Endpoints

Testing AgreementAdditionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_AgreementAdditionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AgreementAdditionsAPIService DeleteFinanceAgreementsByParentIdAdditionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		httpRes, err := apiClient.AgreementAdditionsAPI.DeleteFinanceAgreementsByParentIdAdditionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgreementAdditionsAPIService GetFinanceAgreementsByParentIdAdditions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.AgreementAdditionsAPI.GetFinanceAgreementsByParentIdAdditions(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgreementAdditionsAPIService GetFinanceAgreementsByParentIdAdditionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.AgreementAdditionsAPI.GetFinanceAgreementsByParentIdAdditionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgreementAdditionsAPIService GetFinanceAgreementsByParentIdAdditionsCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.AgreementAdditionsAPI.GetFinanceAgreementsByParentIdAdditionsCount(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgreementAdditionsAPIService PatchFinanceAgreementsByParentIdAdditionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.AgreementAdditionsAPI.PatchFinanceAgreementsByParentIdAdditionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgreementAdditionsAPIService PostFinanceAgreementsByParentIdAdditions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.AgreementAdditionsAPI.PostFinanceAgreementsByParentIdAdditions(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgreementAdditionsAPIService PutFinanceAgreementsByParentIdAdditionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.AgreementAdditionsAPI.PutFinanceAgreementsByParentIdAdditionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
