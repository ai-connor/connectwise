/*
Connectwise Manage Public Endpoints

Testing ConfigurationTypeQuestionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_ConfigurationTypeQuestionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ConfigurationTypeQuestionsAPIService DeleteCompanyConfigurationsTypesByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.DeleteCompanyConfigurationsTypesByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigurationTypeQuestionsAPIService GetCompanyConfigurationsTypesByParentIdQuestions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.GetCompanyConfigurationsTypesByParentIdQuestions(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigurationTypeQuestionsAPIService GetCompanyConfigurationsTypesByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.GetCompanyConfigurationsTypesByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigurationTypeQuestionsAPIService GetCompanyConfigurationsTypesByParentIdQuestionsCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.GetCompanyConfigurationsTypesByParentIdQuestionsCount(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigurationTypeQuestionsAPIService PatchCompanyConfigurationsTypesByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.PatchCompanyConfigurationsTypesByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigurationTypeQuestionsAPIService PostCompanyConfigurationsTypesByParentIdQuestions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.PostCompanyConfigurationsTypesByParentIdQuestions(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigurationTypeQuestionsAPIService PutCompanyConfigurationsTypesByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ConfigurationTypeQuestionsAPI.PutCompanyConfigurationsTypesByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
