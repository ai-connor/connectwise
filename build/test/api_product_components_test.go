/*
Connectwise Manage Public Endpoints

Testing ProductComponentsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_ProductComponentsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProductComponentsAPIService DeleteProcurementProductsByParentIdComponentsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		httpRes, err := apiClient.ProductComponentsAPI.DeleteProcurementProductsByParentIdComponentsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductComponentsAPIService GetProcurementProductsByParentIdComponents", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ProductComponentsAPI.GetProcurementProductsByParentIdComponents(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductComponentsAPIService GetProcurementProductsByParentIdComponentsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ProductComponentsAPI.GetProcurementProductsByParentIdComponentsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductComponentsAPIService GetProcurementProductsByParentIdComponentsCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ProductComponentsAPI.GetProcurementProductsByParentIdComponentsCount(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductComponentsAPIService PatchProcurementProductsByParentIdComponentsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ProductComponentsAPI.PatchProcurementProductsByParentIdComponentsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductComponentsAPIService PostProcurementProductsByParentIdComponents", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ProductComponentsAPI.PostProcurementProductsByParentIdComponents(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductComponentsAPIService PutProcurementProductsByParentIdComponentsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ProductComponentsAPI.PutProcurementProductsByParentIdComponentsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
