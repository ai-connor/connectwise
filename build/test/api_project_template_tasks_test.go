/*
Connectwise Manage Public Endpoints

Testing ProjectTemplateTasksAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_ProjectTemplateTasksAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProjectTemplateTasksAPIService DeleteProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var grandParentId int32
		var parentId int32

		httpRes, err := apiClient.ProjectTemplateTasksAPI.DeleteProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById(context.Background(), id, grandParentId, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService GetProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasks", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var grandParentId int32
		var parentId int32

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.GetProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasks(context.Background(), grandParentId, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService GetProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var grandParentId int32
		var parentId int32

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.GetProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById(context.Background(), id, grandParentId, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService GetProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var grandParentId int32
		var parentId int32

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.GetProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksCount(context.Background(), grandParentId, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService GetProjectProjectTemplatesProjectTemplateTicketsTasks", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.GetProjectProjectTemplatesProjectTemplateTicketsTasks(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService PatchProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var grandParentId int32
		var parentId int32

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.PatchProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById(context.Background(), id, grandParentId, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService PostProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasks", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var grandParentId int32
		var parentId int32

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.PostProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasks(context.Background(), grandParentId, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectTemplateTasksAPIService PutProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var grandParentId int32
		var parentId int32

		resp, httpRes, err := apiClient.ProjectTemplateTasksAPI.PutProjectProjectTemplatesByGrandParentIdProjectTemplateTicketsByParentIdTasksById(context.Background(), id, grandParentId, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
