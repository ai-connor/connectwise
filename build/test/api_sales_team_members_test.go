/*
Connectwise Manage Public Endpoints

Testing SalesTeamMembersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_SalesTeamMembersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SalesTeamMembersAPIService DeleteSalesSalesTeamsByParentIdMembersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		httpRes, err := apiClient.SalesTeamMembersAPI.DeleteSalesSalesTeamsByParentIdMembersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SalesTeamMembersAPIService GetSalesSalesTeamsByParentIdMembers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.SalesTeamMembersAPI.GetSalesSalesTeamsByParentIdMembers(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SalesTeamMembersAPIService GetSalesSalesTeamsByParentIdMembersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.SalesTeamMembersAPI.GetSalesSalesTeamsByParentIdMembersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SalesTeamMembersAPIService GetSalesSalesTeamsByParentIdMembersCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.SalesTeamMembersAPI.GetSalesSalesTeamsByParentIdMembersCount(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SalesTeamMembersAPIService PatchSalesSalesTeamsByParentIdMembersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.SalesTeamMembersAPI.PatchSalesSalesTeamsByParentIdMembersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SalesTeamMembersAPIService PostSalesSalesTeamsByParentIdMembers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.SalesTeamMembersAPI.PostSalesSalesTeamsByParentIdMembers(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SalesTeamMembersAPIService PutSalesSalesTeamsByParentIdMembersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.SalesTeamMembersAPI.PutSalesSalesTeamsByParentIdMembersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
