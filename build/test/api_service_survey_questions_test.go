/*
Connectwise Manage Public Endpoints

Testing ServiceSurveyQuestionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_ServiceSurveyQuestionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ServiceSurveyQuestionsAPIService DeleteServiceSurveysByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		httpRes, err := apiClient.ServiceSurveyQuestionsAPI.DeleteServiceSurveysByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService GetServiceSurveysByParentIdQuestions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.GetServiceSurveysByParentIdQuestions(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService GetServiceSurveysByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.GetServiceSurveysByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService GetServiceSurveysByParentIdQuestionsCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.GetServiceSurveysByParentIdQuestionsCount(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService PatchServiceSurveysByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.PatchServiceSurveysByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService PostServiceSurveysByParentIdQuestions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.PostServiceSurveysByParentIdQuestions(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService PostServiceSurveysByParentIdQuestionsByIdCopy", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.PostServiceSurveysByParentIdQuestionsByIdCopy(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServiceSurveyQuestionsAPIService PutServiceSurveysByParentIdQuestionsById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.ServiceSurveyQuestionsAPI.PutServiceSurveysByParentIdQuestionsById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
