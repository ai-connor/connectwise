/*
Connectwise Manage Public Endpoints

Testing WorkflowActionAutomateParametersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cwapi

import (
	"context"
	openapiclient "github.com/ai-connor/connectwise"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_cwapi_WorkflowActionAutomateParametersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test WorkflowActionAutomateParametersAPIService DeleteSystemWorkflowActionsByParentIdAutomateParametersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.DeleteSystemWorkflowActionsByParentIdAutomateParametersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService GetSystemWorkflowActionsAutomateParameters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.GetSystemWorkflowActionsAutomateParameters(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService GetSystemWorkflowActionsAutomateParametersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.GetSystemWorkflowActionsAutomateParametersById(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService GetSystemWorkflowActionsByParentIdAutomateParameters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.GetSystemWorkflowActionsByParentIdAutomateParameters(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService GetSystemWorkflowActionsByParentIdAutomateParametersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.GetSystemWorkflowActionsByParentIdAutomateParametersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService GetSystemWorkflowActionsByParentIdAutomateParametersCount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.GetSystemWorkflowActionsByParentIdAutomateParametersCount(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService PatchSystemWorkflowActionsByParentIdAutomateParametersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.PatchSystemWorkflowActionsByParentIdAutomateParametersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService PostSystemWorkflowActionsByParentIdAutomateParameters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parentId int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.PostSystemWorkflowActionsByParentIdAutomateParameters(context.Background(), parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WorkflowActionAutomateParametersAPIService PutSystemWorkflowActionsByParentIdAutomateParametersById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32
		var parentId int32

		resp, httpRes, err := apiClient.WorkflowActionAutomateParametersAPI.PutSystemWorkflowActionsByParentIdAutomateParametersById(context.Background(), id, parentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
