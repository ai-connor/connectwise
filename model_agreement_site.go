/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AgreementSite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgreementSite{}

// AgreementSite struct for AgreementSite
type AgreementSite struct {
	Id *int32 `json:"id,omitempty"`
	Company CompanyReference `json:"company"`
	Site *SiteReference `json:"site,omitempty"`
	AgreementId NullableInt32 `json:"agreementId,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
	CustomFields []CustomFieldValue `json:"customFields,omitempty"`
}

type _AgreementSite AgreementSite

// NewAgreementSite instantiates a new AgreementSite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgreementSite(company CompanyReference) *AgreementSite {
	this := AgreementSite{}
	this.Company = company
	return &this
}

// NewAgreementSiteWithDefaults instantiates a new AgreementSite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgreementSiteWithDefaults() *AgreementSite {
	this := AgreementSite{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AgreementSite) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementSite) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AgreementSite) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AgreementSite) SetId(v int32) {
	o.Id = &v
}

// GetCompany returns the Company field value
func (o *AgreementSite) GetCompany() CompanyReference {
	if o == nil {
		var ret CompanyReference
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *AgreementSite) GetCompanyOk() (*CompanyReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *AgreementSite) SetCompany(v CompanyReference) {
	o.Company = v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *AgreementSite) GetSite() SiteReference {
	if o == nil || IsNil(o.Site) {
		var ret SiteReference
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementSite) GetSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *AgreementSite) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given SiteReference and assigns it to the Site field.
func (o *AgreementSite) SetSite(v SiteReference) {
	o.Site = &v
}

// GetAgreementId returns the AgreementId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgreementSite) GetAgreementId() int32 {
	if o == nil || IsNil(o.AgreementId.Get()) {
		var ret int32
		return ret
	}
	return *o.AgreementId.Get()
}

// GetAgreementIdOk returns a tuple with the AgreementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgreementSite) GetAgreementIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementId.Get(), o.AgreementId.IsSet()
}

// HasAgreementId returns a boolean if a field has been set.
func (o *AgreementSite) HasAgreementId() bool {
	if o != nil && o.AgreementId.IsSet() {
		return true
	}

	return false
}

// SetAgreementId gets a reference to the given NullableInt32 and assigns it to the AgreementId field.
func (o *AgreementSite) SetAgreementId(v int32) {
	o.AgreementId.Set(&v)
}
// SetAgreementIdNil sets the value for AgreementId to be an explicit nil
func (o *AgreementSite) SetAgreementIdNil() {
	o.AgreementId.Set(nil)
}

// UnsetAgreementId ensures that no value is present for AgreementId, not even an explicit nil
func (o *AgreementSite) UnsetAgreementId() {
	o.AgreementId.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *AgreementSite) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementSite) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *AgreementSite) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *AgreementSite) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *AgreementSite) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementSite) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *AgreementSite) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *AgreementSite) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o AgreementSite) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgreementSite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["company"] = o.Company
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if o.AgreementId.IsSet() {
		toSerialize["agreementId"] = o.AgreementId.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *AgreementSite) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"company",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgreementSite := _AgreementSite{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAgreementSite)

	if err != nil {
		return err
	}

	*o = AgreementSite(varAgreementSite)

	return err
}

type NullableAgreementSite struct {
	value *AgreementSite
	isSet bool
}

func (v NullableAgreementSite) Get() *AgreementSite {
	return v.value
}

func (v *NullableAgreementSite) Set(val *AgreementSite) {
	v.value = val
	v.isSet = true
}

func (v NullableAgreementSite) IsSet() bool {
	return v.isSet
}

func (v *NullableAgreementSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgreementSite(val *AgreementSite) *NullableAgreementSite {
	return &NullableAgreementSite{value: val, isSet: true}
}

func (v NullableAgreementSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgreementSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


