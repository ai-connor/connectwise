/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the BillableOptionsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillableOptionsInfo{}

// BillableOptionsInfo struct for BillableOptionsInfo
type BillableOptionsInfo struct {
	Id *int32 `json:"id,omitempty"`
	OptionId *string `json:"optionId,omitempty"`
	BillableFlag *bool `json:"billableFlag,omitempty"`
	InvoiceFlag *bool `json:"invoiceFlag,omitempty"`
	TimeFlag *bool `json:"timeFlag,omitempty"`
	ExpenseFlag *bool `json:"expenseFlag,omitempty"`
	ProductFlag *bool `json:"productFlag,omitempty"`
	DefaultFlag *bool `json:"defaultFlag,omitempty"`
	IncludeNoDefaultFlag *bool `json:"includeNoDefaultFlag,omitempty"`
	Name *string `json:"name,omitempty"`
	EnumId *string `json:"enumId,omitempty"`
}

// NewBillableOptionsInfo instantiates a new BillableOptionsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillableOptionsInfo() *BillableOptionsInfo {
	this := BillableOptionsInfo{}
	return &this
}

// NewBillableOptionsInfoWithDefaults instantiates a new BillableOptionsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillableOptionsInfoWithDefaults() *BillableOptionsInfo {
	this := BillableOptionsInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BillableOptionsInfo) SetId(v int32) {
	o.Id = &v
}

// GetOptionId returns the OptionId field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetOptionId() string {
	if o == nil || IsNil(o.OptionId) {
		var ret string
		return ret
	}
	return *o.OptionId
}

// GetOptionIdOk returns a tuple with the OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetOptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.OptionId) {
		return nil, false
	}
	return o.OptionId, true
}

// HasOptionId returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasOptionId() bool {
	if o != nil && !IsNil(o.OptionId) {
		return true
	}

	return false
}

// SetOptionId gets a reference to the given string and assigns it to the OptionId field.
func (o *BillableOptionsInfo) SetOptionId(v string) {
	o.OptionId = &v
}

// GetBillableFlag returns the BillableFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetBillableFlag() bool {
	if o == nil || IsNil(o.BillableFlag) {
		var ret bool
		return ret
	}
	return *o.BillableFlag
}

// GetBillableFlagOk returns a tuple with the BillableFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetBillableFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.BillableFlag) {
		return nil, false
	}
	return o.BillableFlag, true
}

// HasBillableFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasBillableFlag() bool {
	if o != nil && !IsNil(o.BillableFlag) {
		return true
	}

	return false
}

// SetBillableFlag gets a reference to the given bool and assigns it to the BillableFlag field.
func (o *BillableOptionsInfo) SetBillableFlag(v bool) {
	o.BillableFlag = &v
}

// GetInvoiceFlag returns the InvoiceFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetInvoiceFlag() bool {
	if o == nil || IsNil(o.InvoiceFlag) {
		var ret bool
		return ret
	}
	return *o.InvoiceFlag
}

// GetInvoiceFlagOk returns a tuple with the InvoiceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetInvoiceFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.InvoiceFlag) {
		return nil, false
	}
	return o.InvoiceFlag, true
}

// HasInvoiceFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasInvoiceFlag() bool {
	if o != nil && !IsNil(o.InvoiceFlag) {
		return true
	}

	return false
}

// SetInvoiceFlag gets a reference to the given bool and assigns it to the InvoiceFlag field.
func (o *BillableOptionsInfo) SetInvoiceFlag(v bool) {
	o.InvoiceFlag = &v
}

// GetTimeFlag returns the TimeFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetTimeFlag() bool {
	if o == nil || IsNil(o.TimeFlag) {
		var ret bool
		return ret
	}
	return *o.TimeFlag
}

// GetTimeFlagOk returns a tuple with the TimeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetTimeFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.TimeFlag) {
		return nil, false
	}
	return o.TimeFlag, true
}

// HasTimeFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasTimeFlag() bool {
	if o != nil && !IsNil(o.TimeFlag) {
		return true
	}

	return false
}

// SetTimeFlag gets a reference to the given bool and assigns it to the TimeFlag field.
func (o *BillableOptionsInfo) SetTimeFlag(v bool) {
	o.TimeFlag = &v
}

// GetExpenseFlag returns the ExpenseFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetExpenseFlag() bool {
	if o == nil || IsNil(o.ExpenseFlag) {
		var ret bool
		return ret
	}
	return *o.ExpenseFlag
}

// GetExpenseFlagOk returns a tuple with the ExpenseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetExpenseFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpenseFlag) {
		return nil, false
	}
	return o.ExpenseFlag, true
}

// HasExpenseFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasExpenseFlag() bool {
	if o != nil && !IsNil(o.ExpenseFlag) {
		return true
	}

	return false
}

// SetExpenseFlag gets a reference to the given bool and assigns it to the ExpenseFlag field.
func (o *BillableOptionsInfo) SetExpenseFlag(v bool) {
	o.ExpenseFlag = &v
}

// GetProductFlag returns the ProductFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetProductFlag() bool {
	if o == nil || IsNil(o.ProductFlag) {
		var ret bool
		return ret
	}
	return *o.ProductFlag
}

// GetProductFlagOk returns a tuple with the ProductFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetProductFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ProductFlag) {
		return nil, false
	}
	return o.ProductFlag, true
}

// HasProductFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasProductFlag() bool {
	if o != nil && !IsNil(o.ProductFlag) {
		return true
	}

	return false
}

// SetProductFlag gets a reference to the given bool and assigns it to the ProductFlag field.
func (o *BillableOptionsInfo) SetProductFlag(v bool) {
	o.ProductFlag = &v
}

// GetDefaultFlag returns the DefaultFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetDefaultFlag() bool {
	if o == nil || IsNil(o.DefaultFlag) {
		var ret bool
		return ret
	}
	return *o.DefaultFlag
}

// GetDefaultFlagOk returns a tuple with the DefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetDefaultFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultFlag) {
		return nil, false
	}
	return o.DefaultFlag, true
}

// HasDefaultFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasDefaultFlag() bool {
	if o != nil && !IsNil(o.DefaultFlag) {
		return true
	}

	return false
}

// SetDefaultFlag gets a reference to the given bool and assigns it to the DefaultFlag field.
func (o *BillableOptionsInfo) SetDefaultFlag(v bool) {
	o.DefaultFlag = &v
}

// GetIncludeNoDefaultFlag returns the IncludeNoDefaultFlag field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetIncludeNoDefaultFlag() bool {
	if o == nil || IsNil(o.IncludeNoDefaultFlag) {
		var ret bool
		return ret
	}
	return *o.IncludeNoDefaultFlag
}

// GetIncludeNoDefaultFlagOk returns a tuple with the IncludeNoDefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetIncludeNoDefaultFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeNoDefaultFlag) {
		return nil, false
	}
	return o.IncludeNoDefaultFlag, true
}

// HasIncludeNoDefaultFlag returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasIncludeNoDefaultFlag() bool {
	if o != nil && !IsNil(o.IncludeNoDefaultFlag) {
		return true
	}

	return false
}

// SetIncludeNoDefaultFlag gets a reference to the given bool and assigns it to the IncludeNoDefaultFlag field.
func (o *BillableOptionsInfo) SetIncludeNoDefaultFlag(v bool) {
	o.IncludeNoDefaultFlag = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BillableOptionsInfo) SetName(v string) {
	o.Name = &v
}

// GetEnumId returns the EnumId field value if set, zero value otherwise.
func (o *BillableOptionsInfo) GetEnumId() string {
	if o == nil || IsNil(o.EnumId) {
		var ret string
		return ret
	}
	return *o.EnumId
}

// GetEnumIdOk returns a tuple with the EnumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableOptionsInfo) GetEnumIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnumId) {
		return nil, false
	}
	return o.EnumId, true
}

// HasEnumId returns a boolean if a field has been set.
func (o *BillableOptionsInfo) HasEnumId() bool {
	if o != nil && !IsNil(o.EnumId) {
		return true
	}

	return false
}

// SetEnumId gets a reference to the given string and assigns it to the EnumId field.
func (o *BillableOptionsInfo) SetEnumId(v string) {
	o.EnumId = &v
}

func (o BillableOptionsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillableOptionsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OptionId) {
		toSerialize["optionId"] = o.OptionId
	}
	if !IsNil(o.BillableFlag) {
		toSerialize["billableFlag"] = o.BillableFlag
	}
	if !IsNil(o.InvoiceFlag) {
		toSerialize["invoiceFlag"] = o.InvoiceFlag
	}
	if !IsNil(o.TimeFlag) {
		toSerialize["timeFlag"] = o.TimeFlag
	}
	if !IsNil(o.ExpenseFlag) {
		toSerialize["expenseFlag"] = o.ExpenseFlag
	}
	if !IsNil(o.ProductFlag) {
		toSerialize["productFlag"] = o.ProductFlag
	}
	if !IsNil(o.DefaultFlag) {
		toSerialize["defaultFlag"] = o.DefaultFlag
	}
	if !IsNil(o.IncludeNoDefaultFlag) {
		toSerialize["includeNoDefaultFlag"] = o.IncludeNoDefaultFlag
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EnumId) {
		toSerialize["enumId"] = o.EnumId
	}
	return toSerialize, nil
}

type NullableBillableOptionsInfo struct {
	value *BillableOptionsInfo
	isSet bool
}

func (v NullableBillableOptionsInfo) Get() *BillableOptionsInfo {
	return v.value
}

func (v *NullableBillableOptionsInfo) Set(val *BillableOptionsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBillableOptionsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBillableOptionsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillableOptionsInfo(val *BillableOptionsInfo) *NullableBillableOptionsInfo {
	return &NullableBillableOptionsInfo{value: val, isSet: true}
}

func (v NullableBillableOptionsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillableOptionsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


