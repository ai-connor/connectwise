/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingSetup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingSetup{}

// BillingSetup struct for BillingSetup
type BillingSetup struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 50;
	RemitName string `json:"remitName"`
	Location SystemLocationReference `json:"location"`
	//  Max length: 50;
	AddressOne *string `json:"addressOne,omitempty"`
	//  Max length: 50;
	AddressTwo *string `json:"addressTwo,omitempty"`
	//  Max length: 50;
	City *string `json:"city,omitempty"`
	State *StateReference `json:"state,omitempty"`
	//  Max length: 12;
	Zip *string `json:"zip,omitempty"`
	Country *CountryReference `json:"country,omitempty"`
	//  Max length: 15;
	Phone *string `json:"phone,omitempty"`
	//  Max length: 50;
	InvoiceTitle string `json:"invoiceTitle"`
	//  Max length: 50;
	PayableName string `json:"payableName"`
	//  Max length: 4000;
	Topcomment *string `json:"topcomment,omitempty"`
	//  Max length: 500;
	InvoiceFooter *string `json:"invoiceFooter,omitempty"`
	//  Max length: 1000;
	QuoteFooter *string `json:"quoteFooter,omitempty"`
	OverallInvoiceDefault InvoiceTemplateReference `json:"overallInvoiceDefault"`
	StandardInvoiceActual *InvoiceTemplateReference `json:"standardInvoiceActual,omitempty"`
	StandardInvoiceFixed *InvoiceTemplateReference `json:"standardInvoiceFixed,omitempty"`
	ProgressInvoice *InvoiceTemplateReference `json:"progressInvoice,omitempty"`
	AgreementInvoice *InvoiceTemplateReference `json:"agreementInvoice,omitempty"`
	CreditMemoInvoice *InvoiceTemplateReference `json:"creditMemoInvoice,omitempty"`
	DownPaymentInvoice *InvoiceTemplateReference `json:"downPaymentInvoice,omitempty"`
	MiscInvoice *InvoiceTemplateReference `json:"miscInvoice,omitempty"`
	SalesOrderInvoice *InvoiceTemplateReference `json:"salesOrderInvoice,omitempty"`
	ExcludeDoNotBillTimeFlag NullableBool `json:"excludeDoNotBillTimeFlag,omitempty"`
	ExcludeDoNotBillExpenseFlag NullableBool `json:"excludeDoNotBillExpenseFlag,omitempty"`
	ExcludeDoNotBillProductFlag NullableBool `json:"excludeDoNotBillProductFlag,omitempty"`
	PrefixSuffixFlag NullableString `json:"prefixSuffixFlag,omitempty"`
	//  Max length: 5;
	PrefixSuffixText *string `json:"prefixSuffixText,omitempty"`
	ChargeAdjToFirmFlag NullableBool `json:"chargeAdjToFirmFlag,omitempty"`
	NoWatermarkFlag NullableBool `json:"noWatermarkFlag,omitempty"`
	DisplayTaxFlag NullableBool `json:"displayTaxFlag,omitempty"`
	AllowRestrictedDeptOnRoutingFlag NullableBool `json:"allowRestrictedDeptOnRoutingFlag,omitempty"`
	BillTicketSeparatelyFlag NullableBool `json:"billTicketSeparatelyFlag,omitempty"`
	BillTicketCompleteFlag NullableBool `json:"billTicketCompleteFlag,omitempty"`
	BillTicketUnapprovedFlag NullableBool `json:"billTicketUnapprovedFlag,omitempty"`
	BillProjectCompleteFlag NullableBool `json:"billProjectCompleteFlag,omitempty"`
	BillProjectUnapprovedFlag NullableBool `json:"billProjectUnapprovedFlag,omitempty"`
	ProgressTimeFlag NullableBool `json:"progressTimeFlag,omitempty"`
	RestrictProjectDownpaymentFlag NullableBool `json:"restrictProjectDownpaymentFlag,omitempty"`
	BillSalesOrderCompleteFlag NullableBool `json:"billSalesOrderCompleteFlag,omitempty"`
	BillProductAfterShipFlag NullableBool `json:"billProductAfterShipFlag,omitempty"`
	RestrictDownpaymentFlag NullableBool `json:"restrictDownpaymentFlag,omitempty"`
	CopyNonServiceProductsFlag NullableBool `json:"copyNonServiceProductsFlag,omitempty"`
	CopyServiceProductsFlag NullableBool `json:"copyServiceProductsFlag,omitempty"`
	CopyAgreementProductsFlag NullableBool `json:"copyAgreementProductsFlag,omitempty"`
	PrintLogoFlag NullableBool `json:"printLogoFlag,omitempty"`
	ReadReceiptFlag NullableBool `json:"readReceiptFlag,omitempty"`
	DeliveryReceiptFlag NullableBool `json:"deliveryReceiptFlag,omitempty"`
	AttachXmlInvoiceFlag NullableBool `json:"attachXmlInvoiceFlag,omitempty"`
	DisableRoutingEmailFlag NullableBool `json:"disableRoutingEmailFlag,omitempty"`
	EmailTemplate EmailTemplateReference `json:"emailTemplate"`
	LocalizedCountry *CountryReference `json:"localizedCountry,omitempty"`
	//  Max length: 50;
	BusinessNumber *string `json:"businessNumber,omitempty"`
	Currency *CurrencyReference `json:"currency,omitempty"`
	//  Max length: 50;
	CustomLabel *string `json:"customLabel,omitempty"`
	//  Max length: 500;
	CustomText *string `json:"customText,omitempty"`
	//  Max length: 250;
	CompanyCode *string `json:"companyCode,omitempty"`
	ExcludeAvalaraFlag NullableBool `json:"excludeAvalaraFlag,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _BillingSetup BillingSetup

// NewBillingSetup instantiates a new BillingSetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingSetup(remitName string, location SystemLocationReference, invoiceTitle string, payableName string, overallInvoiceDefault InvoiceTemplateReference, emailTemplate EmailTemplateReference) *BillingSetup {
	this := BillingSetup{}
	this.RemitName = remitName
	this.Location = location
	this.InvoiceTitle = invoiceTitle
	this.PayableName = payableName
	this.OverallInvoiceDefault = overallInvoiceDefault
	this.EmailTemplate = emailTemplate
	return &this
}

// NewBillingSetupWithDefaults instantiates a new BillingSetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingSetupWithDefaults() *BillingSetup {
	this := BillingSetup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BillingSetup) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BillingSetup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BillingSetup) SetId(v int32) {
	o.Id = &v
}

// GetRemitName returns the RemitName field value
func (o *BillingSetup) GetRemitName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemitName
}

// GetRemitNameOk returns a tuple with the RemitName field value
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetRemitNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemitName, true
}

// SetRemitName sets field value
func (o *BillingSetup) SetRemitName(v string) {
	o.RemitName = v
}

// GetLocation returns the Location field value
func (o *BillingSetup) GetLocation() SystemLocationReference {
	if o == nil {
		var ret SystemLocationReference
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetLocationOk() (*SystemLocationReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *BillingSetup) SetLocation(v SystemLocationReference) {
	o.Location = v
}

// GetAddressOne returns the AddressOne field value if set, zero value otherwise.
func (o *BillingSetup) GetAddressOne() string {
	if o == nil || IsNil(o.AddressOne) {
		var ret string
		return ret
	}
	return *o.AddressOne
}

// GetAddressOneOk returns a tuple with the AddressOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetAddressOneOk() (*string, bool) {
	if o == nil || IsNil(o.AddressOne) {
		return nil, false
	}
	return o.AddressOne, true
}

// HasAddressOne returns a boolean if a field has been set.
func (o *BillingSetup) HasAddressOne() bool {
	if o != nil && !IsNil(o.AddressOne) {
		return true
	}

	return false
}

// SetAddressOne gets a reference to the given string and assigns it to the AddressOne field.
func (o *BillingSetup) SetAddressOne(v string) {
	o.AddressOne = &v
}

// GetAddressTwo returns the AddressTwo field value if set, zero value otherwise.
func (o *BillingSetup) GetAddressTwo() string {
	if o == nil || IsNil(o.AddressTwo) {
		var ret string
		return ret
	}
	return *o.AddressTwo
}

// GetAddressTwoOk returns a tuple with the AddressTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetAddressTwoOk() (*string, bool) {
	if o == nil || IsNil(o.AddressTwo) {
		return nil, false
	}
	return o.AddressTwo, true
}

// HasAddressTwo returns a boolean if a field has been set.
func (o *BillingSetup) HasAddressTwo() bool {
	if o != nil && !IsNil(o.AddressTwo) {
		return true
	}

	return false
}

// SetAddressTwo gets a reference to the given string and assigns it to the AddressTwo field.
func (o *BillingSetup) SetAddressTwo(v string) {
	o.AddressTwo = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *BillingSetup) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *BillingSetup) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *BillingSetup) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BillingSetup) GetState() StateReference {
	if o == nil || IsNil(o.State) {
		var ret StateReference
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetStateOk() (*StateReference, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BillingSetup) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given StateReference and assigns it to the State field.
func (o *BillingSetup) SetState(v StateReference) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *BillingSetup) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *BillingSetup) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *BillingSetup) SetZip(v string) {
	o.Zip = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *BillingSetup) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *BillingSetup) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *BillingSetup) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *BillingSetup) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *BillingSetup) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *BillingSetup) SetPhone(v string) {
	o.Phone = &v
}

// GetInvoiceTitle returns the InvoiceTitle field value
func (o *BillingSetup) GetInvoiceTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceTitle
}

// GetInvoiceTitleOk returns a tuple with the InvoiceTitle field value
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetInvoiceTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceTitle, true
}

// SetInvoiceTitle sets field value
func (o *BillingSetup) SetInvoiceTitle(v string) {
	o.InvoiceTitle = v
}

// GetPayableName returns the PayableName field value
func (o *BillingSetup) GetPayableName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayableName
}

// GetPayableNameOk returns a tuple with the PayableName field value
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetPayableNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayableName, true
}

// SetPayableName sets field value
func (o *BillingSetup) SetPayableName(v string) {
	o.PayableName = v
}

// GetTopcomment returns the Topcomment field value if set, zero value otherwise.
func (o *BillingSetup) GetTopcomment() string {
	if o == nil || IsNil(o.Topcomment) {
		var ret string
		return ret
	}
	return *o.Topcomment
}

// GetTopcommentOk returns a tuple with the Topcomment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetTopcommentOk() (*string, bool) {
	if o == nil || IsNil(o.Topcomment) {
		return nil, false
	}
	return o.Topcomment, true
}

// HasTopcomment returns a boolean if a field has been set.
func (o *BillingSetup) HasTopcomment() bool {
	if o != nil && !IsNil(o.Topcomment) {
		return true
	}

	return false
}

// SetTopcomment gets a reference to the given string and assigns it to the Topcomment field.
func (o *BillingSetup) SetTopcomment(v string) {
	o.Topcomment = &v
}

// GetInvoiceFooter returns the InvoiceFooter field value if set, zero value otherwise.
func (o *BillingSetup) GetInvoiceFooter() string {
	if o == nil || IsNil(o.InvoiceFooter) {
		var ret string
		return ret
	}
	return *o.InvoiceFooter
}

// GetInvoiceFooterOk returns a tuple with the InvoiceFooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetInvoiceFooterOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceFooter) {
		return nil, false
	}
	return o.InvoiceFooter, true
}

// HasInvoiceFooter returns a boolean if a field has been set.
func (o *BillingSetup) HasInvoiceFooter() bool {
	if o != nil && !IsNil(o.InvoiceFooter) {
		return true
	}

	return false
}

// SetInvoiceFooter gets a reference to the given string and assigns it to the InvoiceFooter field.
func (o *BillingSetup) SetInvoiceFooter(v string) {
	o.InvoiceFooter = &v
}

// GetQuoteFooter returns the QuoteFooter field value if set, zero value otherwise.
func (o *BillingSetup) GetQuoteFooter() string {
	if o == nil || IsNil(o.QuoteFooter) {
		var ret string
		return ret
	}
	return *o.QuoteFooter
}

// GetQuoteFooterOk returns a tuple with the QuoteFooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetQuoteFooterOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteFooter) {
		return nil, false
	}
	return o.QuoteFooter, true
}

// HasQuoteFooter returns a boolean if a field has been set.
func (o *BillingSetup) HasQuoteFooter() bool {
	if o != nil && !IsNil(o.QuoteFooter) {
		return true
	}

	return false
}

// SetQuoteFooter gets a reference to the given string and assigns it to the QuoteFooter field.
func (o *BillingSetup) SetQuoteFooter(v string) {
	o.QuoteFooter = &v
}

// GetOverallInvoiceDefault returns the OverallInvoiceDefault field value
func (o *BillingSetup) GetOverallInvoiceDefault() InvoiceTemplateReference {
	if o == nil {
		var ret InvoiceTemplateReference
		return ret
	}

	return o.OverallInvoiceDefault
}

// GetOverallInvoiceDefaultOk returns a tuple with the OverallInvoiceDefault field value
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetOverallInvoiceDefaultOk() (*InvoiceTemplateReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverallInvoiceDefault, true
}

// SetOverallInvoiceDefault sets field value
func (o *BillingSetup) SetOverallInvoiceDefault(v InvoiceTemplateReference) {
	o.OverallInvoiceDefault = v
}

// GetStandardInvoiceActual returns the StandardInvoiceActual field value if set, zero value otherwise.
func (o *BillingSetup) GetStandardInvoiceActual() InvoiceTemplateReference {
	if o == nil || IsNil(o.StandardInvoiceActual) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.StandardInvoiceActual
}

// GetStandardInvoiceActualOk returns a tuple with the StandardInvoiceActual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetStandardInvoiceActualOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.StandardInvoiceActual) {
		return nil, false
	}
	return o.StandardInvoiceActual, true
}

// HasStandardInvoiceActual returns a boolean if a field has been set.
func (o *BillingSetup) HasStandardInvoiceActual() bool {
	if o != nil && !IsNil(o.StandardInvoiceActual) {
		return true
	}

	return false
}

// SetStandardInvoiceActual gets a reference to the given InvoiceTemplateReference and assigns it to the StandardInvoiceActual field.
func (o *BillingSetup) SetStandardInvoiceActual(v InvoiceTemplateReference) {
	o.StandardInvoiceActual = &v
}

// GetStandardInvoiceFixed returns the StandardInvoiceFixed field value if set, zero value otherwise.
func (o *BillingSetup) GetStandardInvoiceFixed() InvoiceTemplateReference {
	if o == nil || IsNil(o.StandardInvoiceFixed) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.StandardInvoiceFixed
}

// GetStandardInvoiceFixedOk returns a tuple with the StandardInvoiceFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetStandardInvoiceFixedOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.StandardInvoiceFixed) {
		return nil, false
	}
	return o.StandardInvoiceFixed, true
}

// HasStandardInvoiceFixed returns a boolean if a field has been set.
func (o *BillingSetup) HasStandardInvoiceFixed() bool {
	if o != nil && !IsNil(o.StandardInvoiceFixed) {
		return true
	}

	return false
}

// SetStandardInvoiceFixed gets a reference to the given InvoiceTemplateReference and assigns it to the StandardInvoiceFixed field.
func (o *BillingSetup) SetStandardInvoiceFixed(v InvoiceTemplateReference) {
	o.StandardInvoiceFixed = &v
}

// GetProgressInvoice returns the ProgressInvoice field value if set, zero value otherwise.
func (o *BillingSetup) GetProgressInvoice() InvoiceTemplateReference {
	if o == nil || IsNil(o.ProgressInvoice) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.ProgressInvoice
}

// GetProgressInvoiceOk returns a tuple with the ProgressInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetProgressInvoiceOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.ProgressInvoice) {
		return nil, false
	}
	return o.ProgressInvoice, true
}

// HasProgressInvoice returns a boolean if a field has been set.
func (o *BillingSetup) HasProgressInvoice() bool {
	if o != nil && !IsNil(o.ProgressInvoice) {
		return true
	}

	return false
}

// SetProgressInvoice gets a reference to the given InvoiceTemplateReference and assigns it to the ProgressInvoice field.
func (o *BillingSetup) SetProgressInvoice(v InvoiceTemplateReference) {
	o.ProgressInvoice = &v
}

// GetAgreementInvoice returns the AgreementInvoice field value if set, zero value otherwise.
func (o *BillingSetup) GetAgreementInvoice() InvoiceTemplateReference {
	if o == nil || IsNil(o.AgreementInvoice) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.AgreementInvoice
}

// GetAgreementInvoiceOk returns a tuple with the AgreementInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetAgreementInvoiceOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.AgreementInvoice) {
		return nil, false
	}
	return o.AgreementInvoice, true
}

// HasAgreementInvoice returns a boolean if a field has been set.
func (o *BillingSetup) HasAgreementInvoice() bool {
	if o != nil && !IsNil(o.AgreementInvoice) {
		return true
	}

	return false
}

// SetAgreementInvoice gets a reference to the given InvoiceTemplateReference and assigns it to the AgreementInvoice field.
func (o *BillingSetup) SetAgreementInvoice(v InvoiceTemplateReference) {
	o.AgreementInvoice = &v
}

// GetCreditMemoInvoice returns the CreditMemoInvoice field value if set, zero value otherwise.
func (o *BillingSetup) GetCreditMemoInvoice() InvoiceTemplateReference {
	if o == nil || IsNil(o.CreditMemoInvoice) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.CreditMemoInvoice
}

// GetCreditMemoInvoiceOk returns a tuple with the CreditMemoInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCreditMemoInvoiceOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.CreditMemoInvoice) {
		return nil, false
	}
	return o.CreditMemoInvoice, true
}

// HasCreditMemoInvoice returns a boolean if a field has been set.
func (o *BillingSetup) HasCreditMemoInvoice() bool {
	if o != nil && !IsNil(o.CreditMemoInvoice) {
		return true
	}

	return false
}

// SetCreditMemoInvoice gets a reference to the given InvoiceTemplateReference and assigns it to the CreditMemoInvoice field.
func (o *BillingSetup) SetCreditMemoInvoice(v InvoiceTemplateReference) {
	o.CreditMemoInvoice = &v
}

// GetDownPaymentInvoice returns the DownPaymentInvoice field value if set, zero value otherwise.
func (o *BillingSetup) GetDownPaymentInvoice() InvoiceTemplateReference {
	if o == nil || IsNil(o.DownPaymentInvoice) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.DownPaymentInvoice
}

// GetDownPaymentInvoiceOk returns a tuple with the DownPaymentInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetDownPaymentInvoiceOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.DownPaymentInvoice) {
		return nil, false
	}
	return o.DownPaymentInvoice, true
}

// HasDownPaymentInvoice returns a boolean if a field has been set.
func (o *BillingSetup) HasDownPaymentInvoice() bool {
	if o != nil && !IsNil(o.DownPaymentInvoice) {
		return true
	}

	return false
}

// SetDownPaymentInvoice gets a reference to the given InvoiceTemplateReference and assigns it to the DownPaymentInvoice field.
func (o *BillingSetup) SetDownPaymentInvoice(v InvoiceTemplateReference) {
	o.DownPaymentInvoice = &v
}

// GetMiscInvoice returns the MiscInvoice field value if set, zero value otherwise.
func (o *BillingSetup) GetMiscInvoice() InvoiceTemplateReference {
	if o == nil || IsNil(o.MiscInvoice) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.MiscInvoice
}

// GetMiscInvoiceOk returns a tuple with the MiscInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetMiscInvoiceOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.MiscInvoice) {
		return nil, false
	}
	return o.MiscInvoice, true
}

// HasMiscInvoice returns a boolean if a field has been set.
func (o *BillingSetup) HasMiscInvoice() bool {
	if o != nil && !IsNil(o.MiscInvoice) {
		return true
	}

	return false
}

// SetMiscInvoice gets a reference to the given InvoiceTemplateReference and assigns it to the MiscInvoice field.
func (o *BillingSetup) SetMiscInvoice(v InvoiceTemplateReference) {
	o.MiscInvoice = &v
}

// GetSalesOrderInvoice returns the SalesOrderInvoice field value if set, zero value otherwise.
func (o *BillingSetup) GetSalesOrderInvoice() InvoiceTemplateReference {
	if o == nil || IsNil(o.SalesOrderInvoice) {
		var ret InvoiceTemplateReference
		return ret
	}
	return *o.SalesOrderInvoice
}

// GetSalesOrderInvoiceOk returns a tuple with the SalesOrderInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetSalesOrderInvoiceOk() (*InvoiceTemplateReference, bool) {
	if o == nil || IsNil(o.SalesOrderInvoice) {
		return nil, false
	}
	return o.SalesOrderInvoice, true
}

// HasSalesOrderInvoice returns a boolean if a field has been set.
func (o *BillingSetup) HasSalesOrderInvoice() bool {
	if o != nil && !IsNil(o.SalesOrderInvoice) {
		return true
	}

	return false
}

// SetSalesOrderInvoice gets a reference to the given InvoiceTemplateReference and assigns it to the SalesOrderInvoice field.
func (o *BillingSetup) SetSalesOrderInvoice(v InvoiceTemplateReference) {
	o.SalesOrderInvoice = &v
}

// GetExcludeDoNotBillTimeFlag returns the ExcludeDoNotBillTimeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetExcludeDoNotBillTimeFlag() bool {
	if o == nil || IsNil(o.ExcludeDoNotBillTimeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludeDoNotBillTimeFlag.Get()
}

// GetExcludeDoNotBillTimeFlagOk returns a tuple with the ExcludeDoNotBillTimeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetExcludeDoNotBillTimeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludeDoNotBillTimeFlag.Get(), o.ExcludeDoNotBillTimeFlag.IsSet()
}

// HasExcludeDoNotBillTimeFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasExcludeDoNotBillTimeFlag() bool {
	if o != nil && o.ExcludeDoNotBillTimeFlag.IsSet() {
		return true
	}

	return false
}

// SetExcludeDoNotBillTimeFlag gets a reference to the given NullableBool and assigns it to the ExcludeDoNotBillTimeFlag field.
func (o *BillingSetup) SetExcludeDoNotBillTimeFlag(v bool) {
	o.ExcludeDoNotBillTimeFlag.Set(&v)
}
// SetExcludeDoNotBillTimeFlagNil sets the value for ExcludeDoNotBillTimeFlag to be an explicit nil
func (o *BillingSetup) SetExcludeDoNotBillTimeFlagNil() {
	o.ExcludeDoNotBillTimeFlag.Set(nil)
}

// UnsetExcludeDoNotBillTimeFlag ensures that no value is present for ExcludeDoNotBillTimeFlag, not even an explicit nil
func (o *BillingSetup) UnsetExcludeDoNotBillTimeFlag() {
	o.ExcludeDoNotBillTimeFlag.Unset()
}

// GetExcludeDoNotBillExpenseFlag returns the ExcludeDoNotBillExpenseFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetExcludeDoNotBillExpenseFlag() bool {
	if o == nil || IsNil(o.ExcludeDoNotBillExpenseFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludeDoNotBillExpenseFlag.Get()
}

// GetExcludeDoNotBillExpenseFlagOk returns a tuple with the ExcludeDoNotBillExpenseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetExcludeDoNotBillExpenseFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludeDoNotBillExpenseFlag.Get(), o.ExcludeDoNotBillExpenseFlag.IsSet()
}

// HasExcludeDoNotBillExpenseFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasExcludeDoNotBillExpenseFlag() bool {
	if o != nil && o.ExcludeDoNotBillExpenseFlag.IsSet() {
		return true
	}

	return false
}

// SetExcludeDoNotBillExpenseFlag gets a reference to the given NullableBool and assigns it to the ExcludeDoNotBillExpenseFlag field.
func (o *BillingSetup) SetExcludeDoNotBillExpenseFlag(v bool) {
	o.ExcludeDoNotBillExpenseFlag.Set(&v)
}
// SetExcludeDoNotBillExpenseFlagNil sets the value for ExcludeDoNotBillExpenseFlag to be an explicit nil
func (o *BillingSetup) SetExcludeDoNotBillExpenseFlagNil() {
	o.ExcludeDoNotBillExpenseFlag.Set(nil)
}

// UnsetExcludeDoNotBillExpenseFlag ensures that no value is present for ExcludeDoNotBillExpenseFlag, not even an explicit nil
func (o *BillingSetup) UnsetExcludeDoNotBillExpenseFlag() {
	o.ExcludeDoNotBillExpenseFlag.Unset()
}

// GetExcludeDoNotBillProductFlag returns the ExcludeDoNotBillProductFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetExcludeDoNotBillProductFlag() bool {
	if o == nil || IsNil(o.ExcludeDoNotBillProductFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludeDoNotBillProductFlag.Get()
}

// GetExcludeDoNotBillProductFlagOk returns a tuple with the ExcludeDoNotBillProductFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetExcludeDoNotBillProductFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludeDoNotBillProductFlag.Get(), o.ExcludeDoNotBillProductFlag.IsSet()
}

// HasExcludeDoNotBillProductFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasExcludeDoNotBillProductFlag() bool {
	if o != nil && o.ExcludeDoNotBillProductFlag.IsSet() {
		return true
	}

	return false
}

// SetExcludeDoNotBillProductFlag gets a reference to the given NullableBool and assigns it to the ExcludeDoNotBillProductFlag field.
func (o *BillingSetup) SetExcludeDoNotBillProductFlag(v bool) {
	o.ExcludeDoNotBillProductFlag.Set(&v)
}
// SetExcludeDoNotBillProductFlagNil sets the value for ExcludeDoNotBillProductFlag to be an explicit nil
func (o *BillingSetup) SetExcludeDoNotBillProductFlagNil() {
	o.ExcludeDoNotBillProductFlag.Set(nil)
}

// UnsetExcludeDoNotBillProductFlag ensures that no value is present for ExcludeDoNotBillProductFlag, not even an explicit nil
func (o *BillingSetup) UnsetExcludeDoNotBillProductFlag() {
	o.ExcludeDoNotBillProductFlag.Unset()
}

// GetPrefixSuffixFlag returns the PrefixSuffixFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetPrefixSuffixFlag() string {
	if o == nil || IsNil(o.PrefixSuffixFlag.Get()) {
		var ret string
		return ret
	}
	return *o.PrefixSuffixFlag.Get()
}

// GetPrefixSuffixFlagOk returns a tuple with the PrefixSuffixFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetPrefixSuffixFlagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrefixSuffixFlag.Get(), o.PrefixSuffixFlag.IsSet()
}

// HasPrefixSuffixFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasPrefixSuffixFlag() bool {
	if o != nil && o.PrefixSuffixFlag.IsSet() {
		return true
	}

	return false
}

// SetPrefixSuffixFlag gets a reference to the given NullableString and assigns it to the PrefixSuffixFlag field.
func (o *BillingSetup) SetPrefixSuffixFlag(v string) {
	o.PrefixSuffixFlag.Set(&v)
}
// SetPrefixSuffixFlagNil sets the value for PrefixSuffixFlag to be an explicit nil
func (o *BillingSetup) SetPrefixSuffixFlagNil() {
	o.PrefixSuffixFlag.Set(nil)
}

// UnsetPrefixSuffixFlag ensures that no value is present for PrefixSuffixFlag, not even an explicit nil
func (o *BillingSetup) UnsetPrefixSuffixFlag() {
	o.PrefixSuffixFlag.Unset()
}

// GetPrefixSuffixText returns the PrefixSuffixText field value if set, zero value otherwise.
func (o *BillingSetup) GetPrefixSuffixText() string {
	if o == nil || IsNil(o.PrefixSuffixText) {
		var ret string
		return ret
	}
	return *o.PrefixSuffixText
}

// GetPrefixSuffixTextOk returns a tuple with the PrefixSuffixText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetPrefixSuffixTextOk() (*string, bool) {
	if o == nil || IsNil(o.PrefixSuffixText) {
		return nil, false
	}
	return o.PrefixSuffixText, true
}

// HasPrefixSuffixText returns a boolean if a field has been set.
func (o *BillingSetup) HasPrefixSuffixText() bool {
	if o != nil && !IsNil(o.PrefixSuffixText) {
		return true
	}

	return false
}

// SetPrefixSuffixText gets a reference to the given string and assigns it to the PrefixSuffixText field.
func (o *BillingSetup) SetPrefixSuffixText(v string) {
	o.PrefixSuffixText = &v
}

// GetChargeAdjToFirmFlag returns the ChargeAdjToFirmFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetChargeAdjToFirmFlag() bool {
	if o == nil || IsNil(o.ChargeAdjToFirmFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ChargeAdjToFirmFlag.Get()
}

// GetChargeAdjToFirmFlagOk returns a tuple with the ChargeAdjToFirmFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetChargeAdjToFirmFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChargeAdjToFirmFlag.Get(), o.ChargeAdjToFirmFlag.IsSet()
}

// HasChargeAdjToFirmFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasChargeAdjToFirmFlag() bool {
	if o != nil && o.ChargeAdjToFirmFlag.IsSet() {
		return true
	}

	return false
}

// SetChargeAdjToFirmFlag gets a reference to the given NullableBool and assigns it to the ChargeAdjToFirmFlag field.
func (o *BillingSetup) SetChargeAdjToFirmFlag(v bool) {
	o.ChargeAdjToFirmFlag.Set(&v)
}
// SetChargeAdjToFirmFlagNil sets the value for ChargeAdjToFirmFlag to be an explicit nil
func (o *BillingSetup) SetChargeAdjToFirmFlagNil() {
	o.ChargeAdjToFirmFlag.Set(nil)
}

// UnsetChargeAdjToFirmFlag ensures that no value is present for ChargeAdjToFirmFlag, not even an explicit nil
func (o *BillingSetup) UnsetChargeAdjToFirmFlag() {
	o.ChargeAdjToFirmFlag.Unset()
}

// GetNoWatermarkFlag returns the NoWatermarkFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetNoWatermarkFlag() bool {
	if o == nil || IsNil(o.NoWatermarkFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.NoWatermarkFlag.Get()
}

// GetNoWatermarkFlagOk returns a tuple with the NoWatermarkFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetNoWatermarkFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.NoWatermarkFlag.Get(), o.NoWatermarkFlag.IsSet()
}

// HasNoWatermarkFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasNoWatermarkFlag() bool {
	if o != nil && o.NoWatermarkFlag.IsSet() {
		return true
	}

	return false
}

// SetNoWatermarkFlag gets a reference to the given NullableBool and assigns it to the NoWatermarkFlag field.
func (o *BillingSetup) SetNoWatermarkFlag(v bool) {
	o.NoWatermarkFlag.Set(&v)
}
// SetNoWatermarkFlagNil sets the value for NoWatermarkFlag to be an explicit nil
func (o *BillingSetup) SetNoWatermarkFlagNil() {
	o.NoWatermarkFlag.Set(nil)
}

// UnsetNoWatermarkFlag ensures that no value is present for NoWatermarkFlag, not even an explicit nil
func (o *BillingSetup) UnsetNoWatermarkFlag() {
	o.NoWatermarkFlag.Unset()
}

// GetDisplayTaxFlag returns the DisplayTaxFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetDisplayTaxFlag() bool {
	if o == nil || IsNil(o.DisplayTaxFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisplayTaxFlag.Get()
}

// GetDisplayTaxFlagOk returns a tuple with the DisplayTaxFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetDisplayTaxFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayTaxFlag.Get(), o.DisplayTaxFlag.IsSet()
}

// HasDisplayTaxFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasDisplayTaxFlag() bool {
	if o != nil && o.DisplayTaxFlag.IsSet() {
		return true
	}

	return false
}

// SetDisplayTaxFlag gets a reference to the given NullableBool and assigns it to the DisplayTaxFlag field.
func (o *BillingSetup) SetDisplayTaxFlag(v bool) {
	o.DisplayTaxFlag.Set(&v)
}
// SetDisplayTaxFlagNil sets the value for DisplayTaxFlag to be an explicit nil
func (o *BillingSetup) SetDisplayTaxFlagNil() {
	o.DisplayTaxFlag.Set(nil)
}

// UnsetDisplayTaxFlag ensures that no value is present for DisplayTaxFlag, not even an explicit nil
func (o *BillingSetup) UnsetDisplayTaxFlag() {
	o.DisplayTaxFlag.Unset()
}

// GetAllowRestrictedDeptOnRoutingFlag returns the AllowRestrictedDeptOnRoutingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetAllowRestrictedDeptOnRoutingFlag() bool {
	if o == nil || IsNil(o.AllowRestrictedDeptOnRoutingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowRestrictedDeptOnRoutingFlag.Get()
}

// GetAllowRestrictedDeptOnRoutingFlagOk returns a tuple with the AllowRestrictedDeptOnRoutingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetAllowRestrictedDeptOnRoutingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowRestrictedDeptOnRoutingFlag.Get(), o.AllowRestrictedDeptOnRoutingFlag.IsSet()
}

// HasAllowRestrictedDeptOnRoutingFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasAllowRestrictedDeptOnRoutingFlag() bool {
	if o != nil && o.AllowRestrictedDeptOnRoutingFlag.IsSet() {
		return true
	}

	return false
}

// SetAllowRestrictedDeptOnRoutingFlag gets a reference to the given NullableBool and assigns it to the AllowRestrictedDeptOnRoutingFlag field.
func (o *BillingSetup) SetAllowRestrictedDeptOnRoutingFlag(v bool) {
	o.AllowRestrictedDeptOnRoutingFlag.Set(&v)
}
// SetAllowRestrictedDeptOnRoutingFlagNil sets the value for AllowRestrictedDeptOnRoutingFlag to be an explicit nil
func (o *BillingSetup) SetAllowRestrictedDeptOnRoutingFlagNil() {
	o.AllowRestrictedDeptOnRoutingFlag.Set(nil)
}

// UnsetAllowRestrictedDeptOnRoutingFlag ensures that no value is present for AllowRestrictedDeptOnRoutingFlag, not even an explicit nil
func (o *BillingSetup) UnsetAllowRestrictedDeptOnRoutingFlag() {
	o.AllowRestrictedDeptOnRoutingFlag.Unset()
}

// GetBillTicketSeparatelyFlag returns the BillTicketSeparatelyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillTicketSeparatelyFlag() bool {
	if o == nil || IsNil(o.BillTicketSeparatelyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillTicketSeparatelyFlag.Get()
}

// GetBillTicketSeparatelyFlagOk returns a tuple with the BillTicketSeparatelyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillTicketSeparatelyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillTicketSeparatelyFlag.Get(), o.BillTicketSeparatelyFlag.IsSet()
}

// HasBillTicketSeparatelyFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillTicketSeparatelyFlag() bool {
	if o != nil && o.BillTicketSeparatelyFlag.IsSet() {
		return true
	}

	return false
}

// SetBillTicketSeparatelyFlag gets a reference to the given NullableBool and assigns it to the BillTicketSeparatelyFlag field.
func (o *BillingSetup) SetBillTicketSeparatelyFlag(v bool) {
	o.BillTicketSeparatelyFlag.Set(&v)
}
// SetBillTicketSeparatelyFlagNil sets the value for BillTicketSeparatelyFlag to be an explicit nil
func (o *BillingSetup) SetBillTicketSeparatelyFlagNil() {
	o.BillTicketSeparatelyFlag.Set(nil)
}

// UnsetBillTicketSeparatelyFlag ensures that no value is present for BillTicketSeparatelyFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillTicketSeparatelyFlag() {
	o.BillTicketSeparatelyFlag.Unset()
}

// GetBillTicketCompleteFlag returns the BillTicketCompleteFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillTicketCompleteFlag() bool {
	if o == nil || IsNil(o.BillTicketCompleteFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillTicketCompleteFlag.Get()
}

// GetBillTicketCompleteFlagOk returns a tuple with the BillTicketCompleteFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillTicketCompleteFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillTicketCompleteFlag.Get(), o.BillTicketCompleteFlag.IsSet()
}

// HasBillTicketCompleteFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillTicketCompleteFlag() bool {
	if o != nil && o.BillTicketCompleteFlag.IsSet() {
		return true
	}

	return false
}

// SetBillTicketCompleteFlag gets a reference to the given NullableBool and assigns it to the BillTicketCompleteFlag field.
func (o *BillingSetup) SetBillTicketCompleteFlag(v bool) {
	o.BillTicketCompleteFlag.Set(&v)
}
// SetBillTicketCompleteFlagNil sets the value for BillTicketCompleteFlag to be an explicit nil
func (o *BillingSetup) SetBillTicketCompleteFlagNil() {
	o.BillTicketCompleteFlag.Set(nil)
}

// UnsetBillTicketCompleteFlag ensures that no value is present for BillTicketCompleteFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillTicketCompleteFlag() {
	o.BillTicketCompleteFlag.Unset()
}

// GetBillTicketUnapprovedFlag returns the BillTicketUnapprovedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillTicketUnapprovedFlag() bool {
	if o == nil || IsNil(o.BillTicketUnapprovedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillTicketUnapprovedFlag.Get()
}

// GetBillTicketUnapprovedFlagOk returns a tuple with the BillTicketUnapprovedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillTicketUnapprovedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillTicketUnapprovedFlag.Get(), o.BillTicketUnapprovedFlag.IsSet()
}

// HasBillTicketUnapprovedFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillTicketUnapprovedFlag() bool {
	if o != nil && o.BillTicketUnapprovedFlag.IsSet() {
		return true
	}

	return false
}

// SetBillTicketUnapprovedFlag gets a reference to the given NullableBool and assigns it to the BillTicketUnapprovedFlag field.
func (o *BillingSetup) SetBillTicketUnapprovedFlag(v bool) {
	o.BillTicketUnapprovedFlag.Set(&v)
}
// SetBillTicketUnapprovedFlagNil sets the value for BillTicketUnapprovedFlag to be an explicit nil
func (o *BillingSetup) SetBillTicketUnapprovedFlagNil() {
	o.BillTicketUnapprovedFlag.Set(nil)
}

// UnsetBillTicketUnapprovedFlag ensures that no value is present for BillTicketUnapprovedFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillTicketUnapprovedFlag() {
	o.BillTicketUnapprovedFlag.Unset()
}

// GetBillProjectCompleteFlag returns the BillProjectCompleteFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillProjectCompleteFlag() bool {
	if o == nil || IsNil(o.BillProjectCompleteFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillProjectCompleteFlag.Get()
}

// GetBillProjectCompleteFlagOk returns a tuple with the BillProjectCompleteFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillProjectCompleteFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillProjectCompleteFlag.Get(), o.BillProjectCompleteFlag.IsSet()
}

// HasBillProjectCompleteFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillProjectCompleteFlag() bool {
	if o != nil && o.BillProjectCompleteFlag.IsSet() {
		return true
	}

	return false
}

// SetBillProjectCompleteFlag gets a reference to the given NullableBool and assigns it to the BillProjectCompleteFlag field.
func (o *BillingSetup) SetBillProjectCompleteFlag(v bool) {
	o.BillProjectCompleteFlag.Set(&v)
}
// SetBillProjectCompleteFlagNil sets the value for BillProjectCompleteFlag to be an explicit nil
func (o *BillingSetup) SetBillProjectCompleteFlagNil() {
	o.BillProjectCompleteFlag.Set(nil)
}

// UnsetBillProjectCompleteFlag ensures that no value is present for BillProjectCompleteFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillProjectCompleteFlag() {
	o.BillProjectCompleteFlag.Unset()
}

// GetBillProjectUnapprovedFlag returns the BillProjectUnapprovedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillProjectUnapprovedFlag() bool {
	if o == nil || IsNil(o.BillProjectUnapprovedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillProjectUnapprovedFlag.Get()
}

// GetBillProjectUnapprovedFlagOk returns a tuple with the BillProjectUnapprovedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillProjectUnapprovedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillProjectUnapprovedFlag.Get(), o.BillProjectUnapprovedFlag.IsSet()
}

// HasBillProjectUnapprovedFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillProjectUnapprovedFlag() bool {
	if o != nil && o.BillProjectUnapprovedFlag.IsSet() {
		return true
	}

	return false
}

// SetBillProjectUnapprovedFlag gets a reference to the given NullableBool and assigns it to the BillProjectUnapprovedFlag field.
func (o *BillingSetup) SetBillProjectUnapprovedFlag(v bool) {
	o.BillProjectUnapprovedFlag.Set(&v)
}
// SetBillProjectUnapprovedFlagNil sets the value for BillProjectUnapprovedFlag to be an explicit nil
func (o *BillingSetup) SetBillProjectUnapprovedFlagNil() {
	o.BillProjectUnapprovedFlag.Set(nil)
}

// UnsetBillProjectUnapprovedFlag ensures that no value is present for BillProjectUnapprovedFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillProjectUnapprovedFlag() {
	o.BillProjectUnapprovedFlag.Unset()
}

// GetProgressTimeFlag returns the ProgressTimeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetProgressTimeFlag() bool {
	if o == nil || IsNil(o.ProgressTimeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProgressTimeFlag.Get()
}

// GetProgressTimeFlagOk returns a tuple with the ProgressTimeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetProgressTimeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgressTimeFlag.Get(), o.ProgressTimeFlag.IsSet()
}

// HasProgressTimeFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasProgressTimeFlag() bool {
	if o != nil && o.ProgressTimeFlag.IsSet() {
		return true
	}

	return false
}

// SetProgressTimeFlag gets a reference to the given NullableBool and assigns it to the ProgressTimeFlag field.
func (o *BillingSetup) SetProgressTimeFlag(v bool) {
	o.ProgressTimeFlag.Set(&v)
}
// SetProgressTimeFlagNil sets the value for ProgressTimeFlag to be an explicit nil
func (o *BillingSetup) SetProgressTimeFlagNil() {
	o.ProgressTimeFlag.Set(nil)
}

// UnsetProgressTimeFlag ensures that no value is present for ProgressTimeFlag, not even an explicit nil
func (o *BillingSetup) UnsetProgressTimeFlag() {
	o.ProgressTimeFlag.Unset()
}

// GetRestrictProjectDownpaymentFlag returns the RestrictProjectDownpaymentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetRestrictProjectDownpaymentFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDownpaymentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDownpaymentFlag.Get()
}

// GetRestrictProjectDownpaymentFlagOk returns a tuple with the RestrictProjectDownpaymentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetRestrictProjectDownpaymentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDownpaymentFlag.Get(), o.RestrictProjectDownpaymentFlag.IsSet()
}

// HasRestrictProjectDownpaymentFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasRestrictProjectDownpaymentFlag() bool {
	if o != nil && o.RestrictProjectDownpaymentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDownpaymentFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDownpaymentFlag field.
func (o *BillingSetup) SetRestrictProjectDownpaymentFlag(v bool) {
	o.RestrictProjectDownpaymentFlag.Set(&v)
}
// SetRestrictProjectDownpaymentFlagNil sets the value for RestrictProjectDownpaymentFlag to be an explicit nil
func (o *BillingSetup) SetRestrictProjectDownpaymentFlagNil() {
	o.RestrictProjectDownpaymentFlag.Set(nil)
}

// UnsetRestrictProjectDownpaymentFlag ensures that no value is present for RestrictProjectDownpaymentFlag, not even an explicit nil
func (o *BillingSetup) UnsetRestrictProjectDownpaymentFlag() {
	o.RestrictProjectDownpaymentFlag.Unset()
}

// GetBillSalesOrderCompleteFlag returns the BillSalesOrderCompleteFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillSalesOrderCompleteFlag() bool {
	if o == nil || IsNil(o.BillSalesOrderCompleteFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillSalesOrderCompleteFlag.Get()
}

// GetBillSalesOrderCompleteFlagOk returns a tuple with the BillSalesOrderCompleteFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillSalesOrderCompleteFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillSalesOrderCompleteFlag.Get(), o.BillSalesOrderCompleteFlag.IsSet()
}

// HasBillSalesOrderCompleteFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillSalesOrderCompleteFlag() bool {
	if o != nil && o.BillSalesOrderCompleteFlag.IsSet() {
		return true
	}

	return false
}

// SetBillSalesOrderCompleteFlag gets a reference to the given NullableBool and assigns it to the BillSalesOrderCompleteFlag field.
func (o *BillingSetup) SetBillSalesOrderCompleteFlag(v bool) {
	o.BillSalesOrderCompleteFlag.Set(&v)
}
// SetBillSalesOrderCompleteFlagNil sets the value for BillSalesOrderCompleteFlag to be an explicit nil
func (o *BillingSetup) SetBillSalesOrderCompleteFlagNil() {
	o.BillSalesOrderCompleteFlag.Set(nil)
}

// UnsetBillSalesOrderCompleteFlag ensures that no value is present for BillSalesOrderCompleteFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillSalesOrderCompleteFlag() {
	o.BillSalesOrderCompleteFlag.Unset()
}

// GetBillProductAfterShipFlag returns the BillProductAfterShipFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetBillProductAfterShipFlag() bool {
	if o == nil || IsNil(o.BillProductAfterShipFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillProductAfterShipFlag.Get()
}

// GetBillProductAfterShipFlagOk returns a tuple with the BillProductAfterShipFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetBillProductAfterShipFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillProductAfterShipFlag.Get(), o.BillProductAfterShipFlag.IsSet()
}

// HasBillProductAfterShipFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasBillProductAfterShipFlag() bool {
	if o != nil && o.BillProductAfterShipFlag.IsSet() {
		return true
	}

	return false
}

// SetBillProductAfterShipFlag gets a reference to the given NullableBool and assigns it to the BillProductAfterShipFlag field.
func (o *BillingSetup) SetBillProductAfterShipFlag(v bool) {
	o.BillProductAfterShipFlag.Set(&v)
}
// SetBillProductAfterShipFlagNil sets the value for BillProductAfterShipFlag to be an explicit nil
func (o *BillingSetup) SetBillProductAfterShipFlagNil() {
	o.BillProductAfterShipFlag.Set(nil)
}

// UnsetBillProductAfterShipFlag ensures that no value is present for BillProductAfterShipFlag, not even an explicit nil
func (o *BillingSetup) UnsetBillProductAfterShipFlag() {
	o.BillProductAfterShipFlag.Unset()
}

// GetRestrictDownpaymentFlag returns the RestrictDownpaymentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetRestrictDownpaymentFlag() bool {
	if o == nil || IsNil(o.RestrictDownpaymentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDownpaymentFlag.Get()
}

// GetRestrictDownpaymentFlagOk returns a tuple with the RestrictDownpaymentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetRestrictDownpaymentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDownpaymentFlag.Get(), o.RestrictDownpaymentFlag.IsSet()
}

// HasRestrictDownpaymentFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasRestrictDownpaymentFlag() bool {
	if o != nil && o.RestrictDownpaymentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDownpaymentFlag gets a reference to the given NullableBool and assigns it to the RestrictDownpaymentFlag field.
func (o *BillingSetup) SetRestrictDownpaymentFlag(v bool) {
	o.RestrictDownpaymentFlag.Set(&v)
}
// SetRestrictDownpaymentFlagNil sets the value for RestrictDownpaymentFlag to be an explicit nil
func (o *BillingSetup) SetRestrictDownpaymentFlagNil() {
	o.RestrictDownpaymentFlag.Set(nil)
}

// UnsetRestrictDownpaymentFlag ensures that no value is present for RestrictDownpaymentFlag, not even an explicit nil
func (o *BillingSetup) UnsetRestrictDownpaymentFlag() {
	o.RestrictDownpaymentFlag.Unset()
}

// GetCopyNonServiceProductsFlag returns the CopyNonServiceProductsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetCopyNonServiceProductsFlag() bool {
	if o == nil || IsNil(o.CopyNonServiceProductsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CopyNonServiceProductsFlag.Get()
}

// GetCopyNonServiceProductsFlagOk returns a tuple with the CopyNonServiceProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetCopyNonServiceProductsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CopyNonServiceProductsFlag.Get(), o.CopyNonServiceProductsFlag.IsSet()
}

// HasCopyNonServiceProductsFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasCopyNonServiceProductsFlag() bool {
	if o != nil && o.CopyNonServiceProductsFlag.IsSet() {
		return true
	}

	return false
}

// SetCopyNonServiceProductsFlag gets a reference to the given NullableBool and assigns it to the CopyNonServiceProductsFlag field.
func (o *BillingSetup) SetCopyNonServiceProductsFlag(v bool) {
	o.CopyNonServiceProductsFlag.Set(&v)
}
// SetCopyNonServiceProductsFlagNil sets the value for CopyNonServiceProductsFlag to be an explicit nil
func (o *BillingSetup) SetCopyNonServiceProductsFlagNil() {
	o.CopyNonServiceProductsFlag.Set(nil)
}

// UnsetCopyNonServiceProductsFlag ensures that no value is present for CopyNonServiceProductsFlag, not even an explicit nil
func (o *BillingSetup) UnsetCopyNonServiceProductsFlag() {
	o.CopyNonServiceProductsFlag.Unset()
}

// GetCopyServiceProductsFlag returns the CopyServiceProductsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetCopyServiceProductsFlag() bool {
	if o == nil || IsNil(o.CopyServiceProductsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CopyServiceProductsFlag.Get()
}

// GetCopyServiceProductsFlagOk returns a tuple with the CopyServiceProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetCopyServiceProductsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CopyServiceProductsFlag.Get(), o.CopyServiceProductsFlag.IsSet()
}

// HasCopyServiceProductsFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasCopyServiceProductsFlag() bool {
	if o != nil && o.CopyServiceProductsFlag.IsSet() {
		return true
	}

	return false
}

// SetCopyServiceProductsFlag gets a reference to the given NullableBool and assigns it to the CopyServiceProductsFlag field.
func (o *BillingSetup) SetCopyServiceProductsFlag(v bool) {
	o.CopyServiceProductsFlag.Set(&v)
}
// SetCopyServiceProductsFlagNil sets the value for CopyServiceProductsFlag to be an explicit nil
func (o *BillingSetup) SetCopyServiceProductsFlagNil() {
	o.CopyServiceProductsFlag.Set(nil)
}

// UnsetCopyServiceProductsFlag ensures that no value is present for CopyServiceProductsFlag, not even an explicit nil
func (o *BillingSetup) UnsetCopyServiceProductsFlag() {
	o.CopyServiceProductsFlag.Unset()
}

// GetCopyAgreementProductsFlag returns the CopyAgreementProductsFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetCopyAgreementProductsFlag() bool {
	if o == nil || IsNil(o.CopyAgreementProductsFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CopyAgreementProductsFlag.Get()
}

// GetCopyAgreementProductsFlagOk returns a tuple with the CopyAgreementProductsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetCopyAgreementProductsFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CopyAgreementProductsFlag.Get(), o.CopyAgreementProductsFlag.IsSet()
}

// HasCopyAgreementProductsFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasCopyAgreementProductsFlag() bool {
	if o != nil && o.CopyAgreementProductsFlag.IsSet() {
		return true
	}

	return false
}

// SetCopyAgreementProductsFlag gets a reference to the given NullableBool and assigns it to the CopyAgreementProductsFlag field.
func (o *BillingSetup) SetCopyAgreementProductsFlag(v bool) {
	o.CopyAgreementProductsFlag.Set(&v)
}
// SetCopyAgreementProductsFlagNil sets the value for CopyAgreementProductsFlag to be an explicit nil
func (o *BillingSetup) SetCopyAgreementProductsFlagNil() {
	o.CopyAgreementProductsFlag.Set(nil)
}

// UnsetCopyAgreementProductsFlag ensures that no value is present for CopyAgreementProductsFlag, not even an explicit nil
func (o *BillingSetup) UnsetCopyAgreementProductsFlag() {
	o.CopyAgreementProductsFlag.Unset()
}

// GetPrintLogoFlag returns the PrintLogoFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetPrintLogoFlag() bool {
	if o == nil || IsNil(o.PrintLogoFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PrintLogoFlag.Get()
}

// GetPrintLogoFlagOk returns a tuple with the PrintLogoFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetPrintLogoFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrintLogoFlag.Get(), o.PrintLogoFlag.IsSet()
}

// HasPrintLogoFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasPrintLogoFlag() bool {
	if o != nil && o.PrintLogoFlag.IsSet() {
		return true
	}

	return false
}

// SetPrintLogoFlag gets a reference to the given NullableBool and assigns it to the PrintLogoFlag field.
func (o *BillingSetup) SetPrintLogoFlag(v bool) {
	o.PrintLogoFlag.Set(&v)
}
// SetPrintLogoFlagNil sets the value for PrintLogoFlag to be an explicit nil
func (o *BillingSetup) SetPrintLogoFlagNil() {
	o.PrintLogoFlag.Set(nil)
}

// UnsetPrintLogoFlag ensures that no value is present for PrintLogoFlag, not even an explicit nil
func (o *BillingSetup) UnsetPrintLogoFlag() {
	o.PrintLogoFlag.Unset()
}

// GetReadReceiptFlag returns the ReadReceiptFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetReadReceiptFlag() bool {
	if o == nil || IsNil(o.ReadReceiptFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ReadReceiptFlag.Get()
}

// GetReadReceiptFlagOk returns a tuple with the ReadReceiptFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetReadReceiptFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReadReceiptFlag.Get(), o.ReadReceiptFlag.IsSet()
}

// HasReadReceiptFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasReadReceiptFlag() bool {
	if o != nil && o.ReadReceiptFlag.IsSet() {
		return true
	}

	return false
}

// SetReadReceiptFlag gets a reference to the given NullableBool and assigns it to the ReadReceiptFlag field.
func (o *BillingSetup) SetReadReceiptFlag(v bool) {
	o.ReadReceiptFlag.Set(&v)
}
// SetReadReceiptFlagNil sets the value for ReadReceiptFlag to be an explicit nil
func (o *BillingSetup) SetReadReceiptFlagNil() {
	o.ReadReceiptFlag.Set(nil)
}

// UnsetReadReceiptFlag ensures that no value is present for ReadReceiptFlag, not even an explicit nil
func (o *BillingSetup) UnsetReadReceiptFlag() {
	o.ReadReceiptFlag.Unset()
}

// GetDeliveryReceiptFlag returns the DeliveryReceiptFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetDeliveryReceiptFlag() bool {
	if o == nil || IsNil(o.DeliveryReceiptFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DeliveryReceiptFlag.Get()
}

// GetDeliveryReceiptFlagOk returns a tuple with the DeliveryReceiptFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetDeliveryReceiptFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryReceiptFlag.Get(), o.DeliveryReceiptFlag.IsSet()
}

// HasDeliveryReceiptFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasDeliveryReceiptFlag() bool {
	if o != nil && o.DeliveryReceiptFlag.IsSet() {
		return true
	}

	return false
}

// SetDeliveryReceiptFlag gets a reference to the given NullableBool and assigns it to the DeliveryReceiptFlag field.
func (o *BillingSetup) SetDeliveryReceiptFlag(v bool) {
	o.DeliveryReceiptFlag.Set(&v)
}
// SetDeliveryReceiptFlagNil sets the value for DeliveryReceiptFlag to be an explicit nil
func (o *BillingSetup) SetDeliveryReceiptFlagNil() {
	o.DeliveryReceiptFlag.Set(nil)
}

// UnsetDeliveryReceiptFlag ensures that no value is present for DeliveryReceiptFlag, not even an explicit nil
func (o *BillingSetup) UnsetDeliveryReceiptFlag() {
	o.DeliveryReceiptFlag.Unset()
}

// GetAttachXmlInvoiceFlag returns the AttachXmlInvoiceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetAttachXmlInvoiceFlag() bool {
	if o == nil || IsNil(o.AttachXmlInvoiceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AttachXmlInvoiceFlag.Get()
}

// GetAttachXmlInvoiceFlagOk returns a tuple with the AttachXmlInvoiceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetAttachXmlInvoiceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachXmlInvoiceFlag.Get(), o.AttachXmlInvoiceFlag.IsSet()
}

// HasAttachXmlInvoiceFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasAttachXmlInvoiceFlag() bool {
	if o != nil && o.AttachXmlInvoiceFlag.IsSet() {
		return true
	}

	return false
}

// SetAttachXmlInvoiceFlag gets a reference to the given NullableBool and assigns it to the AttachXmlInvoiceFlag field.
func (o *BillingSetup) SetAttachXmlInvoiceFlag(v bool) {
	o.AttachXmlInvoiceFlag.Set(&v)
}
// SetAttachXmlInvoiceFlagNil sets the value for AttachXmlInvoiceFlag to be an explicit nil
func (o *BillingSetup) SetAttachXmlInvoiceFlagNil() {
	o.AttachXmlInvoiceFlag.Set(nil)
}

// UnsetAttachXmlInvoiceFlag ensures that no value is present for AttachXmlInvoiceFlag, not even an explicit nil
func (o *BillingSetup) UnsetAttachXmlInvoiceFlag() {
	o.AttachXmlInvoiceFlag.Unset()
}

// GetDisableRoutingEmailFlag returns the DisableRoutingEmailFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetDisableRoutingEmailFlag() bool {
	if o == nil || IsNil(o.DisableRoutingEmailFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisableRoutingEmailFlag.Get()
}

// GetDisableRoutingEmailFlagOk returns a tuple with the DisableRoutingEmailFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetDisableRoutingEmailFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisableRoutingEmailFlag.Get(), o.DisableRoutingEmailFlag.IsSet()
}

// HasDisableRoutingEmailFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasDisableRoutingEmailFlag() bool {
	if o != nil && o.DisableRoutingEmailFlag.IsSet() {
		return true
	}

	return false
}

// SetDisableRoutingEmailFlag gets a reference to the given NullableBool and assigns it to the DisableRoutingEmailFlag field.
func (o *BillingSetup) SetDisableRoutingEmailFlag(v bool) {
	o.DisableRoutingEmailFlag.Set(&v)
}
// SetDisableRoutingEmailFlagNil sets the value for DisableRoutingEmailFlag to be an explicit nil
func (o *BillingSetup) SetDisableRoutingEmailFlagNil() {
	o.DisableRoutingEmailFlag.Set(nil)
}

// UnsetDisableRoutingEmailFlag ensures that no value is present for DisableRoutingEmailFlag, not even an explicit nil
func (o *BillingSetup) UnsetDisableRoutingEmailFlag() {
	o.DisableRoutingEmailFlag.Unset()
}

// GetEmailTemplate returns the EmailTemplate field value
func (o *BillingSetup) GetEmailTemplate() EmailTemplateReference {
	if o == nil {
		var ret EmailTemplateReference
		return ret
	}

	return o.EmailTemplate
}

// GetEmailTemplateOk returns a tuple with the EmailTemplate field value
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetEmailTemplateOk() (*EmailTemplateReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailTemplate, true
}

// SetEmailTemplate sets field value
func (o *BillingSetup) SetEmailTemplate(v EmailTemplateReference) {
	o.EmailTemplate = v
}

// GetLocalizedCountry returns the LocalizedCountry field value if set, zero value otherwise.
func (o *BillingSetup) GetLocalizedCountry() CountryReference {
	if o == nil || IsNil(o.LocalizedCountry) {
		var ret CountryReference
		return ret
	}
	return *o.LocalizedCountry
}

// GetLocalizedCountryOk returns a tuple with the LocalizedCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetLocalizedCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.LocalizedCountry) {
		return nil, false
	}
	return o.LocalizedCountry, true
}

// HasLocalizedCountry returns a boolean if a field has been set.
func (o *BillingSetup) HasLocalizedCountry() bool {
	if o != nil && !IsNil(o.LocalizedCountry) {
		return true
	}

	return false
}

// SetLocalizedCountry gets a reference to the given CountryReference and assigns it to the LocalizedCountry field.
func (o *BillingSetup) SetLocalizedCountry(v CountryReference) {
	o.LocalizedCountry = &v
}

// GetBusinessNumber returns the BusinessNumber field value if set, zero value otherwise.
func (o *BillingSetup) GetBusinessNumber() string {
	if o == nil || IsNil(o.BusinessNumber) {
		var ret string
		return ret
	}
	return *o.BusinessNumber
}

// GetBusinessNumberOk returns a tuple with the BusinessNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetBusinessNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessNumber) {
		return nil, false
	}
	return o.BusinessNumber, true
}

// HasBusinessNumber returns a boolean if a field has been set.
func (o *BillingSetup) HasBusinessNumber() bool {
	if o != nil && !IsNil(o.BusinessNumber) {
		return true
	}

	return false
}

// SetBusinessNumber gets a reference to the given string and assigns it to the BusinessNumber field.
func (o *BillingSetup) SetBusinessNumber(v string) {
	o.BusinessNumber = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BillingSetup) GetCurrency() CurrencyReference {
	if o == nil || IsNil(o.Currency) {
		var ret CurrencyReference
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BillingSetup) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given CurrencyReference and assigns it to the Currency field.
func (o *BillingSetup) SetCurrency(v CurrencyReference) {
	o.Currency = &v
}

// GetCustomLabel returns the CustomLabel field value if set, zero value otherwise.
func (o *BillingSetup) GetCustomLabel() string {
	if o == nil || IsNil(o.CustomLabel) {
		var ret string
		return ret
	}
	return *o.CustomLabel
}

// GetCustomLabelOk returns a tuple with the CustomLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCustomLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CustomLabel) {
		return nil, false
	}
	return o.CustomLabel, true
}

// HasCustomLabel returns a boolean if a field has been set.
func (o *BillingSetup) HasCustomLabel() bool {
	if o != nil && !IsNil(o.CustomLabel) {
		return true
	}

	return false
}

// SetCustomLabel gets a reference to the given string and assigns it to the CustomLabel field.
func (o *BillingSetup) SetCustomLabel(v string) {
	o.CustomLabel = &v
}

// GetCustomText returns the CustomText field value if set, zero value otherwise.
func (o *BillingSetup) GetCustomText() string {
	if o == nil || IsNil(o.CustomText) {
		var ret string
		return ret
	}
	return *o.CustomText
}

// GetCustomTextOk returns a tuple with the CustomText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCustomTextOk() (*string, bool) {
	if o == nil || IsNil(o.CustomText) {
		return nil, false
	}
	return o.CustomText, true
}

// HasCustomText returns a boolean if a field has been set.
func (o *BillingSetup) HasCustomText() bool {
	if o != nil && !IsNil(o.CustomText) {
		return true
	}

	return false
}

// SetCustomText gets a reference to the given string and assigns it to the CustomText field.
func (o *BillingSetup) SetCustomText(v string) {
	o.CustomText = &v
}

// GetCompanyCode returns the CompanyCode field value if set, zero value otherwise.
func (o *BillingSetup) GetCompanyCode() string {
	if o == nil || IsNil(o.CompanyCode) {
		var ret string
		return ret
	}
	return *o.CompanyCode
}

// GetCompanyCodeOk returns a tuple with the CompanyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetCompanyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyCode) {
		return nil, false
	}
	return o.CompanyCode, true
}

// HasCompanyCode returns a boolean if a field has been set.
func (o *BillingSetup) HasCompanyCode() bool {
	if o != nil && !IsNil(o.CompanyCode) {
		return true
	}

	return false
}

// SetCompanyCode gets a reference to the given string and assigns it to the CompanyCode field.
func (o *BillingSetup) SetCompanyCode(v string) {
	o.CompanyCode = &v
}

// GetExcludeAvalaraFlag returns the ExcludeAvalaraFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSetup) GetExcludeAvalaraFlag() bool {
	if o == nil || IsNil(o.ExcludeAvalaraFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludeAvalaraFlag.Get()
}

// GetExcludeAvalaraFlagOk returns a tuple with the ExcludeAvalaraFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetup) GetExcludeAvalaraFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludeAvalaraFlag.Get(), o.ExcludeAvalaraFlag.IsSet()
}

// HasExcludeAvalaraFlag returns a boolean if a field has been set.
func (o *BillingSetup) HasExcludeAvalaraFlag() bool {
	if o != nil && o.ExcludeAvalaraFlag.IsSet() {
		return true
	}

	return false
}

// SetExcludeAvalaraFlag gets a reference to the given NullableBool and assigns it to the ExcludeAvalaraFlag field.
func (o *BillingSetup) SetExcludeAvalaraFlag(v bool) {
	o.ExcludeAvalaraFlag.Set(&v)
}
// SetExcludeAvalaraFlagNil sets the value for ExcludeAvalaraFlag to be an explicit nil
func (o *BillingSetup) SetExcludeAvalaraFlagNil() {
	o.ExcludeAvalaraFlag.Set(nil)
}

// UnsetExcludeAvalaraFlag ensures that no value is present for ExcludeAvalaraFlag, not even an explicit nil
func (o *BillingSetup) UnsetExcludeAvalaraFlag() {
	o.ExcludeAvalaraFlag.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *BillingSetup) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetup) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *BillingSetup) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *BillingSetup) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o BillingSetup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingSetup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["remitName"] = o.RemitName
	toSerialize["location"] = o.Location
	if !IsNil(o.AddressOne) {
		toSerialize["addressOne"] = o.AddressOne
	}
	if !IsNil(o.AddressTwo) {
		toSerialize["addressTwo"] = o.AddressTwo
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	toSerialize["invoiceTitle"] = o.InvoiceTitle
	toSerialize["payableName"] = o.PayableName
	if !IsNil(o.Topcomment) {
		toSerialize["topcomment"] = o.Topcomment
	}
	if !IsNil(o.InvoiceFooter) {
		toSerialize["invoiceFooter"] = o.InvoiceFooter
	}
	if !IsNil(o.QuoteFooter) {
		toSerialize["quoteFooter"] = o.QuoteFooter
	}
	toSerialize["overallInvoiceDefault"] = o.OverallInvoiceDefault
	if !IsNil(o.StandardInvoiceActual) {
		toSerialize["standardInvoiceActual"] = o.StandardInvoiceActual
	}
	if !IsNil(o.StandardInvoiceFixed) {
		toSerialize["standardInvoiceFixed"] = o.StandardInvoiceFixed
	}
	if !IsNil(o.ProgressInvoice) {
		toSerialize["progressInvoice"] = o.ProgressInvoice
	}
	if !IsNil(o.AgreementInvoice) {
		toSerialize["agreementInvoice"] = o.AgreementInvoice
	}
	if !IsNil(o.CreditMemoInvoice) {
		toSerialize["creditMemoInvoice"] = o.CreditMemoInvoice
	}
	if !IsNil(o.DownPaymentInvoice) {
		toSerialize["downPaymentInvoice"] = o.DownPaymentInvoice
	}
	if !IsNil(o.MiscInvoice) {
		toSerialize["miscInvoice"] = o.MiscInvoice
	}
	if !IsNil(o.SalesOrderInvoice) {
		toSerialize["salesOrderInvoice"] = o.SalesOrderInvoice
	}
	if o.ExcludeDoNotBillTimeFlag.IsSet() {
		toSerialize["excludeDoNotBillTimeFlag"] = o.ExcludeDoNotBillTimeFlag.Get()
	}
	if o.ExcludeDoNotBillExpenseFlag.IsSet() {
		toSerialize["excludeDoNotBillExpenseFlag"] = o.ExcludeDoNotBillExpenseFlag.Get()
	}
	if o.ExcludeDoNotBillProductFlag.IsSet() {
		toSerialize["excludeDoNotBillProductFlag"] = o.ExcludeDoNotBillProductFlag.Get()
	}
	if o.PrefixSuffixFlag.IsSet() {
		toSerialize["prefixSuffixFlag"] = o.PrefixSuffixFlag.Get()
	}
	if !IsNil(o.PrefixSuffixText) {
		toSerialize["prefixSuffixText"] = o.PrefixSuffixText
	}
	if o.ChargeAdjToFirmFlag.IsSet() {
		toSerialize["chargeAdjToFirmFlag"] = o.ChargeAdjToFirmFlag.Get()
	}
	if o.NoWatermarkFlag.IsSet() {
		toSerialize["noWatermarkFlag"] = o.NoWatermarkFlag.Get()
	}
	if o.DisplayTaxFlag.IsSet() {
		toSerialize["displayTaxFlag"] = o.DisplayTaxFlag.Get()
	}
	if o.AllowRestrictedDeptOnRoutingFlag.IsSet() {
		toSerialize["allowRestrictedDeptOnRoutingFlag"] = o.AllowRestrictedDeptOnRoutingFlag.Get()
	}
	if o.BillTicketSeparatelyFlag.IsSet() {
		toSerialize["billTicketSeparatelyFlag"] = o.BillTicketSeparatelyFlag.Get()
	}
	if o.BillTicketCompleteFlag.IsSet() {
		toSerialize["billTicketCompleteFlag"] = o.BillTicketCompleteFlag.Get()
	}
	if o.BillTicketUnapprovedFlag.IsSet() {
		toSerialize["billTicketUnapprovedFlag"] = o.BillTicketUnapprovedFlag.Get()
	}
	if o.BillProjectCompleteFlag.IsSet() {
		toSerialize["billProjectCompleteFlag"] = o.BillProjectCompleteFlag.Get()
	}
	if o.BillProjectUnapprovedFlag.IsSet() {
		toSerialize["billProjectUnapprovedFlag"] = o.BillProjectUnapprovedFlag.Get()
	}
	if o.ProgressTimeFlag.IsSet() {
		toSerialize["progressTimeFlag"] = o.ProgressTimeFlag.Get()
	}
	if o.RestrictProjectDownpaymentFlag.IsSet() {
		toSerialize["restrictProjectDownpaymentFlag"] = o.RestrictProjectDownpaymentFlag.Get()
	}
	if o.BillSalesOrderCompleteFlag.IsSet() {
		toSerialize["billSalesOrderCompleteFlag"] = o.BillSalesOrderCompleteFlag.Get()
	}
	if o.BillProductAfterShipFlag.IsSet() {
		toSerialize["billProductAfterShipFlag"] = o.BillProductAfterShipFlag.Get()
	}
	if o.RestrictDownpaymentFlag.IsSet() {
		toSerialize["restrictDownpaymentFlag"] = o.RestrictDownpaymentFlag.Get()
	}
	if o.CopyNonServiceProductsFlag.IsSet() {
		toSerialize["copyNonServiceProductsFlag"] = o.CopyNonServiceProductsFlag.Get()
	}
	if o.CopyServiceProductsFlag.IsSet() {
		toSerialize["copyServiceProductsFlag"] = o.CopyServiceProductsFlag.Get()
	}
	if o.CopyAgreementProductsFlag.IsSet() {
		toSerialize["copyAgreementProductsFlag"] = o.CopyAgreementProductsFlag.Get()
	}
	if o.PrintLogoFlag.IsSet() {
		toSerialize["printLogoFlag"] = o.PrintLogoFlag.Get()
	}
	if o.ReadReceiptFlag.IsSet() {
		toSerialize["readReceiptFlag"] = o.ReadReceiptFlag.Get()
	}
	if o.DeliveryReceiptFlag.IsSet() {
		toSerialize["deliveryReceiptFlag"] = o.DeliveryReceiptFlag.Get()
	}
	if o.AttachXmlInvoiceFlag.IsSet() {
		toSerialize["attachXmlInvoiceFlag"] = o.AttachXmlInvoiceFlag.Get()
	}
	if o.DisableRoutingEmailFlag.IsSet() {
		toSerialize["disableRoutingEmailFlag"] = o.DisableRoutingEmailFlag.Get()
	}
	toSerialize["emailTemplate"] = o.EmailTemplate
	if !IsNil(o.LocalizedCountry) {
		toSerialize["localizedCountry"] = o.LocalizedCountry
	}
	if !IsNil(o.BusinessNumber) {
		toSerialize["businessNumber"] = o.BusinessNumber
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CustomLabel) {
		toSerialize["customLabel"] = o.CustomLabel
	}
	if !IsNil(o.CustomText) {
		toSerialize["customText"] = o.CustomText
	}
	if !IsNil(o.CompanyCode) {
		toSerialize["companyCode"] = o.CompanyCode
	}
	if o.ExcludeAvalaraFlag.IsSet() {
		toSerialize["excludeAvalaraFlag"] = o.ExcludeAvalaraFlag.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *BillingSetup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"remitName",
		"location",
		"invoiceTitle",
		"payableName",
		"overallInvoiceDefault",
		"emailTemplate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingSetup := _BillingSetup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingSetup)

	if err != nil {
		return err
	}

	*o = BillingSetup(varBillingSetup)

	return err
}

type NullableBillingSetup struct {
	value *BillingSetup
	isSet bool
}

func (v NullableBillingSetup) Get() *BillingSetup {
	return v.value
}

func (v *NullableBillingSetup) Set(val *BillingSetup) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingSetup) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingSetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingSetup(val *BillingSetup) *NullableBillingSetup {
	return &NullableBillingSetup{value: val, isSet: true}
}

func (v NullableBillingSetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingSetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


