/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingSetupRouting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingSetupRouting{}

// BillingSetupRouting struct for BillingSetupRouting
type BillingSetupRouting struct {
	Id *int32 `json:"id,omitempty"`
	SequenceNumber NullableInt32 `json:"sequenceNumber"`
	InvoiceRule NullableString `json:"invoiceRule"`
	RoutingRule NullableString `json:"routingRule"`
	Member *MemberReference `json:"member,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _BillingSetupRouting BillingSetupRouting

// NewBillingSetupRouting instantiates a new BillingSetupRouting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingSetupRouting(sequenceNumber NullableInt32, invoiceRule NullableString, routingRule NullableString) *BillingSetupRouting {
	this := BillingSetupRouting{}
	this.SequenceNumber = sequenceNumber
	this.InvoiceRule = invoiceRule
	this.RoutingRule = routingRule
	return &this
}

// NewBillingSetupRoutingWithDefaults instantiates a new BillingSetupRouting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingSetupRoutingWithDefaults() *BillingSetupRouting {
	this := BillingSetupRouting{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BillingSetupRouting) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupRouting) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BillingSetupRouting) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BillingSetupRouting) SetId(v int32) {
	o.Id = &v
}

// GetSequenceNumber returns the SequenceNumber field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *BillingSetupRouting) GetSequenceNumber() int32 {
	if o == nil || o.SequenceNumber.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SequenceNumber.Get()
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetupRouting) GetSequenceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SequenceNumber.Get(), o.SequenceNumber.IsSet()
}

// SetSequenceNumber sets field value
func (o *BillingSetupRouting) SetSequenceNumber(v int32) {
	o.SequenceNumber.Set(&v)
}

// GetInvoiceRule returns the InvoiceRule field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingSetupRouting) GetInvoiceRule() string {
	if o == nil || o.InvoiceRule.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoiceRule.Get()
}

// GetInvoiceRuleOk returns a tuple with the InvoiceRule field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetupRouting) GetInvoiceRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceRule.Get(), o.InvoiceRule.IsSet()
}

// SetInvoiceRule sets field value
func (o *BillingSetupRouting) SetInvoiceRule(v string) {
	o.InvoiceRule.Set(&v)
}

// GetRoutingRule returns the RoutingRule field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingSetupRouting) GetRoutingRule() string {
	if o == nil || o.RoutingRule.Get() == nil {
		var ret string
		return ret
	}

	return *o.RoutingRule.Get()
}

// GetRoutingRuleOk returns a tuple with the RoutingRule field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSetupRouting) GetRoutingRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoutingRule.Get(), o.RoutingRule.IsSet()
}

// SetRoutingRule sets field value
func (o *BillingSetupRouting) SetRoutingRule(v string) {
	o.RoutingRule.Set(&v)
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *BillingSetupRouting) GetMember() MemberReference {
	if o == nil || IsNil(o.Member) {
		var ret MemberReference
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupRouting) GetMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *BillingSetupRouting) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given MemberReference and assigns it to the Member field.
func (o *BillingSetupRouting) SetMember(v MemberReference) {
	o.Member = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *BillingSetupRouting) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupRouting) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *BillingSetupRouting) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *BillingSetupRouting) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o BillingSetupRouting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingSetupRouting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["sequenceNumber"] = o.SequenceNumber.Get()
	toSerialize["invoiceRule"] = o.InvoiceRule.Get()
	toSerialize["routingRule"] = o.RoutingRule.Get()
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *BillingSetupRouting) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sequenceNumber",
		"invoiceRule",
		"routingRule",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingSetupRouting := _BillingSetupRouting{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingSetupRouting)

	if err != nil {
		return err
	}

	*o = BillingSetupRouting(varBillingSetupRouting)

	return err
}

type NullableBillingSetupRouting struct {
	value *BillingSetupRouting
	isSet bool
}

func (v NullableBillingSetupRouting) Get() *BillingSetupRouting {
	return v.value
}

func (v *NullableBillingSetupRouting) Set(val *BillingSetupRouting) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingSetupRouting) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingSetupRouting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingSetupRouting(val *BillingSetupRouting) *NullableBillingSetupRouting {
	return &NullableBillingSetupRouting{value: val, isSet: true}
}

func (v NullableBillingSetupRouting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingSetupRouting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


