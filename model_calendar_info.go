/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the CalendarInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CalendarInfo{}

// CalendarInfo struct for CalendarInfo
type CalendarInfo struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	HolidayList *HolidayListReference `json:"holidayList,omitempty"`
	MondayStartTime *string `json:"mondayStartTime,omitempty"`
	MondayEndTime *string `json:"mondayEndTime,omitempty"`
	TuesdayStartTime *string `json:"tuesdayStartTime,omitempty"`
	TuesdayEndTime *string `json:"tuesdayEndTime,omitempty"`
	WednesdayStartTime *string `json:"wednesdayStartTime,omitempty"`
	WednesdayEndTime *string `json:"wednesdayEndTime,omitempty"`
	ThursdayStartTime *string `json:"thursdayStartTime,omitempty"`
	ThursdayEndTime *string `json:"thursdayEndTime,omitempty"`
	FridayStartTime *string `json:"fridayStartTime,omitempty"`
	FridayEndTime *string `json:"fridayEndTime,omitempty"`
	SaturdayStartTime *string `json:"saturdayStartTime,omitempty"`
	SaturdayEndTime *string `json:"saturdayEndTime,omitempty"`
	SundayStartTime *string `json:"sundayStartTime,omitempty"`
	SundayEndTime *string `json:"sundayEndTime,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewCalendarInfo instantiates a new CalendarInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCalendarInfo() *CalendarInfo {
	this := CalendarInfo{}
	return &this
}

// NewCalendarInfoWithDefaults instantiates a new CalendarInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalendarInfoWithDefaults() *CalendarInfo {
	this := CalendarInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CalendarInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CalendarInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CalendarInfo) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CalendarInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CalendarInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CalendarInfo) SetName(v string) {
	o.Name = &v
}

// GetHolidayList returns the HolidayList field value if set, zero value otherwise.
func (o *CalendarInfo) GetHolidayList() HolidayListReference {
	if o == nil || IsNil(o.HolidayList) {
		var ret HolidayListReference
		return ret
	}
	return *o.HolidayList
}

// GetHolidayListOk returns a tuple with the HolidayList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetHolidayListOk() (*HolidayListReference, bool) {
	if o == nil || IsNil(o.HolidayList) {
		return nil, false
	}
	return o.HolidayList, true
}

// HasHolidayList returns a boolean if a field has been set.
func (o *CalendarInfo) HasHolidayList() bool {
	if o != nil && !IsNil(o.HolidayList) {
		return true
	}

	return false
}

// SetHolidayList gets a reference to the given HolidayListReference and assigns it to the HolidayList field.
func (o *CalendarInfo) SetHolidayList(v HolidayListReference) {
	o.HolidayList = &v
}

// GetMondayStartTime returns the MondayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetMondayStartTime() string {
	if o == nil || IsNil(o.MondayStartTime) {
		var ret string
		return ret
	}
	return *o.MondayStartTime
}

// GetMondayStartTimeOk returns a tuple with the MondayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetMondayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MondayStartTime) {
		return nil, false
	}
	return o.MondayStartTime, true
}

// HasMondayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasMondayStartTime() bool {
	if o != nil && !IsNil(o.MondayStartTime) {
		return true
	}

	return false
}

// SetMondayStartTime gets a reference to the given string and assigns it to the MondayStartTime field.
func (o *CalendarInfo) SetMondayStartTime(v string) {
	o.MondayStartTime = &v
}

// GetMondayEndTime returns the MondayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetMondayEndTime() string {
	if o == nil || IsNil(o.MondayEndTime) {
		var ret string
		return ret
	}
	return *o.MondayEndTime
}

// GetMondayEndTimeOk returns a tuple with the MondayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetMondayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MondayEndTime) {
		return nil, false
	}
	return o.MondayEndTime, true
}

// HasMondayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasMondayEndTime() bool {
	if o != nil && !IsNil(o.MondayEndTime) {
		return true
	}

	return false
}

// SetMondayEndTime gets a reference to the given string and assigns it to the MondayEndTime field.
func (o *CalendarInfo) SetMondayEndTime(v string) {
	o.MondayEndTime = &v
}

// GetTuesdayStartTime returns the TuesdayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetTuesdayStartTime() string {
	if o == nil || IsNil(o.TuesdayStartTime) {
		var ret string
		return ret
	}
	return *o.TuesdayStartTime
}

// GetTuesdayStartTimeOk returns a tuple with the TuesdayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetTuesdayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TuesdayStartTime) {
		return nil, false
	}
	return o.TuesdayStartTime, true
}

// HasTuesdayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasTuesdayStartTime() bool {
	if o != nil && !IsNil(o.TuesdayStartTime) {
		return true
	}

	return false
}

// SetTuesdayStartTime gets a reference to the given string and assigns it to the TuesdayStartTime field.
func (o *CalendarInfo) SetTuesdayStartTime(v string) {
	o.TuesdayStartTime = &v
}

// GetTuesdayEndTime returns the TuesdayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetTuesdayEndTime() string {
	if o == nil || IsNil(o.TuesdayEndTime) {
		var ret string
		return ret
	}
	return *o.TuesdayEndTime
}

// GetTuesdayEndTimeOk returns a tuple with the TuesdayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetTuesdayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TuesdayEndTime) {
		return nil, false
	}
	return o.TuesdayEndTime, true
}

// HasTuesdayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasTuesdayEndTime() bool {
	if o != nil && !IsNil(o.TuesdayEndTime) {
		return true
	}

	return false
}

// SetTuesdayEndTime gets a reference to the given string and assigns it to the TuesdayEndTime field.
func (o *CalendarInfo) SetTuesdayEndTime(v string) {
	o.TuesdayEndTime = &v
}

// GetWednesdayStartTime returns the WednesdayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetWednesdayStartTime() string {
	if o == nil || IsNil(o.WednesdayStartTime) {
		var ret string
		return ret
	}
	return *o.WednesdayStartTime
}

// GetWednesdayStartTimeOk returns a tuple with the WednesdayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetWednesdayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WednesdayStartTime) {
		return nil, false
	}
	return o.WednesdayStartTime, true
}

// HasWednesdayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasWednesdayStartTime() bool {
	if o != nil && !IsNil(o.WednesdayStartTime) {
		return true
	}

	return false
}

// SetWednesdayStartTime gets a reference to the given string and assigns it to the WednesdayStartTime field.
func (o *CalendarInfo) SetWednesdayStartTime(v string) {
	o.WednesdayStartTime = &v
}

// GetWednesdayEndTime returns the WednesdayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetWednesdayEndTime() string {
	if o == nil || IsNil(o.WednesdayEndTime) {
		var ret string
		return ret
	}
	return *o.WednesdayEndTime
}

// GetWednesdayEndTimeOk returns a tuple with the WednesdayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetWednesdayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WednesdayEndTime) {
		return nil, false
	}
	return o.WednesdayEndTime, true
}

// HasWednesdayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasWednesdayEndTime() bool {
	if o != nil && !IsNil(o.WednesdayEndTime) {
		return true
	}

	return false
}

// SetWednesdayEndTime gets a reference to the given string and assigns it to the WednesdayEndTime field.
func (o *CalendarInfo) SetWednesdayEndTime(v string) {
	o.WednesdayEndTime = &v
}

// GetThursdayStartTime returns the ThursdayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetThursdayStartTime() string {
	if o == nil || IsNil(o.ThursdayStartTime) {
		var ret string
		return ret
	}
	return *o.ThursdayStartTime
}

// GetThursdayStartTimeOk returns a tuple with the ThursdayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetThursdayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ThursdayStartTime) {
		return nil, false
	}
	return o.ThursdayStartTime, true
}

// HasThursdayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasThursdayStartTime() bool {
	if o != nil && !IsNil(o.ThursdayStartTime) {
		return true
	}

	return false
}

// SetThursdayStartTime gets a reference to the given string and assigns it to the ThursdayStartTime field.
func (o *CalendarInfo) SetThursdayStartTime(v string) {
	o.ThursdayStartTime = &v
}

// GetThursdayEndTime returns the ThursdayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetThursdayEndTime() string {
	if o == nil || IsNil(o.ThursdayEndTime) {
		var ret string
		return ret
	}
	return *o.ThursdayEndTime
}

// GetThursdayEndTimeOk returns a tuple with the ThursdayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetThursdayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ThursdayEndTime) {
		return nil, false
	}
	return o.ThursdayEndTime, true
}

// HasThursdayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasThursdayEndTime() bool {
	if o != nil && !IsNil(o.ThursdayEndTime) {
		return true
	}

	return false
}

// SetThursdayEndTime gets a reference to the given string and assigns it to the ThursdayEndTime field.
func (o *CalendarInfo) SetThursdayEndTime(v string) {
	o.ThursdayEndTime = &v
}

// GetFridayStartTime returns the FridayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetFridayStartTime() string {
	if o == nil || IsNil(o.FridayStartTime) {
		var ret string
		return ret
	}
	return *o.FridayStartTime
}

// GetFridayStartTimeOk returns a tuple with the FridayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetFridayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FridayStartTime) {
		return nil, false
	}
	return o.FridayStartTime, true
}

// HasFridayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasFridayStartTime() bool {
	if o != nil && !IsNil(o.FridayStartTime) {
		return true
	}

	return false
}

// SetFridayStartTime gets a reference to the given string and assigns it to the FridayStartTime field.
func (o *CalendarInfo) SetFridayStartTime(v string) {
	o.FridayStartTime = &v
}

// GetFridayEndTime returns the FridayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetFridayEndTime() string {
	if o == nil || IsNil(o.FridayEndTime) {
		var ret string
		return ret
	}
	return *o.FridayEndTime
}

// GetFridayEndTimeOk returns a tuple with the FridayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetFridayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FridayEndTime) {
		return nil, false
	}
	return o.FridayEndTime, true
}

// HasFridayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasFridayEndTime() bool {
	if o != nil && !IsNil(o.FridayEndTime) {
		return true
	}

	return false
}

// SetFridayEndTime gets a reference to the given string and assigns it to the FridayEndTime field.
func (o *CalendarInfo) SetFridayEndTime(v string) {
	o.FridayEndTime = &v
}

// GetSaturdayStartTime returns the SaturdayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetSaturdayStartTime() string {
	if o == nil || IsNil(o.SaturdayStartTime) {
		var ret string
		return ret
	}
	return *o.SaturdayStartTime
}

// GetSaturdayStartTimeOk returns a tuple with the SaturdayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetSaturdayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SaturdayStartTime) {
		return nil, false
	}
	return o.SaturdayStartTime, true
}

// HasSaturdayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasSaturdayStartTime() bool {
	if o != nil && !IsNil(o.SaturdayStartTime) {
		return true
	}

	return false
}

// SetSaturdayStartTime gets a reference to the given string and assigns it to the SaturdayStartTime field.
func (o *CalendarInfo) SetSaturdayStartTime(v string) {
	o.SaturdayStartTime = &v
}

// GetSaturdayEndTime returns the SaturdayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetSaturdayEndTime() string {
	if o == nil || IsNil(o.SaturdayEndTime) {
		var ret string
		return ret
	}
	return *o.SaturdayEndTime
}

// GetSaturdayEndTimeOk returns a tuple with the SaturdayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetSaturdayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SaturdayEndTime) {
		return nil, false
	}
	return o.SaturdayEndTime, true
}

// HasSaturdayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasSaturdayEndTime() bool {
	if o != nil && !IsNil(o.SaturdayEndTime) {
		return true
	}

	return false
}

// SetSaturdayEndTime gets a reference to the given string and assigns it to the SaturdayEndTime field.
func (o *CalendarInfo) SetSaturdayEndTime(v string) {
	o.SaturdayEndTime = &v
}

// GetSundayStartTime returns the SundayStartTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetSundayStartTime() string {
	if o == nil || IsNil(o.SundayStartTime) {
		var ret string
		return ret
	}
	return *o.SundayStartTime
}

// GetSundayStartTimeOk returns a tuple with the SundayStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetSundayStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SundayStartTime) {
		return nil, false
	}
	return o.SundayStartTime, true
}

// HasSundayStartTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasSundayStartTime() bool {
	if o != nil && !IsNil(o.SundayStartTime) {
		return true
	}

	return false
}

// SetSundayStartTime gets a reference to the given string and assigns it to the SundayStartTime field.
func (o *CalendarInfo) SetSundayStartTime(v string) {
	o.SundayStartTime = &v
}

// GetSundayEndTime returns the SundayEndTime field value if set, zero value otherwise.
func (o *CalendarInfo) GetSundayEndTime() string {
	if o == nil || IsNil(o.SundayEndTime) {
		var ret string
		return ret
	}
	return *o.SundayEndTime
}

// GetSundayEndTimeOk returns a tuple with the SundayEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetSundayEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SundayEndTime) {
		return nil, false
	}
	return o.SundayEndTime, true
}

// HasSundayEndTime returns a boolean if a field has been set.
func (o *CalendarInfo) HasSundayEndTime() bool {
	if o != nil && !IsNil(o.SundayEndTime) {
		return true
	}

	return false
}

// SetSundayEndTime gets a reference to the given string and assigns it to the SundayEndTime field.
func (o *CalendarInfo) SetSundayEndTime(v string) {
	o.SundayEndTime = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CalendarInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CalendarInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CalendarInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o CalendarInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CalendarInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.HolidayList) {
		toSerialize["holidayList"] = o.HolidayList
	}
	if !IsNil(o.MondayStartTime) {
		toSerialize["mondayStartTime"] = o.MondayStartTime
	}
	if !IsNil(o.MondayEndTime) {
		toSerialize["mondayEndTime"] = o.MondayEndTime
	}
	if !IsNil(o.TuesdayStartTime) {
		toSerialize["tuesdayStartTime"] = o.TuesdayStartTime
	}
	if !IsNil(o.TuesdayEndTime) {
		toSerialize["tuesdayEndTime"] = o.TuesdayEndTime
	}
	if !IsNil(o.WednesdayStartTime) {
		toSerialize["wednesdayStartTime"] = o.WednesdayStartTime
	}
	if !IsNil(o.WednesdayEndTime) {
		toSerialize["wednesdayEndTime"] = o.WednesdayEndTime
	}
	if !IsNil(o.ThursdayStartTime) {
		toSerialize["thursdayStartTime"] = o.ThursdayStartTime
	}
	if !IsNil(o.ThursdayEndTime) {
		toSerialize["thursdayEndTime"] = o.ThursdayEndTime
	}
	if !IsNil(o.FridayStartTime) {
		toSerialize["fridayStartTime"] = o.FridayStartTime
	}
	if !IsNil(o.FridayEndTime) {
		toSerialize["fridayEndTime"] = o.FridayEndTime
	}
	if !IsNil(o.SaturdayStartTime) {
		toSerialize["saturdayStartTime"] = o.SaturdayStartTime
	}
	if !IsNil(o.SaturdayEndTime) {
		toSerialize["saturdayEndTime"] = o.SaturdayEndTime
	}
	if !IsNil(o.SundayStartTime) {
		toSerialize["sundayStartTime"] = o.SundayStartTime
	}
	if !IsNil(o.SundayEndTime) {
		toSerialize["sundayEndTime"] = o.SundayEndTime
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableCalendarInfo struct {
	value *CalendarInfo
	isSet bool
}

func (v NullableCalendarInfo) Get() *CalendarInfo {
	return v.value
}

func (v *NullableCalendarInfo) Set(val *CalendarInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCalendarInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCalendarInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCalendarInfo(val *CalendarInfo) *NullableCalendarInfo {
	return &NullableCalendarInfo{value: val, isSet: true}
}

func (v NullableCalendarInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCalendarInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


