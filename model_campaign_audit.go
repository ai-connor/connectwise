/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CampaignAudit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignAudit{}

// CampaignAudit struct for CampaignAudit
type CampaignAudit struct {
	Id *int32 `json:"id,omitempty"`
	EmailsSent NullableInt32 `json:"emailsSent"`
	EmailsUnsent NullableInt32 `json:"emailsUnsent,omitempty"`
	DocumentsCreated NullableInt32 `json:"documentsCreated,omitempty"`
	//  Max length: 1000;
	EmailSubject *string `json:"emailSubject,omitempty"`
	Group *GroupReference `json:"group,omitempty"`
	CampaignId NullableInt32 `json:"campaignId,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	DateCreated *string `json:"dateCreated,omitempty"`
}

type _CampaignAudit CampaignAudit

// NewCampaignAudit instantiates a new CampaignAudit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignAudit(emailsSent NullableInt32) *CampaignAudit {
	this := CampaignAudit{}
	this.EmailsSent = emailsSent
	return &this
}

// NewCampaignAuditWithDefaults instantiates a new CampaignAudit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignAuditWithDefaults() *CampaignAudit {
	this := CampaignAudit{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CampaignAudit) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAudit) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CampaignAudit) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CampaignAudit) SetId(v int32) {
	o.Id = &v
}

// GetEmailsSent returns the EmailsSent field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *CampaignAudit) GetEmailsSent() int32 {
	if o == nil || o.EmailsSent.Get() == nil {
		var ret int32
		return ret
	}

	return *o.EmailsSent.Get()
}

// GetEmailsSentOk returns a tuple with the EmailsSent field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAudit) GetEmailsSentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailsSent.Get(), o.EmailsSent.IsSet()
}

// SetEmailsSent sets field value
func (o *CampaignAudit) SetEmailsSent(v int32) {
	o.EmailsSent.Set(&v)
}

// GetEmailsUnsent returns the EmailsUnsent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignAudit) GetEmailsUnsent() int32 {
	if o == nil || IsNil(o.EmailsUnsent.Get()) {
		var ret int32
		return ret
	}
	return *o.EmailsUnsent.Get()
}

// GetEmailsUnsentOk returns a tuple with the EmailsUnsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAudit) GetEmailsUnsentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailsUnsent.Get(), o.EmailsUnsent.IsSet()
}

// HasEmailsUnsent returns a boolean if a field has been set.
func (o *CampaignAudit) HasEmailsUnsent() bool {
	if o != nil && o.EmailsUnsent.IsSet() {
		return true
	}

	return false
}

// SetEmailsUnsent gets a reference to the given NullableInt32 and assigns it to the EmailsUnsent field.
func (o *CampaignAudit) SetEmailsUnsent(v int32) {
	o.EmailsUnsent.Set(&v)
}
// SetEmailsUnsentNil sets the value for EmailsUnsent to be an explicit nil
func (o *CampaignAudit) SetEmailsUnsentNil() {
	o.EmailsUnsent.Set(nil)
}

// UnsetEmailsUnsent ensures that no value is present for EmailsUnsent, not even an explicit nil
func (o *CampaignAudit) UnsetEmailsUnsent() {
	o.EmailsUnsent.Unset()
}

// GetDocumentsCreated returns the DocumentsCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignAudit) GetDocumentsCreated() int32 {
	if o == nil || IsNil(o.DocumentsCreated.Get()) {
		var ret int32
		return ret
	}
	return *o.DocumentsCreated.Get()
}

// GetDocumentsCreatedOk returns a tuple with the DocumentsCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAudit) GetDocumentsCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentsCreated.Get(), o.DocumentsCreated.IsSet()
}

// HasDocumentsCreated returns a boolean if a field has been set.
func (o *CampaignAudit) HasDocumentsCreated() bool {
	if o != nil && o.DocumentsCreated.IsSet() {
		return true
	}

	return false
}

// SetDocumentsCreated gets a reference to the given NullableInt32 and assigns it to the DocumentsCreated field.
func (o *CampaignAudit) SetDocumentsCreated(v int32) {
	o.DocumentsCreated.Set(&v)
}
// SetDocumentsCreatedNil sets the value for DocumentsCreated to be an explicit nil
func (o *CampaignAudit) SetDocumentsCreatedNil() {
	o.DocumentsCreated.Set(nil)
}

// UnsetDocumentsCreated ensures that no value is present for DocumentsCreated, not even an explicit nil
func (o *CampaignAudit) UnsetDocumentsCreated() {
	o.DocumentsCreated.Unset()
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise.
func (o *CampaignAudit) GetEmailSubject() string {
	if o == nil || IsNil(o.EmailSubject) {
		var ret string
		return ret
	}
	return *o.EmailSubject
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAudit) GetEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.EmailSubject) {
		return nil, false
	}
	return o.EmailSubject, true
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *CampaignAudit) HasEmailSubject() bool {
	if o != nil && !IsNil(o.EmailSubject) {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given string and assigns it to the EmailSubject field.
func (o *CampaignAudit) SetEmailSubject(v string) {
	o.EmailSubject = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *CampaignAudit) GetGroup() GroupReference {
	if o == nil || IsNil(o.Group) {
		var ret GroupReference
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAudit) GetGroupOk() (*GroupReference, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *CampaignAudit) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given GroupReference and assigns it to the Group field.
func (o *CampaignAudit) SetGroup(v GroupReference) {
	o.Group = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignAudit) GetCampaignId() int32 {
	if o == nil || IsNil(o.CampaignId.Get()) {
		var ret int32
		return ret
	}
	return *o.CampaignId.Get()
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAudit) GetCampaignIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CampaignId.Get(), o.CampaignId.IsSet()
}

// HasCampaignId returns a boolean if a field has been set.
func (o *CampaignAudit) HasCampaignId() bool {
	if o != nil && o.CampaignId.IsSet() {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given NullableInt32 and assigns it to the CampaignId field.
func (o *CampaignAudit) SetCampaignId(v int32) {
	o.CampaignId.Set(&v)
}
// SetCampaignIdNil sets the value for CampaignId to be an explicit nil
func (o *CampaignAudit) SetCampaignIdNil() {
	o.CampaignId.Set(nil)
}

// UnsetCampaignId ensures that no value is present for CampaignId, not even an explicit nil
func (o *CampaignAudit) UnsetCampaignId() {
	o.CampaignId.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *CampaignAudit) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAudit) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *CampaignAudit) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *CampaignAudit) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *CampaignAudit) GetDateCreated() string {
	if o == nil || IsNil(o.DateCreated) {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAudit) GetDateCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *CampaignAudit) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *CampaignAudit) SetDateCreated(v string) {
	o.DateCreated = &v
}

func (o CampaignAudit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignAudit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["emailsSent"] = o.EmailsSent.Get()
	if o.EmailsUnsent.IsSet() {
		toSerialize["emailsUnsent"] = o.EmailsUnsent.Get()
	}
	if o.DocumentsCreated.IsSet() {
		toSerialize["documentsCreated"] = o.DocumentsCreated.Get()
	}
	if !IsNil(o.EmailSubject) {
		toSerialize["emailSubject"] = o.EmailSubject
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if o.CampaignId.IsSet() {
		toSerialize["campaignId"] = o.CampaignId.Get()
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	return toSerialize, nil
}

func (o *CampaignAudit) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"emailsSent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCampaignAudit := _CampaignAudit{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCampaignAudit)

	if err != nil {
		return err
	}

	*o = CampaignAudit(varCampaignAudit)

	return err
}

type NullableCampaignAudit struct {
	value *CampaignAudit
	isSet bool
}

func (v NullableCampaignAudit) Get() *CampaignAudit {
	return v.value
}

func (v *NullableCampaignAudit) Set(val *CampaignAudit) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignAudit) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignAudit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignAudit(val *CampaignAudit) *NullableCampaignAudit {
	return &NullableCampaignAudit{value: val, isSet: true}
}

func (v NullableCampaignAudit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignAudit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


