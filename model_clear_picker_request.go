/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ClearPickerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClearPickerRequest{}

// ClearPickerRequest struct for ClearPickerRequest
type ClearPickerRequest struct {
	Member *MemberReference `json:"member,omitempty"`
	Type NullableString `json:"type,omitempty"`
}

// NewClearPickerRequest instantiates a new ClearPickerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClearPickerRequest() *ClearPickerRequest {
	this := ClearPickerRequest{}
	return &this
}

// NewClearPickerRequestWithDefaults instantiates a new ClearPickerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClearPickerRequestWithDefaults() *ClearPickerRequest {
	this := ClearPickerRequest{}
	return &this
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *ClearPickerRequest) GetMember() MemberReference {
	if o == nil || IsNil(o.Member) {
		var ret MemberReference
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClearPickerRequest) GetMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *ClearPickerRequest) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given MemberReference and assigns it to the Member field.
func (o *ClearPickerRequest) SetMember(v MemberReference) {
	o.Member = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClearPickerRequest) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClearPickerRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ClearPickerRequest) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ClearPickerRequest) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ClearPickerRequest) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ClearPickerRequest) UnsetType() {
	o.Type.Unset()
}

func (o ClearPickerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClearPickerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return toSerialize, nil
}

type NullableClearPickerRequest struct {
	value *ClearPickerRequest
	isSet bool
}

func (v NullableClearPickerRequest) Get() *ClearPickerRequest {
	return v.value
}

func (v *NullableClearPickerRequest) Set(val *ClearPickerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClearPickerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClearPickerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClearPickerRequest(val *ClearPickerRequest) *NullableClearPickerRequest {
	return &NullableClearPickerRequest{value: val, isSet: true}
}

func (v NullableClearPickerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClearPickerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


