/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CompanyConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyConfiguration{}

// CompanyConfiguration struct for CompanyConfiguration
type CompanyConfiguration struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 100;
	Name string `json:"name"`
	Type ConfigurationTypeReference `json:"type"`
	Status *ConfigurationStatusReference `json:"status,omitempty"`
	Company CompanyReference `json:"company"`
	Contact *ContactReference `json:"contact,omitempty"`
	Site *SiteReference `json:"site,omitempty"`
	LocationId NullableInt32 `json:"locationId,omitempty"`
	Location *SystemLocationReference `json:"location,omitempty"`
	BusinessUnitId NullableInt32 `json:"businessUnitId,omitempty"`
	Department *SystemDepartmentReference `json:"department,omitempty"`
	//  Max length: 100;
	DeviceIdentifier *string `json:"deviceIdentifier,omitempty"`
	//  Max length: 250;
	SerialNumber *string `json:"serialNumber,omitempty"`
	//  Max length: 50;
	ModelNumber *string `json:"modelNumber,omitempty"`
	//  Max length: 50;
	TagNumber *string `json:"tagNumber,omitempty"`
	PurchaseDate *time.Time `json:"purchaseDate,omitempty"`
	InstallationDate *time.Time `json:"installationDate,omitempty"`
	InstalledBy *MemberReference `json:"installedBy,omitempty"`
	WarrantyExpirationDate *time.Time `json:"warrantyExpirationDate,omitempty"`
	VendorNotes *string `json:"vendorNotes,omitempty"`
	Notes *string `json:"notes,omitempty"`
	//  Max length: 25;
	MacAddress *string `json:"macAddress,omitempty"`
	//  Max length: 100;
	LastLoginName *string `json:"lastLoginName,omitempty"`
	BillFlag NullableBool `json:"billFlag,omitempty"`
	BackupSuccesses NullableInt32 `json:"backupSuccesses,omitempty"`
	BackupIncomplete NullableInt32 `json:"backupIncomplete,omitempty"`
	BackupFailed NullableInt32 `json:"backupFailed,omitempty"`
	BackupRestores NullableInt32 `json:"backupRestores,omitempty"`
	LastBackupDate *time.Time `json:"lastBackupDate,omitempty"`
	//  Max length: 50;
	BackupServerName *string `json:"backupServerName,omitempty"`
	BackupBillableSpaceGb NullableFloat64 `json:"backupBillableSpaceGb,omitempty"`
	BackupProtectedDeviceList *string `json:"backupProtectedDeviceList,omitempty"`
	BackupYear NullableInt32 `json:"backupYear,omitempty"`
	BackupMonth NullableInt32 `json:"backupMonth,omitempty"`
	//  Max length: 50;
	IpAddress *string `json:"ipAddress,omitempty"`
	//  Max length: 50;
	DefaultGateway *string `json:"defaultGateway,omitempty"`
	//  Max length: 250;
	OsType *string `json:"osType,omitempty"`
	//  Max length: 250;
	OsInfo *string `json:"osInfo,omitempty"`
	//  Max length: 100;
	CpuSpeed *string `json:"cpuSpeed,omitempty"`
	//  Max length: 25;
	Ram *string `json:"ram,omitempty"`
	LocalHardDrives *string `json:"localHardDrives,omitempty"`
	ParentConfigurationId NullableInt32 `json:"parentConfigurationId,omitempty"`
	Vendor *CompanyReference `json:"vendor,omitempty"`
	Manufacturer *ManufacturerReference `json:"manufacturer,omitempty"`
	Questions []ConfigurationQuestion `json:"questions,omitempty"`
	ActiveFlag NullableBool `json:"activeFlag,omitempty"`
	//  Max length: 1000;
	ManagementLink *string `json:"managementLink,omitempty"`
	//  Max length: 1000;
	RemoteLink *string `json:"remoteLink,omitempty"`
	Sla *SLAReference `json:"sla,omitempty"`
	MobileGuid NullableString `json:"mobileGuid,omitempty"`
	DisplayVendorFlag NullableBool `json:"displayVendorFlag,omitempty"`
	CompanyLocationId NullableInt32 `json:"companyLocationId,omitempty"`
	ShowRemoteFlag NullableBool `json:"showRemoteFlag,omitempty"`
	ShowAutomateFlag NullableBool `json:"showAutomateFlag,omitempty"`
	NeedsRenewalFlag NullableBool `json:"needsRenewalFlag,omitempty"`
	//  Max length: 50;
	ManufacturerPartNumber *string `json:"manufacturerPartNumber,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
	CustomFields []CustomFieldValue `json:"customFields,omitempty"`
}

type _CompanyConfiguration CompanyConfiguration

// NewCompanyConfiguration instantiates a new CompanyConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyConfiguration(name string, type_ ConfigurationTypeReference, company CompanyReference) *CompanyConfiguration {
	this := CompanyConfiguration{}
	this.Name = name
	this.Type = type_
	this.Company = company
	return &this
}

// NewCompanyConfigurationWithDefaults instantiates a new CompanyConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyConfigurationWithDefaults() *CompanyConfiguration {
	this := CompanyConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanyConfiguration) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *CompanyConfiguration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CompanyConfiguration) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *CompanyConfiguration) GetType() ConfigurationTypeReference {
	if o == nil {
		var ret ConfigurationTypeReference
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetTypeOk() (*ConfigurationTypeReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CompanyConfiguration) SetType(v ConfigurationTypeReference) {
	o.Type = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetStatus() ConfigurationStatusReference {
	if o == nil || IsNil(o.Status) {
		var ret ConfigurationStatusReference
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetStatusOk() (*ConfigurationStatusReference, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ConfigurationStatusReference and assigns it to the Status field.
func (o *CompanyConfiguration) SetStatus(v ConfigurationStatusReference) {
	o.Status = &v
}

// GetCompany returns the Company field value
func (o *CompanyConfiguration) GetCompany() CompanyReference {
	if o == nil {
		var ret CompanyReference
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetCompanyOk() (*CompanyReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *CompanyConfiguration) SetCompany(v CompanyReference) {
	o.Company = v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetContact() ContactReference {
	if o == nil || IsNil(o.Contact) {
		var ret ContactReference
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given ContactReference and assigns it to the Contact field.
func (o *CompanyConfiguration) SetContact(v ContactReference) {
	o.Contact = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetSite() SiteReference {
	if o == nil || IsNil(o.Site) {
		var ret SiteReference
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given SiteReference and assigns it to the Site field.
func (o *CompanyConfiguration) SetSite(v SiteReference) {
	o.Site = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetLocationId() int32 {
	if o == nil || IsNil(o.LocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.LocationId.Get()
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationId.Get(), o.LocationId.IsSet()
}

// HasLocationId returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasLocationId() bool {
	if o != nil && o.LocationId.IsSet() {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given NullableInt32 and assigns it to the LocationId field.
func (o *CompanyConfiguration) SetLocationId(v int32) {
	o.LocationId.Set(&v)
}
// SetLocationIdNil sets the value for LocationId to be an explicit nil
func (o *CompanyConfiguration) SetLocationIdNil() {
	o.LocationId.Set(nil)
}

// UnsetLocationId ensures that no value is present for LocationId, not even an explicit nil
func (o *CompanyConfiguration) UnsetLocationId() {
	o.LocationId.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetLocation() SystemLocationReference {
	if o == nil || IsNil(o.Location) {
		var ret SystemLocationReference
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given SystemLocationReference and assigns it to the Location field.
func (o *CompanyConfiguration) SetLocation(v SystemLocationReference) {
	o.Location = &v
}

// GetBusinessUnitId returns the BusinessUnitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBusinessUnitId() int32 {
	if o == nil || IsNil(o.BusinessUnitId.Get()) {
		var ret int32
		return ret
	}
	return *o.BusinessUnitId.Get()
}

// GetBusinessUnitIdOk returns a tuple with the BusinessUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBusinessUnitIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessUnitId.Get(), o.BusinessUnitId.IsSet()
}

// HasBusinessUnitId returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBusinessUnitId() bool {
	if o != nil && o.BusinessUnitId.IsSet() {
		return true
	}

	return false
}

// SetBusinessUnitId gets a reference to the given NullableInt32 and assigns it to the BusinessUnitId field.
func (o *CompanyConfiguration) SetBusinessUnitId(v int32) {
	o.BusinessUnitId.Set(&v)
}
// SetBusinessUnitIdNil sets the value for BusinessUnitId to be an explicit nil
func (o *CompanyConfiguration) SetBusinessUnitIdNil() {
	o.BusinessUnitId.Set(nil)
}

// UnsetBusinessUnitId ensures that no value is present for BusinessUnitId, not even an explicit nil
func (o *CompanyConfiguration) UnsetBusinessUnitId() {
	o.BusinessUnitId.Unset()
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.Department) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given SystemDepartmentReference and assigns it to the Department field.
func (o *CompanyConfiguration) SetDepartment(v SystemDepartmentReference) {
	o.Department = &v
}

// GetDeviceIdentifier returns the DeviceIdentifier field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetDeviceIdentifier() string {
	if o == nil || IsNil(o.DeviceIdentifier) {
		var ret string
		return ret
	}
	return *o.DeviceIdentifier
}

// GetDeviceIdentifierOk returns a tuple with the DeviceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetDeviceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceIdentifier) {
		return nil, false
	}
	return o.DeviceIdentifier, true
}

// HasDeviceIdentifier returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasDeviceIdentifier() bool {
	if o != nil && !IsNil(o.DeviceIdentifier) {
		return true
	}

	return false
}

// SetDeviceIdentifier gets a reference to the given string and assigns it to the DeviceIdentifier field.
func (o *CompanyConfiguration) SetDeviceIdentifier(v string) {
	o.DeviceIdentifier = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *CompanyConfiguration) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetModelNumber returns the ModelNumber field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetModelNumber() string {
	if o == nil || IsNil(o.ModelNumber) {
		var ret string
		return ret
	}
	return *o.ModelNumber
}

// GetModelNumberOk returns a tuple with the ModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ModelNumber) {
		return nil, false
	}
	return o.ModelNumber, true
}

// HasModelNumber returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasModelNumber() bool {
	if o != nil && !IsNil(o.ModelNumber) {
		return true
	}

	return false
}

// SetModelNumber gets a reference to the given string and assigns it to the ModelNumber field.
func (o *CompanyConfiguration) SetModelNumber(v string) {
	o.ModelNumber = &v
}

// GetTagNumber returns the TagNumber field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetTagNumber() string {
	if o == nil || IsNil(o.TagNumber) {
		var ret string
		return ret
	}
	return *o.TagNumber
}

// GetTagNumberOk returns a tuple with the TagNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetTagNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TagNumber) {
		return nil, false
	}
	return o.TagNumber, true
}

// HasTagNumber returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasTagNumber() bool {
	if o != nil && !IsNil(o.TagNumber) {
		return true
	}

	return false
}

// SetTagNumber gets a reference to the given string and assigns it to the TagNumber field.
func (o *CompanyConfiguration) SetTagNumber(v string) {
	o.TagNumber = &v
}

// GetPurchaseDate returns the PurchaseDate field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetPurchaseDate() time.Time {
	if o == nil || IsNil(o.PurchaseDate) {
		var ret time.Time
		return ret
	}
	return *o.PurchaseDate
}

// GetPurchaseDateOk returns a tuple with the PurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetPurchaseDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PurchaseDate) {
		return nil, false
	}
	return o.PurchaseDate, true
}

// HasPurchaseDate returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasPurchaseDate() bool {
	if o != nil && !IsNil(o.PurchaseDate) {
		return true
	}

	return false
}

// SetPurchaseDate gets a reference to the given time.Time and assigns it to the PurchaseDate field.
func (o *CompanyConfiguration) SetPurchaseDate(v time.Time) {
	o.PurchaseDate = &v
}

// GetInstallationDate returns the InstallationDate field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetInstallationDate() time.Time {
	if o == nil || IsNil(o.InstallationDate) {
		var ret time.Time
		return ret
	}
	return *o.InstallationDate
}

// GetInstallationDateOk returns a tuple with the InstallationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetInstallationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InstallationDate) {
		return nil, false
	}
	return o.InstallationDate, true
}

// HasInstallationDate returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasInstallationDate() bool {
	if o != nil && !IsNil(o.InstallationDate) {
		return true
	}

	return false
}

// SetInstallationDate gets a reference to the given time.Time and assigns it to the InstallationDate field.
func (o *CompanyConfiguration) SetInstallationDate(v time.Time) {
	o.InstallationDate = &v
}

// GetInstalledBy returns the InstalledBy field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetInstalledBy() MemberReference {
	if o == nil || IsNil(o.InstalledBy) {
		var ret MemberReference
		return ret
	}
	return *o.InstalledBy
}

// GetInstalledByOk returns a tuple with the InstalledBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetInstalledByOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.InstalledBy) {
		return nil, false
	}
	return o.InstalledBy, true
}

// HasInstalledBy returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasInstalledBy() bool {
	if o != nil && !IsNil(o.InstalledBy) {
		return true
	}

	return false
}

// SetInstalledBy gets a reference to the given MemberReference and assigns it to the InstalledBy field.
func (o *CompanyConfiguration) SetInstalledBy(v MemberReference) {
	o.InstalledBy = &v
}

// GetWarrantyExpirationDate returns the WarrantyExpirationDate field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetWarrantyExpirationDate() time.Time {
	if o == nil || IsNil(o.WarrantyExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.WarrantyExpirationDate
}

// GetWarrantyExpirationDateOk returns a tuple with the WarrantyExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetWarrantyExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.WarrantyExpirationDate) {
		return nil, false
	}
	return o.WarrantyExpirationDate, true
}

// HasWarrantyExpirationDate returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasWarrantyExpirationDate() bool {
	if o != nil && !IsNil(o.WarrantyExpirationDate) {
		return true
	}

	return false
}

// SetWarrantyExpirationDate gets a reference to the given time.Time and assigns it to the WarrantyExpirationDate field.
func (o *CompanyConfiguration) SetWarrantyExpirationDate(v time.Time) {
	o.WarrantyExpirationDate = &v
}

// GetVendorNotes returns the VendorNotes field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetVendorNotes() string {
	if o == nil || IsNil(o.VendorNotes) {
		var ret string
		return ret
	}
	return *o.VendorNotes
}

// GetVendorNotesOk returns a tuple with the VendorNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetVendorNotesOk() (*string, bool) {
	if o == nil || IsNil(o.VendorNotes) {
		return nil, false
	}
	return o.VendorNotes, true
}

// HasVendorNotes returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasVendorNotes() bool {
	if o != nil && !IsNil(o.VendorNotes) {
		return true
	}

	return false
}

// SetVendorNotes gets a reference to the given string and assigns it to the VendorNotes field.
func (o *CompanyConfiguration) SetVendorNotes(v string) {
	o.VendorNotes = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *CompanyConfiguration) SetNotes(v string) {
	o.Notes = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *CompanyConfiguration) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetLastLoginName returns the LastLoginName field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetLastLoginName() string {
	if o == nil || IsNil(o.LastLoginName) {
		var ret string
		return ret
	}
	return *o.LastLoginName
}

// GetLastLoginNameOk returns a tuple with the LastLoginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetLastLoginNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginName) {
		return nil, false
	}
	return o.LastLoginName, true
}

// HasLastLoginName returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasLastLoginName() bool {
	if o != nil && !IsNil(o.LastLoginName) {
		return true
	}

	return false
}

// SetLastLoginName gets a reference to the given string and assigns it to the LastLoginName field.
func (o *CompanyConfiguration) SetLastLoginName(v string) {
	o.LastLoginName = &v
}

// GetBillFlag returns the BillFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBillFlag() bool {
	if o == nil || IsNil(o.BillFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillFlag.Get()
}

// GetBillFlagOk returns a tuple with the BillFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBillFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillFlag.Get(), o.BillFlag.IsSet()
}

// HasBillFlag returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBillFlag() bool {
	if o != nil && o.BillFlag.IsSet() {
		return true
	}

	return false
}

// SetBillFlag gets a reference to the given NullableBool and assigns it to the BillFlag field.
func (o *CompanyConfiguration) SetBillFlag(v bool) {
	o.BillFlag.Set(&v)
}
// SetBillFlagNil sets the value for BillFlag to be an explicit nil
func (o *CompanyConfiguration) SetBillFlagNil() {
	o.BillFlag.Set(nil)
}

// UnsetBillFlag ensures that no value is present for BillFlag, not even an explicit nil
func (o *CompanyConfiguration) UnsetBillFlag() {
	o.BillFlag.Unset()
}

// GetBackupSuccesses returns the BackupSuccesses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupSuccesses() int32 {
	if o == nil || IsNil(o.BackupSuccesses.Get()) {
		var ret int32
		return ret
	}
	return *o.BackupSuccesses.Get()
}

// GetBackupSuccessesOk returns a tuple with the BackupSuccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupSuccessesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupSuccesses.Get(), o.BackupSuccesses.IsSet()
}

// HasBackupSuccesses returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupSuccesses() bool {
	if o != nil && o.BackupSuccesses.IsSet() {
		return true
	}

	return false
}

// SetBackupSuccesses gets a reference to the given NullableInt32 and assigns it to the BackupSuccesses field.
func (o *CompanyConfiguration) SetBackupSuccesses(v int32) {
	o.BackupSuccesses.Set(&v)
}
// SetBackupSuccessesNil sets the value for BackupSuccesses to be an explicit nil
func (o *CompanyConfiguration) SetBackupSuccessesNil() {
	o.BackupSuccesses.Set(nil)
}

// UnsetBackupSuccesses ensures that no value is present for BackupSuccesses, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupSuccesses() {
	o.BackupSuccesses.Unset()
}

// GetBackupIncomplete returns the BackupIncomplete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupIncomplete() int32 {
	if o == nil || IsNil(o.BackupIncomplete.Get()) {
		var ret int32
		return ret
	}
	return *o.BackupIncomplete.Get()
}

// GetBackupIncompleteOk returns a tuple with the BackupIncomplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupIncompleteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupIncomplete.Get(), o.BackupIncomplete.IsSet()
}

// HasBackupIncomplete returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupIncomplete() bool {
	if o != nil && o.BackupIncomplete.IsSet() {
		return true
	}

	return false
}

// SetBackupIncomplete gets a reference to the given NullableInt32 and assigns it to the BackupIncomplete field.
func (o *CompanyConfiguration) SetBackupIncomplete(v int32) {
	o.BackupIncomplete.Set(&v)
}
// SetBackupIncompleteNil sets the value for BackupIncomplete to be an explicit nil
func (o *CompanyConfiguration) SetBackupIncompleteNil() {
	o.BackupIncomplete.Set(nil)
}

// UnsetBackupIncomplete ensures that no value is present for BackupIncomplete, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupIncomplete() {
	o.BackupIncomplete.Unset()
}

// GetBackupFailed returns the BackupFailed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupFailed() int32 {
	if o == nil || IsNil(o.BackupFailed.Get()) {
		var ret int32
		return ret
	}
	return *o.BackupFailed.Get()
}

// GetBackupFailedOk returns a tuple with the BackupFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupFailedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupFailed.Get(), o.BackupFailed.IsSet()
}

// HasBackupFailed returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupFailed() bool {
	if o != nil && o.BackupFailed.IsSet() {
		return true
	}

	return false
}

// SetBackupFailed gets a reference to the given NullableInt32 and assigns it to the BackupFailed field.
func (o *CompanyConfiguration) SetBackupFailed(v int32) {
	o.BackupFailed.Set(&v)
}
// SetBackupFailedNil sets the value for BackupFailed to be an explicit nil
func (o *CompanyConfiguration) SetBackupFailedNil() {
	o.BackupFailed.Set(nil)
}

// UnsetBackupFailed ensures that no value is present for BackupFailed, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupFailed() {
	o.BackupFailed.Unset()
}

// GetBackupRestores returns the BackupRestores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupRestores() int32 {
	if o == nil || IsNil(o.BackupRestores.Get()) {
		var ret int32
		return ret
	}
	return *o.BackupRestores.Get()
}

// GetBackupRestoresOk returns a tuple with the BackupRestores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupRestoresOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupRestores.Get(), o.BackupRestores.IsSet()
}

// HasBackupRestores returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupRestores() bool {
	if o != nil && o.BackupRestores.IsSet() {
		return true
	}

	return false
}

// SetBackupRestores gets a reference to the given NullableInt32 and assigns it to the BackupRestores field.
func (o *CompanyConfiguration) SetBackupRestores(v int32) {
	o.BackupRestores.Set(&v)
}
// SetBackupRestoresNil sets the value for BackupRestores to be an explicit nil
func (o *CompanyConfiguration) SetBackupRestoresNil() {
	o.BackupRestores.Set(nil)
}

// UnsetBackupRestores ensures that no value is present for BackupRestores, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupRestores() {
	o.BackupRestores.Unset()
}

// GetLastBackupDate returns the LastBackupDate field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetLastBackupDate() time.Time {
	if o == nil || IsNil(o.LastBackupDate) {
		var ret time.Time
		return ret
	}
	return *o.LastBackupDate
}

// GetLastBackupDateOk returns a tuple with the LastBackupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetLastBackupDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastBackupDate) {
		return nil, false
	}
	return o.LastBackupDate, true
}

// HasLastBackupDate returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasLastBackupDate() bool {
	if o != nil && !IsNil(o.LastBackupDate) {
		return true
	}

	return false
}

// SetLastBackupDate gets a reference to the given time.Time and assigns it to the LastBackupDate field.
func (o *CompanyConfiguration) SetLastBackupDate(v time.Time) {
	o.LastBackupDate = &v
}

// GetBackupServerName returns the BackupServerName field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetBackupServerName() string {
	if o == nil || IsNil(o.BackupServerName) {
		var ret string
		return ret
	}
	return *o.BackupServerName
}

// GetBackupServerNameOk returns a tuple with the BackupServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetBackupServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.BackupServerName) {
		return nil, false
	}
	return o.BackupServerName, true
}

// HasBackupServerName returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupServerName() bool {
	if o != nil && !IsNil(o.BackupServerName) {
		return true
	}

	return false
}

// SetBackupServerName gets a reference to the given string and assigns it to the BackupServerName field.
func (o *CompanyConfiguration) SetBackupServerName(v string) {
	o.BackupServerName = &v
}

// GetBackupBillableSpaceGb returns the BackupBillableSpaceGb field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupBillableSpaceGb() float64 {
	if o == nil || IsNil(o.BackupBillableSpaceGb.Get()) {
		var ret float64
		return ret
	}
	return *o.BackupBillableSpaceGb.Get()
}

// GetBackupBillableSpaceGbOk returns a tuple with the BackupBillableSpaceGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupBillableSpaceGbOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupBillableSpaceGb.Get(), o.BackupBillableSpaceGb.IsSet()
}

// HasBackupBillableSpaceGb returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupBillableSpaceGb() bool {
	if o != nil && o.BackupBillableSpaceGb.IsSet() {
		return true
	}

	return false
}

// SetBackupBillableSpaceGb gets a reference to the given NullableFloat64 and assigns it to the BackupBillableSpaceGb field.
func (o *CompanyConfiguration) SetBackupBillableSpaceGb(v float64) {
	o.BackupBillableSpaceGb.Set(&v)
}
// SetBackupBillableSpaceGbNil sets the value for BackupBillableSpaceGb to be an explicit nil
func (o *CompanyConfiguration) SetBackupBillableSpaceGbNil() {
	o.BackupBillableSpaceGb.Set(nil)
}

// UnsetBackupBillableSpaceGb ensures that no value is present for BackupBillableSpaceGb, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupBillableSpaceGb() {
	o.BackupBillableSpaceGb.Unset()
}

// GetBackupProtectedDeviceList returns the BackupProtectedDeviceList field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetBackupProtectedDeviceList() string {
	if o == nil || IsNil(o.BackupProtectedDeviceList) {
		var ret string
		return ret
	}
	return *o.BackupProtectedDeviceList
}

// GetBackupProtectedDeviceListOk returns a tuple with the BackupProtectedDeviceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetBackupProtectedDeviceListOk() (*string, bool) {
	if o == nil || IsNil(o.BackupProtectedDeviceList) {
		return nil, false
	}
	return o.BackupProtectedDeviceList, true
}

// HasBackupProtectedDeviceList returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupProtectedDeviceList() bool {
	if o != nil && !IsNil(o.BackupProtectedDeviceList) {
		return true
	}

	return false
}

// SetBackupProtectedDeviceList gets a reference to the given string and assigns it to the BackupProtectedDeviceList field.
func (o *CompanyConfiguration) SetBackupProtectedDeviceList(v string) {
	o.BackupProtectedDeviceList = &v
}

// GetBackupYear returns the BackupYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupYear() int32 {
	if o == nil || IsNil(o.BackupYear.Get()) {
		var ret int32
		return ret
	}
	return *o.BackupYear.Get()
}

// GetBackupYearOk returns a tuple with the BackupYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupYear.Get(), o.BackupYear.IsSet()
}

// HasBackupYear returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupYear() bool {
	if o != nil && o.BackupYear.IsSet() {
		return true
	}

	return false
}

// SetBackupYear gets a reference to the given NullableInt32 and assigns it to the BackupYear field.
func (o *CompanyConfiguration) SetBackupYear(v int32) {
	o.BackupYear.Set(&v)
}
// SetBackupYearNil sets the value for BackupYear to be an explicit nil
func (o *CompanyConfiguration) SetBackupYearNil() {
	o.BackupYear.Set(nil)
}

// UnsetBackupYear ensures that no value is present for BackupYear, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupYear() {
	o.BackupYear.Unset()
}

// GetBackupMonth returns the BackupMonth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetBackupMonth() int32 {
	if o == nil || IsNil(o.BackupMonth.Get()) {
		var ret int32
		return ret
	}
	return *o.BackupMonth.Get()
}

// GetBackupMonthOk returns a tuple with the BackupMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetBackupMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupMonth.Get(), o.BackupMonth.IsSet()
}

// HasBackupMonth returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasBackupMonth() bool {
	if o != nil && o.BackupMonth.IsSet() {
		return true
	}

	return false
}

// SetBackupMonth gets a reference to the given NullableInt32 and assigns it to the BackupMonth field.
func (o *CompanyConfiguration) SetBackupMonth(v int32) {
	o.BackupMonth.Set(&v)
}
// SetBackupMonthNil sets the value for BackupMonth to be an explicit nil
func (o *CompanyConfiguration) SetBackupMonthNil() {
	o.BackupMonth.Set(nil)
}

// UnsetBackupMonth ensures that no value is present for BackupMonth, not even an explicit nil
func (o *CompanyConfiguration) UnsetBackupMonth() {
	o.BackupMonth.Unset()
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *CompanyConfiguration) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetDefaultGateway returns the DefaultGateway field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetDefaultGateway() string {
	if o == nil || IsNil(o.DefaultGateway) {
		var ret string
		return ret
	}
	return *o.DefaultGateway
}

// GetDefaultGatewayOk returns a tuple with the DefaultGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetDefaultGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultGateway) {
		return nil, false
	}
	return o.DefaultGateway, true
}

// HasDefaultGateway returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasDefaultGateway() bool {
	if o != nil && !IsNil(o.DefaultGateway) {
		return true
	}

	return false
}

// SetDefaultGateway gets a reference to the given string and assigns it to the DefaultGateway field.
func (o *CompanyConfiguration) SetDefaultGateway(v string) {
	o.DefaultGateway = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetOsType() string {
	if o == nil || IsNil(o.OsType) {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetOsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *CompanyConfiguration) SetOsType(v string) {
	o.OsType = &v
}

// GetOsInfo returns the OsInfo field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetOsInfo() string {
	if o == nil || IsNil(o.OsInfo) {
		var ret string
		return ret
	}
	return *o.OsInfo
}

// GetOsInfoOk returns a tuple with the OsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetOsInfoOk() (*string, bool) {
	if o == nil || IsNil(o.OsInfo) {
		return nil, false
	}
	return o.OsInfo, true
}

// HasOsInfo returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasOsInfo() bool {
	if o != nil && !IsNil(o.OsInfo) {
		return true
	}

	return false
}

// SetOsInfo gets a reference to the given string and assigns it to the OsInfo field.
func (o *CompanyConfiguration) SetOsInfo(v string) {
	o.OsInfo = &v
}

// GetCpuSpeed returns the CpuSpeed field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetCpuSpeed() string {
	if o == nil || IsNil(o.CpuSpeed) {
		var ret string
		return ret
	}
	return *o.CpuSpeed
}

// GetCpuSpeedOk returns a tuple with the CpuSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetCpuSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.CpuSpeed) {
		return nil, false
	}
	return o.CpuSpeed, true
}

// HasCpuSpeed returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasCpuSpeed() bool {
	if o != nil && !IsNil(o.CpuSpeed) {
		return true
	}

	return false
}

// SetCpuSpeed gets a reference to the given string and assigns it to the CpuSpeed field.
func (o *CompanyConfiguration) SetCpuSpeed(v string) {
	o.CpuSpeed = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetRam() string {
	if o == nil || IsNil(o.Ram) {
		var ret string
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetRamOk() (*string, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given string and assigns it to the Ram field.
func (o *CompanyConfiguration) SetRam(v string) {
	o.Ram = &v
}

// GetLocalHardDrives returns the LocalHardDrives field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetLocalHardDrives() string {
	if o == nil || IsNil(o.LocalHardDrives) {
		var ret string
		return ret
	}
	return *o.LocalHardDrives
}

// GetLocalHardDrivesOk returns a tuple with the LocalHardDrives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetLocalHardDrivesOk() (*string, bool) {
	if o == nil || IsNil(o.LocalHardDrives) {
		return nil, false
	}
	return o.LocalHardDrives, true
}

// HasLocalHardDrives returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasLocalHardDrives() bool {
	if o != nil && !IsNil(o.LocalHardDrives) {
		return true
	}

	return false
}

// SetLocalHardDrives gets a reference to the given string and assigns it to the LocalHardDrives field.
func (o *CompanyConfiguration) SetLocalHardDrives(v string) {
	o.LocalHardDrives = &v
}

// GetParentConfigurationId returns the ParentConfigurationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetParentConfigurationId() int32 {
	if o == nil || IsNil(o.ParentConfigurationId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentConfigurationId.Get()
}

// GetParentConfigurationIdOk returns a tuple with the ParentConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetParentConfigurationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentConfigurationId.Get(), o.ParentConfigurationId.IsSet()
}

// HasParentConfigurationId returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasParentConfigurationId() bool {
	if o != nil && o.ParentConfigurationId.IsSet() {
		return true
	}

	return false
}

// SetParentConfigurationId gets a reference to the given NullableInt32 and assigns it to the ParentConfigurationId field.
func (o *CompanyConfiguration) SetParentConfigurationId(v int32) {
	o.ParentConfigurationId.Set(&v)
}
// SetParentConfigurationIdNil sets the value for ParentConfigurationId to be an explicit nil
func (o *CompanyConfiguration) SetParentConfigurationIdNil() {
	o.ParentConfigurationId.Set(nil)
}

// UnsetParentConfigurationId ensures that no value is present for ParentConfigurationId, not even an explicit nil
func (o *CompanyConfiguration) UnsetParentConfigurationId() {
	o.ParentConfigurationId.Unset()
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetVendor() CompanyReference {
	if o == nil || IsNil(o.Vendor) {
		var ret CompanyReference
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetVendorOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given CompanyReference and assigns it to the Vendor field.
func (o *CompanyConfiguration) SetVendor(v CompanyReference) {
	o.Vendor = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetManufacturer() ManufacturerReference {
	if o == nil || IsNil(o.Manufacturer) {
		var ret ManufacturerReference
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetManufacturerOk() (*ManufacturerReference, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given ManufacturerReference and assigns it to the Manufacturer field.
func (o *CompanyConfiguration) SetManufacturer(v ManufacturerReference) {
	o.Manufacturer = &v
}

// GetQuestions returns the Questions field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetQuestions() []ConfigurationQuestion {
	if o == nil || IsNil(o.Questions) {
		var ret []ConfigurationQuestion
		return ret
	}
	return o.Questions
}

// GetQuestionsOk returns a tuple with the Questions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetQuestionsOk() ([]ConfigurationQuestion, bool) {
	if o == nil || IsNil(o.Questions) {
		return nil, false
	}
	return o.Questions, true
}

// HasQuestions returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasQuestions() bool {
	if o != nil && !IsNil(o.Questions) {
		return true
	}

	return false
}

// SetQuestions gets a reference to the given []ConfigurationQuestion and assigns it to the Questions field.
func (o *CompanyConfiguration) SetQuestions(v []ConfigurationQuestion) {
	o.Questions = v
}

// GetActiveFlag returns the ActiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetActiveFlag() bool {
	if o == nil || IsNil(o.ActiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ActiveFlag.Get()
}

// GetActiveFlagOk returns a tuple with the ActiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetActiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveFlag.Get(), o.ActiveFlag.IsSet()
}

// HasActiveFlag returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasActiveFlag() bool {
	if o != nil && o.ActiveFlag.IsSet() {
		return true
	}

	return false
}

// SetActiveFlag gets a reference to the given NullableBool and assigns it to the ActiveFlag field.
func (o *CompanyConfiguration) SetActiveFlag(v bool) {
	o.ActiveFlag.Set(&v)
}
// SetActiveFlagNil sets the value for ActiveFlag to be an explicit nil
func (o *CompanyConfiguration) SetActiveFlagNil() {
	o.ActiveFlag.Set(nil)
}

// UnsetActiveFlag ensures that no value is present for ActiveFlag, not even an explicit nil
func (o *CompanyConfiguration) UnsetActiveFlag() {
	o.ActiveFlag.Unset()
}

// GetManagementLink returns the ManagementLink field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetManagementLink() string {
	if o == nil || IsNil(o.ManagementLink) {
		var ret string
		return ret
	}
	return *o.ManagementLink
}

// GetManagementLinkOk returns a tuple with the ManagementLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetManagementLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementLink) {
		return nil, false
	}
	return o.ManagementLink, true
}

// HasManagementLink returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasManagementLink() bool {
	if o != nil && !IsNil(o.ManagementLink) {
		return true
	}

	return false
}

// SetManagementLink gets a reference to the given string and assigns it to the ManagementLink field.
func (o *CompanyConfiguration) SetManagementLink(v string) {
	o.ManagementLink = &v
}

// GetRemoteLink returns the RemoteLink field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetRemoteLink() string {
	if o == nil || IsNil(o.RemoteLink) {
		var ret string
		return ret
	}
	return *o.RemoteLink
}

// GetRemoteLinkOk returns a tuple with the RemoteLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetRemoteLinkOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteLink) {
		return nil, false
	}
	return o.RemoteLink, true
}

// HasRemoteLink returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasRemoteLink() bool {
	if o != nil && !IsNil(o.RemoteLink) {
		return true
	}

	return false
}

// SetRemoteLink gets a reference to the given string and assigns it to the RemoteLink field.
func (o *CompanyConfiguration) SetRemoteLink(v string) {
	o.RemoteLink = &v
}

// GetSla returns the Sla field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetSla() SLAReference {
	if o == nil || IsNil(o.Sla) {
		var ret SLAReference
		return ret
	}
	return *o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetSlaOk() (*SLAReference, bool) {
	if o == nil || IsNil(o.Sla) {
		return nil, false
	}
	return o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasSla() bool {
	if o != nil && !IsNil(o.Sla) {
		return true
	}

	return false
}

// SetSla gets a reference to the given SLAReference and assigns it to the Sla field.
func (o *CompanyConfiguration) SetSla(v SLAReference) {
	o.Sla = &v
}

// GetMobileGuid returns the MobileGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetMobileGuid() string {
	if o == nil || IsNil(o.MobileGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MobileGuid.Get()
}

// GetMobileGuidOk returns a tuple with the MobileGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetMobileGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileGuid.Get(), o.MobileGuid.IsSet()
}

// HasMobileGuid returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasMobileGuid() bool {
	if o != nil && o.MobileGuid.IsSet() {
		return true
	}

	return false
}

// SetMobileGuid gets a reference to the given NullableString and assigns it to the MobileGuid field.
func (o *CompanyConfiguration) SetMobileGuid(v string) {
	o.MobileGuid.Set(&v)
}
// SetMobileGuidNil sets the value for MobileGuid to be an explicit nil
func (o *CompanyConfiguration) SetMobileGuidNil() {
	o.MobileGuid.Set(nil)
}

// UnsetMobileGuid ensures that no value is present for MobileGuid, not even an explicit nil
func (o *CompanyConfiguration) UnsetMobileGuid() {
	o.MobileGuid.Unset()
}

// GetDisplayVendorFlag returns the DisplayVendorFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetDisplayVendorFlag() bool {
	if o == nil || IsNil(o.DisplayVendorFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisplayVendorFlag.Get()
}

// GetDisplayVendorFlagOk returns a tuple with the DisplayVendorFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetDisplayVendorFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayVendorFlag.Get(), o.DisplayVendorFlag.IsSet()
}

// HasDisplayVendorFlag returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasDisplayVendorFlag() bool {
	if o != nil && o.DisplayVendorFlag.IsSet() {
		return true
	}

	return false
}

// SetDisplayVendorFlag gets a reference to the given NullableBool and assigns it to the DisplayVendorFlag field.
func (o *CompanyConfiguration) SetDisplayVendorFlag(v bool) {
	o.DisplayVendorFlag.Set(&v)
}
// SetDisplayVendorFlagNil sets the value for DisplayVendorFlag to be an explicit nil
func (o *CompanyConfiguration) SetDisplayVendorFlagNil() {
	o.DisplayVendorFlag.Set(nil)
}

// UnsetDisplayVendorFlag ensures that no value is present for DisplayVendorFlag, not even an explicit nil
func (o *CompanyConfiguration) UnsetDisplayVendorFlag() {
	o.DisplayVendorFlag.Unset()
}

// GetCompanyLocationId returns the CompanyLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetCompanyLocationId() int32 {
	if o == nil || IsNil(o.CompanyLocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.CompanyLocationId.Get()
}

// GetCompanyLocationIdOk returns a tuple with the CompanyLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetCompanyLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyLocationId.Get(), o.CompanyLocationId.IsSet()
}

// HasCompanyLocationId returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasCompanyLocationId() bool {
	if o != nil && o.CompanyLocationId.IsSet() {
		return true
	}

	return false
}

// SetCompanyLocationId gets a reference to the given NullableInt32 and assigns it to the CompanyLocationId field.
func (o *CompanyConfiguration) SetCompanyLocationId(v int32) {
	o.CompanyLocationId.Set(&v)
}
// SetCompanyLocationIdNil sets the value for CompanyLocationId to be an explicit nil
func (o *CompanyConfiguration) SetCompanyLocationIdNil() {
	o.CompanyLocationId.Set(nil)
}

// UnsetCompanyLocationId ensures that no value is present for CompanyLocationId, not even an explicit nil
func (o *CompanyConfiguration) UnsetCompanyLocationId() {
	o.CompanyLocationId.Unset()
}

// GetShowRemoteFlag returns the ShowRemoteFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetShowRemoteFlag() bool {
	if o == nil || IsNil(o.ShowRemoteFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ShowRemoteFlag.Get()
}

// GetShowRemoteFlagOk returns a tuple with the ShowRemoteFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetShowRemoteFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowRemoteFlag.Get(), o.ShowRemoteFlag.IsSet()
}

// HasShowRemoteFlag returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasShowRemoteFlag() bool {
	if o != nil && o.ShowRemoteFlag.IsSet() {
		return true
	}

	return false
}

// SetShowRemoteFlag gets a reference to the given NullableBool and assigns it to the ShowRemoteFlag field.
func (o *CompanyConfiguration) SetShowRemoteFlag(v bool) {
	o.ShowRemoteFlag.Set(&v)
}
// SetShowRemoteFlagNil sets the value for ShowRemoteFlag to be an explicit nil
func (o *CompanyConfiguration) SetShowRemoteFlagNil() {
	o.ShowRemoteFlag.Set(nil)
}

// UnsetShowRemoteFlag ensures that no value is present for ShowRemoteFlag, not even an explicit nil
func (o *CompanyConfiguration) UnsetShowRemoteFlag() {
	o.ShowRemoteFlag.Unset()
}

// GetShowAutomateFlag returns the ShowAutomateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetShowAutomateFlag() bool {
	if o == nil || IsNil(o.ShowAutomateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ShowAutomateFlag.Get()
}

// GetShowAutomateFlagOk returns a tuple with the ShowAutomateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetShowAutomateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowAutomateFlag.Get(), o.ShowAutomateFlag.IsSet()
}

// HasShowAutomateFlag returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasShowAutomateFlag() bool {
	if o != nil && o.ShowAutomateFlag.IsSet() {
		return true
	}

	return false
}

// SetShowAutomateFlag gets a reference to the given NullableBool and assigns it to the ShowAutomateFlag field.
func (o *CompanyConfiguration) SetShowAutomateFlag(v bool) {
	o.ShowAutomateFlag.Set(&v)
}
// SetShowAutomateFlagNil sets the value for ShowAutomateFlag to be an explicit nil
func (o *CompanyConfiguration) SetShowAutomateFlagNil() {
	o.ShowAutomateFlag.Set(nil)
}

// UnsetShowAutomateFlag ensures that no value is present for ShowAutomateFlag, not even an explicit nil
func (o *CompanyConfiguration) UnsetShowAutomateFlag() {
	o.ShowAutomateFlag.Unset()
}

// GetNeedsRenewalFlag returns the NeedsRenewalFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyConfiguration) GetNeedsRenewalFlag() bool {
	if o == nil || IsNil(o.NeedsRenewalFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.NeedsRenewalFlag.Get()
}

// GetNeedsRenewalFlagOk returns a tuple with the NeedsRenewalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyConfiguration) GetNeedsRenewalFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.NeedsRenewalFlag.Get(), o.NeedsRenewalFlag.IsSet()
}

// HasNeedsRenewalFlag returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasNeedsRenewalFlag() bool {
	if o != nil && o.NeedsRenewalFlag.IsSet() {
		return true
	}

	return false
}

// SetNeedsRenewalFlag gets a reference to the given NullableBool and assigns it to the NeedsRenewalFlag field.
func (o *CompanyConfiguration) SetNeedsRenewalFlag(v bool) {
	o.NeedsRenewalFlag.Set(&v)
}
// SetNeedsRenewalFlagNil sets the value for NeedsRenewalFlag to be an explicit nil
func (o *CompanyConfiguration) SetNeedsRenewalFlagNil() {
	o.NeedsRenewalFlag.Set(nil)
}

// UnsetNeedsRenewalFlag ensures that no value is present for NeedsRenewalFlag, not even an explicit nil
func (o *CompanyConfiguration) UnsetNeedsRenewalFlag() {
	o.NeedsRenewalFlag.Unset()
}

// GetManufacturerPartNumber returns the ManufacturerPartNumber field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetManufacturerPartNumber() string {
	if o == nil || IsNil(o.ManufacturerPartNumber) {
		var ret string
		return ret
	}
	return *o.ManufacturerPartNumber
}

// GetManufacturerPartNumberOk returns a tuple with the ManufacturerPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetManufacturerPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerPartNumber) {
		return nil, false
	}
	return o.ManufacturerPartNumber, true
}

// HasManufacturerPartNumber returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasManufacturerPartNumber() bool {
	if o != nil && !IsNil(o.ManufacturerPartNumber) {
		return true
	}

	return false
}

// SetManufacturerPartNumber gets a reference to the given string and assigns it to the ManufacturerPartNumber field.
func (o *CompanyConfiguration) SetManufacturerPartNumber(v string) {
	o.ManufacturerPartNumber = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CompanyConfiguration) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *CompanyConfiguration) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyConfiguration) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CompanyConfiguration) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *CompanyConfiguration) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o CompanyConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["company"] = o.Company
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if o.LocationId.IsSet() {
		toSerialize["locationId"] = o.LocationId.Get()
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if o.BusinessUnitId.IsSet() {
		toSerialize["businessUnitId"] = o.BusinessUnitId.Get()
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.DeviceIdentifier) {
		toSerialize["deviceIdentifier"] = o.DeviceIdentifier
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.ModelNumber) {
		toSerialize["modelNumber"] = o.ModelNumber
	}
	if !IsNil(o.TagNumber) {
		toSerialize["tagNumber"] = o.TagNumber
	}
	if !IsNil(o.PurchaseDate) {
		toSerialize["purchaseDate"] = o.PurchaseDate
	}
	if !IsNil(o.InstallationDate) {
		toSerialize["installationDate"] = o.InstallationDate
	}
	if !IsNil(o.InstalledBy) {
		toSerialize["installedBy"] = o.InstalledBy
	}
	if !IsNil(o.WarrantyExpirationDate) {
		toSerialize["warrantyExpirationDate"] = o.WarrantyExpirationDate
	}
	if !IsNil(o.VendorNotes) {
		toSerialize["vendorNotes"] = o.VendorNotes
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.MacAddress) {
		toSerialize["macAddress"] = o.MacAddress
	}
	if !IsNil(o.LastLoginName) {
		toSerialize["lastLoginName"] = o.LastLoginName
	}
	if o.BillFlag.IsSet() {
		toSerialize["billFlag"] = o.BillFlag.Get()
	}
	if o.BackupSuccesses.IsSet() {
		toSerialize["backupSuccesses"] = o.BackupSuccesses.Get()
	}
	if o.BackupIncomplete.IsSet() {
		toSerialize["backupIncomplete"] = o.BackupIncomplete.Get()
	}
	if o.BackupFailed.IsSet() {
		toSerialize["backupFailed"] = o.BackupFailed.Get()
	}
	if o.BackupRestores.IsSet() {
		toSerialize["backupRestores"] = o.BackupRestores.Get()
	}
	if !IsNil(o.LastBackupDate) {
		toSerialize["lastBackupDate"] = o.LastBackupDate
	}
	if !IsNil(o.BackupServerName) {
		toSerialize["backupServerName"] = o.BackupServerName
	}
	if o.BackupBillableSpaceGb.IsSet() {
		toSerialize["backupBillableSpaceGb"] = o.BackupBillableSpaceGb.Get()
	}
	if !IsNil(o.BackupProtectedDeviceList) {
		toSerialize["backupProtectedDeviceList"] = o.BackupProtectedDeviceList
	}
	if o.BackupYear.IsSet() {
		toSerialize["backupYear"] = o.BackupYear.Get()
	}
	if o.BackupMonth.IsSet() {
		toSerialize["backupMonth"] = o.BackupMonth.Get()
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.DefaultGateway) {
		toSerialize["defaultGateway"] = o.DefaultGateway
	}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	if !IsNil(o.OsInfo) {
		toSerialize["osInfo"] = o.OsInfo
	}
	if !IsNil(o.CpuSpeed) {
		toSerialize["cpuSpeed"] = o.CpuSpeed
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.LocalHardDrives) {
		toSerialize["localHardDrives"] = o.LocalHardDrives
	}
	if o.ParentConfigurationId.IsSet() {
		toSerialize["parentConfigurationId"] = o.ParentConfigurationId.Get()
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.Questions) {
		toSerialize["questions"] = o.Questions
	}
	if o.ActiveFlag.IsSet() {
		toSerialize["activeFlag"] = o.ActiveFlag.Get()
	}
	if !IsNil(o.ManagementLink) {
		toSerialize["managementLink"] = o.ManagementLink
	}
	if !IsNil(o.RemoteLink) {
		toSerialize["remoteLink"] = o.RemoteLink
	}
	if !IsNil(o.Sla) {
		toSerialize["sla"] = o.Sla
	}
	if o.MobileGuid.IsSet() {
		toSerialize["mobileGuid"] = o.MobileGuid.Get()
	}
	if o.DisplayVendorFlag.IsSet() {
		toSerialize["displayVendorFlag"] = o.DisplayVendorFlag.Get()
	}
	if o.CompanyLocationId.IsSet() {
		toSerialize["companyLocationId"] = o.CompanyLocationId.Get()
	}
	if o.ShowRemoteFlag.IsSet() {
		toSerialize["showRemoteFlag"] = o.ShowRemoteFlag.Get()
	}
	if o.ShowAutomateFlag.IsSet() {
		toSerialize["showAutomateFlag"] = o.ShowAutomateFlag.Get()
	}
	if o.NeedsRenewalFlag.IsSet() {
		toSerialize["needsRenewalFlag"] = o.NeedsRenewalFlag.Get()
	}
	if !IsNil(o.ManufacturerPartNumber) {
		toSerialize["manufacturerPartNumber"] = o.ManufacturerPartNumber
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *CompanyConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"company",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyConfiguration := _CompanyConfiguration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompanyConfiguration)

	if err != nil {
		return err
	}

	*o = CompanyConfiguration(varCompanyConfiguration)

	return err
}

type NullableCompanyConfiguration struct {
	value *CompanyConfiguration
	isSet bool
}

func (v NullableCompanyConfiguration) Get() *CompanyConfiguration {
	return v.value
}

func (v *NullableCompanyConfiguration) Set(val *CompanyConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyConfiguration(val *CompanyConfiguration) *NullableCompanyConfiguration {
	return &NullableCompanyConfiguration{value: val, isSet: true}
}

func (v NullableCompanyConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


