/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the CompanyFinance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyFinance{}

// CompanyFinance struct for CompanyFinance
type CompanyFinance struct {
	Id *int32 `json:"id,omitempty"`
	BillOverrideFlag NullableBool `json:"billOverrideFlag,omitempty"`
	BillSrFlag NullableBool `json:"billSrFlag,omitempty"`
	BillCompleteSrFlag NullableBool `json:"billCompleteSrFlag,omitempty"`
	BillUnapprovedSrFlag NullableBool `json:"billUnapprovedSrFlag,omitempty"`
	BillRestrictPmFlag NullableBool `json:"billRestrictPmFlag,omitempty"`
	BillCompletePmFlag NullableBool `json:"billCompletePmFlag,omitempty"`
	BillUnapprovedPmFlag NullableBool `json:"billUnapprovedPmFlag,omitempty"`
	EmailTemplate *EmailTemplateReference `json:"emailTemplate,omitempty"`
	Company *CompanyReference `json:"company,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
	CustomFields []CustomFieldValue `json:"customFields,omitempty"`
}

// NewCompanyFinance instantiates a new CompanyFinance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyFinance() *CompanyFinance {
	this := CompanyFinance{}
	return &this
}

// NewCompanyFinanceWithDefaults instantiates a new CompanyFinance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyFinanceWithDefaults() *CompanyFinance {
	this := CompanyFinance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyFinance) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyFinance) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyFinance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanyFinance) SetId(v int32) {
	o.Id = &v
}

// GetBillOverrideFlag returns the BillOverrideFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillOverrideFlag() bool {
	if o == nil || IsNil(o.BillOverrideFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillOverrideFlag.Get()
}

// GetBillOverrideFlagOk returns a tuple with the BillOverrideFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillOverrideFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillOverrideFlag.Get(), o.BillOverrideFlag.IsSet()
}

// HasBillOverrideFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillOverrideFlag() bool {
	if o != nil && o.BillOverrideFlag.IsSet() {
		return true
	}

	return false
}

// SetBillOverrideFlag gets a reference to the given NullableBool and assigns it to the BillOverrideFlag field.
func (o *CompanyFinance) SetBillOverrideFlag(v bool) {
	o.BillOverrideFlag.Set(&v)
}
// SetBillOverrideFlagNil sets the value for BillOverrideFlag to be an explicit nil
func (o *CompanyFinance) SetBillOverrideFlagNil() {
	o.BillOverrideFlag.Set(nil)
}

// UnsetBillOverrideFlag ensures that no value is present for BillOverrideFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillOverrideFlag() {
	o.BillOverrideFlag.Unset()
}

// GetBillSrFlag returns the BillSrFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillSrFlag() bool {
	if o == nil || IsNil(o.BillSrFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillSrFlag.Get()
}

// GetBillSrFlagOk returns a tuple with the BillSrFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillSrFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillSrFlag.Get(), o.BillSrFlag.IsSet()
}

// HasBillSrFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillSrFlag() bool {
	if o != nil && o.BillSrFlag.IsSet() {
		return true
	}

	return false
}

// SetBillSrFlag gets a reference to the given NullableBool and assigns it to the BillSrFlag field.
func (o *CompanyFinance) SetBillSrFlag(v bool) {
	o.BillSrFlag.Set(&v)
}
// SetBillSrFlagNil sets the value for BillSrFlag to be an explicit nil
func (o *CompanyFinance) SetBillSrFlagNil() {
	o.BillSrFlag.Set(nil)
}

// UnsetBillSrFlag ensures that no value is present for BillSrFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillSrFlag() {
	o.BillSrFlag.Unset()
}

// GetBillCompleteSrFlag returns the BillCompleteSrFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillCompleteSrFlag() bool {
	if o == nil || IsNil(o.BillCompleteSrFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillCompleteSrFlag.Get()
}

// GetBillCompleteSrFlagOk returns a tuple with the BillCompleteSrFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillCompleteSrFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillCompleteSrFlag.Get(), o.BillCompleteSrFlag.IsSet()
}

// HasBillCompleteSrFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillCompleteSrFlag() bool {
	if o != nil && o.BillCompleteSrFlag.IsSet() {
		return true
	}

	return false
}

// SetBillCompleteSrFlag gets a reference to the given NullableBool and assigns it to the BillCompleteSrFlag field.
func (o *CompanyFinance) SetBillCompleteSrFlag(v bool) {
	o.BillCompleteSrFlag.Set(&v)
}
// SetBillCompleteSrFlagNil sets the value for BillCompleteSrFlag to be an explicit nil
func (o *CompanyFinance) SetBillCompleteSrFlagNil() {
	o.BillCompleteSrFlag.Set(nil)
}

// UnsetBillCompleteSrFlag ensures that no value is present for BillCompleteSrFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillCompleteSrFlag() {
	o.BillCompleteSrFlag.Unset()
}

// GetBillUnapprovedSrFlag returns the BillUnapprovedSrFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillUnapprovedSrFlag() bool {
	if o == nil || IsNil(o.BillUnapprovedSrFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillUnapprovedSrFlag.Get()
}

// GetBillUnapprovedSrFlagOk returns a tuple with the BillUnapprovedSrFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillUnapprovedSrFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillUnapprovedSrFlag.Get(), o.BillUnapprovedSrFlag.IsSet()
}

// HasBillUnapprovedSrFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillUnapprovedSrFlag() bool {
	if o != nil && o.BillUnapprovedSrFlag.IsSet() {
		return true
	}

	return false
}

// SetBillUnapprovedSrFlag gets a reference to the given NullableBool and assigns it to the BillUnapprovedSrFlag field.
func (o *CompanyFinance) SetBillUnapprovedSrFlag(v bool) {
	o.BillUnapprovedSrFlag.Set(&v)
}
// SetBillUnapprovedSrFlagNil sets the value for BillUnapprovedSrFlag to be an explicit nil
func (o *CompanyFinance) SetBillUnapprovedSrFlagNil() {
	o.BillUnapprovedSrFlag.Set(nil)
}

// UnsetBillUnapprovedSrFlag ensures that no value is present for BillUnapprovedSrFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillUnapprovedSrFlag() {
	o.BillUnapprovedSrFlag.Unset()
}

// GetBillRestrictPmFlag returns the BillRestrictPmFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillRestrictPmFlag() bool {
	if o == nil || IsNil(o.BillRestrictPmFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillRestrictPmFlag.Get()
}

// GetBillRestrictPmFlagOk returns a tuple with the BillRestrictPmFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillRestrictPmFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillRestrictPmFlag.Get(), o.BillRestrictPmFlag.IsSet()
}

// HasBillRestrictPmFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillRestrictPmFlag() bool {
	if o != nil && o.BillRestrictPmFlag.IsSet() {
		return true
	}

	return false
}

// SetBillRestrictPmFlag gets a reference to the given NullableBool and assigns it to the BillRestrictPmFlag field.
func (o *CompanyFinance) SetBillRestrictPmFlag(v bool) {
	o.BillRestrictPmFlag.Set(&v)
}
// SetBillRestrictPmFlagNil sets the value for BillRestrictPmFlag to be an explicit nil
func (o *CompanyFinance) SetBillRestrictPmFlagNil() {
	o.BillRestrictPmFlag.Set(nil)
}

// UnsetBillRestrictPmFlag ensures that no value is present for BillRestrictPmFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillRestrictPmFlag() {
	o.BillRestrictPmFlag.Unset()
}

// GetBillCompletePmFlag returns the BillCompletePmFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillCompletePmFlag() bool {
	if o == nil || IsNil(o.BillCompletePmFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillCompletePmFlag.Get()
}

// GetBillCompletePmFlagOk returns a tuple with the BillCompletePmFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillCompletePmFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillCompletePmFlag.Get(), o.BillCompletePmFlag.IsSet()
}

// HasBillCompletePmFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillCompletePmFlag() bool {
	if o != nil && o.BillCompletePmFlag.IsSet() {
		return true
	}

	return false
}

// SetBillCompletePmFlag gets a reference to the given NullableBool and assigns it to the BillCompletePmFlag field.
func (o *CompanyFinance) SetBillCompletePmFlag(v bool) {
	o.BillCompletePmFlag.Set(&v)
}
// SetBillCompletePmFlagNil sets the value for BillCompletePmFlag to be an explicit nil
func (o *CompanyFinance) SetBillCompletePmFlagNil() {
	o.BillCompletePmFlag.Set(nil)
}

// UnsetBillCompletePmFlag ensures that no value is present for BillCompletePmFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillCompletePmFlag() {
	o.BillCompletePmFlag.Unset()
}

// GetBillUnapprovedPmFlag returns the BillUnapprovedPmFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyFinance) GetBillUnapprovedPmFlag() bool {
	if o == nil || IsNil(o.BillUnapprovedPmFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillUnapprovedPmFlag.Get()
}

// GetBillUnapprovedPmFlagOk returns a tuple with the BillUnapprovedPmFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyFinance) GetBillUnapprovedPmFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillUnapprovedPmFlag.Get(), o.BillUnapprovedPmFlag.IsSet()
}

// HasBillUnapprovedPmFlag returns a boolean if a field has been set.
func (o *CompanyFinance) HasBillUnapprovedPmFlag() bool {
	if o != nil && o.BillUnapprovedPmFlag.IsSet() {
		return true
	}

	return false
}

// SetBillUnapprovedPmFlag gets a reference to the given NullableBool and assigns it to the BillUnapprovedPmFlag field.
func (o *CompanyFinance) SetBillUnapprovedPmFlag(v bool) {
	o.BillUnapprovedPmFlag.Set(&v)
}
// SetBillUnapprovedPmFlagNil sets the value for BillUnapprovedPmFlag to be an explicit nil
func (o *CompanyFinance) SetBillUnapprovedPmFlagNil() {
	o.BillUnapprovedPmFlag.Set(nil)
}

// UnsetBillUnapprovedPmFlag ensures that no value is present for BillUnapprovedPmFlag, not even an explicit nil
func (o *CompanyFinance) UnsetBillUnapprovedPmFlag() {
	o.BillUnapprovedPmFlag.Unset()
}

// GetEmailTemplate returns the EmailTemplate field value if set, zero value otherwise.
func (o *CompanyFinance) GetEmailTemplate() EmailTemplateReference {
	if o == nil || IsNil(o.EmailTemplate) {
		var ret EmailTemplateReference
		return ret
	}
	return *o.EmailTemplate
}

// GetEmailTemplateOk returns a tuple with the EmailTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyFinance) GetEmailTemplateOk() (*EmailTemplateReference, bool) {
	if o == nil || IsNil(o.EmailTemplate) {
		return nil, false
	}
	return o.EmailTemplate, true
}

// HasEmailTemplate returns a boolean if a field has been set.
func (o *CompanyFinance) HasEmailTemplate() bool {
	if o != nil && !IsNil(o.EmailTemplate) {
		return true
	}

	return false
}

// SetEmailTemplate gets a reference to the given EmailTemplateReference and assigns it to the EmailTemplate field.
func (o *CompanyFinance) SetEmailTemplate(v EmailTemplateReference) {
	o.EmailTemplate = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *CompanyFinance) GetCompany() CompanyReference {
	if o == nil || IsNil(o.Company) {
		var ret CompanyReference
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyFinance) GetCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *CompanyFinance) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given CompanyReference and assigns it to the Company field.
func (o *CompanyFinance) SetCompany(v CompanyReference) {
	o.Company = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CompanyFinance) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyFinance) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CompanyFinance) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CompanyFinance) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *CompanyFinance) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyFinance) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CompanyFinance) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *CompanyFinance) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o CompanyFinance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyFinance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.BillOverrideFlag.IsSet() {
		toSerialize["billOverrideFlag"] = o.BillOverrideFlag.Get()
	}
	if o.BillSrFlag.IsSet() {
		toSerialize["billSrFlag"] = o.BillSrFlag.Get()
	}
	if o.BillCompleteSrFlag.IsSet() {
		toSerialize["billCompleteSrFlag"] = o.BillCompleteSrFlag.Get()
	}
	if o.BillUnapprovedSrFlag.IsSet() {
		toSerialize["billUnapprovedSrFlag"] = o.BillUnapprovedSrFlag.Get()
	}
	if o.BillRestrictPmFlag.IsSet() {
		toSerialize["billRestrictPmFlag"] = o.BillRestrictPmFlag.Get()
	}
	if o.BillCompletePmFlag.IsSet() {
		toSerialize["billCompletePmFlag"] = o.BillCompletePmFlag.Get()
	}
	if o.BillUnapprovedPmFlag.IsSet() {
		toSerialize["billUnapprovedPmFlag"] = o.BillUnapprovedPmFlag.Get()
	}
	if !IsNil(o.EmailTemplate) {
		toSerialize["emailTemplate"] = o.EmailTemplate
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableCompanyFinance struct {
	value *CompanyFinance
	isSet bool
}

func (v NullableCompanyFinance) Get() *CompanyFinance {
	return v.value
}

func (v *NullableCompanyFinance) Set(val *CompanyFinance) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyFinance) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyFinance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyFinance(val *CompanyFinance) *NullableCompanyFinance {
	return &NullableCompanyFinance{value: val, isSet: true}
}

func (v NullableCompanyFinance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyFinance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


