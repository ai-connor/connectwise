/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the CompanyInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyInfo{}

// CompanyInfo struct for CompanyInfo
type CompanyInfo struct {
	Id *int32 `json:"id,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	Name *string `json:"name,omitempty"`
	Territory *SystemLocationReference `json:"territory,omitempty"`
	DefaultContact *ContactReference `json:"defaultContact,omitempty"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	City *string `json:"city,omitempty"`
	Site *SiteReference `json:"site,omitempty"`
	IsVendorFlag NullableBool `json:"isVendorFlag,omitempty"`
	Currency *CurrencyReference `json:"currency,omitempty"`
	BillToCompany *CompanyReference `json:"billToCompany,omitempty"`
	BillingSite *SiteReference `json:"billingSite,omitempty"`
	BillingContact *ContactReference `json:"billingContact,omitempty"`
	BillingTerms *BillingTermsReference `json:"billingTerms,omitempty"`
	TaxCode *TaxCodeReference `json:"taxCode,omitempty"`
	DeletedFlag NullableBool `json:"deletedFlag,omitempty"`
	Types []CompanyTypeReference `json:"types,omitempty"`
	Status *CompanyStatusReference `json:"status,omitempty"`
	NoServiceFlag NullableBool `json:"noServiceFlag,omitempty"`
	AddressLine1 *string `json:"addressLine1,omitempty"`
	AddressLine2 *string `json:"addressLine2,omitempty"`
	State *string `json:"state,omitempty"`
	Country *CountryReference `json:"country,omitempty"`
	Zip *string `json:"zip,omitempty"`
	LeadFlag NullableBool `json:"leadFlag,omitempty"`
	FaxNumber *string `json:"faxNumber,omitempty"`
	VendorIdentifier *string `json:"vendorIdentifier,omitempty"`
	TaxIdentifier *string `json:"taxIdentifier,omitempty"`
	FacebookUrl *string `json:"facebookUrl,omitempty"`
	TwitterUrl *string `json:"twitterUrl,omitempty"`
	LinkedInUrl *string `json:"linkedInUrl,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewCompanyInfo instantiates a new CompanyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyInfo() *CompanyInfo {
	this := CompanyInfo{}
	return &this
}

// NewCompanyInfoWithDefaults instantiates a new CompanyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyInfoWithDefaults() *CompanyInfo {
	this := CompanyInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanyInfo) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *CompanyInfo) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *CompanyInfo) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *CompanyInfo) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompanyInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompanyInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompanyInfo) SetName(v string) {
	o.Name = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *CompanyInfo) GetTerritory() SystemLocationReference {
	if o == nil || IsNil(o.Territory) {
		var ret SystemLocationReference
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetTerritoryOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *CompanyInfo) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given SystemLocationReference and assigns it to the Territory field.
func (o *CompanyInfo) SetTerritory(v SystemLocationReference) {
	o.Territory = &v
}

// GetDefaultContact returns the DefaultContact field value if set, zero value otherwise.
func (o *CompanyInfo) GetDefaultContact() ContactReference {
	if o == nil || IsNil(o.DefaultContact) {
		var ret ContactReference
		return ret
	}
	return *o.DefaultContact
}

// GetDefaultContactOk returns a tuple with the DefaultContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetDefaultContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.DefaultContact) {
		return nil, false
	}
	return o.DefaultContact, true
}

// HasDefaultContact returns a boolean if a field has been set.
func (o *CompanyInfo) HasDefaultContact() bool {
	if o != nil && !IsNil(o.DefaultContact) {
		return true
	}

	return false
}

// SetDefaultContact gets a reference to the given ContactReference and assigns it to the DefaultContact field.
func (o *CompanyInfo) SetDefaultContact(v ContactReference) {
	o.DefaultContact = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CompanyInfo) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CompanyInfo) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CompanyInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CompanyInfo) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CompanyInfo) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CompanyInfo) SetCity(v string) {
	o.City = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *CompanyInfo) GetSite() SiteReference {
	if o == nil || IsNil(o.Site) {
		var ret SiteReference
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *CompanyInfo) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given SiteReference and assigns it to the Site field.
func (o *CompanyInfo) SetSite(v SiteReference) {
	o.Site = &v
}

// GetIsVendorFlag returns the IsVendorFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfo) GetIsVendorFlag() bool {
	if o == nil || IsNil(o.IsVendorFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.IsVendorFlag.Get()
}

// GetIsVendorFlagOk returns a tuple with the IsVendorFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfo) GetIsVendorFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsVendorFlag.Get(), o.IsVendorFlag.IsSet()
}

// HasIsVendorFlag returns a boolean if a field has been set.
func (o *CompanyInfo) HasIsVendorFlag() bool {
	if o != nil && o.IsVendorFlag.IsSet() {
		return true
	}

	return false
}

// SetIsVendorFlag gets a reference to the given NullableBool and assigns it to the IsVendorFlag field.
func (o *CompanyInfo) SetIsVendorFlag(v bool) {
	o.IsVendorFlag.Set(&v)
}
// SetIsVendorFlagNil sets the value for IsVendorFlag to be an explicit nil
func (o *CompanyInfo) SetIsVendorFlagNil() {
	o.IsVendorFlag.Set(nil)
}

// UnsetIsVendorFlag ensures that no value is present for IsVendorFlag, not even an explicit nil
func (o *CompanyInfo) UnsetIsVendorFlag() {
	o.IsVendorFlag.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CompanyInfo) GetCurrency() CurrencyReference {
	if o == nil || IsNil(o.Currency) {
		var ret CurrencyReference
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CompanyInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given CurrencyReference and assigns it to the Currency field.
func (o *CompanyInfo) SetCurrency(v CurrencyReference) {
	o.Currency = &v
}

// GetBillToCompany returns the BillToCompany field value if set, zero value otherwise.
func (o *CompanyInfo) GetBillToCompany() CompanyReference {
	if o == nil || IsNil(o.BillToCompany) {
		var ret CompanyReference
		return ret
	}
	return *o.BillToCompany
}

// GetBillToCompanyOk returns a tuple with the BillToCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetBillToCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.BillToCompany) {
		return nil, false
	}
	return o.BillToCompany, true
}

// HasBillToCompany returns a boolean if a field has been set.
func (o *CompanyInfo) HasBillToCompany() bool {
	if o != nil && !IsNil(o.BillToCompany) {
		return true
	}

	return false
}

// SetBillToCompany gets a reference to the given CompanyReference and assigns it to the BillToCompany field.
func (o *CompanyInfo) SetBillToCompany(v CompanyReference) {
	o.BillToCompany = &v
}

// GetBillingSite returns the BillingSite field value if set, zero value otherwise.
func (o *CompanyInfo) GetBillingSite() SiteReference {
	if o == nil || IsNil(o.BillingSite) {
		var ret SiteReference
		return ret
	}
	return *o.BillingSite
}

// GetBillingSiteOk returns a tuple with the BillingSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetBillingSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.BillingSite) {
		return nil, false
	}
	return o.BillingSite, true
}

// HasBillingSite returns a boolean if a field has been set.
func (o *CompanyInfo) HasBillingSite() bool {
	if o != nil && !IsNil(o.BillingSite) {
		return true
	}

	return false
}

// SetBillingSite gets a reference to the given SiteReference and assigns it to the BillingSite field.
func (o *CompanyInfo) SetBillingSite(v SiteReference) {
	o.BillingSite = &v
}

// GetBillingContact returns the BillingContact field value if set, zero value otherwise.
func (o *CompanyInfo) GetBillingContact() ContactReference {
	if o == nil || IsNil(o.BillingContact) {
		var ret ContactReference
		return ret
	}
	return *o.BillingContact
}

// GetBillingContactOk returns a tuple with the BillingContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetBillingContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.BillingContact) {
		return nil, false
	}
	return o.BillingContact, true
}

// HasBillingContact returns a boolean if a field has been set.
func (o *CompanyInfo) HasBillingContact() bool {
	if o != nil && !IsNil(o.BillingContact) {
		return true
	}

	return false
}

// SetBillingContact gets a reference to the given ContactReference and assigns it to the BillingContact field.
func (o *CompanyInfo) SetBillingContact(v ContactReference) {
	o.BillingContact = &v
}

// GetBillingTerms returns the BillingTerms field value if set, zero value otherwise.
func (o *CompanyInfo) GetBillingTerms() BillingTermsReference {
	if o == nil || IsNil(o.BillingTerms) {
		var ret BillingTermsReference
		return ret
	}
	return *o.BillingTerms
}

// GetBillingTermsOk returns a tuple with the BillingTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetBillingTermsOk() (*BillingTermsReference, bool) {
	if o == nil || IsNil(o.BillingTerms) {
		return nil, false
	}
	return o.BillingTerms, true
}

// HasBillingTerms returns a boolean if a field has been set.
func (o *CompanyInfo) HasBillingTerms() bool {
	if o != nil && !IsNil(o.BillingTerms) {
		return true
	}

	return false
}

// SetBillingTerms gets a reference to the given BillingTermsReference and assigns it to the BillingTerms field.
func (o *CompanyInfo) SetBillingTerms(v BillingTermsReference) {
	o.BillingTerms = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *CompanyInfo) GetTaxCode() TaxCodeReference {
	if o == nil || IsNil(o.TaxCode) {
		var ret TaxCodeReference
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetTaxCodeOk() (*TaxCodeReference, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CompanyInfo) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given TaxCodeReference and assigns it to the TaxCode field.
func (o *CompanyInfo) SetTaxCode(v TaxCodeReference) {
	o.TaxCode = &v
}

// GetDeletedFlag returns the DeletedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfo) GetDeletedFlag() bool {
	if o == nil || IsNil(o.DeletedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DeletedFlag.Get()
}

// GetDeletedFlagOk returns a tuple with the DeletedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfo) GetDeletedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedFlag.Get(), o.DeletedFlag.IsSet()
}

// HasDeletedFlag returns a boolean if a field has been set.
func (o *CompanyInfo) HasDeletedFlag() bool {
	if o != nil && o.DeletedFlag.IsSet() {
		return true
	}

	return false
}

// SetDeletedFlag gets a reference to the given NullableBool and assigns it to the DeletedFlag field.
func (o *CompanyInfo) SetDeletedFlag(v bool) {
	o.DeletedFlag.Set(&v)
}
// SetDeletedFlagNil sets the value for DeletedFlag to be an explicit nil
func (o *CompanyInfo) SetDeletedFlagNil() {
	o.DeletedFlag.Set(nil)
}

// UnsetDeletedFlag ensures that no value is present for DeletedFlag, not even an explicit nil
func (o *CompanyInfo) UnsetDeletedFlag() {
	o.DeletedFlag.Unset()
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *CompanyInfo) GetTypes() []CompanyTypeReference {
	if o == nil || IsNil(o.Types) {
		var ret []CompanyTypeReference
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetTypesOk() ([]CompanyTypeReference, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *CompanyInfo) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []CompanyTypeReference and assigns it to the Types field.
func (o *CompanyInfo) SetTypes(v []CompanyTypeReference) {
	o.Types = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CompanyInfo) GetStatus() CompanyStatusReference {
	if o == nil || IsNil(o.Status) {
		var ret CompanyStatusReference
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetStatusOk() (*CompanyStatusReference, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CompanyInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CompanyStatusReference and assigns it to the Status field.
func (o *CompanyInfo) SetStatus(v CompanyStatusReference) {
	o.Status = &v
}

// GetNoServiceFlag returns the NoServiceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfo) GetNoServiceFlag() bool {
	if o == nil || IsNil(o.NoServiceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.NoServiceFlag.Get()
}

// GetNoServiceFlagOk returns a tuple with the NoServiceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfo) GetNoServiceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.NoServiceFlag.Get(), o.NoServiceFlag.IsSet()
}

// HasNoServiceFlag returns a boolean if a field has been set.
func (o *CompanyInfo) HasNoServiceFlag() bool {
	if o != nil && o.NoServiceFlag.IsSet() {
		return true
	}

	return false
}

// SetNoServiceFlag gets a reference to the given NullableBool and assigns it to the NoServiceFlag field.
func (o *CompanyInfo) SetNoServiceFlag(v bool) {
	o.NoServiceFlag.Set(&v)
}
// SetNoServiceFlagNil sets the value for NoServiceFlag to be an explicit nil
func (o *CompanyInfo) SetNoServiceFlagNil() {
	o.NoServiceFlag.Set(nil)
}

// UnsetNoServiceFlag ensures that no value is present for NoServiceFlag, not even an explicit nil
func (o *CompanyInfo) UnsetNoServiceFlag() {
	o.NoServiceFlag.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *CompanyInfo) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *CompanyInfo) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *CompanyInfo) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *CompanyInfo) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *CompanyInfo) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *CompanyInfo) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CompanyInfo) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CompanyInfo) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CompanyInfo) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CompanyInfo) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CompanyInfo) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *CompanyInfo) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *CompanyInfo) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *CompanyInfo) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *CompanyInfo) SetZip(v string) {
	o.Zip = &v
}

// GetLeadFlag returns the LeadFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyInfo) GetLeadFlag() bool {
	if o == nil || IsNil(o.LeadFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LeadFlag.Get()
}

// GetLeadFlagOk returns a tuple with the LeadFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyInfo) GetLeadFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LeadFlag.Get(), o.LeadFlag.IsSet()
}

// HasLeadFlag returns a boolean if a field has been set.
func (o *CompanyInfo) HasLeadFlag() bool {
	if o != nil && o.LeadFlag.IsSet() {
		return true
	}

	return false
}

// SetLeadFlag gets a reference to the given NullableBool and assigns it to the LeadFlag field.
func (o *CompanyInfo) SetLeadFlag(v bool) {
	o.LeadFlag.Set(&v)
}
// SetLeadFlagNil sets the value for LeadFlag to be an explicit nil
func (o *CompanyInfo) SetLeadFlagNil() {
	o.LeadFlag.Set(nil)
}

// UnsetLeadFlag ensures that no value is present for LeadFlag, not even an explicit nil
func (o *CompanyInfo) UnsetLeadFlag() {
	o.LeadFlag.Unset()
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise.
func (o *CompanyInfo) GetFaxNumber() string {
	if o == nil || IsNil(o.FaxNumber) {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetFaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FaxNumber) {
		return nil, false
	}
	return o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *CompanyInfo) HasFaxNumber() bool {
	if o != nil && !IsNil(o.FaxNumber) {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *CompanyInfo) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// GetVendorIdentifier returns the VendorIdentifier field value if set, zero value otherwise.
func (o *CompanyInfo) GetVendorIdentifier() string {
	if o == nil || IsNil(o.VendorIdentifier) {
		var ret string
		return ret
	}
	return *o.VendorIdentifier
}

// GetVendorIdentifierOk returns a tuple with the VendorIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetVendorIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.VendorIdentifier) {
		return nil, false
	}
	return o.VendorIdentifier, true
}

// HasVendorIdentifier returns a boolean if a field has been set.
func (o *CompanyInfo) HasVendorIdentifier() bool {
	if o != nil && !IsNil(o.VendorIdentifier) {
		return true
	}

	return false
}

// SetVendorIdentifier gets a reference to the given string and assigns it to the VendorIdentifier field.
func (o *CompanyInfo) SetVendorIdentifier(v string) {
	o.VendorIdentifier = &v
}

// GetTaxIdentifier returns the TaxIdentifier field value if set, zero value otherwise.
func (o *CompanyInfo) GetTaxIdentifier() string {
	if o == nil || IsNil(o.TaxIdentifier) {
		var ret string
		return ret
	}
	return *o.TaxIdentifier
}

// GetTaxIdentifierOk returns a tuple with the TaxIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetTaxIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.TaxIdentifier) {
		return nil, false
	}
	return o.TaxIdentifier, true
}

// HasTaxIdentifier returns a boolean if a field has been set.
func (o *CompanyInfo) HasTaxIdentifier() bool {
	if o != nil && !IsNil(o.TaxIdentifier) {
		return true
	}

	return false
}

// SetTaxIdentifier gets a reference to the given string and assigns it to the TaxIdentifier field.
func (o *CompanyInfo) SetTaxIdentifier(v string) {
	o.TaxIdentifier = &v
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise.
func (o *CompanyInfo) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl) {
		var ret string
		return ret
	}
	return *o.FacebookUrl
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetFacebookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FacebookUrl) {
		return nil, false
	}
	return o.FacebookUrl, true
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *CompanyInfo) HasFacebookUrl() bool {
	if o != nil && !IsNil(o.FacebookUrl) {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given string and assigns it to the FacebookUrl field.
func (o *CompanyInfo) SetFacebookUrl(v string) {
	o.FacebookUrl = &v
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise.
func (o *CompanyInfo) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl) {
		var ret string
		return ret
	}
	return *o.TwitterUrl
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetTwitterUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterUrl) {
		return nil, false
	}
	return o.TwitterUrl, true
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *CompanyInfo) HasTwitterUrl() bool {
	if o != nil && !IsNil(o.TwitterUrl) {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given string and assigns it to the TwitterUrl field.
func (o *CompanyInfo) SetTwitterUrl(v string) {
	o.TwitterUrl = &v
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise.
func (o *CompanyInfo) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetLinkedInUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedInUrl) {
		return nil, false
	}
	return o.LinkedInUrl, true
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *CompanyInfo) HasLinkedInUrl() bool {
	if o != nil && !IsNil(o.LinkedInUrl) {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given string and assigns it to the LinkedInUrl field.
func (o *CompanyInfo) SetLinkedInUrl(v string) {
	o.LinkedInUrl = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CompanyInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CompanyInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CompanyInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o CompanyInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	if !IsNil(o.DefaultContact) {
		toSerialize["defaultContact"] = o.DefaultContact
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if o.IsVendorFlag.IsSet() {
		toSerialize["isVendorFlag"] = o.IsVendorFlag.Get()
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.BillToCompany) {
		toSerialize["billToCompany"] = o.BillToCompany
	}
	if !IsNil(o.BillingSite) {
		toSerialize["billingSite"] = o.BillingSite
	}
	if !IsNil(o.BillingContact) {
		toSerialize["billingContact"] = o.BillingContact
	}
	if !IsNil(o.BillingTerms) {
		toSerialize["billingTerms"] = o.BillingTerms
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if o.DeletedFlag.IsSet() {
		toSerialize["deletedFlag"] = o.DeletedFlag.Get()
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.NoServiceFlag.IsSet() {
		toSerialize["noServiceFlag"] = o.NoServiceFlag.Get()
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if o.LeadFlag.IsSet() {
		toSerialize["leadFlag"] = o.LeadFlag.Get()
	}
	if !IsNil(o.FaxNumber) {
		toSerialize["faxNumber"] = o.FaxNumber
	}
	if !IsNil(o.VendorIdentifier) {
		toSerialize["vendorIdentifier"] = o.VendorIdentifier
	}
	if !IsNil(o.TaxIdentifier) {
		toSerialize["taxIdentifier"] = o.TaxIdentifier
	}
	if !IsNil(o.FacebookUrl) {
		toSerialize["facebookUrl"] = o.FacebookUrl
	}
	if !IsNil(o.TwitterUrl) {
		toSerialize["twitterUrl"] = o.TwitterUrl
	}
	if !IsNil(o.LinkedInUrl) {
		toSerialize["linkedInUrl"] = o.LinkedInUrl
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableCompanyInfo struct {
	value *CompanyInfo
	isSet bool
}

func (v NullableCompanyInfo) Get() *CompanyInfo {
	return v.value
}

func (v *NullableCompanyInfo) Set(val *CompanyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyInfo(val *CompanyInfo) *NullableCompanyInfo {
	return &NullableCompanyInfo{value: val, isSet: true}
}

func (v NullableCompanyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


