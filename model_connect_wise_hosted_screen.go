/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ConnectWiseHostedScreen type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectWiseHostedScreen{}

// ConnectWiseHostedScreen struct for ConnectWiseHostedScreen
type ConnectWiseHostedScreen struct {
	Id *int32 `json:"id,omitempty"`
	ScreenId *string `json:"screenId,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewConnectWiseHostedScreen instantiates a new ConnectWiseHostedScreen object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectWiseHostedScreen() *ConnectWiseHostedScreen {
	this := ConnectWiseHostedScreen{}
	return &this
}

// NewConnectWiseHostedScreenWithDefaults instantiates a new ConnectWiseHostedScreen object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectWiseHostedScreenWithDefaults() *ConnectWiseHostedScreen {
	this := ConnectWiseHostedScreen{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConnectWiseHostedScreen) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectWiseHostedScreen) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConnectWiseHostedScreen) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ConnectWiseHostedScreen) SetId(v int32) {
	o.Id = &v
}

// GetScreenId returns the ScreenId field value if set, zero value otherwise.
func (o *ConnectWiseHostedScreen) GetScreenId() string {
	if o == nil || IsNil(o.ScreenId) {
		var ret string
		return ret
	}
	return *o.ScreenId
}

// GetScreenIdOk returns a tuple with the ScreenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectWiseHostedScreen) GetScreenIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScreenId) {
		return nil, false
	}
	return o.ScreenId, true
}

// HasScreenId returns a boolean if a field has been set.
func (o *ConnectWiseHostedScreen) HasScreenId() bool {
	if o != nil && !IsNil(o.ScreenId) {
		return true
	}

	return false
}

// SetScreenId gets a reference to the given string and assigns it to the ScreenId field.
func (o *ConnectWiseHostedScreen) SetScreenId(v string) {
	o.ScreenId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectWiseHostedScreen) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectWiseHostedScreen) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectWiseHostedScreen) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnectWiseHostedScreen) SetName(v string) {
	o.Name = &v
}

func (o ConnectWiseHostedScreen) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectWiseHostedScreen) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ScreenId) {
		toSerialize["screenId"] = o.ScreenId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableConnectWiseHostedScreen struct {
	value *ConnectWiseHostedScreen
	isSet bool
}

func (v NullableConnectWiseHostedScreen) Get() *ConnectWiseHostedScreen {
	return v.value
}

func (v *NullableConnectWiseHostedScreen) Set(val *ConnectWiseHostedScreen) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectWiseHostedScreen) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectWiseHostedScreen) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectWiseHostedScreen(val *ConnectWiseHostedScreen) *NullableConnectWiseHostedScreen {
	return &NullableConnectWiseHostedScreen{value: val, isSet: true}
}

func (v NullableConnectWiseHostedScreen) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectWiseHostedScreen) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


