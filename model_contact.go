/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the Contact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Contact{}

// Contact struct for Contact
type Contact struct {
	Id *int32 `json:"id,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	Company *CompanyReference `json:"company,omitempty"`
	Site *SiteReference `json:"site,omitempty"`
	AddressLine1 *string `json:"addressLine1,omitempty"`
	AddressLine2 *string `json:"addressLine2,omitempty"`
	City *string `json:"city,omitempty"`
	State *string `json:"state,omitempty"`
	Zip *string `json:"zip,omitempty"`
	Country *CountryReference `json:"country,omitempty"`
	Relationship *RelationshipReference `json:"relationship,omitempty"`
	RelationshipOverride *string `json:"relationshipOverride,omitempty"`
	Department *ContactDepartmentReference `json:"department,omitempty"`
	InactiveFlag NullableBool `json:"inactiveFlag,omitempty"`
	DefaultMergeContactId NullableInt32 `json:"defaultMergeContactId,omitempty"`
	SecurityIdentifier *string `json:"securityIdentifier,omitempty"`
	ManagerContact *ContactReference `json:"managerContact,omitempty"`
	AssistantContact *ContactReference `json:"assistantContact,omitempty"`
	Title *string `json:"title,omitempty"`
	School *string `json:"school,omitempty"`
	NickName *string `json:"nickName,omitempty"`
	MarriedFlag NullableBool `json:"marriedFlag,omitempty"`
	ChildrenFlag NullableBool `json:"childrenFlag,omitempty"`
	Children *string `json:"children,omitempty"`
	SignificantOther *string `json:"significantOther,omitempty"`
	PortalPassword *string `json:"portalPassword,omitempty"`
	PortalSecurityLevel NullableInt32 `json:"portalSecurityLevel,omitempty"`
	DisablePortalLoginFlag NullableBool `json:"disablePortalLoginFlag,omitempty"`
	UnsubscribeFlag NullableBool `json:"unsubscribeFlag,omitempty"`
	Gender NullableString `json:"gender,omitempty"`
	BirthDay *string `json:"birthDay,omitempty"`
	Anniversary *string `json:"anniversary,omitempty"`
	Presence NullableString `json:"presence,omitempty"`
	MobileGuid NullableString `json:"mobileGuid,omitempty"`
	FacebookUrl *string `json:"facebookUrl,omitempty"`
	TwitterUrl *string `json:"twitterUrl,omitempty"`
	LinkedInUrl *string `json:"linkedInUrl,omitempty"`
	DefaultPhoneType *string `json:"defaultPhoneType,omitempty"`
	DefaultPhoneNbr *string `json:"defaultPhoneNbr,omitempty"`
	DefaultPhoneExtension *string `json:"defaultPhoneExtension,omitempty"`
	DefaultBillingFlag NullableBool `json:"defaultBillingFlag,omitempty"`
	DefaultFlag NullableBool `json:"defaultFlag,omitempty"`
	//  Max length: 50;
	UserDefinedField1 *string `json:"userDefinedField1,omitempty"`
	//  Max length: 50;
	UserDefinedField2 *string `json:"userDefinedField2,omitempty"`
	//  Max length: 50;
	UserDefinedField3 *string `json:"userDefinedField3,omitempty"`
	//  Max length: 50;
	UserDefinedField4 *string `json:"userDefinedField4,omitempty"`
	//  Max length: 50;
	UserDefinedField5 *string `json:"userDefinedField5,omitempty"`
	//  Max length: 50;
	UserDefinedField6 *string `json:"userDefinedField6,omitempty"`
	//  Max length: 50;
	UserDefinedField7 *string `json:"userDefinedField7,omitempty"`
	//  Max length: 50;
	UserDefinedField8 *string `json:"userDefinedField8,omitempty"`
	//  Max length: 50;
	UserDefinedField9 *string `json:"userDefinedField9,omitempty"`
	//  Max length: 50;
	UserDefinedField10 *string `json:"userDefinedField10,omitempty"`
	CompanyLocation *SystemLocationReference `json:"companyLocation,omitempty"`
	CommunicationItems []ContactCommunicationItem `json:"communicationItems,omitempty"`
	Types []ContactTypeReference `json:"types,omitempty"`
	IntegratorTags []string `json:"integratorTags,omitempty"`
	CustomFields []CustomFieldValue `json:"customFields,omitempty"`
	Photo *DocumentReference `json:"photo,omitempty"`
	IgnoreDuplicates *bool `json:"ignoreDuplicates,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
	// Gets or sets integrer array of Contact_Type_Recids to be assigned to contact that can be passed in only during new contact creation (post)             To update existing contacts type, use the /company/contactTypeAssociations or /company/contacts/{ID}/typeAssociations endpoints.
	TypeIds []int32 `json:"typeIds,omitempty"`
}

// NewContact instantiates a new Contact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContact() *Contact {
	this := Contact{}
	return &this
}

// NewContactWithDefaults instantiates a new Contact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactWithDefaults() *Contact {
	this := Contact{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Contact) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Contact) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Contact) SetId(v int32) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Contact) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Contact) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Contact) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Contact) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Contact) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Contact) SetLastName(v string) {
	o.LastName = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *Contact) GetCompany() CompanyReference {
	if o == nil || IsNil(o.Company) {
		var ret CompanyReference
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *Contact) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given CompanyReference and assigns it to the Company field.
func (o *Contact) SetCompany(v CompanyReference) {
	o.Company = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *Contact) GetSite() SiteReference {
	if o == nil || IsNil(o.Site) {
		var ret SiteReference
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Contact) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given SiteReference and assigns it to the Site field.
func (o *Contact) SetSite(v SiteReference) {
	o.Site = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *Contact) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *Contact) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *Contact) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *Contact) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *Contact) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *Contact) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *Contact) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *Contact) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *Contact) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Contact) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Contact) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Contact) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *Contact) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *Contact) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *Contact) SetZip(v string) {
	o.Zip = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Contact) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Contact) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *Contact) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetRelationship returns the Relationship field value if set, zero value otherwise.
func (o *Contact) GetRelationship() RelationshipReference {
	if o == nil || IsNil(o.Relationship) {
		var ret RelationshipReference
		return ret
	}
	return *o.Relationship
}

// GetRelationshipOk returns a tuple with the Relationship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetRelationshipOk() (*RelationshipReference, bool) {
	if o == nil || IsNil(o.Relationship) {
		return nil, false
	}
	return o.Relationship, true
}

// HasRelationship returns a boolean if a field has been set.
func (o *Contact) HasRelationship() bool {
	if o != nil && !IsNil(o.Relationship) {
		return true
	}

	return false
}

// SetRelationship gets a reference to the given RelationshipReference and assigns it to the Relationship field.
func (o *Contact) SetRelationship(v RelationshipReference) {
	o.Relationship = &v
}

// GetRelationshipOverride returns the RelationshipOverride field value if set, zero value otherwise.
func (o *Contact) GetRelationshipOverride() string {
	if o == nil || IsNil(o.RelationshipOverride) {
		var ret string
		return ret
	}
	return *o.RelationshipOverride
}

// GetRelationshipOverrideOk returns a tuple with the RelationshipOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetRelationshipOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.RelationshipOverride) {
		return nil, false
	}
	return o.RelationshipOverride, true
}

// HasRelationshipOverride returns a boolean if a field has been set.
func (o *Contact) HasRelationshipOverride() bool {
	if o != nil && !IsNil(o.RelationshipOverride) {
		return true
	}

	return false
}

// SetRelationshipOverride gets a reference to the given string and assigns it to the RelationshipOverride field.
func (o *Contact) SetRelationshipOverride(v string) {
	o.RelationshipOverride = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *Contact) GetDepartment() ContactDepartmentReference {
	if o == nil || IsNil(o.Department) {
		var ret ContactDepartmentReference
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDepartmentOk() (*ContactDepartmentReference, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *Contact) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given ContactDepartmentReference and assigns it to the Department field.
func (o *Contact) SetDepartment(v ContactDepartmentReference) {
	o.Department = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *Contact) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *Contact) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}
// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *Contact) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *Contact) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetDefaultMergeContactId returns the DefaultMergeContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetDefaultMergeContactId() int32 {
	if o == nil || IsNil(o.DefaultMergeContactId.Get()) {
		var ret int32
		return ret
	}
	return *o.DefaultMergeContactId.Get()
}

// GetDefaultMergeContactIdOk returns a tuple with the DefaultMergeContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetDefaultMergeContactIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultMergeContactId.Get(), o.DefaultMergeContactId.IsSet()
}

// HasDefaultMergeContactId returns a boolean if a field has been set.
func (o *Contact) HasDefaultMergeContactId() bool {
	if o != nil && o.DefaultMergeContactId.IsSet() {
		return true
	}

	return false
}

// SetDefaultMergeContactId gets a reference to the given NullableInt32 and assigns it to the DefaultMergeContactId field.
func (o *Contact) SetDefaultMergeContactId(v int32) {
	o.DefaultMergeContactId.Set(&v)
}
// SetDefaultMergeContactIdNil sets the value for DefaultMergeContactId to be an explicit nil
func (o *Contact) SetDefaultMergeContactIdNil() {
	o.DefaultMergeContactId.Set(nil)
}

// UnsetDefaultMergeContactId ensures that no value is present for DefaultMergeContactId, not even an explicit nil
func (o *Contact) UnsetDefaultMergeContactId() {
	o.DefaultMergeContactId.Unset()
}

// GetSecurityIdentifier returns the SecurityIdentifier field value if set, zero value otherwise.
func (o *Contact) GetSecurityIdentifier() string {
	if o == nil || IsNil(o.SecurityIdentifier) {
		var ret string
		return ret
	}
	return *o.SecurityIdentifier
}

// GetSecurityIdentifierOk returns a tuple with the SecurityIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSecurityIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityIdentifier) {
		return nil, false
	}
	return o.SecurityIdentifier, true
}

// HasSecurityIdentifier returns a boolean if a field has been set.
func (o *Contact) HasSecurityIdentifier() bool {
	if o != nil && !IsNil(o.SecurityIdentifier) {
		return true
	}

	return false
}

// SetSecurityIdentifier gets a reference to the given string and assigns it to the SecurityIdentifier field.
func (o *Contact) SetSecurityIdentifier(v string) {
	o.SecurityIdentifier = &v
}

// GetManagerContact returns the ManagerContact field value if set, zero value otherwise.
func (o *Contact) GetManagerContact() ContactReference {
	if o == nil || IsNil(o.ManagerContact) {
		var ret ContactReference
		return ret
	}
	return *o.ManagerContact
}

// GetManagerContactOk returns a tuple with the ManagerContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetManagerContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.ManagerContact) {
		return nil, false
	}
	return o.ManagerContact, true
}

// HasManagerContact returns a boolean if a field has been set.
func (o *Contact) HasManagerContact() bool {
	if o != nil && !IsNil(o.ManagerContact) {
		return true
	}

	return false
}

// SetManagerContact gets a reference to the given ContactReference and assigns it to the ManagerContact field.
func (o *Contact) SetManagerContact(v ContactReference) {
	o.ManagerContact = &v
}

// GetAssistantContact returns the AssistantContact field value if set, zero value otherwise.
func (o *Contact) GetAssistantContact() ContactReference {
	if o == nil || IsNil(o.AssistantContact) {
		var ret ContactReference
		return ret
	}
	return *o.AssistantContact
}

// GetAssistantContactOk returns a tuple with the AssistantContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAssistantContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.AssistantContact) {
		return nil, false
	}
	return o.AssistantContact, true
}

// HasAssistantContact returns a boolean if a field has been set.
func (o *Contact) HasAssistantContact() bool {
	if o != nil && !IsNil(o.AssistantContact) {
		return true
	}

	return false
}

// SetAssistantContact gets a reference to the given ContactReference and assigns it to the AssistantContact field.
func (o *Contact) SetAssistantContact(v ContactReference) {
	o.AssistantContact = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Contact) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Contact) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Contact) SetTitle(v string) {
	o.Title = &v
}

// GetSchool returns the School field value if set, zero value otherwise.
func (o *Contact) GetSchool() string {
	if o == nil || IsNil(o.School) {
		var ret string
		return ret
	}
	return *o.School
}

// GetSchoolOk returns a tuple with the School field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSchoolOk() (*string, bool) {
	if o == nil || IsNil(o.School) {
		return nil, false
	}
	return o.School, true
}

// HasSchool returns a boolean if a field has been set.
func (o *Contact) HasSchool() bool {
	if o != nil && !IsNil(o.School) {
		return true
	}

	return false
}

// SetSchool gets a reference to the given string and assigns it to the School field.
func (o *Contact) SetSchool(v string) {
	o.School = &v
}

// GetNickName returns the NickName field value if set, zero value otherwise.
func (o *Contact) GetNickName() string {
	if o == nil || IsNil(o.NickName) {
		var ret string
		return ret
	}
	return *o.NickName
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetNickNameOk() (*string, bool) {
	if o == nil || IsNil(o.NickName) {
		return nil, false
	}
	return o.NickName, true
}

// HasNickName returns a boolean if a field has been set.
func (o *Contact) HasNickName() bool {
	if o != nil && !IsNil(o.NickName) {
		return true
	}

	return false
}

// SetNickName gets a reference to the given string and assigns it to the NickName field.
func (o *Contact) SetNickName(v string) {
	o.NickName = &v
}

// GetMarriedFlag returns the MarriedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetMarriedFlag() bool {
	if o == nil || IsNil(o.MarriedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.MarriedFlag.Get()
}

// GetMarriedFlagOk returns a tuple with the MarriedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetMarriedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarriedFlag.Get(), o.MarriedFlag.IsSet()
}

// HasMarriedFlag returns a boolean if a field has been set.
func (o *Contact) HasMarriedFlag() bool {
	if o != nil && o.MarriedFlag.IsSet() {
		return true
	}

	return false
}

// SetMarriedFlag gets a reference to the given NullableBool and assigns it to the MarriedFlag field.
func (o *Contact) SetMarriedFlag(v bool) {
	o.MarriedFlag.Set(&v)
}
// SetMarriedFlagNil sets the value for MarriedFlag to be an explicit nil
func (o *Contact) SetMarriedFlagNil() {
	o.MarriedFlag.Set(nil)
}

// UnsetMarriedFlag ensures that no value is present for MarriedFlag, not even an explicit nil
func (o *Contact) UnsetMarriedFlag() {
	o.MarriedFlag.Unset()
}

// GetChildrenFlag returns the ChildrenFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetChildrenFlag() bool {
	if o == nil || IsNil(o.ChildrenFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ChildrenFlag.Get()
}

// GetChildrenFlagOk returns a tuple with the ChildrenFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetChildrenFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChildrenFlag.Get(), o.ChildrenFlag.IsSet()
}

// HasChildrenFlag returns a boolean if a field has been set.
func (o *Contact) HasChildrenFlag() bool {
	if o != nil && o.ChildrenFlag.IsSet() {
		return true
	}

	return false
}

// SetChildrenFlag gets a reference to the given NullableBool and assigns it to the ChildrenFlag field.
func (o *Contact) SetChildrenFlag(v bool) {
	o.ChildrenFlag.Set(&v)
}
// SetChildrenFlagNil sets the value for ChildrenFlag to be an explicit nil
func (o *Contact) SetChildrenFlagNil() {
	o.ChildrenFlag.Set(nil)
}

// UnsetChildrenFlag ensures that no value is present for ChildrenFlag, not even an explicit nil
func (o *Contact) UnsetChildrenFlag() {
	o.ChildrenFlag.Unset()
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *Contact) GetChildren() string {
	if o == nil || IsNil(o.Children) {
		var ret string
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetChildrenOk() (*string, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *Contact) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given string and assigns it to the Children field.
func (o *Contact) SetChildren(v string) {
	o.Children = &v
}

// GetSignificantOther returns the SignificantOther field value if set, zero value otherwise.
func (o *Contact) GetSignificantOther() string {
	if o == nil || IsNil(o.SignificantOther) {
		var ret string
		return ret
	}
	return *o.SignificantOther
}

// GetSignificantOtherOk returns a tuple with the SignificantOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSignificantOtherOk() (*string, bool) {
	if o == nil || IsNil(o.SignificantOther) {
		return nil, false
	}
	return o.SignificantOther, true
}

// HasSignificantOther returns a boolean if a field has been set.
func (o *Contact) HasSignificantOther() bool {
	if o != nil && !IsNil(o.SignificantOther) {
		return true
	}

	return false
}

// SetSignificantOther gets a reference to the given string and assigns it to the SignificantOther field.
func (o *Contact) SetSignificantOther(v string) {
	o.SignificantOther = &v
}

// GetPortalPassword returns the PortalPassword field value if set, zero value otherwise.
func (o *Contact) GetPortalPassword() string {
	if o == nil || IsNil(o.PortalPassword) {
		var ret string
		return ret
	}
	return *o.PortalPassword
}

// GetPortalPasswordOk returns a tuple with the PortalPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPortalPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.PortalPassword) {
		return nil, false
	}
	return o.PortalPassword, true
}

// HasPortalPassword returns a boolean if a field has been set.
func (o *Contact) HasPortalPassword() bool {
	if o != nil && !IsNil(o.PortalPassword) {
		return true
	}

	return false
}

// SetPortalPassword gets a reference to the given string and assigns it to the PortalPassword field.
func (o *Contact) SetPortalPassword(v string) {
	o.PortalPassword = &v
}

// GetPortalSecurityLevel returns the PortalSecurityLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetPortalSecurityLevel() int32 {
	if o == nil || IsNil(o.PortalSecurityLevel.Get()) {
		var ret int32
		return ret
	}
	return *o.PortalSecurityLevel.Get()
}

// GetPortalSecurityLevelOk returns a tuple with the PortalSecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetPortalSecurityLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortalSecurityLevel.Get(), o.PortalSecurityLevel.IsSet()
}

// HasPortalSecurityLevel returns a boolean if a field has been set.
func (o *Contact) HasPortalSecurityLevel() bool {
	if o != nil && o.PortalSecurityLevel.IsSet() {
		return true
	}

	return false
}

// SetPortalSecurityLevel gets a reference to the given NullableInt32 and assigns it to the PortalSecurityLevel field.
func (o *Contact) SetPortalSecurityLevel(v int32) {
	o.PortalSecurityLevel.Set(&v)
}
// SetPortalSecurityLevelNil sets the value for PortalSecurityLevel to be an explicit nil
func (o *Contact) SetPortalSecurityLevelNil() {
	o.PortalSecurityLevel.Set(nil)
}

// UnsetPortalSecurityLevel ensures that no value is present for PortalSecurityLevel, not even an explicit nil
func (o *Contact) UnsetPortalSecurityLevel() {
	o.PortalSecurityLevel.Unset()
}

// GetDisablePortalLoginFlag returns the DisablePortalLoginFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetDisablePortalLoginFlag() bool {
	if o == nil || IsNil(o.DisablePortalLoginFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisablePortalLoginFlag.Get()
}

// GetDisablePortalLoginFlagOk returns a tuple with the DisablePortalLoginFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetDisablePortalLoginFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisablePortalLoginFlag.Get(), o.DisablePortalLoginFlag.IsSet()
}

// HasDisablePortalLoginFlag returns a boolean if a field has been set.
func (o *Contact) HasDisablePortalLoginFlag() bool {
	if o != nil && o.DisablePortalLoginFlag.IsSet() {
		return true
	}

	return false
}

// SetDisablePortalLoginFlag gets a reference to the given NullableBool and assigns it to the DisablePortalLoginFlag field.
func (o *Contact) SetDisablePortalLoginFlag(v bool) {
	o.DisablePortalLoginFlag.Set(&v)
}
// SetDisablePortalLoginFlagNil sets the value for DisablePortalLoginFlag to be an explicit nil
func (o *Contact) SetDisablePortalLoginFlagNil() {
	o.DisablePortalLoginFlag.Set(nil)
}

// UnsetDisablePortalLoginFlag ensures that no value is present for DisablePortalLoginFlag, not even an explicit nil
func (o *Contact) UnsetDisablePortalLoginFlag() {
	o.DisablePortalLoginFlag.Unset()
}

// GetUnsubscribeFlag returns the UnsubscribeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetUnsubscribeFlag() bool {
	if o == nil || IsNil(o.UnsubscribeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UnsubscribeFlag.Get()
}

// GetUnsubscribeFlagOk returns a tuple with the UnsubscribeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetUnsubscribeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnsubscribeFlag.Get(), o.UnsubscribeFlag.IsSet()
}

// HasUnsubscribeFlag returns a boolean if a field has been set.
func (o *Contact) HasUnsubscribeFlag() bool {
	if o != nil && o.UnsubscribeFlag.IsSet() {
		return true
	}

	return false
}

// SetUnsubscribeFlag gets a reference to the given NullableBool and assigns it to the UnsubscribeFlag field.
func (o *Contact) SetUnsubscribeFlag(v bool) {
	o.UnsubscribeFlag.Set(&v)
}
// SetUnsubscribeFlagNil sets the value for UnsubscribeFlag to be an explicit nil
func (o *Contact) SetUnsubscribeFlagNil() {
	o.UnsubscribeFlag.Set(nil)
}

// UnsetUnsubscribeFlag ensures that no value is present for UnsubscribeFlag, not even an explicit nil
func (o *Contact) UnsetUnsubscribeFlag() {
	o.UnsubscribeFlag.Unset()
}

// GetGender returns the Gender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetGender() string {
	if o == nil || IsNil(o.Gender.Get()) {
		var ret string
		return ret
	}
	return *o.Gender.Get()
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetGenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gender.Get(), o.Gender.IsSet()
}

// HasGender returns a boolean if a field has been set.
func (o *Contact) HasGender() bool {
	if o != nil && o.Gender.IsSet() {
		return true
	}

	return false
}

// SetGender gets a reference to the given NullableString and assigns it to the Gender field.
func (o *Contact) SetGender(v string) {
	o.Gender.Set(&v)
}
// SetGenderNil sets the value for Gender to be an explicit nil
func (o *Contact) SetGenderNil() {
	o.Gender.Set(nil)
}

// UnsetGender ensures that no value is present for Gender, not even an explicit nil
func (o *Contact) UnsetGender() {
	o.Gender.Unset()
}

// GetBirthDay returns the BirthDay field value if set, zero value otherwise.
func (o *Contact) GetBirthDay() string {
	if o == nil || IsNil(o.BirthDay) {
		var ret string
		return ret
	}
	return *o.BirthDay
}

// GetBirthDayOk returns a tuple with the BirthDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBirthDayOk() (*string, bool) {
	if o == nil || IsNil(o.BirthDay) {
		return nil, false
	}
	return o.BirthDay, true
}

// HasBirthDay returns a boolean if a field has been set.
func (o *Contact) HasBirthDay() bool {
	if o != nil && !IsNil(o.BirthDay) {
		return true
	}

	return false
}

// SetBirthDay gets a reference to the given string and assigns it to the BirthDay field.
func (o *Contact) SetBirthDay(v string) {
	o.BirthDay = &v
}

// GetAnniversary returns the Anniversary field value if set, zero value otherwise.
func (o *Contact) GetAnniversary() string {
	if o == nil || IsNil(o.Anniversary) {
		var ret string
		return ret
	}
	return *o.Anniversary
}

// GetAnniversaryOk returns a tuple with the Anniversary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAnniversaryOk() (*string, bool) {
	if o == nil || IsNil(o.Anniversary) {
		return nil, false
	}
	return o.Anniversary, true
}

// HasAnniversary returns a boolean if a field has been set.
func (o *Contact) HasAnniversary() bool {
	if o != nil && !IsNil(o.Anniversary) {
		return true
	}

	return false
}

// SetAnniversary gets a reference to the given string and assigns it to the Anniversary field.
func (o *Contact) SetAnniversary(v string) {
	o.Anniversary = &v
}

// GetPresence returns the Presence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetPresence() string {
	if o == nil || IsNil(o.Presence.Get()) {
		var ret string
		return ret
	}
	return *o.Presence.Get()
}

// GetPresenceOk returns a tuple with the Presence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetPresenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Presence.Get(), o.Presence.IsSet()
}

// HasPresence returns a boolean if a field has been set.
func (o *Contact) HasPresence() bool {
	if o != nil && o.Presence.IsSet() {
		return true
	}

	return false
}

// SetPresence gets a reference to the given NullableString and assigns it to the Presence field.
func (o *Contact) SetPresence(v string) {
	o.Presence.Set(&v)
}
// SetPresenceNil sets the value for Presence to be an explicit nil
func (o *Contact) SetPresenceNil() {
	o.Presence.Set(nil)
}

// UnsetPresence ensures that no value is present for Presence, not even an explicit nil
func (o *Contact) UnsetPresence() {
	o.Presence.Unset()
}

// GetMobileGuid returns the MobileGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetMobileGuid() string {
	if o == nil || IsNil(o.MobileGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MobileGuid.Get()
}

// GetMobileGuidOk returns a tuple with the MobileGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetMobileGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileGuid.Get(), o.MobileGuid.IsSet()
}

// HasMobileGuid returns a boolean if a field has been set.
func (o *Contact) HasMobileGuid() bool {
	if o != nil && o.MobileGuid.IsSet() {
		return true
	}

	return false
}

// SetMobileGuid gets a reference to the given NullableString and assigns it to the MobileGuid field.
func (o *Contact) SetMobileGuid(v string) {
	o.MobileGuid.Set(&v)
}
// SetMobileGuidNil sets the value for MobileGuid to be an explicit nil
func (o *Contact) SetMobileGuidNil() {
	o.MobileGuid.Set(nil)
}

// UnsetMobileGuid ensures that no value is present for MobileGuid, not even an explicit nil
func (o *Contact) UnsetMobileGuid() {
	o.MobileGuid.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise.
func (o *Contact) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl) {
		var ret string
		return ret
	}
	return *o.FacebookUrl
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetFacebookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FacebookUrl) {
		return nil, false
	}
	return o.FacebookUrl, true
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *Contact) HasFacebookUrl() bool {
	if o != nil && !IsNil(o.FacebookUrl) {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given string and assigns it to the FacebookUrl field.
func (o *Contact) SetFacebookUrl(v string) {
	o.FacebookUrl = &v
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise.
func (o *Contact) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl) {
		var ret string
		return ret
	}
	return *o.TwitterUrl
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTwitterUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterUrl) {
		return nil, false
	}
	return o.TwitterUrl, true
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *Contact) HasTwitterUrl() bool {
	if o != nil && !IsNil(o.TwitterUrl) {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given string and assigns it to the TwitterUrl field.
func (o *Contact) SetTwitterUrl(v string) {
	o.TwitterUrl = &v
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise.
func (o *Contact) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetLinkedInUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedInUrl) {
		return nil, false
	}
	return o.LinkedInUrl, true
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *Contact) HasLinkedInUrl() bool {
	if o != nil && !IsNil(o.LinkedInUrl) {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given string and assigns it to the LinkedInUrl field.
func (o *Contact) SetLinkedInUrl(v string) {
	o.LinkedInUrl = &v
}

// GetDefaultPhoneType returns the DefaultPhoneType field value if set, zero value otherwise.
func (o *Contact) GetDefaultPhoneType() string {
	if o == nil || IsNil(o.DefaultPhoneType) {
		var ret string
		return ret
	}
	return *o.DefaultPhoneType
}

// GetDefaultPhoneTypeOk returns a tuple with the DefaultPhoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDefaultPhoneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPhoneType) {
		return nil, false
	}
	return o.DefaultPhoneType, true
}

// HasDefaultPhoneType returns a boolean if a field has been set.
func (o *Contact) HasDefaultPhoneType() bool {
	if o != nil && !IsNil(o.DefaultPhoneType) {
		return true
	}

	return false
}

// SetDefaultPhoneType gets a reference to the given string and assigns it to the DefaultPhoneType field.
func (o *Contact) SetDefaultPhoneType(v string) {
	o.DefaultPhoneType = &v
}

// GetDefaultPhoneNbr returns the DefaultPhoneNbr field value if set, zero value otherwise.
func (o *Contact) GetDefaultPhoneNbr() string {
	if o == nil || IsNil(o.DefaultPhoneNbr) {
		var ret string
		return ret
	}
	return *o.DefaultPhoneNbr
}

// GetDefaultPhoneNbrOk returns a tuple with the DefaultPhoneNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDefaultPhoneNbrOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPhoneNbr) {
		return nil, false
	}
	return o.DefaultPhoneNbr, true
}

// HasDefaultPhoneNbr returns a boolean if a field has been set.
func (o *Contact) HasDefaultPhoneNbr() bool {
	if o != nil && !IsNil(o.DefaultPhoneNbr) {
		return true
	}

	return false
}

// SetDefaultPhoneNbr gets a reference to the given string and assigns it to the DefaultPhoneNbr field.
func (o *Contact) SetDefaultPhoneNbr(v string) {
	o.DefaultPhoneNbr = &v
}

// GetDefaultPhoneExtension returns the DefaultPhoneExtension field value if set, zero value otherwise.
func (o *Contact) GetDefaultPhoneExtension() string {
	if o == nil || IsNil(o.DefaultPhoneExtension) {
		var ret string
		return ret
	}
	return *o.DefaultPhoneExtension
}

// GetDefaultPhoneExtensionOk returns a tuple with the DefaultPhoneExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDefaultPhoneExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPhoneExtension) {
		return nil, false
	}
	return o.DefaultPhoneExtension, true
}

// HasDefaultPhoneExtension returns a boolean if a field has been set.
func (o *Contact) HasDefaultPhoneExtension() bool {
	if o != nil && !IsNil(o.DefaultPhoneExtension) {
		return true
	}

	return false
}

// SetDefaultPhoneExtension gets a reference to the given string and assigns it to the DefaultPhoneExtension field.
func (o *Contact) SetDefaultPhoneExtension(v string) {
	o.DefaultPhoneExtension = &v
}

// GetDefaultBillingFlag returns the DefaultBillingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetDefaultBillingFlag() bool {
	if o == nil || IsNil(o.DefaultBillingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultBillingFlag.Get()
}

// GetDefaultBillingFlagOk returns a tuple with the DefaultBillingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetDefaultBillingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultBillingFlag.Get(), o.DefaultBillingFlag.IsSet()
}

// HasDefaultBillingFlag returns a boolean if a field has been set.
func (o *Contact) HasDefaultBillingFlag() bool {
	if o != nil && o.DefaultBillingFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultBillingFlag gets a reference to the given NullableBool and assigns it to the DefaultBillingFlag field.
func (o *Contact) SetDefaultBillingFlag(v bool) {
	o.DefaultBillingFlag.Set(&v)
}
// SetDefaultBillingFlagNil sets the value for DefaultBillingFlag to be an explicit nil
func (o *Contact) SetDefaultBillingFlagNil() {
	o.DefaultBillingFlag.Set(nil)
}

// UnsetDefaultBillingFlag ensures that no value is present for DefaultBillingFlag, not even an explicit nil
func (o *Contact) UnsetDefaultBillingFlag() {
	o.DefaultBillingFlag.Unset()
}

// GetDefaultFlag returns the DefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetDefaultFlag() bool {
	if o == nil || IsNil(o.DefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultFlag.Get()
}

// GetDefaultFlagOk returns a tuple with the DefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultFlag.Get(), o.DefaultFlag.IsSet()
}

// HasDefaultFlag returns a boolean if a field has been set.
func (o *Contact) HasDefaultFlag() bool {
	if o != nil && o.DefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultFlag gets a reference to the given NullableBool and assigns it to the DefaultFlag field.
func (o *Contact) SetDefaultFlag(v bool) {
	o.DefaultFlag.Set(&v)
}
// SetDefaultFlagNil sets the value for DefaultFlag to be an explicit nil
func (o *Contact) SetDefaultFlagNil() {
	o.DefaultFlag.Set(nil)
}

// UnsetDefaultFlag ensures that no value is present for DefaultFlag, not even an explicit nil
func (o *Contact) UnsetDefaultFlag() {
	o.DefaultFlag.Unset()
}

// GetUserDefinedField1 returns the UserDefinedField1 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField1() string {
	if o == nil || IsNil(o.UserDefinedField1) {
		var ret string
		return ret
	}
	return *o.UserDefinedField1
}

// GetUserDefinedField1Ok returns a tuple with the UserDefinedField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField1Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField1) {
		return nil, false
	}
	return o.UserDefinedField1, true
}

// HasUserDefinedField1 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField1() bool {
	if o != nil && !IsNil(o.UserDefinedField1) {
		return true
	}

	return false
}

// SetUserDefinedField1 gets a reference to the given string and assigns it to the UserDefinedField1 field.
func (o *Contact) SetUserDefinedField1(v string) {
	o.UserDefinedField1 = &v
}

// GetUserDefinedField2 returns the UserDefinedField2 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField2() string {
	if o == nil || IsNil(o.UserDefinedField2) {
		var ret string
		return ret
	}
	return *o.UserDefinedField2
}

// GetUserDefinedField2Ok returns a tuple with the UserDefinedField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField2Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField2) {
		return nil, false
	}
	return o.UserDefinedField2, true
}

// HasUserDefinedField2 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField2() bool {
	if o != nil && !IsNil(o.UserDefinedField2) {
		return true
	}

	return false
}

// SetUserDefinedField2 gets a reference to the given string and assigns it to the UserDefinedField2 field.
func (o *Contact) SetUserDefinedField2(v string) {
	o.UserDefinedField2 = &v
}

// GetUserDefinedField3 returns the UserDefinedField3 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField3() string {
	if o == nil || IsNil(o.UserDefinedField3) {
		var ret string
		return ret
	}
	return *o.UserDefinedField3
}

// GetUserDefinedField3Ok returns a tuple with the UserDefinedField3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField3Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField3) {
		return nil, false
	}
	return o.UserDefinedField3, true
}

// HasUserDefinedField3 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField3() bool {
	if o != nil && !IsNil(o.UserDefinedField3) {
		return true
	}

	return false
}

// SetUserDefinedField3 gets a reference to the given string and assigns it to the UserDefinedField3 field.
func (o *Contact) SetUserDefinedField3(v string) {
	o.UserDefinedField3 = &v
}

// GetUserDefinedField4 returns the UserDefinedField4 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField4() string {
	if o == nil || IsNil(o.UserDefinedField4) {
		var ret string
		return ret
	}
	return *o.UserDefinedField4
}

// GetUserDefinedField4Ok returns a tuple with the UserDefinedField4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField4Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField4) {
		return nil, false
	}
	return o.UserDefinedField4, true
}

// HasUserDefinedField4 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField4() bool {
	if o != nil && !IsNil(o.UserDefinedField4) {
		return true
	}

	return false
}

// SetUserDefinedField4 gets a reference to the given string and assigns it to the UserDefinedField4 field.
func (o *Contact) SetUserDefinedField4(v string) {
	o.UserDefinedField4 = &v
}

// GetUserDefinedField5 returns the UserDefinedField5 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField5() string {
	if o == nil || IsNil(o.UserDefinedField5) {
		var ret string
		return ret
	}
	return *o.UserDefinedField5
}

// GetUserDefinedField5Ok returns a tuple with the UserDefinedField5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField5Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField5) {
		return nil, false
	}
	return o.UserDefinedField5, true
}

// HasUserDefinedField5 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField5() bool {
	if o != nil && !IsNil(o.UserDefinedField5) {
		return true
	}

	return false
}

// SetUserDefinedField5 gets a reference to the given string and assigns it to the UserDefinedField5 field.
func (o *Contact) SetUserDefinedField5(v string) {
	o.UserDefinedField5 = &v
}

// GetUserDefinedField6 returns the UserDefinedField6 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField6() string {
	if o == nil || IsNil(o.UserDefinedField6) {
		var ret string
		return ret
	}
	return *o.UserDefinedField6
}

// GetUserDefinedField6Ok returns a tuple with the UserDefinedField6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField6Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField6) {
		return nil, false
	}
	return o.UserDefinedField6, true
}

// HasUserDefinedField6 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField6() bool {
	if o != nil && !IsNil(o.UserDefinedField6) {
		return true
	}

	return false
}

// SetUserDefinedField6 gets a reference to the given string and assigns it to the UserDefinedField6 field.
func (o *Contact) SetUserDefinedField6(v string) {
	o.UserDefinedField6 = &v
}

// GetUserDefinedField7 returns the UserDefinedField7 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField7() string {
	if o == nil || IsNil(o.UserDefinedField7) {
		var ret string
		return ret
	}
	return *o.UserDefinedField7
}

// GetUserDefinedField7Ok returns a tuple with the UserDefinedField7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField7Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField7) {
		return nil, false
	}
	return o.UserDefinedField7, true
}

// HasUserDefinedField7 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField7() bool {
	if o != nil && !IsNil(o.UserDefinedField7) {
		return true
	}

	return false
}

// SetUserDefinedField7 gets a reference to the given string and assigns it to the UserDefinedField7 field.
func (o *Contact) SetUserDefinedField7(v string) {
	o.UserDefinedField7 = &v
}

// GetUserDefinedField8 returns the UserDefinedField8 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField8() string {
	if o == nil || IsNil(o.UserDefinedField8) {
		var ret string
		return ret
	}
	return *o.UserDefinedField8
}

// GetUserDefinedField8Ok returns a tuple with the UserDefinedField8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField8Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField8) {
		return nil, false
	}
	return o.UserDefinedField8, true
}

// HasUserDefinedField8 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField8() bool {
	if o != nil && !IsNil(o.UserDefinedField8) {
		return true
	}

	return false
}

// SetUserDefinedField8 gets a reference to the given string and assigns it to the UserDefinedField8 field.
func (o *Contact) SetUserDefinedField8(v string) {
	o.UserDefinedField8 = &v
}

// GetUserDefinedField9 returns the UserDefinedField9 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField9() string {
	if o == nil || IsNil(o.UserDefinedField9) {
		var ret string
		return ret
	}
	return *o.UserDefinedField9
}

// GetUserDefinedField9Ok returns a tuple with the UserDefinedField9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField9Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField9) {
		return nil, false
	}
	return o.UserDefinedField9, true
}

// HasUserDefinedField9 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField9() bool {
	if o != nil && !IsNil(o.UserDefinedField9) {
		return true
	}

	return false
}

// SetUserDefinedField9 gets a reference to the given string and assigns it to the UserDefinedField9 field.
func (o *Contact) SetUserDefinedField9(v string) {
	o.UserDefinedField9 = &v
}

// GetUserDefinedField10 returns the UserDefinedField10 field value if set, zero value otherwise.
func (o *Contact) GetUserDefinedField10() string {
	if o == nil || IsNil(o.UserDefinedField10) {
		var ret string
		return ret
	}
	return *o.UserDefinedField10
}

// GetUserDefinedField10Ok returns a tuple with the UserDefinedField10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUserDefinedField10Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedField10) {
		return nil, false
	}
	return o.UserDefinedField10, true
}

// HasUserDefinedField10 returns a boolean if a field has been set.
func (o *Contact) HasUserDefinedField10() bool {
	if o != nil && !IsNil(o.UserDefinedField10) {
		return true
	}

	return false
}

// SetUserDefinedField10 gets a reference to the given string and assigns it to the UserDefinedField10 field.
func (o *Contact) SetUserDefinedField10(v string) {
	o.UserDefinedField10 = &v
}

// GetCompanyLocation returns the CompanyLocation field value if set, zero value otherwise.
func (o *Contact) GetCompanyLocation() SystemLocationReference {
	if o == nil || IsNil(o.CompanyLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.CompanyLocation
}

// GetCompanyLocationOk returns a tuple with the CompanyLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCompanyLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.CompanyLocation) {
		return nil, false
	}
	return o.CompanyLocation, true
}

// HasCompanyLocation returns a boolean if a field has been set.
func (o *Contact) HasCompanyLocation() bool {
	if o != nil && !IsNil(o.CompanyLocation) {
		return true
	}

	return false
}

// SetCompanyLocation gets a reference to the given SystemLocationReference and assigns it to the CompanyLocation field.
func (o *Contact) SetCompanyLocation(v SystemLocationReference) {
	o.CompanyLocation = &v
}

// GetCommunicationItems returns the CommunicationItems field value if set, zero value otherwise.
func (o *Contact) GetCommunicationItems() []ContactCommunicationItem {
	if o == nil || IsNil(o.CommunicationItems) {
		var ret []ContactCommunicationItem
		return ret
	}
	return o.CommunicationItems
}

// GetCommunicationItemsOk returns a tuple with the CommunicationItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCommunicationItemsOk() ([]ContactCommunicationItem, bool) {
	if o == nil || IsNil(o.CommunicationItems) {
		return nil, false
	}
	return o.CommunicationItems, true
}

// HasCommunicationItems returns a boolean if a field has been set.
func (o *Contact) HasCommunicationItems() bool {
	if o != nil && !IsNil(o.CommunicationItems) {
		return true
	}

	return false
}

// SetCommunicationItems gets a reference to the given []ContactCommunicationItem and assigns it to the CommunicationItems field.
func (o *Contact) SetCommunicationItems(v []ContactCommunicationItem) {
	o.CommunicationItems = v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *Contact) GetTypes() []ContactTypeReference {
	if o == nil || IsNil(o.Types) {
		var ret []ContactTypeReference
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTypesOk() ([]ContactTypeReference, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *Contact) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []ContactTypeReference and assigns it to the Types field.
func (o *Contact) SetTypes(v []ContactTypeReference) {
	o.Types = v
}

// GetIntegratorTags returns the IntegratorTags field value if set, zero value otherwise.
func (o *Contact) GetIntegratorTags() []string {
	if o == nil || IsNil(o.IntegratorTags) {
		var ret []string
		return ret
	}
	return o.IntegratorTags
}

// GetIntegratorTagsOk returns a tuple with the IntegratorTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetIntegratorTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.IntegratorTags) {
		return nil, false
	}
	return o.IntegratorTags, true
}

// HasIntegratorTags returns a boolean if a field has been set.
func (o *Contact) HasIntegratorTags() bool {
	if o != nil && !IsNil(o.IntegratorTags) {
		return true
	}

	return false
}

// SetIntegratorTags gets a reference to the given []string and assigns it to the IntegratorTags field.
func (o *Contact) SetIntegratorTags(v []string) {
	o.IntegratorTags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Contact) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Contact) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *Contact) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

// GetPhoto returns the Photo field value if set, zero value otherwise.
func (o *Contact) GetPhoto() DocumentReference {
	if o == nil || IsNil(o.Photo) {
		var ret DocumentReference
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPhotoOk() (*DocumentReference, bool) {
	if o == nil || IsNil(o.Photo) {
		return nil, false
	}
	return o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *Contact) HasPhoto() bool {
	if o != nil && !IsNil(o.Photo) {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given DocumentReference and assigns it to the Photo field.
func (o *Contact) SetPhoto(v DocumentReference) {
	o.Photo = &v
}

// GetIgnoreDuplicates returns the IgnoreDuplicates field value if set, zero value otherwise.
func (o *Contact) GetIgnoreDuplicates() bool {
	if o == nil || IsNil(o.IgnoreDuplicates) {
		var ret bool
		return ret
	}
	return *o.IgnoreDuplicates
}

// GetIgnoreDuplicatesOk returns a tuple with the IgnoreDuplicates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetIgnoreDuplicatesOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreDuplicates) {
		return nil, false
	}
	return o.IgnoreDuplicates, true
}

// HasIgnoreDuplicates returns a boolean if a field has been set.
func (o *Contact) HasIgnoreDuplicates() bool {
	if o != nil && !IsNil(o.IgnoreDuplicates) {
		return true
	}

	return false
}

// SetIgnoreDuplicates gets a reference to the given bool and assigns it to the IgnoreDuplicates field.
func (o *Contact) SetIgnoreDuplicates(v bool) {
	o.IgnoreDuplicates = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *Contact) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *Contact) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *Contact) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetTypeIds returns the TypeIds field value if set, zero value otherwise.
func (o *Contact) GetTypeIds() []int32 {
	if o == nil || IsNil(o.TypeIds) {
		var ret []int32
		return ret
	}
	return o.TypeIds
}

// GetTypeIdsOk returns a tuple with the TypeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTypeIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.TypeIds) {
		return nil, false
	}
	return o.TypeIds, true
}

// HasTypeIds returns a boolean if a field has been set.
func (o *Contact) HasTypeIds() bool {
	if o != nil && !IsNil(o.TypeIds) {
		return true
	}

	return false
}

// SetTypeIds gets a reference to the given []int32 and assigns it to the TypeIds field.
func (o *Contact) SetTypeIds(v []int32) {
	o.TypeIds = v
}

func (o Contact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Contact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Relationship) {
		toSerialize["relationship"] = o.Relationship
	}
	if !IsNil(o.RelationshipOverride) {
		toSerialize["relationshipOverride"] = o.RelationshipOverride
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if o.DefaultMergeContactId.IsSet() {
		toSerialize["defaultMergeContactId"] = o.DefaultMergeContactId.Get()
	}
	if !IsNil(o.SecurityIdentifier) {
		toSerialize["securityIdentifier"] = o.SecurityIdentifier
	}
	if !IsNil(o.ManagerContact) {
		toSerialize["managerContact"] = o.ManagerContact
	}
	if !IsNil(o.AssistantContact) {
		toSerialize["assistantContact"] = o.AssistantContact
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.School) {
		toSerialize["school"] = o.School
	}
	if !IsNil(o.NickName) {
		toSerialize["nickName"] = o.NickName
	}
	if o.MarriedFlag.IsSet() {
		toSerialize["marriedFlag"] = o.MarriedFlag.Get()
	}
	if o.ChildrenFlag.IsSet() {
		toSerialize["childrenFlag"] = o.ChildrenFlag.Get()
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.SignificantOther) {
		toSerialize["significantOther"] = o.SignificantOther
	}
	if !IsNil(o.PortalPassword) {
		toSerialize["portalPassword"] = o.PortalPassword
	}
	if o.PortalSecurityLevel.IsSet() {
		toSerialize["portalSecurityLevel"] = o.PortalSecurityLevel.Get()
	}
	if o.DisablePortalLoginFlag.IsSet() {
		toSerialize["disablePortalLoginFlag"] = o.DisablePortalLoginFlag.Get()
	}
	if o.UnsubscribeFlag.IsSet() {
		toSerialize["unsubscribeFlag"] = o.UnsubscribeFlag.Get()
	}
	if o.Gender.IsSet() {
		toSerialize["gender"] = o.Gender.Get()
	}
	if !IsNil(o.BirthDay) {
		toSerialize["birthDay"] = o.BirthDay
	}
	if !IsNil(o.Anniversary) {
		toSerialize["anniversary"] = o.Anniversary
	}
	if o.Presence.IsSet() {
		toSerialize["presence"] = o.Presence.Get()
	}
	if o.MobileGuid.IsSet() {
		toSerialize["mobileGuid"] = o.MobileGuid.Get()
	}
	if !IsNil(o.FacebookUrl) {
		toSerialize["facebookUrl"] = o.FacebookUrl
	}
	if !IsNil(o.TwitterUrl) {
		toSerialize["twitterUrl"] = o.TwitterUrl
	}
	if !IsNil(o.LinkedInUrl) {
		toSerialize["linkedInUrl"] = o.LinkedInUrl
	}
	if !IsNil(o.DefaultPhoneType) {
		toSerialize["defaultPhoneType"] = o.DefaultPhoneType
	}
	if !IsNil(o.DefaultPhoneNbr) {
		toSerialize["defaultPhoneNbr"] = o.DefaultPhoneNbr
	}
	if !IsNil(o.DefaultPhoneExtension) {
		toSerialize["defaultPhoneExtension"] = o.DefaultPhoneExtension
	}
	if o.DefaultBillingFlag.IsSet() {
		toSerialize["defaultBillingFlag"] = o.DefaultBillingFlag.Get()
	}
	if o.DefaultFlag.IsSet() {
		toSerialize["defaultFlag"] = o.DefaultFlag.Get()
	}
	if !IsNil(o.UserDefinedField1) {
		toSerialize["userDefinedField1"] = o.UserDefinedField1
	}
	if !IsNil(o.UserDefinedField2) {
		toSerialize["userDefinedField2"] = o.UserDefinedField2
	}
	if !IsNil(o.UserDefinedField3) {
		toSerialize["userDefinedField3"] = o.UserDefinedField3
	}
	if !IsNil(o.UserDefinedField4) {
		toSerialize["userDefinedField4"] = o.UserDefinedField4
	}
	if !IsNil(o.UserDefinedField5) {
		toSerialize["userDefinedField5"] = o.UserDefinedField5
	}
	if !IsNil(o.UserDefinedField6) {
		toSerialize["userDefinedField6"] = o.UserDefinedField6
	}
	if !IsNil(o.UserDefinedField7) {
		toSerialize["userDefinedField7"] = o.UserDefinedField7
	}
	if !IsNil(o.UserDefinedField8) {
		toSerialize["userDefinedField8"] = o.UserDefinedField8
	}
	if !IsNil(o.UserDefinedField9) {
		toSerialize["userDefinedField9"] = o.UserDefinedField9
	}
	if !IsNil(o.UserDefinedField10) {
		toSerialize["userDefinedField10"] = o.UserDefinedField10
	}
	if !IsNil(o.CompanyLocation) {
		toSerialize["companyLocation"] = o.CompanyLocation
	}
	if !IsNil(o.CommunicationItems) {
		toSerialize["communicationItems"] = o.CommunicationItems
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.IntegratorTags) {
		toSerialize["integratorTags"] = o.IntegratorTags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	if !IsNil(o.Photo) {
		toSerialize["photo"] = o.Photo
	}
	if !IsNil(o.IgnoreDuplicates) {
		toSerialize["ignoreDuplicates"] = o.IgnoreDuplicates
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.TypeIds) {
		toSerialize["typeIds"] = o.TypeIds
	}
	return toSerialize, nil
}

type NullableContact struct {
	value *Contact
	isSet bool
}

func (v NullableContact) Get() *Contact {
	return v.value
}

func (v *NullableContact) Set(val *Contact) {
	v.value = val
	v.isSet = true
}

func (v NullableContact) IsSet() bool {
	return v.isSet
}

func (v *NullableContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContact(val *Contact) *NullableContact {
	return &NullableContact{value: val, isSet: true}
}

func (v NullableContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


