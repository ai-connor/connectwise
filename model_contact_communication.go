/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ContactCommunication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactCommunication{}

// ContactCommunication struct for ContactCommunication
type ContactCommunication struct {
	Id *int32 `json:"id,omitempty"`
	ContactId NullableInt32 `json:"contactId,omitempty"`
	Type CommunicationTypeReference `json:"type"`
	//  Max length: 250;
	Value string `json:"value"`
	//  Max length: 15;
	Extension *string `json:"extension,omitempty"`
	DefaultFlag NullableBool `json:"defaultFlag,omitempty"`
	MobileGuid NullableString `json:"mobileGuid,omitempty"`
	CommunicationType NullableString `json:"communicationType,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ContactCommunication ContactCommunication

// NewContactCommunication instantiates a new ContactCommunication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCommunication(type_ CommunicationTypeReference, value string) *ContactCommunication {
	this := ContactCommunication{}
	this.Type = type_
	this.Value = value
	return &this
}

// NewContactCommunicationWithDefaults instantiates a new ContactCommunication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCommunicationWithDefaults() *ContactCommunication {
	this := ContactCommunication{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContactCommunication) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunication) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContactCommunication) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContactCommunication) SetId(v int32) {
	o.Id = &v
}

// GetContactId returns the ContactId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCommunication) GetContactId() int32 {
	if o == nil || IsNil(o.ContactId.Get()) {
		var ret int32
		return ret
	}
	return *o.ContactId.Get()
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCommunication) GetContactIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactId.Get(), o.ContactId.IsSet()
}

// HasContactId returns a boolean if a field has been set.
func (o *ContactCommunication) HasContactId() bool {
	if o != nil && o.ContactId.IsSet() {
		return true
	}

	return false
}

// SetContactId gets a reference to the given NullableInt32 and assigns it to the ContactId field.
func (o *ContactCommunication) SetContactId(v int32) {
	o.ContactId.Set(&v)
}
// SetContactIdNil sets the value for ContactId to be an explicit nil
func (o *ContactCommunication) SetContactIdNil() {
	o.ContactId.Set(nil)
}

// UnsetContactId ensures that no value is present for ContactId, not even an explicit nil
func (o *ContactCommunication) UnsetContactId() {
	o.ContactId.Unset()
}

// GetType returns the Type field value
func (o *ContactCommunication) GetType() CommunicationTypeReference {
	if o == nil {
		var ret CommunicationTypeReference
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ContactCommunication) GetTypeOk() (*CommunicationTypeReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ContactCommunication) SetType(v CommunicationTypeReference) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *ContactCommunication) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ContactCommunication) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ContactCommunication) SetValue(v string) {
	o.Value = v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ContactCommunication) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunication) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ContactCommunication) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *ContactCommunication) SetExtension(v string) {
	o.Extension = &v
}

// GetDefaultFlag returns the DefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCommunication) GetDefaultFlag() bool {
	if o == nil || IsNil(o.DefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultFlag.Get()
}

// GetDefaultFlagOk returns a tuple with the DefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCommunication) GetDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultFlag.Get(), o.DefaultFlag.IsSet()
}

// HasDefaultFlag returns a boolean if a field has been set.
func (o *ContactCommunication) HasDefaultFlag() bool {
	if o != nil && o.DefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultFlag gets a reference to the given NullableBool and assigns it to the DefaultFlag field.
func (o *ContactCommunication) SetDefaultFlag(v bool) {
	o.DefaultFlag.Set(&v)
}
// SetDefaultFlagNil sets the value for DefaultFlag to be an explicit nil
func (o *ContactCommunication) SetDefaultFlagNil() {
	o.DefaultFlag.Set(nil)
}

// UnsetDefaultFlag ensures that no value is present for DefaultFlag, not even an explicit nil
func (o *ContactCommunication) UnsetDefaultFlag() {
	o.DefaultFlag.Unset()
}

// GetMobileGuid returns the MobileGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCommunication) GetMobileGuid() string {
	if o == nil || IsNil(o.MobileGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MobileGuid.Get()
}

// GetMobileGuidOk returns a tuple with the MobileGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCommunication) GetMobileGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileGuid.Get(), o.MobileGuid.IsSet()
}

// HasMobileGuid returns a boolean if a field has been set.
func (o *ContactCommunication) HasMobileGuid() bool {
	if o != nil && o.MobileGuid.IsSet() {
		return true
	}

	return false
}

// SetMobileGuid gets a reference to the given NullableString and assigns it to the MobileGuid field.
func (o *ContactCommunication) SetMobileGuid(v string) {
	o.MobileGuid.Set(&v)
}
// SetMobileGuidNil sets the value for MobileGuid to be an explicit nil
func (o *ContactCommunication) SetMobileGuidNil() {
	o.MobileGuid.Set(nil)
}

// UnsetMobileGuid ensures that no value is present for MobileGuid, not even an explicit nil
func (o *ContactCommunication) UnsetMobileGuid() {
	o.MobileGuid.Unset()
}

// GetCommunicationType returns the CommunicationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCommunication) GetCommunicationType() string {
	if o == nil || IsNil(o.CommunicationType.Get()) {
		var ret string
		return ret
	}
	return *o.CommunicationType.Get()
}

// GetCommunicationTypeOk returns a tuple with the CommunicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCommunication) GetCommunicationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunicationType.Get(), o.CommunicationType.IsSet()
}

// HasCommunicationType returns a boolean if a field has been set.
func (o *ContactCommunication) HasCommunicationType() bool {
	if o != nil && o.CommunicationType.IsSet() {
		return true
	}

	return false
}

// SetCommunicationType gets a reference to the given NullableString and assigns it to the CommunicationType field.
func (o *ContactCommunication) SetCommunicationType(v string) {
	o.CommunicationType.Set(&v)
}
// SetCommunicationTypeNil sets the value for CommunicationType to be an explicit nil
func (o *ContactCommunication) SetCommunicationTypeNil() {
	o.CommunicationType.Set(nil)
}

// UnsetCommunicationType ensures that no value is present for CommunicationType, not even an explicit nil
func (o *ContactCommunication) UnsetCommunicationType() {
	o.CommunicationType.Unset()
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ContactCommunication) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunication) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ContactCommunication) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *ContactCommunication) SetDomain(v string) {
	o.Domain = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ContactCommunication) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunication) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ContactCommunication) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ContactCommunication) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ContactCommunication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactCommunication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ContactId.IsSet() {
		toSerialize["contactId"] = o.ContactId.Get()
	}
	toSerialize["type"] = o.Type
	toSerialize["value"] = o.Value
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if o.DefaultFlag.IsSet() {
		toSerialize["defaultFlag"] = o.DefaultFlag.Get()
	}
	if o.MobileGuid.IsSet() {
		toSerialize["mobileGuid"] = o.MobileGuid.Get()
	}
	if o.CommunicationType.IsSet() {
		toSerialize["communicationType"] = o.CommunicationType.Get()
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ContactCommunication) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContactCommunication := _ContactCommunication{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContactCommunication)

	if err != nil {
		return err
	}

	*o = ContactCommunication(varContactCommunication)

	return err
}

type NullableContactCommunication struct {
	value *ContactCommunication
	isSet bool
}

func (v NullableContactCommunication) Get() *ContactCommunication {
	return v.value
}

func (v *NullableContactCommunication) Set(val *ContactCommunication) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCommunication) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCommunication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCommunication(val *ContactCommunication) *NullableContactCommunication {
	return &NullableContactCommunication{value: val, isSet: true}
}

func (v NullableContactCommunication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCommunication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


