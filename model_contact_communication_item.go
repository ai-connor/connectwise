/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ContactCommunicationItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactCommunicationItem{}

// ContactCommunicationItem struct for ContactCommunicationItem
type ContactCommunicationItem struct {
	Id *int32 `json:"id,omitempty"`
	Type *CommunicationTypeReference `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
	Extension *string `json:"extension,omitempty"`
	DefaultFlag NullableBool `json:"defaultFlag,omitempty"`
	Domain *string `json:"domain,omitempty"`
	CommunicationType NullableString `json:"communicationType,omitempty"`
}

// NewContactCommunicationItem instantiates a new ContactCommunicationItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCommunicationItem() *ContactCommunicationItem {
	this := ContactCommunicationItem{}
	return &this
}

// NewContactCommunicationItemWithDefaults instantiates a new ContactCommunicationItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCommunicationItemWithDefaults() *ContactCommunicationItem {
	this := ContactCommunicationItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContactCommunicationItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunicationItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContactCommunicationItem) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ContactCommunicationItem) GetType() CommunicationTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret CommunicationTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunicationItem) GetTypeOk() (*CommunicationTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CommunicationTypeReference and assigns it to the Type field.
func (o *ContactCommunicationItem) SetType(v CommunicationTypeReference) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ContactCommunicationItem) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunicationItem) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ContactCommunicationItem) SetValue(v string) {
	o.Value = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ContactCommunicationItem) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunicationItem) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *ContactCommunicationItem) SetExtension(v string) {
	o.Extension = &v
}

// GetDefaultFlag returns the DefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCommunicationItem) GetDefaultFlag() bool {
	if o == nil || IsNil(o.DefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultFlag.Get()
}

// GetDefaultFlagOk returns a tuple with the DefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCommunicationItem) GetDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultFlag.Get(), o.DefaultFlag.IsSet()
}

// HasDefaultFlag returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasDefaultFlag() bool {
	if o != nil && o.DefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultFlag gets a reference to the given NullableBool and assigns it to the DefaultFlag field.
func (o *ContactCommunicationItem) SetDefaultFlag(v bool) {
	o.DefaultFlag.Set(&v)
}
// SetDefaultFlagNil sets the value for DefaultFlag to be an explicit nil
func (o *ContactCommunicationItem) SetDefaultFlagNil() {
	o.DefaultFlag.Set(nil)
}

// UnsetDefaultFlag ensures that no value is present for DefaultFlag, not even an explicit nil
func (o *ContactCommunicationItem) UnsetDefaultFlag() {
	o.DefaultFlag.Unset()
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ContactCommunicationItem) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCommunicationItem) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *ContactCommunicationItem) SetDomain(v string) {
	o.Domain = &v
}

// GetCommunicationType returns the CommunicationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactCommunicationItem) GetCommunicationType() string {
	if o == nil || IsNil(o.CommunicationType.Get()) {
		var ret string
		return ret
	}
	return *o.CommunicationType.Get()
}

// GetCommunicationTypeOk returns a tuple with the CommunicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactCommunicationItem) GetCommunicationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunicationType.Get(), o.CommunicationType.IsSet()
}

// HasCommunicationType returns a boolean if a field has been set.
func (o *ContactCommunicationItem) HasCommunicationType() bool {
	if o != nil && o.CommunicationType.IsSet() {
		return true
	}

	return false
}

// SetCommunicationType gets a reference to the given NullableString and assigns it to the CommunicationType field.
func (o *ContactCommunicationItem) SetCommunicationType(v string) {
	o.CommunicationType.Set(&v)
}
// SetCommunicationTypeNil sets the value for CommunicationType to be an explicit nil
func (o *ContactCommunicationItem) SetCommunicationTypeNil() {
	o.CommunicationType.Set(nil)
}

// UnsetCommunicationType ensures that no value is present for CommunicationType, not even an explicit nil
func (o *ContactCommunicationItem) UnsetCommunicationType() {
	o.CommunicationType.Unset()
}

func (o ContactCommunicationItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactCommunicationItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if o.DefaultFlag.IsSet() {
		toSerialize["defaultFlag"] = o.DefaultFlag.Get()
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if o.CommunicationType.IsSet() {
		toSerialize["communicationType"] = o.CommunicationType.Get()
	}
	return toSerialize, nil
}

type NullableContactCommunicationItem struct {
	value *ContactCommunicationItem
	isSet bool
}

func (v NullableContactCommunicationItem) Get() *ContactCommunicationItem {
	return v.value
}

func (v *NullableContactCommunicationItem) Set(val *ContactCommunicationItem) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCommunicationItem) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCommunicationItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCommunicationItem(val *ContactCommunicationItem) *NullableContactCommunicationItem {
	return &NullableContactCommunicationItem{value: val, isSet: true}
}

func (v NullableContactCommunicationItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCommunicationItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


