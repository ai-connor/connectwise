/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ContactInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactInfo{}

// ContactInfo struct for ContactInfo
type ContactInfo struct {
	Id *int32 `json:"id,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	CommunicationItems []ContactCommunicationItem `json:"communicationItems,omitempty"`
	DefaultPhoneNbr *string `json:"defaultPhoneNbr,omitempty"`
	DefaultPhoneType *string `json:"defaultPhoneType,omitempty"`
	DefaultFlag NullableBool `json:"defaultFlag,omitempty"`
	Company *CompanyReference `json:"company,omitempty"`
	CompanyLocation *SystemLocationReference `json:"companyLocation,omitempty"`
	Site *SiteReference `json:"site,omitempty"`
	InactiveFlag NullableBool `json:"inactiveFlag,omitempty"`
	Title *string `json:"title,omitempty"`
	Types []ContactTypeReference `json:"types,omitempty"`
	AddressLine1 *string `json:"addressLine1,omitempty"`
	AddressLine2 *string `json:"addressLine2,omitempty"`
	City *string `json:"city,omitempty"`
	State *string `json:"state,omitempty"`
	Country *CountryReference `json:"country,omitempty"`
	Zip *string `json:"zip,omitempty"`
	Department *ContactDepartmentReference `json:"department,omitempty"`
	DefaultBillingFlag NullableBool `json:"defaultBillingFlag,omitempty"`
	FacebookUrl *string `json:"facebookUrl,omitempty"`
	TwitterUrl *string `json:"twitterUrl,omitempty"`
	LinkedInUrl *string `json:"linkedInUrl,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewContactInfo instantiates a new ContactInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactInfo() *ContactInfo {
	this := ContactInfo{}
	return &this
}

// NewContactInfoWithDefaults instantiates a new ContactInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactInfoWithDefaults() *ContactInfo {
	this := ContactInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContactInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContactInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContactInfo) SetId(v int32) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ContactInfo) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ContactInfo) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ContactInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ContactInfo) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ContactInfo) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ContactInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetCommunicationItems returns the CommunicationItems field value if set, zero value otherwise.
func (o *ContactInfo) GetCommunicationItems() []ContactCommunicationItem {
	if o == nil || IsNil(o.CommunicationItems) {
		var ret []ContactCommunicationItem
		return ret
	}
	return o.CommunicationItems
}

// GetCommunicationItemsOk returns a tuple with the CommunicationItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetCommunicationItemsOk() ([]ContactCommunicationItem, bool) {
	if o == nil || IsNil(o.CommunicationItems) {
		return nil, false
	}
	return o.CommunicationItems, true
}

// HasCommunicationItems returns a boolean if a field has been set.
func (o *ContactInfo) HasCommunicationItems() bool {
	if o != nil && !IsNil(o.CommunicationItems) {
		return true
	}

	return false
}

// SetCommunicationItems gets a reference to the given []ContactCommunicationItem and assigns it to the CommunicationItems field.
func (o *ContactInfo) SetCommunicationItems(v []ContactCommunicationItem) {
	o.CommunicationItems = v
}

// GetDefaultPhoneNbr returns the DefaultPhoneNbr field value if set, zero value otherwise.
func (o *ContactInfo) GetDefaultPhoneNbr() string {
	if o == nil || IsNil(o.DefaultPhoneNbr) {
		var ret string
		return ret
	}
	return *o.DefaultPhoneNbr
}

// GetDefaultPhoneNbrOk returns a tuple with the DefaultPhoneNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetDefaultPhoneNbrOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPhoneNbr) {
		return nil, false
	}
	return o.DefaultPhoneNbr, true
}

// HasDefaultPhoneNbr returns a boolean if a field has been set.
func (o *ContactInfo) HasDefaultPhoneNbr() bool {
	if o != nil && !IsNil(o.DefaultPhoneNbr) {
		return true
	}

	return false
}

// SetDefaultPhoneNbr gets a reference to the given string and assigns it to the DefaultPhoneNbr field.
func (o *ContactInfo) SetDefaultPhoneNbr(v string) {
	o.DefaultPhoneNbr = &v
}

// GetDefaultPhoneType returns the DefaultPhoneType field value if set, zero value otherwise.
func (o *ContactInfo) GetDefaultPhoneType() string {
	if o == nil || IsNil(o.DefaultPhoneType) {
		var ret string
		return ret
	}
	return *o.DefaultPhoneType
}

// GetDefaultPhoneTypeOk returns a tuple with the DefaultPhoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetDefaultPhoneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPhoneType) {
		return nil, false
	}
	return o.DefaultPhoneType, true
}

// HasDefaultPhoneType returns a boolean if a field has been set.
func (o *ContactInfo) HasDefaultPhoneType() bool {
	if o != nil && !IsNil(o.DefaultPhoneType) {
		return true
	}

	return false
}

// SetDefaultPhoneType gets a reference to the given string and assigns it to the DefaultPhoneType field.
func (o *ContactInfo) SetDefaultPhoneType(v string) {
	o.DefaultPhoneType = &v
}

// GetDefaultFlag returns the DefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactInfo) GetDefaultFlag() bool {
	if o == nil || IsNil(o.DefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultFlag.Get()
}

// GetDefaultFlagOk returns a tuple with the DefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactInfo) GetDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultFlag.Get(), o.DefaultFlag.IsSet()
}

// HasDefaultFlag returns a boolean if a field has been set.
func (o *ContactInfo) HasDefaultFlag() bool {
	if o != nil && o.DefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultFlag gets a reference to the given NullableBool and assigns it to the DefaultFlag field.
func (o *ContactInfo) SetDefaultFlag(v bool) {
	o.DefaultFlag.Set(&v)
}
// SetDefaultFlagNil sets the value for DefaultFlag to be an explicit nil
func (o *ContactInfo) SetDefaultFlagNil() {
	o.DefaultFlag.Set(nil)
}

// UnsetDefaultFlag ensures that no value is present for DefaultFlag, not even an explicit nil
func (o *ContactInfo) UnsetDefaultFlag() {
	o.DefaultFlag.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ContactInfo) GetCompany() CompanyReference {
	if o == nil || IsNil(o.Company) {
		var ret CompanyReference
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ContactInfo) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given CompanyReference and assigns it to the Company field.
func (o *ContactInfo) SetCompany(v CompanyReference) {
	o.Company = &v
}

// GetCompanyLocation returns the CompanyLocation field value if set, zero value otherwise.
func (o *ContactInfo) GetCompanyLocation() SystemLocationReference {
	if o == nil || IsNil(o.CompanyLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.CompanyLocation
}

// GetCompanyLocationOk returns a tuple with the CompanyLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetCompanyLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.CompanyLocation) {
		return nil, false
	}
	return o.CompanyLocation, true
}

// HasCompanyLocation returns a boolean if a field has been set.
func (o *ContactInfo) HasCompanyLocation() bool {
	if o != nil && !IsNil(o.CompanyLocation) {
		return true
	}

	return false
}

// SetCompanyLocation gets a reference to the given SystemLocationReference and assigns it to the CompanyLocation field.
func (o *ContactInfo) SetCompanyLocation(v SystemLocationReference) {
	o.CompanyLocation = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *ContactInfo) GetSite() SiteReference {
	if o == nil || IsNil(o.Site) {
		var ret SiteReference
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *ContactInfo) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given SiteReference and assigns it to the Site field.
func (o *ContactInfo) SetSite(v SiteReference) {
	o.Site = &v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactInfo) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactInfo) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *ContactInfo) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *ContactInfo) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}
// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *ContactInfo) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *ContactInfo) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ContactInfo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ContactInfo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ContactInfo) SetTitle(v string) {
	o.Title = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *ContactInfo) GetTypes() []ContactTypeReference {
	if o == nil || IsNil(o.Types) {
		var ret []ContactTypeReference
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetTypesOk() ([]ContactTypeReference, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *ContactInfo) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []ContactTypeReference and assigns it to the Types field.
func (o *ContactInfo) SetTypes(v []ContactTypeReference) {
	o.Types = v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *ContactInfo) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *ContactInfo) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *ContactInfo) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *ContactInfo) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *ContactInfo) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *ContactInfo) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ContactInfo) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ContactInfo) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ContactInfo) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ContactInfo) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ContactInfo) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ContactInfo) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ContactInfo) GetCountry() CountryReference {
	if o == nil || IsNil(o.Country) {
		var ret CountryReference
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ContactInfo) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryReference and assigns it to the Country field.
func (o *ContactInfo) SetCountry(v CountryReference) {
	o.Country = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *ContactInfo) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *ContactInfo) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *ContactInfo) SetZip(v string) {
	o.Zip = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *ContactInfo) GetDepartment() ContactDepartmentReference {
	if o == nil || IsNil(o.Department) {
		var ret ContactDepartmentReference
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetDepartmentOk() (*ContactDepartmentReference, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *ContactInfo) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given ContactDepartmentReference and assigns it to the Department field.
func (o *ContactInfo) SetDepartment(v ContactDepartmentReference) {
	o.Department = &v
}

// GetDefaultBillingFlag returns the DefaultBillingFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactInfo) GetDefaultBillingFlag() bool {
	if o == nil || IsNil(o.DefaultBillingFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultBillingFlag.Get()
}

// GetDefaultBillingFlagOk returns a tuple with the DefaultBillingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactInfo) GetDefaultBillingFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultBillingFlag.Get(), o.DefaultBillingFlag.IsSet()
}

// HasDefaultBillingFlag returns a boolean if a field has been set.
func (o *ContactInfo) HasDefaultBillingFlag() bool {
	if o != nil && o.DefaultBillingFlag.IsSet() {
		return true
	}

	return false
}

// SetDefaultBillingFlag gets a reference to the given NullableBool and assigns it to the DefaultBillingFlag field.
func (o *ContactInfo) SetDefaultBillingFlag(v bool) {
	o.DefaultBillingFlag.Set(&v)
}
// SetDefaultBillingFlagNil sets the value for DefaultBillingFlag to be an explicit nil
func (o *ContactInfo) SetDefaultBillingFlagNil() {
	o.DefaultBillingFlag.Set(nil)
}

// UnsetDefaultBillingFlag ensures that no value is present for DefaultBillingFlag, not even an explicit nil
func (o *ContactInfo) UnsetDefaultBillingFlag() {
	o.DefaultBillingFlag.Unset()
}

// GetFacebookUrl returns the FacebookUrl field value if set, zero value otherwise.
func (o *ContactInfo) GetFacebookUrl() string {
	if o == nil || IsNil(o.FacebookUrl) {
		var ret string
		return ret
	}
	return *o.FacebookUrl
}

// GetFacebookUrlOk returns a tuple with the FacebookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetFacebookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FacebookUrl) {
		return nil, false
	}
	return o.FacebookUrl, true
}

// HasFacebookUrl returns a boolean if a field has been set.
func (o *ContactInfo) HasFacebookUrl() bool {
	if o != nil && !IsNil(o.FacebookUrl) {
		return true
	}

	return false
}

// SetFacebookUrl gets a reference to the given string and assigns it to the FacebookUrl field.
func (o *ContactInfo) SetFacebookUrl(v string) {
	o.FacebookUrl = &v
}

// GetTwitterUrl returns the TwitterUrl field value if set, zero value otherwise.
func (o *ContactInfo) GetTwitterUrl() string {
	if o == nil || IsNil(o.TwitterUrl) {
		var ret string
		return ret
	}
	return *o.TwitterUrl
}

// GetTwitterUrlOk returns a tuple with the TwitterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetTwitterUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterUrl) {
		return nil, false
	}
	return o.TwitterUrl, true
}

// HasTwitterUrl returns a boolean if a field has been set.
func (o *ContactInfo) HasTwitterUrl() bool {
	if o != nil && !IsNil(o.TwitterUrl) {
		return true
	}

	return false
}

// SetTwitterUrl gets a reference to the given string and assigns it to the TwitterUrl field.
func (o *ContactInfo) SetTwitterUrl(v string) {
	o.TwitterUrl = &v
}

// GetLinkedInUrl returns the LinkedInUrl field value if set, zero value otherwise.
func (o *ContactInfo) GetLinkedInUrl() string {
	if o == nil || IsNil(o.LinkedInUrl) {
		var ret string
		return ret
	}
	return *o.LinkedInUrl
}

// GetLinkedInUrlOk returns a tuple with the LinkedInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetLinkedInUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedInUrl) {
		return nil, false
	}
	return o.LinkedInUrl, true
}

// HasLinkedInUrl returns a boolean if a field has been set.
func (o *ContactInfo) HasLinkedInUrl() bool {
	if o != nil && !IsNil(o.LinkedInUrl) {
		return true
	}

	return false
}

// SetLinkedInUrl gets a reference to the given string and assigns it to the LinkedInUrl field.
func (o *ContactInfo) SetLinkedInUrl(v string) {
	o.LinkedInUrl = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ContactInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ContactInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ContactInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ContactInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.CommunicationItems) {
		toSerialize["communicationItems"] = o.CommunicationItems
	}
	if !IsNil(o.DefaultPhoneNbr) {
		toSerialize["defaultPhoneNbr"] = o.DefaultPhoneNbr
	}
	if !IsNil(o.DefaultPhoneType) {
		toSerialize["defaultPhoneType"] = o.DefaultPhoneType
	}
	if o.DefaultFlag.IsSet() {
		toSerialize["defaultFlag"] = o.DefaultFlag.Get()
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.CompanyLocation) {
		toSerialize["companyLocation"] = o.CompanyLocation
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if o.DefaultBillingFlag.IsSet() {
		toSerialize["defaultBillingFlag"] = o.DefaultBillingFlag.Get()
	}
	if !IsNil(o.FacebookUrl) {
		toSerialize["facebookUrl"] = o.FacebookUrl
	}
	if !IsNil(o.TwitterUrl) {
		toSerialize["twitterUrl"] = o.TwitterUrl
	}
	if !IsNil(o.LinkedInUrl) {
		toSerialize["linkedInUrl"] = o.LinkedInUrl
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableContactInfo struct {
	value *ContactInfo
	isSet bool
}

func (v NullableContactInfo) Get() *ContactInfo {
	return v.value
}

func (v *NullableContactInfo) Set(val *ContactInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableContactInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableContactInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactInfo(val *ContactInfo) *NullableContactInfo {
	return &NullableContactInfo{value: val, isSet: true}
}

func (v NullableContactInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


