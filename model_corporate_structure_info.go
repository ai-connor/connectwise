/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the CorporateStructureInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporateStructureInfo{}

// CorporateStructureInfo struct for CorporateStructureInfo
type CorporateStructureInfo struct {
	Id *int32 `json:"id,omitempty"`
	LocationCaption *string `json:"locationCaption,omitempty"`
	GroupCaption *string `json:"groupCaption,omitempty"`
	BaseCurrency *CurrencyReference `json:"baseCurrency,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewCorporateStructureInfo instantiates a new CorporateStructureInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporateStructureInfo() *CorporateStructureInfo {
	this := CorporateStructureInfo{}
	return &this
}

// NewCorporateStructureInfoWithDefaults instantiates a new CorporateStructureInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporateStructureInfoWithDefaults() *CorporateStructureInfo {
	this := CorporateStructureInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CorporateStructureInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateStructureInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CorporateStructureInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CorporateStructureInfo) SetId(v int32) {
	o.Id = &v
}

// GetLocationCaption returns the LocationCaption field value if set, zero value otherwise.
func (o *CorporateStructureInfo) GetLocationCaption() string {
	if o == nil || IsNil(o.LocationCaption) {
		var ret string
		return ret
	}
	return *o.LocationCaption
}

// GetLocationCaptionOk returns a tuple with the LocationCaption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateStructureInfo) GetLocationCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.LocationCaption) {
		return nil, false
	}
	return o.LocationCaption, true
}

// HasLocationCaption returns a boolean if a field has been set.
func (o *CorporateStructureInfo) HasLocationCaption() bool {
	if o != nil && !IsNil(o.LocationCaption) {
		return true
	}

	return false
}

// SetLocationCaption gets a reference to the given string and assigns it to the LocationCaption field.
func (o *CorporateStructureInfo) SetLocationCaption(v string) {
	o.LocationCaption = &v
}

// GetGroupCaption returns the GroupCaption field value if set, zero value otherwise.
func (o *CorporateStructureInfo) GetGroupCaption() string {
	if o == nil || IsNil(o.GroupCaption) {
		var ret string
		return ret
	}
	return *o.GroupCaption
}

// GetGroupCaptionOk returns a tuple with the GroupCaption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateStructureInfo) GetGroupCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.GroupCaption) {
		return nil, false
	}
	return o.GroupCaption, true
}

// HasGroupCaption returns a boolean if a field has been set.
func (o *CorporateStructureInfo) HasGroupCaption() bool {
	if o != nil && !IsNil(o.GroupCaption) {
		return true
	}

	return false
}

// SetGroupCaption gets a reference to the given string and assigns it to the GroupCaption field.
func (o *CorporateStructureInfo) SetGroupCaption(v string) {
	o.GroupCaption = &v
}

// GetBaseCurrency returns the BaseCurrency field value if set, zero value otherwise.
func (o *CorporateStructureInfo) GetBaseCurrency() CurrencyReference {
	if o == nil || IsNil(o.BaseCurrency) {
		var ret CurrencyReference
		return ret
	}
	return *o.BaseCurrency
}

// GetBaseCurrencyOk returns a tuple with the BaseCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateStructureInfo) GetBaseCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.BaseCurrency) {
		return nil, false
	}
	return o.BaseCurrency, true
}

// HasBaseCurrency returns a boolean if a field has been set.
func (o *CorporateStructureInfo) HasBaseCurrency() bool {
	if o != nil && !IsNil(o.BaseCurrency) {
		return true
	}

	return false
}

// SetBaseCurrency gets a reference to the given CurrencyReference and assigns it to the BaseCurrency field.
func (o *CorporateStructureInfo) SetBaseCurrency(v CurrencyReference) {
	o.BaseCurrency = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CorporateStructureInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateStructureInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CorporateStructureInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CorporateStructureInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o CorporateStructureInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporateStructureInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LocationCaption) {
		toSerialize["locationCaption"] = o.LocationCaption
	}
	if !IsNil(o.GroupCaption) {
		toSerialize["groupCaption"] = o.GroupCaption
	}
	if !IsNil(o.BaseCurrency) {
		toSerialize["baseCurrency"] = o.BaseCurrency
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableCorporateStructureInfo struct {
	value *CorporateStructureInfo
	isSet bool
}

func (v NullableCorporateStructureInfo) Get() *CorporateStructureInfo {
	return v.value
}

func (v *NullableCorporateStructureInfo) Set(val *CorporateStructureInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporateStructureInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporateStructureInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporateStructureInfo(val *CorporateStructureInfo) *NullableCorporateStructureInfo {
	return &NullableCorporateStructureInfo{value: val, isSet: true}
}

func (v NullableCorporateStructureInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporateStructureInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


