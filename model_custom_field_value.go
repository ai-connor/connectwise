/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the CustomFieldValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldValue{}

// CustomFieldValue struct for CustomFieldValue
type CustomFieldValue struct {
	Id NullableInt32 `json:"id,omitempty"`
	Caption *string `json:"caption,omitempty"`
	Type NullableString `json:"type,omitempty"`
	EntryMethod NullableString `json:"entryMethod,omitempty"`
	NumberOfDecimals NullableInt32 `json:"numberOfDecimals,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
	ConnectWiseId *string `json:"connectWiseId,omitempty"`
}

// NewCustomFieldValue instantiates a new CustomFieldValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldValue() *CustomFieldValue {
	this := CustomFieldValue{}
	return &this
}

// NewCustomFieldValueWithDefaults instantiates a new CustomFieldValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldValueWithDefaults() *CustomFieldValue {
	this := CustomFieldValue{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomFieldValue) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomFieldValue) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CustomFieldValue) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *CustomFieldValue) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CustomFieldValue) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CustomFieldValue) UnsetId() {
	o.Id.Unset()
}

// GetCaption returns the Caption field value if set, zero value otherwise.
func (o *CustomFieldValue) GetCaption() string {
	if o == nil || IsNil(o.Caption) {
		var ret string
		return ret
	}
	return *o.Caption
}

// GetCaptionOk returns a tuple with the Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldValue) GetCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Caption) {
		return nil, false
	}
	return o.Caption, true
}

// HasCaption returns a boolean if a field has been set.
func (o *CustomFieldValue) HasCaption() bool {
	if o != nil && !IsNil(o.Caption) {
		return true
	}

	return false
}

// SetCaption gets a reference to the given string and assigns it to the Caption field.
func (o *CustomFieldValue) SetCaption(v string) {
	o.Caption = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomFieldValue) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomFieldValue) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *CustomFieldValue) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *CustomFieldValue) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *CustomFieldValue) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *CustomFieldValue) UnsetType() {
	o.Type.Unset()
}

// GetEntryMethod returns the EntryMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomFieldValue) GetEntryMethod() string {
	if o == nil || IsNil(o.EntryMethod.Get()) {
		var ret string
		return ret
	}
	return *o.EntryMethod.Get()
}

// GetEntryMethodOk returns a tuple with the EntryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomFieldValue) GetEntryMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntryMethod.Get(), o.EntryMethod.IsSet()
}

// HasEntryMethod returns a boolean if a field has been set.
func (o *CustomFieldValue) HasEntryMethod() bool {
	if o != nil && o.EntryMethod.IsSet() {
		return true
	}

	return false
}

// SetEntryMethod gets a reference to the given NullableString and assigns it to the EntryMethod field.
func (o *CustomFieldValue) SetEntryMethod(v string) {
	o.EntryMethod.Set(&v)
}
// SetEntryMethodNil sets the value for EntryMethod to be an explicit nil
func (o *CustomFieldValue) SetEntryMethodNil() {
	o.EntryMethod.Set(nil)
}

// UnsetEntryMethod ensures that no value is present for EntryMethod, not even an explicit nil
func (o *CustomFieldValue) UnsetEntryMethod() {
	o.EntryMethod.Unset()
}

// GetNumberOfDecimals returns the NumberOfDecimals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomFieldValue) GetNumberOfDecimals() int32 {
	if o == nil || IsNil(o.NumberOfDecimals.Get()) {
		var ret int32
		return ret
	}
	return *o.NumberOfDecimals.Get()
}

// GetNumberOfDecimalsOk returns a tuple with the NumberOfDecimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomFieldValue) GetNumberOfDecimalsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberOfDecimals.Get(), o.NumberOfDecimals.IsSet()
}

// HasNumberOfDecimals returns a boolean if a field has been set.
func (o *CustomFieldValue) HasNumberOfDecimals() bool {
	if o != nil && o.NumberOfDecimals.IsSet() {
		return true
	}

	return false
}

// SetNumberOfDecimals gets a reference to the given NullableInt32 and assigns it to the NumberOfDecimals field.
func (o *CustomFieldValue) SetNumberOfDecimals(v int32) {
	o.NumberOfDecimals.Set(&v)
}
// SetNumberOfDecimalsNil sets the value for NumberOfDecimals to be an explicit nil
func (o *CustomFieldValue) SetNumberOfDecimalsNil() {
	o.NumberOfDecimals.Set(nil)
}

// UnsetNumberOfDecimals ensures that no value is present for NumberOfDecimals, not even an explicit nil
func (o *CustomFieldValue) UnsetNumberOfDecimals() {
	o.NumberOfDecimals.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CustomFieldValue) GetValue() map[string]interface{} {
	if o == nil || IsNil(o.Value) {
		var ret map[string]interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldValue) GetValueOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return map[string]interface{}{}, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CustomFieldValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *CustomFieldValue) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetConnectWiseId returns the ConnectWiseId field value if set, zero value otherwise.
func (o *CustomFieldValue) GetConnectWiseId() string {
	if o == nil || IsNil(o.ConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ConnectWiseId
}

// GetConnectWiseIdOk returns a tuple with the ConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldValue) GetConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseId) {
		return nil, false
	}
	return o.ConnectWiseId, true
}

// HasConnectWiseId returns a boolean if a field has been set.
func (o *CustomFieldValue) HasConnectWiseId() bool {
	if o != nil && !IsNil(o.ConnectWiseId) {
		return true
	}

	return false
}

// SetConnectWiseId gets a reference to the given string and assigns it to the ConnectWiseId field.
func (o *CustomFieldValue) SetConnectWiseId(v string) {
	o.ConnectWiseId = &v
}

func (o CustomFieldValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Caption) {
		toSerialize["caption"] = o.Caption
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.EntryMethod.IsSet() {
		toSerialize["entryMethod"] = o.EntryMethod.Get()
	}
	if o.NumberOfDecimals.IsSet() {
		toSerialize["numberOfDecimals"] = o.NumberOfDecimals.Get()
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.ConnectWiseId) {
		toSerialize["connectWiseId"] = o.ConnectWiseId
	}
	return toSerialize, nil
}

type NullableCustomFieldValue struct {
	value *CustomFieldValue
	isSet bool
}

func (v NullableCustomFieldValue) Get() *CustomFieldValue {
	return v.value
}

func (v *NullableCustomFieldValue) Set(val *CustomFieldValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldValue(val *CustomFieldValue) *NullableCustomFieldValue {
	return &NullableCustomFieldValue{value: val, isSet: true}
}

func (v NullableCustomFieldValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


