/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomReport{}

// CustomReport struct for CustomReport
type CustomReport struct {
	Id *int32 `json:"id,omitempty"`
	ReportLink string `json:"reportLink"`
	//  Max length: 100;
	Name string `json:"name"`
	// The Module Name.
	Module NullableString `json:"module"`
	//  Max length: 150;
	Description string `json:"description"`
	GeneratedFlag NullableBool `json:"generatedFlag,omitempty"`
	//  Max length: 50;
	ParameterPrefix *string `json:"parameterPrefix,omitempty"`
	//  Max length: 50;
	ParameterSeparator *string `json:"parameterSeparator,omitempty"`
	//  Max length: 50;
	ParameterNameSeparator *string `json:"parameterNameSeparator,omitempty"`
	//  Max length: 50;
	ParameterSuffix *string `json:"parameterSuffix,omitempty"`
	LocationFlag NullableBool `json:"locationFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Location parameter.
	LocationParamId NullableInt32 `json:"locationParamId,omitempty"`
	LocationDefaultFlag NullableBool `json:"locationDefaultFlag,omitempty"`
	LocationOverride *string `json:"locationOverride,omitempty"`
	DepartmentFlag NullableBool `json:"departmentFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Department parameter.
	DepartmentParamId NullableInt32 `json:"departmentParamId,omitempty"`
	DepartmentDefaultFlag NullableBool `json:"departmentDefaultFlag,omitempty"`
	DepartmentOverride *string `json:"departmentOverride,omitempty"`
	TerritoryFlag NullableBool `json:"territoryFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Terriroty parameter.
	TerritoryParamId NullableInt32 `json:"territoryParamId,omitempty"`
	TerritoryDefaultFlag NullableBool `json:"territoryDefaultFlag,omitempty"`
	TerritoryOverride *string `json:"territoryOverride,omitempty"`
	CompanyFlag NullableBool `json:"companyFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Company parameter.
	CompanyParamId NullableInt32 `json:"companyParamId,omitempty"`
	CompanyOverride *string `json:"companyOverride,omitempty"`
	MemberFlag NullableBool `json:"memberFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Member parameter.
	MemberParamId NullableInt32 `json:"memberParamId,omitempty"`
	MemberOverride *string `json:"memberOverride,omitempty"`
	StartDateFlag NullableBool `json:"startDateFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Start Date parameter.
	StartDateParamId NullableInt32 `json:"startDateParamId,omitempty"`
	StartDateOverride *string `json:"startDateOverride,omitempty"`
	EndDateFlag NullableBool `json:"endDateFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's End Date parameter.
	EndDateParamId NullableInt32 `json:"endDateParamId,omitempty"`
	EndDateOverride *string `json:"endDateOverride,omitempty"`
	OppTypeFlag NullableBool `json:"oppTypeFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Opportunity Type parameter.
	OppTypeParamId NullableInt32 `json:"oppTypeParamId,omitempty"`
	OppTypeOverride *string `json:"oppTypeOverride,omitempty"`
	OpportunityFlag NullableBool `json:"opportunityFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Opportunity parameter.
	OpportunityParamId NullableInt32 `json:"opportunityParamId,omitempty"`
	OpportunityOverride *string `json:"opportunityOverride,omitempty"`
	MarketingCampaignFlag NullableBool `json:"marketingCampaignFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Marketing Campaign parameter.
	MarketingCampaignParamId NullableInt32 `json:"marketingCampaignParamId,omitempty"`
	MarketingCampaignOverride *string `json:"marketingCampaignOverride,omitempty"`
	ServiceBoardFlag NullableBool `json:"serviceBoardFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Service Board parameter.
	ServiceBoardParamId NullableInt32 `json:"serviceBoardParamId,omitempty"`
	ServiceBoardDefaultFlag NullableBool `json:"serviceBoardDefaultFlag,omitempty"`
	ServiceBoardOverride *string `json:"serviceBoardOverride,omitempty"`
	ServiceTypeFlag NullableBool `json:"serviceTypeFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Service Type parameter.
	ServiceTypeParamId NullableInt32 `json:"serviceTypeParamId,omitempty"`
	ServiceTypeOverride *string `json:"serviceTypeOverride,omitempty"`
	ServiceStatusFlag NullableBool `json:"serviceStatusFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Service Status parameter.
	ServiceStatusParamId NullableInt32 `json:"serviceStatusParamId,omitempty"`
	ServiceStatusOverride *string `json:"serviceStatusOverride,omitempty"`
	AgreementTypeFlag NullableBool `json:"agreementTypeFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Agreement Type parameter.
	AgreementTypeParamId NullableInt32 `json:"agreementTypeParamId,omitempty"`
	AgreementTypeOverride *string `json:"agreementTypeOverride,omitempty"`
	AgreementFlag NullableBool `json:"agreementFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Agreement parameter.
	AgreementParamId NullableInt32 `json:"agreementParamId,omitempty"`
	AgreementOverride *string `json:"agreementOverride,omitempty"`
	ProjectTypeFlag NullableBool `json:"projectTypeFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Project Type parameter.
	ProjectTypeParamId NullableInt32 `json:"projectTypeParamId,omitempty"`
	ProjectTypeOverride *string `json:"projectTypeOverride,omitempty"`
	ProjectFlag NullableBool `json:"projectFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Project parameter.
	ProjectParamId NullableInt32 `json:"projectParamId,omitempty"`
	ProjectOverride *string `json:"projectOverride,omitempty"`
	WorkRoleFlag NullableBool `json:"workRoleFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Work Role parameter.
	WorkRoleParamId NullableInt32 `json:"workRoleParamId,omitempty"`
	WorkRoleOverride *string `json:"workRoleOverride,omitempty"`
	WorkTypeFlag NullableBool `json:"workTypeFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Work Type parameter.
	WorkTypeParamId NullableInt32 `json:"workTypeParamId,omitempty"`
	WorkTypeOverride *string `json:"workTypeOverride,omitempty"`
	InvoiceFlag NullableBool `json:"invoiceFlag,omitempty"`
	// Parameter unique identifier for the Custom Report's Invoice Type parameter.
	InvoiceParamId NullableInt32 `json:"invoiceParamId,omitempty"`
	InvoiceOverride *string `json:"invoiceOverride,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _CustomReport CustomReport

// NewCustomReport instantiates a new CustomReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomReport(reportLink string, name string, module NullableString, description string) *CustomReport {
	this := CustomReport{}
	this.ReportLink = reportLink
	this.Name = name
	this.Module = module
	this.Description = description
	return &this
}

// NewCustomReportWithDefaults instantiates a new CustomReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomReportWithDefaults() *CustomReport {
	this := CustomReport{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomReport) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomReport) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomReport) SetId(v int32) {
	o.Id = &v
}

// GetReportLink returns the ReportLink field value
func (o *CustomReport) GetReportLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportLink
}

// GetReportLinkOk returns a tuple with the ReportLink field value
// and a boolean to check if the value has been set.
func (o *CustomReport) GetReportLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportLink, true
}

// SetReportLink sets field value
func (o *CustomReport) SetReportLink(v string) {
	o.ReportLink = v
}

// GetName returns the Name field value
func (o *CustomReport) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomReport) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomReport) SetName(v string) {
	o.Name = v
}

// GetModule returns the Module field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CustomReport) GetModule() string {
	if o == nil || o.Module.Get() == nil {
		var ret string
		return ret
	}

	return *o.Module.Get()
}

// GetModuleOk returns a tuple with the Module field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetModuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Module.Get(), o.Module.IsSet()
}

// SetModule sets field value
func (o *CustomReport) SetModule(v string) {
	o.Module.Set(&v)
}

// GetDescription returns the Description field value
func (o *CustomReport) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CustomReport) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CustomReport) SetDescription(v string) {
	o.Description = v
}

// GetGeneratedFlag returns the GeneratedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetGeneratedFlag() bool {
	if o == nil || IsNil(o.GeneratedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.GeneratedFlag.Get()
}

// GetGeneratedFlagOk returns a tuple with the GeneratedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetGeneratedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeneratedFlag.Get(), o.GeneratedFlag.IsSet()
}

// HasGeneratedFlag returns a boolean if a field has been set.
func (o *CustomReport) HasGeneratedFlag() bool {
	if o != nil && o.GeneratedFlag.IsSet() {
		return true
	}

	return false
}

// SetGeneratedFlag gets a reference to the given NullableBool and assigns it to the GeneratedFlag field.
func (o *CustomReport) SetGeneratedFlag(v bool) {
	o.GeneratedFlag.Set(&v)
}
// SetGeneratedFlagNil sets the value for GeneratedFlag to be an explicit nil
func (o *CustomReport) SetGeneratedFlagNil() {
	o.GeneratedFlag.Set(nil)
}

// UnsetGeneratedFlag ensures that no value is present for GeneratedFlag, not even an explicit nil
func (o *CustomReport) UnsetGeneratedFlag() {
	o.GeneratedFlag.Unset()
}

// GetParameterPrefix returns the ParameterPrefix field value if set, zero value otherwise.
func (o *CustomReport) GetParameterPrefix() string {
	if o == nil || IsNil(o.ParameterPrefix) {
		var ret string
		return ret
	}
	return *o.ParameterPrefix
}

// GetParameterPrefixOk returns a tuple with the ParameterPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetParameterPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterPrefix) {
		return nil, false
	}
	return o.ParameterPrefix, true
}

// HasParameterPrefix returns a boolean if a field has been set.
func (o *CustomReport) HasParameterPrefix() bool {
	if o != nil && !IsNil(o.ParameterPrefix) {
		return true
	}

	return false
}

// SetParameterPrefix gets a reference to the given string and assigns it to the ParameterPrefix field.
func (o *CustomReport) SetParameterPrefix(v string) {
	o.ParameterPrefix = &v
}

// GetParameterSeparator returns the ParameterSeparator field value if set, zero value otherwise.
func (o *CustomReport) GetParameterSeparator() string {
	if o == nil || IsNil(o.ParameterSeparator) {
		var ret string
		return ret
	}
	return *o.ParameterSeparator
}

// GetParameterSeparatorOk returns a tuple with the ParameterSeparator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetParameterSeparatorOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterSeparator) {
		return nil, false
	}
	return o.ParameterSeparator, true
}

// HasParameterSeparator returns a boolean if a field has been set.
func (o *CustomReport) HasParameterSeparator() bool {
	if o != nil && !IsNil(o.ParameterSeparator) {
		return true
	}

	return false
}

// SetParameterSeparator gets a reference to the given string and assigns it to the ParameterSeparator field.
func (o *CustomReport) SetParameterSeparator(v string) {
	o.ParameterSeparator = &v
}

// GetParameterNameSeparator returns the ParameterNameSeparator field value if set, zero value otherwise.
func (o *CustomReport) GetParameterNameSeparator() string {
	if o == nil || IsNil(o.ParameterNameSeparator) {
		var ret string
		return ret
	}
	return *o.ParameterNameSeparator
}

// GetParameterNameSeparatorOk returns a tuple with the ParameterNameSeparator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetParameterNameSeparatorOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterNameSeparator) {
		return nil, false
	}
	return o.ParameterNameSeparator, true
}

// HasParameterNameSeparator returns a boolean if a field has been set.
func (o *CustomReport) HasParameterNameSeparator() bool {
	if o != nil && !IsNil(o.ParameterNameSeparator) {
		return true
	}

	return false
}

// SetParameterNameSeparator gets a reference to the given string and assigns it to the ParameterNameSeparator field.
func (o *CustomReport) SetParameterNameSeparator(v string) {
	o.ParameterNameSeparator = &v
}

// GetParameterSuffix returns the ParameterSuffix field value if set, zero value otherwise.
func (o *CustomReport) GetParameterSuffix() string {
	if o == nil || IsNil(o.ParameterSuffix) {
		var ret string
		return ret
	}
	return *o.ParameterSuffix
}

// GetParameterSuffixOk returns a tuple with the ParameterSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetParameterSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterSuffix) {
		return nil, false
	}
	return o.ParameterSuffix, true
}

// HasParameterSuffix returns a boolean if a field has been set.
func (o *CustomReport) HasParameterSuffix() bool {
	if o != nil && !IsNil(o.ParameterSuffix) {
		return true
	}

	return false
}

// SetParameterSuffix gets a reference to the given string and assigns it to the ParameterSuffix field.
func (o *CustomReport) SetParameterSuffix(v string) {
	o.ParameterSuffix = &v
}

// GetLocationFlag returns the LocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetLocationFlag() bool {
	if o == nil || IsNil(o.LocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LocationFlag.Get()
}

// GetLocationFlagOk returns a tuple with the LocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationFlag.Get(), o.LocationFlag.IsSet()
}

// HasLocationFlag returns a boolean if a field has been set.
func (o *CustomReport) HasLocationFlag() bool {
	if o != nil && o.LocationFlag.IsSet() {
		return true
	}

	return false
}

// SetLocationFlag gets a reference to the given NullableBool and assigns it to the LocationFlag field.
func (o *CustomReport) SetLocationFlag(v bool) {
	o.LocationFlag.Set(&v)
}
// SetLocationFlagNil sets the value for LocationFlag to be an explicit nil
func (o *CustomReport) SetLocationFlagNil() {
	o.LocationFlag.Set(nil)
}

// UnsetLocationFlag ensures that no value is present for LocationFlag, not even an explicit nil
func (o *CustomReport) UnsetLocationFlag() {
	o.LocationFlag.Unset()
}

// GetLocationParamId returns the LocationParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetLocationParamId() int32 {
	if o == nil || IsNil(o.LocationParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.LocationParamId.Get()
}

// GetLocationParamIdOk returns a tuple with the LocationParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetLocationParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationParamId.Get(), o.LocationParamId.IsSet()
}

// HasLocationParamId returns a boolean if a field has been set.
func (o *CustomReport) HasLocationParamId() bool {
	if o != nil && o.LocationParamId.IsSet() {
		return true
	}

	return false
}

// SetLocationParamId gets a reference to the given NullableInt32 and assigns it to the LocationParamId field.
func (o *CustomReport) SetLocationParamId(v int32) {
	o.LocationParamId.Set(&v)
}
// SetLocationParamIdNil sets the value for LocationParamId to be an explicit nil
func (o *CustomReport) SetLocationParamIdNil() {
	o.LocationParamId.Set(nil)
}

// UnsetLocationParamId ensures that no value is present for LocationParamId, not even an explicit nil
func (o *CustomReport) UnsetLocationParamId() {
	o.LocationParamId.Unset()
}

// GetLocationDefaultFlag returns the LocationDefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetLocationDefaultFlag() bool {
	if o == nil || IsNil(o.LocationDefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LocationDefaultFlag.Get()
}

// GetLocationDefaultFlagOk returns a tuple with the LocationDefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetLocationDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationDefaultFlag.Get(), o.LocationDefaultFlag.IsSet()
}

// HasLocationDefaultFlag returns a boolean if a field has been set.
func (o *CustomReport) HasLocationDefaultFlag() bool {
	if o != nil && o.LocationDefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetLocationDefaultFlag gets a reference to the given NullableBool and assigns it to the LocationDefaultFlag field.
func (o *CustomReport) SetLocationDefaultFlag(v bool) {
	o.LocationDefaultFlag.Set(&v)
}
// SetLocationDefaultFlagNil sets the value for LocationDefaultFlag to be an explicit nil
func (o *CustomReport) SetLocationDefaultFlagNil() {
	o.LocationDefaultFlag.Set(nil)
}

// UnsetLocationDefaultFlag ensures that no value is present for LocationDefaultFlag, not even an explicit nil
func (o *CustomReport) UnsetLocationDefaultFlag() {
	o.LocationDefaultFlag.Unset()
}

// GetLocationOverride returns the LocationOverride field value if set, zero value otherwise.
func (o *CustomReport) GetLocationOverride() string {
	if o == nil || IsNil(o.LocationOverride) {
		var ret string
		return ret
	}
	return *o.LocationOverride
}

// GetLocationOverrideOk returns a tuple with the LocationOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetLocationOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.LocationOverride) {
		return nil, false
	}
	return o.LocationOverride, true
}

// HasLocationOverride returns a boolean if a field has been set.
func (o *CustomReport) HasLocationOverride() bool {
	if o != nil && !IsNil(o.LocationOverride) {
		return true
	}

	return false
}

// SetLocationOverride gets a reference to the given string and assigns it to the LocationOverride field.
func (o *CustomReport) SetLocationOverride(v string) {
	o.LocationOverride = &v
}

// GetDepartmentFlag returns the DepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetDepartmentFlag() bool {
	if o == nil || IsNil(o.DepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DepartmentFlag.Get()
}

// GetDepartmentFlagOk returns a tuple with the DepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DepartmentFlag.Get(), o.DepartmentFlag.IsSet()
}

// HasDepartmentFlag returns a boolean if a field has been set.
func (o *CustomReport) HasDepartmentFlag() bool {
	if o != nil && o.DepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetDepartmentFlag gets a reference to the given NullableBool and assigns it to the DepartmentFlag field.
func (o *CustomReport) SetDepartmentFlag(v bool) {
	o.DepartmentFlag.Set(&v)
}
// SetDepartmentFlagNil sets the value for DepartmentFlag to be an explicit nil
func (o *CustomReport) SetDepartmentFlagNil() {
	o.DepartmentFlag.Set(nil)
}

// UnsetDepartmentFlag ensures that no value is present for DepartmentFlag, not even an explicit nil
func (o *CustomReport) UnsetDepartmentFlag() {
	o.DepartmentFlag.Unset()
}

// GetDepartmentParamId returns the DepartmentParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetDepartmentParamId() int32 {
	if o == nil || IsNil(o.DepartmentParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.DepartmentParamId.Get()
}

// GetDepartmentParamIdOk returns a tuple with the DepartmentParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetDepartmentParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DepartmentParamId.Get(), o.DepartmentParamId.IsSet()
}

// HasDepartmentParamId returns a boolean if a field has been set.
func (o *CustomReport) HasDepartmentParamId() bool {
	if o != nil && o.DepartmentParamId.IsSet() {
		return true
	}

	return false
}

// SetDepartmentParamId gets a reference to the given NullableInt32 and assigns it to the DepartmentParamId field.
func (o *CustomReport) SetDepartmentParamId(v int32) {
	o.DepartmentParamId.Set(&v)
}
// SetDepartmentParamIdNil sets the value for DepartmentParamId to be an explicit nil
func (o *CustomReport) SetDepartmentParamIdNil() {
	o.DepartmentParamId.Set(nil)
}

// UnsetDepartmentParamId ensures that no value is present for DepartmentParamId, not even an explicit nil
func (o *CustomReport) UnsetDepartmentParamId() {
	o.DepartmentParamId.Unset()
}

// GetDepartmentDefaultFlag returns the DepartmentDefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetDepartmentDefaultFlag() bool {
	if o == nil || IsNil(o.DepartmentDefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DepartmentDefaultFlag.Get()
}

// GetDepartmentDefaultFlagOk returns a tuple with the DepartmentDefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetDepartmentDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DepartmentDefaultFlag.Get(), o.DepartmentDefaultFlag.IsSet()
}

// HasDepartmentDefaultFlag returns a boolean if a field has been set.
func (o *CustomReport) HasDepartmentDefaultFlag() bool {
	if o != nil && o.DepartmentDefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetDepartmentDefaultFlag gets a reference to the given NullableBool and assigns it to the DepartmentDefaultFlag field.
func (o *CustomReport) SetDepartmentDefaultFlag(v bool) {
	o.DepartmentDefaultFlag.Set(&v)
}
// SetDepartmentDefaultFlagNil sets the value for DepartmentDefaultFlag to be an explicit nil
func (o *CustomReport) SetDepartmentDefaultFlagNil() {
	o.DepartmentDefaultFlag.Set(nil)
}

// UnsetDepartmentDefaultFlag ensures that no value is present for DepartmentDefaultFlag, not even an explicit nil
func (o *CustomReport) UnsetDepartmentDefaultFlag() {
	o.DepartmentDefaultFlag.Unset()
}

// GetDepartmentOverride returns the DepartmentOverride field value if set, zero value otherwise.
func (o *CustomReport) GetDepartmentOverride() string {
	if o == nil || IsNil(o.DepartmentOverride) {
		var ret string
		return ret
	}
	return *o.DepartmentOverride
}

// GetDepartmentOverrideOk returns a tuple with the DepartmentOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetDepartmentOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.DepartmentOverride) {
		return nil, false
	}
	return o.DepartmentOverride, true
}

// HasDepartmentOverride returns a boolean if a field has been set.
func (o *CustomReport) HasDepartmentOverride() bool {
	if o != nil && !IsNil(o.DepartmentOverride) {
		return true
	}

	return false
}

// SetDepartmentOverride gets a reference to the given string and assigns it to the DepartmentOverride field.
func (o *CustomReport) SetDepartmentOverride(v string) {
	o.DepartmentOverride = &v
}

// GetTerritoryFlag returns the TerritoryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetTerritoryFlag() bool {
	if o == nil || IsNil(o.TerritoryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TerritoryFlag.Get()
}

// GetTerritoryFlagOk returns a tuple with the TerritoryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetTerritoryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TerritoryFlag.Get(), o.TerritoryFlag.IsSet()
}

// HasTerritoryFlag returns a boolean if a field has been set.
func (o *CustomReport) HasTerritoryFlag() bool {
	if o != nil && o.TerritoryFlag.IsSet() {
		return true
	}

	return false
}

// SetTerritoryFlag gets a reference to the given NullableBool and assigns it to the TerritoryFlag field.
func (o *CustomReport) SetTerritoryFlag(v bool) {
	o.TerritoryFlag.Set(&v)
}
// SetTerritoryFlagNil sets the value for TerritoryFlag to be an explicit nil
func (o *CustomReport) SetTerritoryFlagNil() {
	o.TerritoryFlag.Set(nil)
}

// UnsetTerritoryFlag ensures that no value is present for TerritoryFlag, not even an explicit nil
func (o *CustomReport) UnsetTerritoryFlag() {
	o.TerritoryFlag.Unset()
}

// GetTerritoryParamId returns the TerritoryParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetTerritoryParamId() int32 {
	if o == nil || IsNil(o.TerritoryParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.TerritoryParamId.Get()
}

// GetTerritoryParamIdOk returns a tuple with the TerritoryParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetTerritoryParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TerritoryParamId.Get(), o.TerritoryParamId.IsSet()
}

// HasTerritoryParamId returns a boolean if a field has been set.
func (o *CustomReport) HasTerritoryParamId() bool {
	if o != nil && o.TerritoryParamId.IsSet() {
		return true
	}

	return false
}

// SetTerritoryParamId gets a reference to the given NullableInt32 and assigns it to the TerritoryParamId field.
func (o *CustomReport) SetTerritoryParamId(v int32) {
	o.TerritoryParamId.Set(&v)
}
// SetTerritoryParamIdNil sets the value for TerritoryParamId to be an explicit nil
func (o *CustomReport) SetTerritoryParamIdNil() {
	o.TerritoryParamId.Set(nil)
}

// UnsetTerritoryParamId ensures that no value is present for TerritoryParamId, not even an explicit nil
func (o *CustomReport) UnsetTerritoryParamId() {
	o.TerritoryParamId.Unset()
}

// GetTerritoryDefaultFlag returns the TerritoryDefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetTerritoryDefaultFlag() bool {
	if o == nil || IsNil(o.TerritoryDefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.TerritoryDefaultFlag.Get()
}

// GetTerritoryDefaultFlagOk returns a tuple with the TerritoryDefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetTerritoryDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TerritoryDefaultFlag.Get(), o.TerritoryDefaultFlag.IsSet()
}

// HasTerritoryDefaultFlag returns a boolean if a field has been set.
func (o *CustomReport) HasTerritoryDefaultFlag() bool {
	if o != nil && o.TerritoryDefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetTerritoryDefaultFlag gets a reference to the given NullableBool and assigns it to the TerritoryDefaultFlag field.
func (o *CustomReport) SetTerritoryDefaultFlag(v bool) {
	o.TerritoryDefaultFlag.Set(&v)
}
// SetTerritoryDefaultFlagNil sets the value for TerritoryDefaultFlag to be an explicit nil
func (o *CustomReport) SetTerritoryDefaultFlagNil() {
	o.TerritoryDefaultFlag.Set(nil)
}

// UnsetTerritoryDefaultFlag ensures that no value is present for TerritoryDefaultFlag, not even an explicit nil
func (o *CustomReport) UnsetTerritoryDefaultFlag() {
	o.TerritoryDefaultFlag.Unset()
}

// GetTerritoryOverride returns the TerritoryOverride field value if set, zero value otherwise.
func (o *CustomReport) GetTerritoryOverride() string {
	if o == nil || IsNil(o.TerritoryOverride) {
		var ret string
		return ret
	}
	return *o.TerritoryOverride
}

// GetTerritoryOverrideOk returns a tuple with the TerritoryOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetTerritoryOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.TerritoryOverride) {
		return nil, false
	}
	return o.TerritoryOverride, true
}

// HasTerritoryOverride returns a boolean if a field has been set.
func (o *CustomReport) HasTerritoryOverride() bool {
	if o != nil && !IsNil(o.TerritoryOverride) {
		return true
	}

	return false
}

// SetTerritoryOverride gets a reference to the given string and assigns it to the TerritoryOverride field.
func (o *CustomReport) SetTerritoryOverride(v string) {
	o.TerritoryOverride = &v
}

// GetCompanyFlag returns the CompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetCompanyFlag() bool {
	if o == nil || IsNil(o.CompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CompanyFlag.Get()
}

// GetCompanyFlagOk returns a tuple with the CompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyFlag.Get(), o.CompanyFlag.IsSet()
}

// HasCompanyFlag returns a boolean if a field has been set.
func (o *CustomReport) HasCompanyFlag() bool {
	if o != nil && o.CompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetCompanyFlag gets a reference to the given NullableBool and assigns it to the CompanyFlag field.
func (o *CustomReport) SetCompanyFlag(v bool) {
	o.CompanyFlag.Set(&v)
}
// SetCompanyFlagNil sets the value for CompanyFlag to be an explicit nil
func (o *CustomReport) SetCompanyFlagNil() {
	o.CompanyFlag.Set(nil)
}

// UnsetCompanyFlag ensures that no value is present for CompanyFlag, not even an explicit nil
func (o *CustomReport) UnsetCompanyFlag() {
	o.CompanyFlag.Unset()
}

// GetCompanyParamId returns the CompanyParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetCompanyParamId() int32 {
	if o == nil || IsNil(o.CompanyParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.CompanyParamId.Get()
}

// GetCompanyParamIdOk returns a tuple with the CompanyParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetCompanyParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyParamId.Get(), o.CompanyParamId.IsSet()
}

// HasCompanyParamId returns a boolean if a field has been set.
func (o *CustomReport) HasCompanyParamId() bool {
	if o != nil && o.CompanyParamId.IsSet() {
		return true
	}

	return false
}

// SetCompanyParamId gets a reference to the given NullableInt32 and assigns it to the CompanyParamId field.
func (o *CustomReport) SetCompanyParamId(v int32) {
	o.CompanyParamId.Set(&v)
}
// SetCompanyParamIdNil sets the value for CompanyParamId to be an explicit nil
func (o *CustomReport) SetCompanyParamIdNil() {
	o.CompanyParamId.Set(nil)
}

// UnsetCompanyParamId ensures that no value is present for CompanyParamId, not even an explicit nil
func (o *CustomReport) UnsetCompanyParamId() {
	o.CompanyParamId.Unset()
}

// GetCompanyOverride returns the CompanyOverride field value if set, zero value otherwise.
func (o *CustomReport) GetCompanyOverride() string {
	if o == nil || IsNil(o.CompanyOverride) {
		var ret string
		return ret
	}
	return *o.CompanyOverride
}

// GetCompanyOverrideOk returns a tuple with the CompanyOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetCompanyOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyOverride) {
		return nil, false
	}
	return o.CompanyOverride, true
}

// HasCompanyOverride returns a boolean if a field has been set.
func (o *CustomReport) HasCompanyOverride() bool {
	if o != nil && !IsNil(o.CompanyOverride) {
		return true
	}

	return false
}

// SetCompanyOverride gets a reference to the given string and assigns it to the CompanyOverride field.
func (o *CustomReport) SetCompanyOverride(v string) {
	o.CompanyOverride = &v
}

// GetMemberFlag returns the MemberFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetMemberFlag() bool {
	if o == nil || IsNil(o.MemberFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.MemberFlag.Get()
}

// GetMemberFlagOk returns a tuple with the MemberFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetMemberFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberFlag.Get(), o.MemberFlag.IsSet()
}

// HasMemberFlag returns a boolean if a field has been set.
func (o *CustomReport) HasMemberFlag() bool {
	if o != nil && o.MemberFlag.IsSet() {
		return true
	}

	return false
}

// SetMemberFlag gets a reference to the given NullableBool and assigns it to the MemberFlag field.
func (o *CustomReport) SetMemberFlag(v bool) {
	o.MemberFlag.Set(&v)
}
// SetMemberFlagNil sets the value for MemberFlag to be an explicit nil
func (o *CustomReport) SetMemberFlagNil() {
	o.MemberFlag.Set(nil)
}

// UnsetMemberFlag ensures that no value is present for MemberFlag, not even an explicit nil
func (o *CustomReport) UnsetMemberFlag() {
	o.MemberFlag.Unset()
}

// GetMemberParamId returns the MemberParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetMemberParamId() int32 {
	if o == nil || IsNil(o.MemberParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.MemberParamId.Get()
}

// GetMemberParamIdOk returns a tuple with the MemberParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetMemberParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberParamId.Get(), o.MemberParamId.IsSet()
}

// HasMemberParamId returns a boolean if a field has been set.
func (o *CustomReport) HasMemberParamId() bool {
	if o != nil && o.MemberParamId.IsSet() {
		return true
	}

	return false
}

// SetMemberParamId gets a reference to the given NullableInt32 and assigns it to the MemberParamId field.
func (o *CustomReport) SetMemberParamId(v int32) {
	o.MemberParamId.Set(&v)
}
// SetMemberParamIdNil sets the value for MemberParamId to be an explicit nil
func (o *CustomReport) SetMemberParamIdNil() {
	o.MemberParamId.Set(nil)
}

// UnsetMemberParamId ensures that no value is present for MemberParamId, not even an explicit nil
func (o *CustomReport) UnsetMemberParamId() {
	o.MemberParamId.Unset()
}

// GetMemberOverride returns the MemberOverride field value if set, zero value otherwise.
func (o *CustomReport) GetMemberOverride() string {
	if o == nil || IsNil(o.MemberOverride) {
		var ret string
		return ret
	}
	return *o.MemberOverride
}

// GetMemberOverrideOk returns a tuple with the MemberOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetMemberOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.MemberOverride) {
		return nil, false
	}
	return o.MemberOverride, true
}

// HasMemberOverride returns a boolean if a field has been set.
func (o *CustomReport) HasMemberOverride() bool {
	if o != nil && !IsNil(o.MemberOverride) {
		return true
	}

	return false
}

// SetMemberOverride gets a reference to the given string and assigns it to the MemberOverride field.
func (o *CustomReport) SetMemberOverride(v string) {
	o.MemberOverride = &v
}

// GetStartDateFlag returns the StartDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetStartDateFlag() bool {
	if o == nil || IsNil(o.StartDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.StartDateFlag.Get()
}

// GetStartDateFlagOk returns a tuple with the StartDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetStartDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDateFlag.Get(), o.StartDateFlag.IsSet()
}

// HasStartDateFlag returns a boolean if a field has been set.
func (o *CustomReport) HasStartDateFlag() bool {
	if o != nil && o.StartDateFlag.IsSet() {
		return true
	}

	return false
}

// SetStartDateFlag gets a reference to the given NullableBool and assigns it to the StartDateFlag field.
func (o *CustomReport) SetStartDateFlag(v bool) {
	o.StartDateFlag.Set(&v)
}
// SetStartDateFlagNil sets the value for StartDateFlag to be an explicit nil
func (o *CustomReport) SetStartDateFlagNil() {
	o.StartDateFlag.Set(nil)
}

// UnsetStartDateFlag ensures that no value is present for StartDateFlag, not even an explicit nil
func (o *CustomReport) UnsetStartDateFlag() {
	o.StartDateFlag.Unset()
}

// GetStartDateParamId returns the StartDateParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetStartDateParamId() int32 {
	if o == nil || IsNil(o.StartDateParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.StartDateParamId.Get()
}

// GetStartDateParamIdOk returns a tuple with the StartDateParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetStartDateParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDateParamId.Get(), o.StartDateParamId.IsSet()
}

// HasStartDateParamId returns a boolean if a field has been set.
func (o *CustomReport) HasStartDateParamId() bool {
	if o != nil && o.StartDateParamId.IsSet() {
		return true
	}

	return false
}

// SetStartDateParamId gets a reference to the given NullableInt32 and assigns it to the StartDateParamId field.
func (o *CustomReport) SetStartDateParamId(v int32) {
	o.StartDateParamId.Set(&v)
}
// SetStartDateParamIdNil sets the value for StartDateParamId to be an explicit nil
func (o *CustomReport) SetStartDateParamIdNil() {
	o.StartDateParamId.Set(nil)
}

// UnsetStartDateParamId ensures that no value is present for StartDateParamId, not even an explicit nil
func (o *CustomReport) UnsetStartDateParamId() {
	o.StartDateParamId.Unset()
}

// GetStartDateOverride returns the StartDateOverride field value if set, zero value otherwise.
func (o *CustomReport) GetStartDateOverride() string {
	if o == nil || IsNil(o.StartDateOverride) {
		var ret string
		return ret
	}
	return *o.StartDateOverride
}

// GetStartDateOverrideOk returns a tuple with the StartDateOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetStartDateOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.StartDateOverride) {
		return nil, false
	}
	return o.StartDateOverride, true
}

// HasStartDateOverride returns a boolean if a field has been set.
func (o *CustomReport) HasStartDateOverride() bool {
	if o != nil && !IsNil(o.StartDateOverride) {
		return true
	}

	return false
}

// SetStartDateOverride gets a reference to the given string and assigns it to the StartDateOverride field.
func (o *CustomReport) SetStartDateOverride(v string) {
	o.StartDateOverride = &v
}

// GetEndDateFlag returns the EndDateFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetEndDateFlag() bool {
	if o == nil || IsNil(o.EndDateFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EndDateFlag.Get()
}

// GetEndDateFlagOk returns a tuple with the EndDateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetEndDateFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDateFlag.Get(), o.EndDateFlag.IsSet()
}

// HasEndDateFlag returns a boolean if a field has been set.
func (o *CustomReport) HasEndDateFlag() bool {
	if o != nil && o.EndDateFlag.IsSet() {
		return true
	}

	return false
}

// SetEndDateFlag gets a reference to the given NullableBool and assigns it to the EndDateFlag field.
func (o *CustomReport) SetEndDateFlag(v bool) {
	o.EndDateFlag.Set(&v)
}
// SetEndDateFlagNil sets the value for EndDateFlag to be an explicit nil
func (o *CustomReport) SetEndDateFlagNil() {
	o.EndDateFlag.Set(nil)
}

// UnsetEndDateFlag ensures that no value is present for EndDateFlag, not even an explicit nil
func (o *CustomReport) UnsetEndDateFlag() {
	o.EndDateFlag.Unset()
}

// GetEndDateParamId returns the EndDateParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetEndDateParamId() int32 {
	if o == nil || IsNil(o.EndDateParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.EndDateParamId.Get()
}

// GetEndDateParamIdOk returns a tuple with the EndDateParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetEndDateParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDateParamId.Get(), o.EndDateParamId.IsSet()
}

// HasEndDateParamId returns a boolean if a field has been set.
func (o *CustomReport) HasEndDateParamId() bool {
	if o != nil && o.EndDateParamId.IsSet() {
		return true
	}

	return false
}

// SetEndDateParamId gets a reference to the given NullableInt32 and assigns it to the EndDateParamId field.
func (o *CustomReport) SetEndDateParamId(v int32) {
	o.EndDateParamId.Set(&v)
}
// SetEndDateParamIdNil sets the value for EndDateParamId to be an explicit nil
func (o *CustomReport) SetEndDateParamIdNil() {
	o.EndDateParamId.Set(nil)
}

// UnsetEndDateParamId ensures that no value is present for EndDateParamId, not even an explicit nil
func (o *CustomReport) UnsetEndDateParamId() {
	o.EndDateParamId.Unset()
}

// GetEndDateOverride returns the EndDateOverride field value if set, zero value otherwise.
func (o *CustomReport) GetEndDateOverride() string {
	if o == nil || IsNil(o.EndDateOverride) {
		var ret string
		return ret
	}
	return *o.EndDateOverride
}

// GetEndDateOverrideOk returns a tuple with the EndDateOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetEndDateOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.EndDateOverride) {
		return nil, false
	}
	return o.EndDateOverride, true
}

// HasEndDateOverride returns a boolean if a field has been set.
func (o *CustomReport) HasEndDateOverride() bool {
	if o != nil && !IsNil(o.EndDateOverride) {
		return true
	}

	return false
}

// SetEndDateOverride gets a reference to the given string and assigns it to the EndDateOverride field.
func (o *CustomReport) SetEndDateOverride(v string) {
	o.EndDateOverride = &v
}

// GetOppTypeFlag returns the OppTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetOppTypeFlag() bool {
	if o == nil || IsNil(o.OppTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.OppTypeFlag.Get()
}

// GetOppTypeFlagOk returns a tuple with the OppTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetOppTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OppTypeFlag.Get(), o.OppTypeFlag.IsSet()
}

// HasOppTypeFlag returns a boolean if a field has been set.
func (o *CustomReport) HasOppTypeFlag() bool {
	if o != nil && o.OppTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetOppTypeFlag gets a reference to the given NullableBool and assigns it to the OppTypeFlag field.
func (o *CustomReport) SetOppTypeFlag(v bool) {
	o.OppTypeFlag.Set(&v)
}
// SetOppTypeFlagNil sets the value for OppTypeFlag to be an explicit nil
func (o *CustomReport) SetOppTypeFlagNil() {
	o.OppTypeFlag.Set(nil)
}

// UnsetOppTypeFlag ensures that no value is present for OppTypeFlag, not even an explicit nil
func (o *CustomReport) UnsetOppTypeFlag() {
	o.OppTypeFlag.Unset()
}

// GetOppTypeParamId returns the OppTypeParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetOppTypeParamId() int32 {
	if o == nil || IsNil(o.OppTypeParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.OppTypeParamId.Get()
}

// GetOppTypeParamIdOk returns a tuple with the OppTypeParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetOppTypeParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OppTypeParamId.Get(), o.OppTypeParamId.IsSet()
}

// HasOppTypeParamId returns a boolean if a field has been set.
func (o *CustomReport) HasOppTypeParamId() bool {
	if o != nil && o.OppTypeParamId.IsSet() {
		return true
	}

	return false
}

// SetOppTypeParamId gets a reference to the given NullableInt32 and assigns it to the OppTypeParamId field.
func (o *CustomReport) SetOppTypeParamId(v int32) {
	o.OppTypeParamId.Set(&v)
}
// SetOppTypeParamIdNil sets the value for OppTypeParamId to be an explicit nil
func (o *CustomReport) SetOppTypeParamIdNil() {
	o.OppTypeParamId.Set(nil)
}

// UnsetOppTypeParamId ensures that no value is present for OppTypeParamId, not even an explicit nil
func (o *CustomReport) UnsetOppTypeParamId() {
	o.OppTypeParamId.Unset()
}

// GetOppTypeOverride returns the OppTypeOverride field value if set, zero value otherwise.
func (o *CustomReport) GetOppTypeOverride() string {
	if o == nil || IsNil(o.OppTypeOverride) {
		var ret string
		return ret
	}
	return *o.OppTypeOverride
}

// GetOppTypeOverrideOk returns a tuple with the OppTypeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetOppTypeOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.OppTypeOverride) {
		return nil, false
	}
	return o.OppTypeOverride, true
}

// HasOppTypeOverride returns a boolean if a field has been set.
func (o *CustomReport) HasOppTypeOverride() bool {
	if o != nil && !IsNil(o.OppTypeOverride) {
		return true
	}

	return false
}

// SetOppTypeOverride gets a reference to the given string and assigns it to the OppTypeOverride field.
func (o *CustomReport) SetOppTypeOverride(v string) {
	o.OppTypeOverride = &v
}

// GetOpportunityFlag returns the OpportunityFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetOpportunityFlag() bool {
	if o == nil || IsNil(o.OpportunityFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.OpportunityFlag.Get()
}

// GetOpportunityFlagOk returns a tuple with the OpportunityFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetOpportunityFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpportunityFlag.Get(), o.OpportunityFlag.IsSet()
}

// HasOpportunityFlag returns a boolean if a field has been set.
func (o *CustomReport) HasOpportunityFlag() bool {
	if o != nil && o.OpportunityFlag.IsSet() {
		return true
	}

	return false
}

// SetOpportunityFlag gets a reference to the given NullableBool and assigns it to the OpportunityFlag field.
func (o *CustomReport) SetOpportunityFlag(v bool) {
	o.OpportunityFlag.Set(&v)
}
// SetOpportunityFlagNil sets the value for OpportunityFlag to be an explicit nil
func (o *CustomReport) SetOpportunityFlagNil() {
	o.OpportunityFlag.Set(nil)
}

// UnsetOpportunityFlag ensures that no value is present for OpportunityFlag, not even an explicit nil
func (o *CustomReport) UnsetOpportunityFlag() {
	o.OpportunityFlag.Unset()
}

// GetOpportunityParamId returns the OpportunityParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetOpportunityParamId() int32 {
	if o == nil || IsNil(o.OpportunityParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.OpportunityParamId.Get()
}

// GetOpportunityParamIdOk returns a tuple with the OpportunityParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetOpportunityParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpportunityParamId.Get(), o.OpportunityParamId.IsSet()
}

// HasOpportunityParamId returns a boolean if a field has been set.
func (o *CustomReport) HasOpportunityParamId() bool {
	if o != nil && o.OpportunityParamId.IsSet() {
		return true
	}

	return false
}

// SetOpportunityParamId gets a reference to the given NullableInt32 and assigns it to the OpportunityParamId field.
func (o *CustomReport) SetOpportunityParamId(v int32) {
	o.OpportunityParamId.Set(&v)
}
// SetOpportunityParamIdNil sets the value for OpportunityParamId to be an explicit nil
func (o *CustomReport) SetOpportunityParamIdNil() {
	o.OpportunityParamId.Set(nil)
}

// UnsetOpportunityParamId ensures that no value is present for OpportunityParamId, not even an explicit nil
func (o *CustomReport) UnsetOpportunityParamId() {
	o.OpportunityParamId.Unset()
}

// GetOpportunityOverride returns the OpportunityOverride field value if set, zero value otherwise.
func (o *CustomReport) GetOpportunityOverride() string {
	if o == nil || IsNil(o.OpportunityOverride) {
		var ret string
		return ret
	}
	return *o.OpportunityOverride
}

// GetOpportunityOverrideOk returns a tuple with the OpportunityOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetOpportunityOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.OpportunityOverride) {
		return nil, false
	}
	return o.OpportunityOverride, true
}

// HasOpportunityOverride returns a boolean if a field has been set.
func (o *CustomReport) HasOpportunityOverride() bool {
	if o != nil && !IsNil(o.OpportunityOverride) {
		return true
	}

	return false
}

// SetOpportunityOverride gets a reference to the given string and assigns it to the OpportunityOverride field.
func (o *CustomReport) SetOpportunityOverride(v string) {
	o.OpportunityOverride = &v
}

// GetMarketingCampaignFlag returns the MarketingCampaignFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetMarketingCampaignFlag() bool {
	if o == nil || IsNil(o.MarketingCampaignFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.MarketingCampaignFlag.Get()
}

// GetMarketingCampaignFlagOk returns a tuple with the MarketingCampaignFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetMarketingCampaignFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketingCampaignFlag.Get(), o.MarketingCampaignFlag.IsSet()
}

// HasMarketingCampaignFlag returns a boolean if a field has been set.
func (o *CustomReport) HasMarketingCampaignFlag() bool {
	if o != nil && o.MarketingCampaignFlag.IsSet() {
		return true
	}

	return false
}

// SetMarketingCampaignFlag gets a reference to the given NullableBool and assigns it to the MarketingCampaignFlag field.
func (o *CustomReport) SetMarketingCampaignFlag(v bool) {
	o.MarketingCampaignFlag.Set(&v)
}
// SetMarketingCampaignFlagNil sets the value for MarketingCampaignFlag to be an explicit nil
func (o *CustomReport) SetMarketingCampaignFlagNil() {
	o.MarketingCampaignFlag.Set(nil)
}

// UnsetMarketingCampaignFlag ensures that no value is present for MarketingCampaignFlag, not even an explicit nil
func (o *CustomReport) UnsetMarketingCampaignFlag() {
	o.MarketingCampaignFlag.Unset()
}

// GetMarketingCampaignParamId returns the MarketingCampaignParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetMarketingCampaignParamId() int32 {
	if o == nil || IsNil(o.MarketingCampaignParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.MarketingCampaignParamId.Get()
}

// GetMarketingCampaignParamIdOk returns a tuple with the MarketingCampaignParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetMarketingCampaignParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketingCampaignParamId.Get(), o.MarketingCampaignParamId.IsSet()
}

// HasMarketingCampaignParamId returns a boolean if a field has been set.
func (o *CustomReport) HasMarketingCampaignParamId() bool {
	if o != nil && o.MarketingCampaignParamId.IsSet() {
		return true
	}

	return false
}

// SetMarketingCampaignParamId gets a reference to the given NullableInt32 and assigns it to the MarketingCampaignParamId field.
func (o *CustomReport) SetMarketingCampaignParamId(v int32) {
	o.MarketingCampaignParamId.Set(&v)
}
// SetMarketingCampaignParamIdNil sets the value for MarketingCampaignParamId to be an explicit nil
func (o *CustomReport) SetMarketingCampaignParamIdNil() {
	o.MarketingCampaignParamId.Set(nil)
}

// UnsetMarketingCampaignParamId ensures that no value is present for MarketingCampaignParamId, not even an explicit nil
func (o *CustomReport) UnsetMarketingCampaignParamId() {
	o.MarketingCampaignParamId.Unset()
}

// GetMarketingCampaignOverride returns the MarketingCampaignOverride field value if set, zero value otherwise.
func (o *CustomReport) GetMarketingCampaignOverride() string {
	if o == nil || IsNil(o.MarketingCampaignOverride) {
		var ret string
		return ret
	}
	return *o.MarketingCampaignOverride
}

// GetMarketingCampaignOverrideOk returns a tuple with the MarketingCampaignOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetMarketingCampaignOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingCampaignOverride) {
		return nil, false
	}
	return o.MarketingCampaignOverride, true
}

// HasMarketingCampaignOverride returns a boolean if a field has been set.
func (o *CustomReport) HasMarketingCampaignOverride() bool {
	if o != nil && !IsNil(o.MarketingCampaignOverride) {
		return true
	}

	return false
}

// SetMarketingCampaignOverride gets a reference to the given string and assigns it to the MarketingCampaignOverride field.
func (o *CustomReport) SetMarketingCampaignOverride(v string) {
	o.MarketingCampaignOverride = &v
}

// GetServiceBoardFlag returns the ServiceBoardFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceBoardFlag() bool {
	if o == nil || IsNil(o.ServiceBoardFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceBoardFlag.Get()
}

// GetServiceBoardFlagOk returns a tuple with the ServiceBoardFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceBoardFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceBoardFlag.Get(), o.ServiceBoardFlag.IsSet()
}

// HasServiceBoardFlag returns a boolean if a field has been set.
func (o *CustomReport) HasServiceBoardFlag() bool {
	if o != nil && o.ServiceBoardFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceBoardFlag gets a reference to the given NullableBool and assigns it to the ServiceBoardFlag field.
func (o *CustomReport) SetServiceBoardFlag(v bool) {
	o.ServiceBoardFlag.Set(&v)
}
// SetServiceBoardFlagNil sets the value for ServiceBoardFlag to be an explicit nil
func (o *CustomReport) SetServiceBoardFlagNil() {
	o.ServiceBoardFlag.Set(nil)
}

// UnsetServiceBoardFlag ensures that no value is present for ServiceBoardFlag, not even an explicit nil
func (o *CustomReport) UnsetServiceBoardFlag() {
	o.ServiceBoardFlag.Unset()
}

// GetServiceBoardParamId returns the ServiceBoardParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceBoardParamId() int32 {
	if o == nil || IsNil(o.ServiceBoardParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.ServiceBoardParamId.Get()
}

// GetServiceBoardParamIdOk returns a tuple with the ServiceBoardParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceBoardParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceBoardParamId.Get(), o.ServiceBoardParamId.IsSet()
}

// HasServiceBoardParamId returns a boolean if a field has been set.
func (o *CustomReport) HasServiceBoardParamId() bool {
	if o != nil && o.ServiceBoardParamId.IsSet() {
		return true
	}

	return false
}

// SetServiceBoardParamId gets a reference to the given NullableInt32 and assigns it to the ServiceBoardParamId field.
func (o *CustomReport) SetServiceBoardParamId(v int32) {
	o.ServiceBoardParamId.Set(&v)
}
// SetServiceBoardParamIdNil sets the value for ServiceBoardParamId to be an explicit nil
func (o *CustomReport) SetServiceBoardParamIdNil() {
	o.ServiceBoardParamId.Set(nil)
}

// UnsetServiceBoardParamId ensures that no value is present for ServiceBoardParamId, not even an explicit nil
func (o *CustomReport) UnsetServiceBoardParamId() {
	o.ServiceBoardParamId.Unset()
}

// GetServiceBoardDefaultFlag returns the ServiceBoardDefaultFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceBoardDefaultFlag() bool {
	if o == nil || IsNil(o.ServiceBoardDefaultFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceBoardDefaultFlag.Get()
}

// GetServiceBoardDefaultFlagOk returns a tuple with the ServiceBoardDefaultFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceBoardDefaultFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceBoardDefaultFlag.Get(), o.ServiceBoardDefaultFlag.IsSet()
}

// HasServiceBoardDefaultFlag returns a boolean if a field has been set.
func (o *CustomReport) HasServiceBoardDefaultFlag() bool {
	if o != nil && o.ServiceBoardDefaultFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceBoardDefaultFlag gets a reference to the given NullableBool and assigns it to the ServiceBoardDefaultFlag field.
func (o *CustomReport) SetServiceBoardDefaultFlag(v bool) {
	o.ServiceBoardDefaultFlag.Set(&v)
}
// SetServiceBoardDefaultFlagNil sets the value for ServiceBoardDefaultFlag to be an explicit nil
func (o *CustomReport) SetServiceBoardDefaultFlagNil() {
	o.ServiceBoardDefaultFlag.Set(nil)
}

// UnsetServiceBoardDefaultFlag ensures that no value is present for ServiceBoardDefaultFlag, not even an explicit nil
func (o *CustomReport) UnsetServiceBoardDefaultFlag() {
	o.ServiceBoardDefaultFlag.Unset()
}

// GetServiceBoardOverride returns the ServiceBoardOverride field value if set, zero value otherwise.
func (o *CustomReport) GetServiceBoardOverride() string {
	if o == nil || IsNil(o.ServiceBoardOverride) {
		var ret string
		return ret
	}
	return *o.ServiceBoardOverride
}

// GetServiceBoardOverrideOk returns a tuple with the ServiceBoardOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetServiceBoardOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceBoardOverride) {
		return nil, false
	}
	return o.ServiceBoardOverride, true
}

// HasServiceBoardOverride returns a boolean if a field has been set.
func (o *CustomReport) HasServiceBoardOverride() bool {
	if o != nil && !IsNil(o.ServiceBoardOverride) {
		return true
	}

	return false
}

// SetServiceBoardOverride gets a reference to the given string and assigns it to the ServiceBoardOverride field.
func (o *CustomReport) SetServiceBoardOverride(v string) {
	o.ServiceBoardOverride = &v
}

// GetServiceTypeFlag returns the ServiceTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceTypeFlag() bool {
	if o == nil || IsNil(o.ServiceTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceTypeFlag.Get()
}

// GetServiceTypeFlagOk returns a tuple with the ServiceTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceTypeFlag.Get(), o.ServiceTypeFlag.IsSet()
}

// HasServiceTypeFlag returns a boolean if a field has been set.
func (o *CustomReport) HasServiceTypeFlag() bool {
	if o != nil && o.ServiceTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceTypeFlag gets a reference to the given NullableBool and assigns it to the ServiceTypeFlag field.
func (o *CustomReport) SetServiceTypeFlag(v bool) {
	o.ServiceTypeFlag.Set(&v)
}
// SetServiceTypeFlagNil sets the value for ServiceTypeFlag to be an explicit nil
func (o *CustomReport) SetServiceTypeFlagNil() {
	o.ServiceTypeFlag.Set(nil)
}

// UnsetServiceTypeFlag ensures that no value is present for ServiceTypeFlag, not even an explicit nil
func (o *CustomReport) UnsetServiceTypeFlag() {
	o.ServiceTypeFlag.Unset()
}

// GetServiceTypeParamId returns the ServiceTypeParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceTypeParamId() int32 {
	if o == nil || IsNil(o.ServiceTypeParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.ServiceTypeParamId.Get()
}

// GetServiceTypeParamIdOk returns a tuple with the ServiceTypeParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceTypeParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceTypeParamId.Get(), o.ServiceTypeParamId.IsSet()
}

// HasServiceTypeParamId returns a boolean if a field has been set.
func (o *CustomReport) HasServiceTypeParamId() bool {
	if o != nil && o.ServiceTypeParamId.IsSet() {
		return true
	}

	return false
}

// SetServiceTypeParamId gets a reference to the given NullableInt32 and assigns it to the ServiceTypeParamId field.
func (o *CustomReport) SetServiceTypeParamId(v int32) {
	o.ServiceTypeParamId.Set(&v)
}
// SetServiceTypeParamIdNil sets the value for ServiceTypeParamId to be an explicit nil
func (o *CustomReport) SetServiceTypeParamIdNil() {
	o.ServiceTypeParamId.Set(nil)
}

// UnsetServiceTypeParamId ensures that no value is present for ServiceTypeParamId, not even an explicit nil
func (o *CustomReport) UnsetServiceTypeParamId() {
	o.ServiceTypeParamId.Unset()
}

// GetServiceTypeOverride returns the ServiceTypeOverride field value if set, zero value otherwise.
func (o *CustomReport) GetServiceTypeOverride() string {
	if o == nil || IsNil(o.ServiceTypeOverride) {
		var ret string
		return ret
	}
	return *o.ServiceTypeOverride
}

// GetServiceTypeOverrideOk returns a tuple with the ServiceTypeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetServiceTypeOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceTypeOverride) {
		return nil, false
	}
	return o.ServiceTypeOverride, true
}

// HasServiceTypeOverride returns a boolean if a field has been set.
func (o *CustomReport) HasServiceTypeOverride() bool {
	if o != nil && !IsNil(o.ServiceTypeOverride) {
		return true
	}

	return false
}

// SetServiceTypeOverride gets a reference to the given string and assigns it to the ServiceTypeOverride field.
func (o *CustomReport) SetServiceTypeOverride(v string) {
	o.ServiceTypeOverride = &v
}

// GetServiceStatusFlag returns the ServiceStatusFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceStatusFlag() bool {
	if o == nil || IsNil(o.ServiceStatusFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ServiceStatusFlag.Get()
}

// GetServiceStatusFlagOk returns a tuple with the ServiceStatusFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceStatusFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceStatusFlag.Get(), o.ServiceStatusFlag.IsSet()
}

// HasServiceStatusFlag returns a boolean if a field has been set.
func (o *CustomReport) HasServiceStatusFlag() bool {
	if o != nil && o.ServiceStatusFlag.IsSet() {
		return true
	}

	return false
}

// SetServiceStatusFlag gets a reference to the given NullableBool and assigns it to the ServiceStatusFlag field.
func (o *CustomReport) SetServiceStatusFlag(v bool) {
	o.ServiceStatusFlag.Set(&v)
}
// SetServiceStatusFlagNil sets the value for ServiceStatusFlag to be an explicit nil
func (o *CustomReport) SetServiceStatusFlagNil() {
	o.ServiceStatusFlag.Set(nil)
}

// UnsetServiceStatusFlag ensures that no value is present for ServiceStatusFlag, not even an explicit nil
func (o *CustomReport) UnsetServiceStatusFlag() {
	o.ServiceStatusFlag.Unset()
}

// GetServiceStatusParamId returns the ServiceStatusParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetServiceStatusParamId() int32 {
	if o == nil || IsNil(o.ServiceStatusParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.ServiceStatusParamId.Get()
}

// GetServiceStatusParamIdOk returns a tuple with the ServiceStatusParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetServiceStatusParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceStatusParamId.Get(), o.ServiceStatusParamId.IsSet()
}

// HasServiceStatusParamId returns a boolean if a field has been set.
func (o *CustomReport) HasServiceStatusParamId() bool {
	if o != nil && o.ServiceStatusParamId.IsSet() {
		return true
	}

	return false
}

// SetServiceStatusParamId gets a reference to the given NullableInt32 and assigns it to the ServiceStatusParamId field.
func (o *CustomReport) SetServiceStatusParamId(v int32) {
	o.ServiceStatusParamId.Set(&v)
}
// SetServiceStatusParamIdNil sets the value for ServiceStatusParamId to be an explicit nil
func (o *CustomReport) SetServiceStatusParamIdNil() {
	o.ServiceStatusParamId.Set(nil)
}

// UnsetServiceStatusParamId ensures that no value is present for ServiceStatusParamId, not even an explicit nil
func (o *CustomReport) UnsetServiceStatusParamId() {
	o.ServiceStatusParamId.Unset()
}

// GetServiceStatusOverride returns the ServiceStatusOverride field value if set, zero value otherwise.
func (o *CustomReport) GetServiceStatusOverride() string {
	if o == nil || IsNil(o.ServiceStatusOverride) {
		var ret string
		return ret
	}
	return *o.ServiceStatusOverride
}

// GetServiceStatusOverrideOk returns a tuple with the ServiceStatusOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetServiceStatusOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceStatusOverride) {
		return nil, false
	}
	return o.ServiceStatusOverride, true
}

// HasServiceStatusOverride returns a boolean if a field has been set.
func (o *CustomReport) HasServiceStatusOverride() bool {
	if o != nil && !IsNil(o.ServiceStatusOverride) {
		return true
	}

	return false
}

// SetServiceStatusOverride gets a reference to the given string and assigns it to the ServiceStatusOverride field.
func (o *CustomReport) SetServiceStatusOverride(v string) {
	o.ServiceStatusOverride = &v
}

// GetAgreementTypeFlag returns the AgreementTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetAgreementTypeFlag() bool {
	if o == nil || IsNil(o.AgreementTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AgreementTypeFlag.Get()
}

// GetAgreementTypeFlagOk returns a tuple with the AgreementTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetAgreementTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementTypeFlag.Get(), o.AgreementTypeFlag.IsSet()
}

// HasAgreementTypeFlag returns a boolean if a field has been set.
func (o *CustomReport) HasAgreementTypeFlag() bool {
	if o != nil && o.AgreementTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetAgreementTypeFlag gets a reference to the given NullableBool and assigns it to the AgreementTypeFlag field.
func (o *CustomReport) SetAgreementTypeFlag(v bool) {
	o.AgreementTypeFlag.Set(&v)
}
// SetAgreementTypeFlagNil sets the value for AgreementTypeFlag to be an explicit nil
func (o *CustomReport) SetAgreementTypeFlagNil() {
	o.AgreementTypeFlag.Set(nil)
}

// UnsetAgreementTypeFlag ensures that no value is present for AgreementTypeFlag, not even an explicit nil
func (o *CustomReport) UnsetAgreementTypeFlag() {
	o.AgreementTypeFlag.Unset()
}

// GetAgreementTypeParamId returns the AgreementTypeParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetAgreementTypeParamId() int32 {
	if o == nil || IsNil(o.AgreementTypeParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.AgreementTypeParamId.Get()
}

// GetAgreementTypeParamIdOk returns a tuple with the AgreementTypeParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetAgreementTypeParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementTypeParamId.Get(), o.AgreementTypeParamId.IsSet()
}

// HasAgreementTypeParamId returns a boolean if a field has been set.
func (o *CustomReport) HasAgreementTypeParamId() bool {
	if o != nil && o.AgreementTypeParamId.IsSet() {
		return true
	}

	return false
}

// SetAgreementTypeParamId gets a reference to the given NullableInt32 and assigns it to the AgreementTypeParamId field.
func (o *CustomReport) SetAgreementTypeParamId(v int32) {
	o.AgreementTypeParamId.Set(&v)
}
// SetAgreementTypeParamIdNil sets the value for AgreementTypeParamId to be an explicit nil
func (o *CustomReport) SetAgreementTypeParamIdNil() {
	o.AgreementTypeParamId.Set(nil)
}

// UnsetAgreementTypeParamId ensures that no value is present for AgreementTypeParamId, not even an explicit nil
func (o *CustomReport) UnsetAgreementTypeParamId() {
	o.AgreementTypeParamId.Unset()
}

// GetAgreementTypeOverride returns the AgreementTypeOverride field value if set, zero value otherwise.
func (o *CustomReport) GetAgreementTypeOverride() string {
	if o == nil || IsNil(o.AgreementTypeOverride) {
		var ret string
		return ret
	}
	return *o.AgreementTypeOverride
}

// GetAgreementTypeOverrideOk returns a tuple with the AgreementTypeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetAgreementTypeOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AgreementTypeOverride) {
		return nil, false
	}
	return o.AgreementTypeOverride, true
}

// HasAgreementTypeOverride returns a boolean if a field has been set.
func (o *CustomReport) HasAgreementTypeOverride() bool {
	if o != nil && !IsNil(o.AgreementTypeOverride) {
		return true
	}

	return false
}

// SetAgreementTypeOverride gets a reference to the given string and assigns it to the AgreementTypeOverride field.
func (o *CustomReport) SetAgreementTypeOverride(v string) {
	o.AgreementTypeOverride = &v
}

// GetAgreementFlag returns the AgreementFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetAgreementFlag() bool {
	if o == nil || IsNil(o.AgreementFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AgreementFlag.Get()
}

// GetAgreementFlagOk returns a tuple with the AgreementFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetAgreementFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementFlag.Get(), o.AgreementFlag.IsSet()
}

// HasAgreementFlag returns a boolean if a field has been set.
func (o *CustomReport) HasAgreementFlag() bool {
	if o != nil && o.AgreementFlag.IsSet() {
		return true
	}

	return false
}

// SetAgreementFlag gets a reference to the given NullableBool and assigns it to the AgreementFlag field.
func (o *CustomReport) SetAgreementFlag(v bool) {
	o.AgreementFlag.Set(&v)
}
// SetAgreementFlagNil sets the value for AgreementFlag to be an explicit nil
func (o *CustomReport) SetAgreementFlagNil() {
	o.AgreementFlag.Set(nil)
}

// UnsetAgreementFlag ensures that no value is present for AgreementFlag, not even an explicit nil
func (o *CustomReport) UnsetAgreementFlag() {
	o.AgreementFlag.Unset()
}

// GetAgreementParamId returns the AgreementParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetAgreementParamId() int32 {
	if o == nil || IsNil(o.AgreementParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.AgreementParamId.Get()
}

// GetAgreementParamIdOk returns a tuple with the AgreementParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetAgreementParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgreementParamId.Get(), o.AgreementParamId.IsSet()
}

// HasAgreementParamId returns a boolean if a field has been set.
func (o *CustomReport) HasAgreementParamId() bool {
	if o != nil && o.AgreementParamId.IsSet() {
		return true
	}

	return false
}

// SetAgreementParamId gets a reference to the given NullableInt32 and assigns it to the AgreementParamId field.
func (o *CustomReport) SetAgreementParamId(v int32) {
	o.AgreementParamId.Set(&v)
}
// SetAgreementParamIdNil sets the value for AgreementParamId to be an explicit nil
func (o *CustomReport) SetAgreementParamIdNil() {
	o.AgreementParamId.Set(nil)
}

// UnsetAgreementParamId ensures that no value is present for AgreementParamId, not even an explicit nil
func (o *CustomReport) UnsetAgreementParamId() {
	o.AgreementParamId.Unset()
}

// GetAgreementOverride returns the AgreementOverride field value if set, zero value otherwise.
func (o *CustomReport) GetAgreementOverride() string {
	if o == nil || IsNil(o.AgreementOverride) {
		var ret string
		return ret
	}
	return *o.AgreementOverride
}

// GetAgreementOverrideOk returns a tuple with the AgreementOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetAgreementOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AgreementOverride) {
		return nil, false
	}
	return o.AgreementOverride, true
}

// HasAgreementOverride returns a boolean if a field has been set.
func (o *CustomReport) HasAgreementOverride() bool {
	if o != nil && !IsNil(o.AgreementOverride) {
		return true
	}

	return false
}

// SetAgreementOverride gets a reference to the given string and assigns it to the AgreementOverride field.
func (o *CustomReport) SetAgreementOverride(v string) {
	o.AgreementOverride = &v
}

// GetProjectTypeFlag returns the ProjectTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetProjectTypeFlag() bool {
	if o == nil || IsNil(o.ProjectTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProjectTypeFlag.Get()
}

// GetProjectTypeFlagOk returns a tuple with the ProjectTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetProjectTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectTypeFlag.Get(), o.ProjectTypeFlag.IsSet()
}

// HasProjectTypeFlag returns a boolean if a field has been set.
func (o *CustomReport) HasProjectTypeFlag() bool {
	if o != nil && o.ProjectTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetProjectTypeFlag gets a reference to the given NullableBool and assigns it to the ProjectTypeFlag field.
func (o *CustomReport) SetProjectTypeFlag(v bool) {
	o.ProjectTypeFlag.Set(&v)
}
// SetProjectTypeFlagNil sets the value for ProjectTypeFlag to be an explicit nil
func (o *CustomReport) SetProjectTypeFlagNil() {
	o.ProjectTypeFlag.Set(nil)
}

// UnsetProjectTypeFlag ensures that no value is present for ProjectTypeFlag, not even an explicit nil
func (o *CustomReport) UnsetProjectTypeFlag() {
	o.ProjectTypeFlag.Unset()
}

// GetProjectTypeParamId returns the ProjectTypeParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetProjectTypeParamId() int32 {
	if o == nil || IsNil(o.ProjectTypeParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectTypeParamId.Get()
}

// GetProjectTypeParamIdOk returns a tuple with the ProjectTypeParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetProjectTypeParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectTypeParamId.Get(), o.ProjectTypeParamId.IsSet()
}

// HasProjectTypeParamId returns a boolean if a field has been set.
func (o *CustomReport) HasProjectTypeParamId() bool {
	if o != nil && o.ProjectTypeParamId.IsSet() {
		return true
	}

	return false
}

// SetProjectTypeParamId gets a reference to the given NullableInt32 and assigns it to the ProjectTypeParamId field.
func (o *CustomReport) SetProjectTypeParamId(v int32) {
	o.ProjectTypeParamId.Set(&v)
}
// SetProjectTypeParamIdNil sets the value for ProjectTypeParamId to be an explicit nil
func (o *CustomReport) SetProjectTypeParamIdNil() {
	o.ProjectTypeParamId.Set(nil)
}

// UnsetProjectTypeParamId ensures that no value is present for ProjectTypeParamId, not even an explicit nil
func (o *CustomReport) UnsetProjectTypeParamId() {
	o.ProjectTypeParamId.Unset()
}

// GetProjectTypeOverride returns the ProjectTypeOverride field value if set, zero value otherwise.
func (o *CustomReport) GetProjectTypeOverride() string {
	if o == nil || IsNil(o.ProjectTypeOverride) {
		var ret string
		return ret
	}
	return *o.ProjectTypeOverride
}

// GetProjectTypeOverrideOk returns a tuple with the ProjectTypeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetProjectTypeOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectTypeOverride) {
		return nil, false
	}
	return o.ProjectTypeOverride, true
}

// HasProjectTypeOverride returns a boolean if a field has been set.
func (o *CustomReport) HasProjectTypeOverride() bool {
	if o != nil && !IsNil(o.ProjectTypeOverride) {
		return true
	}

	return false
}

// SetProjectTypeOverride gets a reference to the given string and assigns it to the ProjectTypeOverride field.
func (o *CustomReport) SetProjectTypeOverride(v string) {
	o.ProjectTypeOverride = &v
}

// GetProjectFlag returns the ProjectFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetProjectFlag() bool {
	if o == nil || IsNil(o.ProjectFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ProjectFlag.Get()
}

// GetProjectFlagOk returns a tuple with the ProjectFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetProjectFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectFlag.Get(), o.ProjectFlag.IsSet()
}

// HasProjectFlag returns a boolean if a field has been set.
func (o *CustomReport) HasProjectFlag() bool {
	if o != nil && o.ProjectFlag.IsSet() {
		return true
	}

	return false
}

// SetProjectFlag gets a reference to the given NullableBool and assigns it to the ProjectFlag field.
func (o *CustomReport) SetProjectFlag(v bool) {
	o.ProjectFlag.Set(&v)
}
// SetProjectFlagNil sets the value for ProjectFlag to be an explicit nil
func (o *CustomReport) SetProjectFlagNil() {
	o.ProjectFlag.Set(nil)
}

// UnsetProjectFlag ensures that no value is present for ProjectFlag, not even an explicit nil
func (o *CustomReport) UnsetProjectFlag() {
	o.ProjectFlag.Unset()
}

// GetProjectParamId returns the ProjectParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetProjectParamId() int32 {
	if o == nil || IsNil(o.ProjectParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectParamId.Get()
}

// GetProjectParamIdOk returns a tuple with the ProjectParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetProjectParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectParamId.Get(), o.ProjectParamId.IsSet()
}

// HasProjectParamId returns a boolean if a field has been set.
func (o *CustomReport) HasProjectParamId() bool {
	if o != nil && o.ProjectParamId.IsSet() {
		return true
	}

	return false
}

// SetProjectParamId gets a reference to the given NullableInt32 and assigns it to the ProjectParamId field.
func (o *CustomReport) SetProjectParamId(v int32) {
	o.ProjectParamId.Set(&v)
}
// SetProjectParamIdNil sets the value for ProjectParamId to be an explicit nil
func (o *CustomReport) SetProjectParamIdNil() {
	o.ProjectParamId.Set(nil)
}

// UnsetProjectParamId ensures that no value is present for ProjectParamId, not even an explicit nil
func (o *CustomReport) UnsetProjectParamId() {
	o.ProjectParamId.Unset()
}

// GetProjectOverride returns the ProjectOverride field value if set, zero value otherwise.
func (o *CustomReport) GetProjectOverride() string {
	if o == nil || IsNil(o.ProjectOverride) {
		var ret string
		return ret
	}
	return *o.ProjectOverride
}

// GetProjectOverrideOk returns a tuple with the ProjectOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetProjectOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectOverride) {
		return nil, false
	}
	return o.ProjectOverride, true
}

// HasProjectOverride returns a boolean if a field has been set.
func (o *CustomReport) HasProjectOverride() bool {
	if o != nil && !IsNil(o.ProjectOverride) {
		return true
	}

	return false
}

// SetProjectOverride gets a reference to the given string and assigns it to the ProjectOverride field.
func (o *CustomReport) SetProjectOverride(v string) {
	o.ProjectOverride = &v
}

// GetWorkRoleFlag returns the WorkRoleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetWorkRoleFlag() bool {
	if o == nil || IsNil(o.WorkRoleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.WorkRoleFlag.Get()
}

// GetWorkRoleFlagOk returns a tuple with the WorkRoleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetWorkRoleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkRoleFlag.Get(), o.WorkRoleFlag.IsSet()
}

// HasWorkRoleFlag returns a boolean if a field has been set.
func (o *CustomReport) HasWorkRoleFlag() bool {
	if o != nil && o.WorkRoleFlag.IsSet() {
		return true
	}

	return false
}

// SetWorkRoleFlag gets a reference to the given NullableBool and assigns it to the WorkRoleFlag field.
func (o *CustomReport) SetWorkRoleFlag(v bool) {
	o.WorkRoleFlag.Set(&v)
}
// SetWorkRoleFlagNil sets the value for WorkRoleFlag to be an explicit nil
func (o *CustomReport) SetWorkRoleFlagNil() {
	o.WorkRoleFlag.Set(nil)
}

// UnsetWorkRoleFlag ensures that no value is present for WorkRoleFlag, not even an explicit nil
func (o *CustomReport) UnsetWorkRoleFlag() {
	o.WorkRoleFlag.Unset()
}

// GetWorkRoleParamId returns the WorkRoleParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetWorkRoleParamId() int32 {
	if o == nil || IsNil(o.WorkRoleParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.WorkRoleParamId.Get()
}

// GetWorkRoleParamIdOk returns a tuple with the WorkRoleParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetWorkRoleParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkRoleParamId.Get(), o.WorkRoleParamId.IsSet()
}

// HasWorkRoleParamId returns a boolean if a field has been set.
func (o *CustomReport) HasWorkRoleParamId() bool {
	if o != nil && o.WorkRoleParamId.IsSet() {
		return true
	}

	return false
}

// SetWorkRoleParamId gets a reference to the given NullableInt32 and assigns it to the WorkRoleParamId field.
func (o *CustomReport) SetWorkRoleParamId(v int32) {
	o.WorkRoleParamId.Set(&v)
}
// SetWorkRoleParamIdNil sets the value for WorkRoleParamId to be an explicit nil
func (o *CustomReport) SetWorkRoleParamIdNil() {
	o.WorkRoleParamId.Set(nil)
}

// UnsetWorkRoleParamId ensures that no value is present for WorkRoleParamId, not even an explicit nil
func (o *CustomReport) UnsetWorkRoleParamId() {
	o.WorkRoleParamId.Unset()
}

// GetWorkRoleOverride returns the WorkRoleOverride field value if set, zero value otherwise.
func (o *CustomReport) GetWorkRoleOverride() string {
	if o == nil || IsNil(o.WorkRoleOverride) {
		var ret string
		return ret
	}
	return *o.WorkRoleOverride
}

// GetWorkRoleOverrideOk returns a tuple with the WorkRoleOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetWorkRoleOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.WorkRoleOverride) {
		return nil, false
	}
	return o.WorkRoleOverride, true
}

// HasWorkRoleOverride returns a boolean if a field has been set.
func (o *CustomReport) HasWorkRoleOverride() bool {
	if o != nil && !IsNil(o.WorkRoleOverride) {
		return true
	}

	return false
}

// SetWorkRoleOverride gets a reference to the given string and assigns it to the WorkRoleOverride field.
func (o *CustomReport) SetWorkRoleOverride(v string) {
	o.WorkRoleOverride = &v
}

// GetWorkTypeFlag returns the WorkTypeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetWorkTypeFlag() bool {
	if o == nil || IsNil(o.WorkTypeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.WorkTypeFlag.Get()
}

// GetWorkTypeFlagOk returns a tuple with the WorkTypeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetWorkTypeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkTypeFlag.Get(), o.WorkTypeFlag.IsSet()
}

// HasWorkTypeFlag returns a boolean if a field has been set.
func (o *CustomReport) HasWorkTypeFlag() bool {
	if o != nil && o.WorkTypeFlag.IsSet() {
		return true
	}

	return false
}

// SetWorkTypeFlag gets a reference to the given NullableBool and assigns it to the WorkTypeFlag field.
func (o *CustomReport) SetWorkTypeFlag(v bool) {
	o.WorkTypeFlag.Set(&v)
}
// SetWorkTypeFlagNil sets the value for WorkTypeFlag to be an explicit nil
func (o *CustomReport) SetWorkTypeFlagNil() {
	o.WorkTypeFlag.Set(nil)
}

// UnsetWorkTypeFlag ensures that no value is present for WorkTypeFlag, not even an explicit nil
func (o *CustomReport) UnsetWorkTypeFlag() {
	o.WorkTypeFlag.Unset()
}

// GetWorkTypeParamId returns the WorkTypeParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetWorkTypeParamId() int32 {
	if o == nil || IsNil(o.WorkTypeParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.WorkTypeParamId.Get()
}

// GetWorkTypeParamIdOk returns a tuple with the WorkTypeParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetWorkTypeParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkTypeParamId.Get(), o.WorkTypeParamId.IsSet()
}

// HasWorkTypeParamId returns a boolean if a field has been set.
func (o *CustomReport) HasWorkTypeParamId() bool {
	if o != nil && o.WorkTypeParamId.IsSet() {
		return true
	}

	return false
}

// SetWorkTypeParamId gets a reference to the given NullableInt32 and assigns it to the WorkTypeParamId field.
func (o *CustomReport) SetWorkTypeParamId(v int32) {
	o.WorkTypeParamId.Set(&v)
}
// SetWorkTypeParamIdNil sets the value for WorkTypeParamId to be an explicit nil
func (o *CustomReport) SetWorkTypeParamIdNil() {
	o.WorkTypeParamId.Set(nil)
}

// UnsetWorkTypeParamId ensures that no value is present for WorkTypeParamId, not even an explicit nil
func (o *CustomReport) UnsetWorkTypeParamId() {
	o.WorkTypeParamId.Unset()
}

// GetWorkTypeOverride returns the WorkTypeOverride field value if set, zero value otherwise.
func (o *CustomReport) GetWorkTypeOverride() string {
	if o == nil || IsNil(o.WorkTypeOverride) {
		var ret string
		return ret
	}
	return *o.WorkTypeOverride
}

// GetWorkTypeOverrideOk returns a tuple with the WorkTypeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetWorkTypeOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.WorkTypeOverride) {
		return nil, false
	}
	return o.WorkTypeOverride, true
}

// HasWorkTypeOverride returns a boolean if a field has been set.
func (o *CustomReport) HasWorkTypeOverride() bool {
	if o != nil && !IsNil(o.WorkTypeOverride) {
		return true
	}

	return false
}

// SetWorkTypeOverride gets a reference to the given string and assigns it to the WorkTypeOverride field.
func (o *CustomReport) SetWorkTypeOverride(v string) {
	o.WorkTypeOverride = &v
}

// GetInvoiceFlag returns the InvoiceFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetInvoiceFlag() bool {
	if o == nil || IsNil(o.InvoiceFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InvoiceFlag.Get()
}

// GetInvoiceFlagOk returns a tuple with the InvoiceFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetInvoiceFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceFlag.Get(), o.InvoiceFlag.IsSet()
}

// HasInvoiceFlag returns a boolean if a field has been set.
func (o *CustomReport) HasInvoiceFlag() bool {
	if o != nil && o.InvoiceFlag.IsSet() {
		return true
	}

	return false
}

// SetInvoiceFlag gets a reference to the given NullableBool and assigns it to the InvoiceFlag field.
func (o *CustomReport) SetInvoiceFlag(v bool) {
	o.InvoiceFlag.Set(&v)
}
// SetInvoiceFlagNil sets the value for InvoiceFlag to be an explicit nil
func (o *CustomReport) SetInvoiceFlagNil() {
	o.InvoiceFlag.Set(nil)
}

// UnsetInvoiceFlag ensures that no value is present for InvoiceFlag, not even an explicit nil
func (o *CustomReport) UnsetInvoiceFlag() {
	o.InvoiceFlag.Unset()
}

// GetInvoiceParamId returns the InvoiceParamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomReport) GetInvoiceParamId() int32 {
	if o == nil || IsNil(o.InvoiceParamId.Get()) {
		var ret int32
		return ret
	}
	return *o.InvoiceParamId.Get()
}

// GetInvoiceParamIdOk returns a tuple with the InvoiceParamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomReport) GetInvoiceParamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceParamId.Get(), o.InvoiceParamId.IsSet()
}

// HasInvoiceParamId returns a boolean if a field has been set.
func (o *CustomReport) HasInvoiceParamId() bool {
	if o != nil && o.InvoiceParamId.IsSet() {
		return true
	}

	return false
}

// SetInvoiceParamId gets a reference to the given NullableInt32 and assigns it to the InvoiceParamId field.
func (o *CustomReport) SetInvoiceParamId(v int32) {
	o.InvoiceParamId.Set(&v)
}
// SetInvoiceParamIdNil sets the value for InvoiceParamId to be an explicit nil
func (o *CustomReport) SetInvoiceParamIdNil() {
	o.InvoiceParamId.Set(nil)
}

// UnsetInvoiceParamId ensures that no value is present for InvoiceParamId, not even an explicit nil
func (o *CustomReport) UnsetInvoiceParamId() {
	o.InvoiceParamId.Unset()
}

// GetInvoiceOverride returns the InvoiceOverride field value if set, zero value otherwise.
func (o *CustomReport) GetInvoiceOverride() string {
	if o == nil || IsNil(o.InvoiceOverride) {
		var ret string
		return ret
	}
	return *o.InvoiceOverride
}

// GetInvoiceOverrideOk returns a tuple with the InvoiceOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetInvoiceOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceOverride) {
		return nil, false
	}
	return o.InvoiceOverride, true
}

// HasInvoiceOverride returns a boolean if a field has been set.
func (o *CustomReport) HasInvoiceOverride() bool {
	if o != nil && !IsNil(o.InvoiceOverride) {
		return true
	}

	return false
}

// SetInvoiceOverride gets a reference to the given string and assigns it to the InvoiceOverride field.
func (o *CustomReport) SetInvoiceOverride(v string) {
	o.InvoiceOverride = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CustomReport) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomReport) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CustomReport) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *CustomReport) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o CustomReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["reportLink"] = o.ReportLink
	toSerialize["name"] = o.Name
	toSerialize["module"] = o.Module.Get()
	toSerialize["description"] = o.Description
	if o.GeneratedFlag.IsSet() {
		toSerialize["generatedFlag"] = o.GeneratedFlag.Get()
	}
	if !IsNil(o.ParameterPrefix) {
		toSerialize["parameterPrefix"] = o.ParameterPrefix
	}
	if !IsNil(o.ParameterSeparator) {
		toSerialize["parameterSeparator"] = o.ParameterSeparator
	}
	if !IsNil(o.ParameterNameSeparator) {
		toSerialize["parameterNameSeparator"] = o.ParameterNameSeparator
	}
	if !IsNil(o.ParameterSuffix) {
		toSerialize["parameterSuffix"] = o.ParameterSuffix
	}
	if o.LocationFlag.IsSet() {
		toSerialize["locationFlag"] = o.LocationFlag.Get()
	}
	if o.LocationParamId.IsSet() {
		toSerialize["locationParamId"] = o.LocationParamId.Get()
	}
	if o.LocationDefaultFlag.IsSet() {
		toSerialize["locationDefaultFlag"] = o.LocationDefaultFlag.Get()
	}
	if !IsNil(o.LocationOverride) {
		toSerialize["locationOverride"] = o.LocationOverride
	}
	if o.DepartmentFlag.IsSet() {
		toSerialize["departmentFlag"] = o.DepartmentFlag.Get()
	}
	if o.DepartmentParamId.IsSet() {
		toSerialize["departmentParamId"] = o.DepartmentParamId.Get()
	}
	if o.DepartmentDefaultFlag.IsSet() {
		toSerialize["departmentDefaultFlag"] = o.DepartmentDefaultFlag.Get()
	}
	if !IsNil(o.DepartmentOverride) {
		toSerialize["departmentOverride"] = o.DepartmentOverride
	}
	if o.TerritoryFlag.IsSet() {
		toSerialize["territoryFlag"] = o.TerritoryFlag.Get()
	}
	if o.TerritoryParamId.IsSet() {
		toSerialize["territoryParamId"] = o.TerritoryParamId.Get()
	}
	if o.TerritoryDefaultFlag.IsSet() {
		toSerialize["territoryDefaultFlag"] = o.TerritoryDefaultFlag.Get()
	}
	if !IsNil(o.TerritoryOverride) {
		toSerialize["territoryOverride"] = o.TerritoryOverride
	}
	if o.CompanyFlag.IsSet() {
		toSerialize["companyFlag"] = o.CompanyFlag.Get()
	}
	if o.CompanyParamId.IsSet() {
		toSerialize["companyParamId"] = o.CompanyParamId.Get()
	}
	if !IsNil(o.CompanyOverride) {
		toSerialize["companyOverride"] = o.CompanyOverride
	}
	if o.MemberFlag.IsSet() {
		toSerialize["memberFlag"] = o.MemberFlag.Get()
	}
	if o.MemberParamId.IsSet() {
		toSerialize["memberParamId"] = o.MemberParamId.Get()
	}
	if !IsNil(o.MemberOverride) {
		toSerialize["memberOverride"] = o.MemberOverride
	}
	if o.StartDateFlag.IsSet() {
		toSerialize["startDateFlag"] = o.StartDateFlag.Get()
	}
	if o.StartDateParamId.IsSet() {
		toSerialize["startDateParamId"] = o.StartDateParamId.Get()
	}
	if !IsNil(o.StartDateOverride) {
		toSerialize["startDateOverride"] = o.StartDateOverride
	}
	if o.EndDateFlag.IsSet() {
		toSerialize["endDateFlag"] = o.EndDateFlag.Get()
	}
	if o.EndDateParamId.IsSet() {
		toSerialize["endDateParamId"] = o.EndDateParamId.Get()
	}
	if !IsNil(o.EndDateOverride) {
		toSerialize["endDateOverride"] = o.EndDateOverride
	}
	if o.OppTypeFlag.IsSet() {
		toSerialize["oppTypeFlag"] = o.OppTypeFlag.Get()
	}
	if o.OppTypeParamId.IsSet() {
		toSerialize["oppTypeParamId"] = o.OppTypeParamId.Get()
	}
	if !IsNil(o.OppTypeOverride) {
		toSerialize["oppTypeOverride"] = o.OppTypeOverride
	}
	if o.OpportunityFlag.IsSet() {
		toSerialize["opportunityFlag"] = o.OpportunityFlag.Get()
	}
	if o.OpportunityParamId.IsSet() {
		toSerialize["opportunityParamId"] = o.OpportunityParamId.Get()
	}
	if !IsNil(o.OpportunityOverride) {
		toSerialize["opportunityOverride"] = o.OpportunityOverride
	}
	if o.MarketingCampaignFlag.IsSet() {
		toSerialize["marketingCampaignFlag"] = o.MarketingCampaignFlag.Get()
	}
	if o.MarketingCampaignParamId.IsSet() {
		toSerialize["marketingCampaignParamId"] = o.MarketingCampaignParamId.Get()
	}
	if !IsNil(o.MarketingCampaignOverride) {
		toSerialize["marketingCampaignOverride"] = o.MarketingCampaignOverride
	}
	if o.ServiceBoardFlag.IsSet() {
		toSerialize["serviceBoardFlag"] = o.ServiceBoardFlag.Get()
	}
	if o.ServiceBoardParamId.IsSet() {
		toSerialize["serviceBoardParamId"] = o.ServiceBoardParamId.Get()
	}
	if o.ServiceBoardDefaultFlag.IsSet() {
		toSerialize["serviceBoardDefaultFlag"] = o.ServiceBoardDefaultFlag.Get()
	}
	if !IsNil(o.ServiceBoardOverride) {
		toSerialize["serviceBoardOverride"] = o.ServiceBoardOverride
	}
	if o.ServiceTypeFlag.IsSet() {
		toSerialize["serviceTypeFlag"] = o.ServiceTypeFlag.Get()
	}
	if o.ServiceTypeParamId.IsSet() {
		toSerialize["serviceTypeParamId"] = o.ServiceTypeParamId.Get()
	}
	if !IsNil(o.ServiceTypeOverride) {
		toSerialize["serviceTypeOverride"] = o.ServiceTypeOverride
	}
	if o.ServiceStatusFlag.IsSet() {
		toSerialize["serviceStatusFlag"] = o.ServiceStatusFlag.Get()
	}
	if o.ServiceStatusParamId.IsSet() {
		toSerialize["serviceStatusParamId"] = o.ServiceStatusParamId.Get()
	}
	if !IsNil(o.ServiceStatusOverride) {
		toSerialize["serviceStatusOverride"] = o.ServiceStatusOverride
	}
	if o.AgreementTypeFlag.IsSet() {
		toSerialize["agreementTypeFlag"] = o.AgreementTypeFlag.Get()
	}
	if o.AgreementTypeParamId.IsSet() {
		toSerialize["agreementTypeParamId"] = o.AgreementTypeParamId.Get()
	}
	if !IsNil(o.AgreementTypeOverride) {
		toSerialize["agreementTypeOverride"] = o.AgreementTypeOverride
	}
	if o.AgreementFlag.IsSet() {
		toSerialize["agreementFlag"] = o.AgreementFlag.Get()
	}
	if o.AgreementParamId.IsSet() {
		toSerialize["agreementParamId"] = o.AgreementParamId.Get()
	}
	if !IsNil(o.AgreementOverride) {
		toSerialize["agreementOverride"] = o.AgreementOverride
	}
	if o.ProjectTypeFlag.IsSet() {
		toSerialize["projectTypeFlag"] = o.ProjectTypeFlag.Get()
	}
	if o.ProjectTypeParamId.IsSet() {
		toSerialize["projectTypeParamId"] = o.ProjectTypeParamId.Get()
	}
	if !IsNil(o.ProjectTypeOverride) {
		toSerialize["projectTypeOverride"] = o.ProjectTypeOverride
	}
	if o.ProjectFlag.IsSet() {
		toSerialize["projectFlag"] = o.ProjectFlag.Get()
	}
	if o.ProjectParamId.IsSet() {
		toSerialize["projectParamId"] = o.ProjectParamId.Get()
	}
	if !IsNil(o.ProjectOverride) {
		toSerialize["projectOverride"] = o.ProjectOverride
	}
	if o.WorkRoleFlag.IsSet() {
		toSerialize["workRoleFlag"] = o.WorkRoleFlag.Get()
	}
	if o.WorkRoleParamId.IsSet() {
		toSerialize["workRoleParamId"] = o.WorkRoleParamId.Get()
	}
	if !IsNil(o.WorkRoleOverride) {
		toSerialize["workRoleOverride"] = o.WorkRoleOverride
	}
	if o.WorkTypeFlag.IsSet() {
		toSerialize["workTypeFlag"] = o.WorkTypeFlag.Get()
	}
	if o.WorkTypeParamId.IsSet() {
		toSerialize["workTypeParamId"] = o.WorkTypeParamId.Get()
	}
	if !IsNil(o.WorkTypeOverride) {
		toSerialize["workTypeOverride"] = o.WorkTypeOverride
	}
	if o.InvoiceFlag.IsSet() {
		toSerialize["invoiceFlag"] = o.InvoiceFlag.Get()
	}
	if o.InvoiceParamId.IsSet() {
		toSerialize["invoiceParamId"] = o.InvoiceParamId.Get()
	}
	if !IsNil(o.InvoiceOverride) {
		toSerialize["invoiceOverride"] = o.InvoiceOverride
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *CustomReport) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reportLink",
		"name",
		"module",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomReport := _CustomReport{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomReport)

	if err != nil {
		return err
	}

	*o = CustomReport(varCustomReport)

	return err
}

type NullableCustomReport struct {
	value *CustomReport
	isSet bool
}

func (v NullableCustomReport) Get() *CustomReport {
	return v.value
}

func (v *NullableCustomReport) Set(val *CustomReport) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomReport) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomReport(val *CustomReport) *NullableCustomReport {
	return &NullableCustomReport{value: val, isSet: true}
}

func (v NullableCustomReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


