/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ExpenseReportTierUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpenseReportTierUpdate{}

// ExpenseReportTierUpdate struct for ExpenseReportTierUpdate
type ExpenseReportTierUpdate struct {
	Id *int32 `json:"id,omitempty"`
	ApprovalType NullableString `json:"approvalType,omitempty"`
}

// NewExpenseReportTierUpdate instantiates a new ExpenseReportTierUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpenseReportTierUpdate() *ExpenseReportTierUpdate {
	this := ExpenseReportTierUpdate{}
	return &this
}

// NewExpenseReportTierUpdateWithDefaults instantiates a new ExpenseReportTierUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpenseReportTierUpdateWithDefaults() *ExpenseReportTierUpdate {
	this := ExpenseReportTierUpdate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExpenseReportTierUpdate) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseReportTierUpdate) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExpenseReportTierUpdate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ExpenseReportTierUpdate) SetId(v int32) {
	o.Id = &v
}

// GetApprovalType returns the ApprovalType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExpenseReportTierUpdate) GetApprovalType() string {
	if o == nil || IsNil(o.ApprovalType.Get()) {
		var ret string
		return ret
	}
	return *o.ApprovalType.Get()
}

// GetApprovalTypeOk returns a tuple with the ApprovalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExpenseReportTierUpdate) GetApprovalTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApprovalType.Get(), o.ApprovalType.IsSet()
}

// HasApprovalType returns a boolean if a field has been set.
func (o *ExpenseReportTierUpdate) HasApprovalType() bool {
	if o != nil && o.ApprovalType.IsSet() {
		return true
	}

	return false
}

// SetApprovalType gets a reference to the given NullableString and assigns it to the ApprovalType field.
func (o *ExpenseReportTierUpdate) SetApprovalType(v string) {
	o.ApprovalType.Set(&v)
}
// SetApprovalTypeNil sets the value for ApprovalType to be an explicit nil
func (o *ExpenseReportTierUpdate) SetApprovalTypeNil() {
	o.ApprovalType.Set(nil)
}

// UnsetApprovalType ensures that no value is present for ApprovalType, not even an explicit nil
func (o *ExpenseReportTierUpdate) UnsetApprovalType() {
	o.ApprovalType.Unset()
}

func (o ExpenseReportTierUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpenseReportTierUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ApprovalType.IsSet() {
		toSerialize["approvalType"] = o.ApprovalType.Get()
	}
	return toSerialize, nil
}

type NullableExpenseReportTierUpdate struct {
	value *ExpenseReportTierUpdate
	isSet bool
}

func (v NullableExpenseReportTierUpdate) Get() *ExpenseReportTierUpdate {
	return v.value
}

func (v *NullableExpenseReportTierUpdate) Set(val *ExpenseReportTierUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableExpenseReportTierUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableExpenseReportTierUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpenseReportTierUpdate(val *ExpenseReportTierUpdate) *NullableExpenseReportTierUpdate {
	return &NullableExpenseReportTierUpdate{value: val, isSet: true}
}

func (v NullableExpenseReportTierUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpenseReportTierUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


