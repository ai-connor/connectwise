/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GLExportCustomerTaxLevel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLExportCustomerTaxLevel{}

// GLExportCustomerTaxLevel struct for GLExportCustomerTaxLevel
type GLExportCustomerTaxLevel struct {
	TaxRate NullableFloat64 `json:"taxRate,omitempty"`
	TaxCodeXref *string `json:"taxCodeXref,omitempty"`
	AgencyXref *string `json:"agencyXref,omitempty"`
	TaxLevel *int32 `json:"taxLevel,omitempty"`
}

// NewGLExportCustomerTaxLevel instantiates a new GLExportCustomerTaxLevel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLExportCustomerTaxLevel() *GLExportCustomerTaxLevel {
	this := GLExportCustomerTaxLevel{}
	return &this
}

// NewGLExportCustomerTaxLevelWithDefaults instantiates a new GLExportCustomerTaxLevel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLExportCustomerTaxLevelWithDefaults() *GLExportCustomerTaxLevel {
	this := GLExportCustomerTaxLevel{}
	return &this
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLExportCustomerTaxLevel) GetTaxRate() float64 {
	if o == nil || IsNil(o.TaxRate.Get()) {
		var ret float64
		return ret
	}
	return *o.TaxRate.Get()
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLExportCustomerTaxLevel) GetTaxRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxRate.Get(), o.TaxRate.IsSet()
}

// HasTaxRate returns a boolean if a field has been set.
func (o *GLExportCustomerTaxLevel) HasTaxRate() bool {
	if o != nil && o.TaxRate.IsSet() {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given NullableFloat64 and assigns it to the TaxRate field.
func (o *GLExportCustomerTaxLevel) SetTaxRate(v float64) {
	o.TaxRate.Set(&v)
}
// SetTaxRateNil sets the value for TaxRate to be an explicit nil
func (o *GLExportCustomerTaxLevel) SetTaxRateNil() {
	o.TaxRate.Set(nil)
}

// UnsetTaxRate ensures that no value is present for TaxRate, not even an explicit nil
func (o *GLExportCustomerTaxLevel) UnsetTaxRate() {
	o.TaxRate.Unset()
}

// GetTaxCodeXref returns the TaxCodeXref field value if set, zero value otherwise.
func (o *GLExportCustomerTaxLevel) GetTaxCodeXref() string {
	if o == nil || IsNil(o.TaxCodeXref) {
		var ret string
		return ret
	}
	return *o.TaxCodeXref
}

// GetTaxCodeXrefOk returns a tuple with the TaxCodeXref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportCustomerTaxLevel) GetTaxCodeXrefOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCodeXref) {
		return nil, false
	}
	return o.TaxCodeXref, true
}

// HasTaxCodeXref returns a boolean if a field has been set.
func (o *GLExportCustomerTaxLevel) HasTaxCodeXref() bool {
	if o != nil && !IsNil(o.TaxCodeXref) {
		return true
	}

	return false
}

// SetTaxCodeXref gets a reference to the given string and assigns it to the TaxCodeXref field.
func (o *GLExportCustomerTaxLevel) SetTaxCodeXref(v string) {
	o.TaxCodeXref = &v
}

// GetAgencyXref returns the AgencyXref field value if set, zero value otherwise.
func (o *GLExportCustomerTaxLevel) GetAgencyXref() string {
	if o == nil || IsNil(o.AgencyXref) {
		var ret string
		return ret
	}
	return *o.AgencyXref
}

// GetAgencyXrefOk returns a tuple with the AgencyXref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportCustomerTaxLevel) GetAgencyXrefOk() (*string, bool) {
	if o == nil || IsNil(o.AgencyXref) {
		return nil, false
	}
	return o.AgencyXref, true
}

// HasAgencyXref returns a boolean if a field has been set.
func (o *GLExportCustomerTaxLevel) HasAgencyXref() bool {
	if o != nil && !IsNil(o.AgencyXref) {
		return true
	}

	return false
}

// SetAgencyXref gets a reference to the given string and assigns it to the AgencyXref field.
func (o *GLExportCustomerTaxLevel) SetAgencyXref(v string) {
	o.AgencyXref = &v
}

// GetTaxLevel returns the TaxLevel field value if set, zero value otherwise.
func (o *GLExportCustomerTaxLevel) GetTaxLevel() int32 {
	if o == nil || IsNil(o.TaxLevel) {
		var ret int32
		return ret
	}
	return *o.TaxLevel
}

// GetTaxLevelOk returns a tuple with the TaxLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportCustomerTaxLevel) GetTaxLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxLevel) {
		return nil, false
	}
	return o.TaxLevel, true
}

// HasTaxLevel returns a boolean if a field has been set.
func (o *GLExportCustomerTaxLevel) HasTaxLevel() bool {
	if o != nil && !IsNil(o.TaxLevel) {
		return true
	}

	return false
}

// SetTaxLevel gets a reference to the given int32 and assigns it to the TaxLevel field.
func (o *GLExportCustomerTaxLevel) SetTaxLevel(v int32) {
	o.TaxLevel = &v
}

func (o GLExportCustomerTaxLevel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLExportCustomerTaxLevel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxRate.IsSet() {
		toSerialize["taxRate"] = o.TaxRate.Get()
	}
	if !IsNil(o.TaxCodeXref) {
		toSerialize["taxCodeXref"] = o.TaxCodeXref
	}
	if !IsNil(o.AgencyXref) {
		toSerialize["agencyXref"] = o.AgencyXref
	}
	if !IsNil(o.TaxLevel) {
		toSerialize["taxLevel"] = o.TaxLevel
	}
	return toSerialize, nil
}

type NullableGLExportCustomerTaxLevel struct {
	value *GLExportCustomerTaxLevel
	isSet bool
}

func (v NullableGLExportCustomerTaxLevel) Get() *GLExportCustomerTaxLevel {
	return v.value
}

func (v *NullableGLExportCustomerTaxLevel) Set(val *GLExportCustomerTaxLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableGLExportCustomerTaxLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableGLExportCustomerTaxLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLExportCustomerTaxLevel(val *GLExportCustomerTaxLevel) *NullableGLExportCustomerTaxLevel {
	return &NullableGLExportCustomerTaxLevel{value: val, isSet: true}
}

func (v NullableGLExportCustomerTaxLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLExportCustomerTaxLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


