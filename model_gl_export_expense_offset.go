/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the GLExportExpenseOffset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GLExportExpenseOffset{}

// GLExportExpenseOffset struct for GLExportExpenseOffset
type GLExportExpenseOffset struct {
	Id NullableInt32 `json:"id,omitempty"`
	DocumentDate *string `json:"documentDate,omitempty"`
	DocumentType *string `json:"documentType,omitempty"`
	AccountNumber *string `json:"accountNumber,omitempty"`
	GlTypeId *string `json:"glTypeId,omitempty"`
	GlClass *string `json:"glClass,omitempty"`
	Member *MemberReference `json:"member,omitempty"`
	Memo *string `json:"memo,omitempty"`
	Description *string `json:"description,omitempty"`
	Total NullableFloat64 `json:"total,omitempty"`
}

// NewGLExportExpenseOffset instantiates a new GLExportExpenseOffset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGLExportExpenseOffset() *GLExportExpenseOffset {
	this := GLExportExpenseOffset{}
	return &this
}

// NewGLExportExpenseOffsetWithDefaults instantiates a new GLExportExpenseOffset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGLExportExpenseOffsetWithDefaults() *GLExportExpenseOffset {
	this := GLExportExpenseOffset{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLExportExpenseOffset) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLExportExpenseOffset) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *GLExportExpenseOffset) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *GLExportExpenseOffset) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *GLExportExpenseOffset) UnsetId() {
	o.Id.Unset()
}

// GetDocumentDate returns the DocumentDate field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetDocumentDate() string {
	if o == nil || IsNil(o.DocumentDate) {
		var ret string
		return ret
	}
	return *o.DocumentDate
}

// GetDocumentDateOk returns a tuple with the DocumentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetDocumentDateOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentDate) {
		return nil, false
	}
	return o.DocumentDate, true
}

// HasDocumentDate returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasDocumentDate() bool {
	if o != nil && !IsNil(o.DocumentDate) {
		return true
	}

	return false
}

// SetDocumentDate gets a reference to the given string and assigns it to the DocumentDate field.
func (o *GLExportExpenseOffset) SetDocumentDate(v string) {
	o.DocumentDate = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetDocumentType() string {
	if o == nil || IsNil(o.DocumentType) {
		var ret string
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given string and assigns it to the DocumentType field.
func (o *GLExportExpenseOffset) SetDocumentType(v string) {
	o.DocumentType = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *GLExportExpenseOffset) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetGlTypeId returns the GlTypeId field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetGlTypeId() string {
	if o == nil || IsNil(o.GlTypeId) {
		var ret string
		return ret
	}
	return *o.GlTypeId
}

// GetGlTypeIdOk returns a tuple with the GlTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetGlTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlTypeId) {
		return nil, false
	}
	return o.GlTypeId, true
}

// HasGlTypeId returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasGlTypeId() bool {
	if o != nil && !IsNil(o.GlTypeId) {
		return true
	}

	return false
}

// SetGlTypeId gets a reference to the given string and assigns it to the GlTypeId field.
func (o *GLExportExpenseOffset) SetGlTypeId(v string) {
	o.GlTypeId = &v
}

// GetGlClass returns the GlClass field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetGlClass() string {
	if o == nil || IsNil(o.GlClass) {
		var ret string
		return ret
	}
	return *o.GlClass
}

// GetGlClassOk returns a tuple with the GlClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetGlClassOk() (*string, bool) {
	if o == nil || IsNil(o.GlClass) {
		return nil, false
	}
	return o.GlClass, true
}

// HasGlClass returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasGlClass() bool {
	if o != nil && !IsNil(o.GlClass) {
		return true
	}

	return false
}

// SetGlClass gets a reference to the given string and assigns it to the GlClass field.
func (o *GLExportExpenseOffset) SetGlClass(v string) {
	o.GlClass = &v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetMember() MemberReference {
	if o == nil || IsNil(o.Member) {
		var ret MemberReference
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given MemberReference and assigns it to the Member field.
func (o *GLExportExpenseOffset) SetMember(v MemberReference) {
	o.Member = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *GLExportExpenseOffset) SetMemo(v string) {
	o.Memo = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GLExportExpenseOffset) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GLExportExpenseOffset) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GLExportExpenseOffset) SetDescription(v string) {
	o.Description = &v
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GLExportExpenseOffset) GetTotal() float64 {
	if o == nil || IsNil(o.Total.Get()) {
		var ret float64
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GLExportExpenseOffset) GetTotalOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *GLExportExpenseOffset) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableFloat64 and assigns it to the Total field.
func (o *GLExportExpenseOffset) SetTotal(v float64) {
	o.Total.Set(&v)
}
// SetTotalNil sets the value for Total to be an explicit nil
func (o *GLExportExpenseOffset) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *GLExportExpenseOffset) UnsetTotal() {
	o.Total.Unset()
}

func (o GLExportExpenseOffset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GLExportExpenseOffset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.DocumentDate) {
		toSerialize["documentDate"] = o.DocumentDate
	}
	if !IsNil(o.DocumentType) {
		toSerialize["documentType"] = o.DocumentType
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.GlTypeId) {
		toSerialize["glTypeId"] = o.GlTypeId
	}
	if !IsNil(o.GlClass) {
		toSerialize["glClass"] = o.GlClass
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	return toSerialize, nil
}

type NullableGLExportExpenseOffset struct {
	value *GLExportExpenseOffset
	isSet bool
}

func (v NullableGLExportExpenseOffset) Get() *GLExportExpenseOffset {
	return v.value
}

func (v *NullableGLExportExpenseOffset) Set(val *GLExportExpenseOffset) {
	v.value = val
	v.isSet = true
}

func (v NullableGLExportExpenseOffset) IsSet() bool {
	return v.isSet
}

func (v *NullableGLExportExpenseOffset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGLExportExpenseOffset(val *GLExportExpenseOffset) *NullableGLExportExpenseOffset {
	return &NullableGLExportExpenseOffset{value: val, isSet: true}
}

func (v NullableGLExportExpenseOffset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGLExportExpenseOffset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


