/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"time"
)

// checks if the InvoiceRouting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceRouting{}

// InvoiceRouting struct for InvoiceRouting
type InvoiceRouting struct {
	Id *int32 `json:"id,omitempty"`
	Invoice *InvoiceReference `json:"invoice,omitempty"`
	SequenceNumber NullableInt32 `json:"sequenceNumber,omitempty"`
	Member *MemberReference `json:"member,omitempty"`
	ReviewedFlag *bool `json:"reviewedFlag,omitempty"`
	DateReviewedUTC *time.Time `json:"dateReviewedUTC,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewInvoiceRouting instantiates a new InvoiceRouting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceRouting() *InvoiceRouting {
	this := InvoiceRouting{}
	return &this
}

// NewInvoiceRoutingWithDefaults instantiates a new InvoiceRouting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceRoutingWithDefaults() *InvoiceRouting {
	this := InvoiceRouting{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceRouting) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRouting) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceRouting) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InvoiceRouting) SetId(v int32) {
	o.Id = &v
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *InvoiceRouting) GetInvoice() InvoiceReference {
	if o == nil || IsNil(o.Invoice) {
		var ret InvoiceReference
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRouting) GetInvoiceOk() (*InvoiceReference, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// HasInvoice returns a boolean if a field has been set.
func (o *InvoiceRouting) HasInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given InvoiceReference and assigns it to the Invoice field.
func (o *InvoiceRouting) SetInvoice(v InvoiceReference) {
	o.Invoice = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceRouting) GetSequenceNumber() int32 {
	if o == nil || IsNil(o.SequenceNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SequenceNumber.Get()
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceRouting) GetSequenceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SequenceNumber.Get(), o.SequenceNumber.IsSet()
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *InvoiceRouting) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber.IsSet() {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given NullableInt32 and assigns it to the SequenceNumber field.
func (o *InvoiceRouting) SetSequenceNumber(v int32) {
	o.SequenceNumber.Set(&v)
}
// SetSequenceNumberNil sets the value for SequenceNumber to be an explicit nil
func (o *InvoiceRouting) SetSequenceNumberNil() {
	o.SequenceNumber.Set(nil)
}

// UnsetSequenceNumber ensures that no value is present for SequenceNumber, not even an explicit nil
func (o *InvoiceRouting) UnsetSequenceNumber() {
	o.SequenceNumber.Unset()
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *InvoiceRouting) GetMember() MemberReference {
	if o == nil || IsNil(o.Member) {
		var ret MemberReference
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRouting) GetMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *InvoiceRouting) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given MemberReference and assigns it to the Member field.
func (o *InvoiceRouting) SetMember(v MemberReference) {
	o.Member = &v
}

// GetReviewedFlag returns the ReviewedFlag field value if set, zero value otherwise.
func (o *InvoiceRouting) GetReviewedFlag() bool {
	if o == nil || IsNil(o.ReviewedFlag) {
		var ret bool
		return ret
	}
	return *o.ReviewedFlag
}

// GetReviewedFlagOk returns a tuple with the ReviewedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRouting) GetReviewedFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ReviewedFlag) {
		return nil, false
	}
	return o.ReviewedFlag, true
}

// HasReviewedFlag returns a boolean if a field has been set.
func (o *InvoiceRouting) HasReviewedFlag() bool {
	if o != nil && !IsNil(o.ReviewedFlag) {
		return true
	}

	return false
}

// SetReviewedFlag gets a reference to the given bool and assigns it to the ReviewedFlag field.
func (o *InvoiceRouting) SetReviewedFlag(v bool) {
	o.ReviewedFlag = &v
}

// GetDateReviewedUTC returns the DateReviewedUTC field value if set, zero value otherwise.
func (o *InvoiceRouting) GetDateReviewedUTC() time.Time {
	if o == nil || IsNil(o.DateReviewedUTC) {
		var ret time.Time
		return ret
	}
	return *o.DateReviewedUTC
}

// GetDateReviewedUTCOk returns a tuple with the DateReviewedUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRouting) GetDateReviewedUTCOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateReviewedUTC) {
		return nil, false
	}
	return o.DateReviewedUTC, true
}

// HasDateReviewedUTC returns a boolean if a field has been set.
func (o *InvoiceRouting) HasDateReviewedUTC() bool {
	if o != nil && !IsNil(o.DateReviewedUTC) {
		return true
	}

	return false
}

// SetDateReviewedUTC gets a reference to the given time.Time and assigns it to the DateReviewedUTC field.
func (o *InvoiceRouting) SetDateReviewedUTC(v time.Time) {
	o.DateReviewedUTC = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *InvoiceRouting) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRouting) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *InvoiceRouting) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *InvoiceRouting) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o InvoiceRouting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceRouting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	if o.SequenceNumber.IsSet() {
		toSerialize["sequenceNumber"] = o.SequenceNumber.Get()
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.ReviewedFlag) {
		toSerialize["reviewedFlag"] = o.ReviewedFlag
	}
	if !IsNil(o.DateReviewedUTC) {
		toSerialize["dateReviewedUTC"] = o.DateReviewedUTC
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableInvoiceRouting struct {
	value *InvoiceRouting
	isSet bool
}

func (v NullableInvoiceRouting) Get() *InvoiceRouting {
	return v.value
}

func (v *NullableInvoiceRouting) Set(val *InvoiceRouting) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceRouting) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceRouting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceRouting(val *InvoiceRouting) *NullableInvoiceRouting {
	return &NullableInvoiceRouting{value: val, isSet: true}
}

func (v NullableInvoiceRouting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceRouting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


