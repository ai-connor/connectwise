/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the LocationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationInfo{}

// LocationInfo struct for LocationInfo
type LocationInfo struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	LocationFlag *bool `json:"location_flag,omitempty"`
	StructureLevel *CorporateStructureLevelReference `json:"structureLevel,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewLocationInfo instantiates a new LocationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationInfo() *LocationInfo {
	this := LocationInfo{}
	return &this
}

// NewLocationInfoWithDefaults instantiates a new LocationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationInfoWithDefaults() *LocationInfo {
	this := LocationInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LocationInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LocationInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *LocationInfo) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LocationInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LocationInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LocationInfo) SetName(v string) {
	o.Name = &v
}

// GetLocationFlag returns the LocationFlag field value if set, zero value otherwise.
func (o *LocationInfo) GetLocationFlag() bool {
	if o == nil || IsNil(o.LocationFlag) {
		var ret bool
		return ret
	}
	return *o.LocationFlag
}

// GetLocationFlagOk returns a tuple with the LocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetLocationFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.LocationFlag) {
		return nil, false
	}
	return o.LocationFlag, true
}

// HasLocationFlag returns a boolean if a field has been set.
func (o *LocationInfo) HasLocationFlag() bool {
	if o != nil && !IsNil(o.LocationFlag) {
		return true
	}

	return false
}

// SetLocationFlag gets a reference to the given bool and assigns it to the LocationFlag field.
func (o *LocationInfo) SetLocationFlag(v bool) {
	o.LocationFlag = &v
}

// GetStructureLevel returns the StructureLevel field value if set, zero value otherwise.
func (o *LocationInfo) GetStructureLevel() CorporateStructureLevelReference {
	if o == nil || IsNil(o.StructureLevel) {
		var ret CorporateStructureLevelReference
		return ret
	}
	return *o.StructureLevel
}

// GetStructureLevelOk returns a tuple with the StructureLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetStructureLevelOk() (*CorporateStructureLevelReference, bool) {
	if o == nil || IsNil(o.StructureLevel) {
		return nil, false
	}
	return o.StructureLevel, true
}

// HasStructureLevel returns a boolean if a field has been set.
func (o *LocationInfo) HasStructureLevel() bool {
	if o != nil && !IsNil(o.StructureLevel) {
		return true
	}

	return false
}

// SetStructureLevel gets a reference to the given CorporateStructureLevelReference and assigns it to the StructureLevel field.
func (o *LocationInfo) SetStructureLevel(v CorporateStructureLevelReference) {
	o.StructureLevel = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *LocationInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *LocationInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *LocationInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o LocationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LocationFlag) {
		toSerialize["location_flag"] = o.LocationFlag
	}
	if !IsNil(o.StructureLevel) {
		toSerialize["structureLevel"] = o.StructureLevel
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableLocationInfo struct {
	value *LocationInfo
	isSet bool
}

func (v NullableLocationInfo) Get() *LocationInfo {
	return v.value
}

func (v *NullableLocationInfo) Set(val *LocationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationInfo(val *LocationInfo) *NullableLocationInfo {
	return &NullableLocationInfo{value: val, isSet: true}
}

func (v NullableLocationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


