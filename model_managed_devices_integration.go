/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagedDevicesIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedDevicesIntegration{}

// ManagedDevicesIntegration struct for ManagedDevicesIntegration
type ManagedDevicesIntegration struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 30;
	Name string `json:"name"`
	//  Max length: 30;
	Solution string `json:"solution"`
	//  Max length: 200;
	PortalUrl *string `json:"portalUrl,omitempty"`
	LoginBy NullableString `json:"loginBy"`
	// Gets or sets             this is only required when globalLoginFlag = true. Max length: 50;
	GlobalLoginUsername *string `json:"globalLoginUsername,omitempty"`
	// Gets or sets             this is only required when globalLoginFlag = true. Max length: 50;
	GlobalLoginPassword *string `json:"globalLoginPassword,omitempty"`
	DefaultBillingLevel NullableString `json:"defaultBillingLevel"`
	ManagementItSetupType *string `json:"managementItSetupType,omitempty"`
	DefaultLocation *SystemLocationReference `json:"defaultLocation,omitempty"`
	DefaultDepartment *SystemDepartmentReference `json:"defaultDepartment,omitempty"`
	IntegratorLogin *IntegratorLoginReference `json:"integratorLogin,omitempty"`
	MatchOnSerialNumberFlag NullableBool `json:"matchOnSerialNumberFlag,omitempty"`
	DisableNewCrossReferencesFlag NullableBool `json:"disableNewCrossReferencesFlag,omitempty"`
	ConfigBillCustomerFlag NullableBool `json:"configBillCustomerFlag,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ManagedDevicesIntegration ManagedDevicesIntegration

// NewManagedDevicesIntegration instantiates a new ManagedDevicesIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedDevicesIntegration(name string, solution string, loginBy NullableString, defaultBillingLevel NullableString) *ManagedDevicesIntegration {
	this := ManagedDevicesIntegration{}
	this.Name = name
	this.Solution = solution
	this.LoginBy = loginBy
	this.DefaultBillingLevel = defaultBillingLevel
	return &this
}

// NewManagedDevicesIntegrationWithDefaults instantiates a new ManagedDevicesIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedDevicesIntegrationWithDefaults() *ManagedDevicesIntegration {
	this := ManagedDevicesIntegration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ManagedDevicesIntegration) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ManagedDevicesIntegration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ManagedDevicesIntegration) SetName(v string) {
	o.Name = v
}

// GetSolution returns the Solution field value
func (o *ManagedDevicesIntegration) GetSolution() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Solution
}

// GetSolutionOk returns a tuple with the Solution field value
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetSolutionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Solution, true
}

// SetSolution sets field value
func (o *ManagedDevicesIntegration) SetSolution(v string) {
	o.Solution = v
}

// GetPortalUrl returns the PortalUrl field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetPortalUrl() string {
	if o == nil || IsNil(o.PortalUrl) {
		var ret string
		return ret
	}
	return *o.PortalUrl
}

// GetPortalUrlOk returns a tuple with the PortalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetPortalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PortalUrl) {
		return nil, false
	}
	return o.PortalUrl, true
}

// HasPortalUrl returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasPortalUrl() bool {
	if o != nil && !IsNil(o.PortalUrl) {
		return true
	}

	return false
}

// SetPortalUrl gets a reference to the given string and assigns it to the PortalUrl field.
func (o *ManagedDevicesIntegration) SetPortalUrl(v string) {
	o.PortalUrl = &v
}

// GetLoginBy returns the LoginBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ManagedDevicesIntegration) GetLoginBy() string {
	if o == nil || o.LoginBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.LoginBy.Get()
}

// GetLoginByOk returns a tuple with the LoginBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDevicesIntegration) GetLoginByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoginBy.Get(), o.LoginBy.IsSet()
}

// SetLoginBy sets field value
func (o *ManagedDevicesIntegration) SetLoginBy(v string) {
	o.LoginBy.Set(&v)
}

// GetGlobalLoginUsername returns the GlobalLoginUsername field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetGlobalLoginUsername() string {
	if o == nil || IsNil(o.GlobalLoginUsername) {
		var ret string
		return ret
	}
	return *o.GlobalLoginUsername
}

// GetGlobalLoginUsernameOk returns a tuple with the GlobalLoginUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetGlobalLoginUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalLoginUsername) {
		return nil, false
	}
	return o.GlobalLoginUsername, true
}

// HasGlobalLoginUsername returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasGlobalLoginUsername() bool {
	if o != nil && !IsNil(o.GlobalLoginUsername) {
		return true
	}

	return false
}

// SetGlobalLoginUsername gets a reference to the given string and assigns it to the GlobalLoginUsername field.
func (o *ManagedDevicesIntegration) SetGlobalLoginUsername(v string) {
	o.GlobalLoginUsername = &v
}

// GetGlobalLoginPassword returns the GlobalLoginPassword field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetGlobalLoginPassword() string {
	if o == nil || IsNil(o.GlobalLoginPassword) {
		var ret string
		return ret
	}
	return *o.GlobalLoginPassword
}

// GetGlobalLoginPasswordOk returns a tuple with the GlobalLoginPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetGlobalLoginPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalLoginPassword) {
		return nil, false
	}
	return o.GlobalLoginPassword, true
}

// HasGlobalLoginPassword returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasGlobalLoginPassword() bool {
	if o != nil && !IsNil(o.GlobalLoginPassword) {
		return true
	}

	return false
}

// SetGlobalLoginPassword gets a reference to the given string and assigns it to the GlobalLoginPassword field.
func (o *ManagedDevicesIntegration) SetGlobalLoginPassword(v string) {
	o.GlobalLoginPassword = &v
}

// GetDefaultBillingLevel returns the DefaultBillingLevel field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ManagedDevicesIntegration) GetDefaultBillingLevel() string {
	if o == nil || o.DefaultBillingLevel.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultBillingLevel.Get()
}

// GetDefaultBillingLevelOk returns a tuple with the DefaultBillingLevel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDevicesIntegration) GetDefaultBillingLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultBillingLevel.Get(), o.DefaultBillingLevel.IsSet()
}

// SetDefaultBillingLevel sets field value
func (o *ManagedDevicesIntegration) SetDefaultBillingLevel(v string) {
	o.DefaultBillingLevel.Set(&v)
}

// GetManagementItSetupType returns the ManagementItSetupType field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetManagementItSetupType() string {
	if o == nil || IsNil(o.ManagementItSetupType) {
		var ret string
		return ret
	}
	return *o.ManagementItSetupType
}

// GetManagementItSetupTypeOk returns a tuple with the ManagementItSetupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetManagementItSetupTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementItSetupType) {
		return nil, false
	}
	return o.ManagementItSetupType, true
}

// HasManagementItSetupType returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasManagementItSetupType() bool {
	if o != nil && !IsNil(o.ManagementItSetupType) {
		return true
	}

	return false
}

// SetManagementItSetupType gets a reference to the given string and assigns it to the ManagementItSetupType field.
func (o *ManagedDevicesIntegration) SetManagementItSetupType(v string) {
	o.ManagementItSetupType = &v
}

// GetDefaultLocation returns the DefaultLocation field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.DefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.DefaultLocation) {
		return nil, false
	}
	return o.DefaultLocation, true
}

// HasDefaultLocation returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasDefaultLocation() bool {
	if o != nil && !IsNil(o.DefaultLocation) {
		return true
	}

	return false
}

// SetDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the DefaultLocation field.
func (o *ManagedDevicesIntegration) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = &v
}

// GetDefaultDepartment returns the DefaultDepartment field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.DefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.DefaultDepartment) {
		return nil, false
	}
	return o.DefaultDepartment, true
}

// HasDefaultDepartment returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasDefaultDepartment() bool {
	if o != nil && !IsNil(o.DefaultDepartment) {
		return true
	}

	return false
}

// SetDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the DefaultDepartment field.
func (o *ManagedDevicesIntegration) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = &v
}

// GetIntegratorLogin returns the IntegratorLogin field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetIntegratorLogin() IntegratorLoginReference {
	if o == nil || IsNil(o.IntegratorLogin) {
		var ret IntegratorLoginReference
		return ret
	}
	return *o.IntegratorLogin
}

// GetIntegratorLoginOk returns a tuple with the IntegratorLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetIntegratorLoginOk() (*IntegratorLoginReference, bool) {
	if o == nil || IsNil(o.IntegratorLogin) {
		return nil, false
	}
	return o.IntegratorLogin, true
}

// HasIntegratorLogin returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasIntegratorLogin() bool {
	if o != nil && !IsNil(o.IntegratorLogin) {
		return true
	}

	return false
}

// SetIntegratorLogin gets a reference to the given IntegratorLoginReference and assigns it to the IntegratorLogin field.
func (o *ManagedDevicesIntegration) SetIntegratorLogin(v IntegratorLoginReference) {
	o.IntegratorLogin = &v
}

// GetMatchOnSerialNumberFlag returns the MatchOnSerialNumberFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedDevicesIntegration) GetMatchOnSerialNumberFlag() bool {
	if o == nil || IsNil(o.MatchOnSerialNumberFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.MatchOnSerialNumberFlag.Get()
}

// GetMatchOnSerialNumberFlagOk returns a tuple with the MatchOnSerialNumberFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDevicesIntegration) GetMatchOnSerialNumberFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatchOnSerialNumberFlag.Get(), o.MatchOnSerialNumberFlag.IsSet()
}

// HasMatchOnSerialNumberFlag returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasMatchOnSerialNumberFlag() bool {
	if o != nil && o.MatchOnSerialNumberFlag.IsSet() {
		return true
	}

	return false
}

// SetMatchOnSerialNumberFlag gets a reference to the given NullableBool and assigns it to the MatchOnSerialNumberFlag field.
func (o *ManagedDevicesIntegration) SetMatchOnSerialNumberFlag(v bool) {
	o.MatchOnSerialNumberFlag.Set(&v)
}
// SetMatchOnSerialNumberFlagNil sets the value for MatchOnSerialNumberFlag to be an explicit nil
func (o *ManagedDevicesIntegration) SetMatchOnSerialNumberFlagNil() {
	o.MatchOnSerialNumberFlag.Set(nil)
}

// UnsetMatchOnSerialNumberFlag ensures that no value is present for MatchOnSerialNumberFlag, not even an explicit nil
func (o *ManagedDevicesIntegration) UnsetMatchOnSerialNumberFlag() {
	o.MatchOnSerialNumberFlag.Unset()
}

// GetDisableNewCrossReferencesFlag returns the DisableNewCrossReferencesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedDevicesIntegration) GetDisableNewCrossReferencesFlag() bool {
	if o == nil || IsNil(o.DisableNewCrossReferencesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DisableNewCrossReferencesFlag.Get()
}

// GetDisableNewCrossReferencesFlagOk returns a tuple with the DisableNewCrossReferencesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDevicesIntegration) GetDisableNewCrossReferencesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisableNewCrossReferencesFlag.Get(), o.DisableNewCrossReferencesFlag.IsSet()
}

// HasDisableNewCrossReferencesFlag returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasDisableNewCrossReferencesFlag() bool {
	if o != nil && o.DisableNewCrossReferencesFlag.IsSet() {
		return true
	}

	return false
}

// SetDisableNewCrossReferencesFlag gets a reference to the given NullableBool and assigns it to the DisableNewCrossReferencesFlag field.
func (o *ManagedDevicesIntegration) SetDisableNewCrossReferencesFlag(v bool) {
	o.DisableNewCrossReferencesFlag.Set(&v)
}
// SetDisableNewCrossReferencesFlagNil sets the value for DisableNewCrossReferencesFlag to be an explicit nil
func (o *ManagedDevicesIntegration) SetDisableNewCrossReferencesFlagNil() {
	o.DisableNewCrossReferencesFlag.Set(nil)
}

// UnsetDisableNewCrossReferencesFlag ensures that no value is present for DisableNewCrossReferencesFlag, not even an explicit nil
func (o *ManagedDevicesIntegration) UnsetDisableNewCrossReferencesFlag() {
	o.DisableNewCrossReferencesFlag.Unset()
}

// GetConfigBillCustomerFlag returns the ConfigBillCustomerFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedDevicesIntegration) GetConfigBillCustomerFlag() bool {
	if o == nil || IsNil(o.ConfigBillCustomerFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.ConfigBillCustomerFlag.Get()
}

// GetConfigBillCustomerFlagOk returns a tuple with the ConfigBillCustomerFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDevicesIntegration) GetConfigBillCustomerFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigBillCustomerFlag.Get(), o.ConfigBillCustomerFlag.IsSet()
}

// HasConfigBillCustomerFlag returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasConfigBillCustomerFlag() bool {
	if o != nil && o.ConfigBillCustomerFlag.IsSet() {
		return true
	}

	return false
}

// SetConfigBillCustomerFlag gets a reference to the given NullableBool and assigns it to the ConfigBillCustomerFlag field.
func (o *ManagedDevicesIntegration) SetConfigBillCustomerFlag(v bool) {
	o.ConfigBillCustomerFlag.Set(&v)
}
// SetConfigBillCustomerFlagNil sets the value for ConfigBillCustomerFlag to be an explicit nil
func (o *ManagedDevicesIntegration) SetConfigBillCustomerFlagNil() {
	o.ConfigBillCustomerFlag.Set(nil)
}

// UnsetConfigBillCustomerFlag ensures that no value is present for ConfigBillCustomerFlag, not even an explicit nil
func (o *ManagedDevicesIntegration) UnsetConfigBillCustomerFlag() {
	o.ConfigBillCustomerFlag.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ManagedDevicesIntegration) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegration) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ManagedDevicesIntegration) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ManagedDevicesIntegration) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ManagedDevicesIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedDevicesIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	toSerialize["solution"] = o.Solution
	if !IsNil(o.PortalUrl) {
		toSerialize["portalUrl"] = o.PortalUrl
	}
	toSerialize["loginBy"] = o.LoginBy.Get()
	if !IsNil(o.GlobalLoginUsername) {
		toSerialize["globalLoginUsername"] = o.GlobalLoginUsername
	}
	if !IsNil(o.GlobalLoginPassword) {
		toSerialize["globalLoginPassword"] = o.GlobalLoginPassword
	}
	toSerialize["defaultBillingLevel"] = o.DefaultBillingLevel.Get()
	if !IsNil(o.ManagementItSetupType) {
		toSerialize["managementItSetupType"] = o.ManagementItSetupType
	}
	if !IsNil(o.DefaultLocation) {
		toSerialize["defaultLocation"] = o.DefaultLocation
	}
	if !IsNil(o.DefaultDepartment) {
		toSerialize["defaultDepartment"] = o.DefaultDepartment
	}
	if !IsNil(o.IntegratorLogin) {
		toSerialize["integratorLogin"] = o.IntegratorLogin
	}
	if o.MatchOnSerialNumberFlag.IsSet() {
		toSerialize["matchOnSerialNumberFlag"] = o.MatchOnSerialNumberFlag.Get()
	}
	if o.DisableNewCrossReferencesFlag.IsSet() {
		toSerialize["disableNewCrossReferencesFlag"] = o.DisableNewCrossReferencesFlag.Get()
	}
	if o.ConfigBillCustomerFlag.IsSet() {
		toSerialize["configBillCustomerFlag"] = o.ConfigBillCustomerFlag.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ManagedDevicesIntegration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"solution",
		"loginBy",
		"defaultBillingLevel",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagedDevicesIntegration := _ManagedDevicesIntegration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagedDevicesIntegration)

	if err != nil {
		return err
	}

	*o = ManagedDevicesIntegration(varManagedDevicesIntegration)

	return err
}

type NullableManagedDevicesIntegration struct {
	value *ManagedDevicesIntegration
	isSet bool
}

func (v NullableManagedDevicesIntegration) Get() *ManagedDevicesIntegration {
	return v.value
}

func (v *NullableManagedDevicesIntegration) Set(val *ManagedDevicesIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedDevicesIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedDevicesIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedDevicesIntegration(val *ManagedDevicesIntegration) *NullableManagedDevicesIntegration {
	return &NullableManagedDevicesIntegration{value: val, isSet: true}
}

func (v NullableManagedDevicesIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedDevicesIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


