/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagedDevicesIntegrationLogin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedDevicesIntegrationLogin{}

// ManagedDevicesIntegrationLogin struct for ManagedDevicesIntegrationLogin
type ManagedDevicesIntegrationLogin struct {
	Id *int32 `json:"id,omitempty"`
	ManagedDevicesIntegration *ManagedDevicesIntegrationReference `json:"managedDevicesIntegration,omitempty"`
	//  Max length: 50;
	Username string `json:"username"`
	//  Max length: 50;
	Password *string `json:"password,omitempty"`
	Member MemberReference `json:"member"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ManagedDevicesIntegrationLogin ManagedDevicesIntegrationLogin

// NewManagedDevicesIntegrationLogin instantiates a new ManagedDevicesIntegrationLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedDevicesIntegrationLogin(username string, member MemberReference) *ManagedDevicesIntegrationLogin {
	this := ManagedDevicesIntegrationLogin{}
	this.Username = username
	this.Member = member
	return &this
}

// NewManagedDevicesIntegrationLoginWithDefaults instantiates a new ManagedDevicesIntegrationLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedDevicesIntegrationLoginWithDefaults() *ManagedDevicesIntegrationLogin {
	this := ManagedDevicesIntegrationLogin{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManagedDevicesIntegrationLogin) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegrationLogin) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManagedDevicesIntegrationLogin) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ManagedDevicesIntegrationLogin) SetId(v int32) {
	o.Id = &v
}

// GetManagedDevicesIntegration returns the ManagedDevicesIntegration field value if set, zero value otherwise.
func (o *ManagedDevicesIntegrationLogin) GetManagedDevicesIntegration() ManagedDevicesIntegrationReference {
	if o == nil || IsNil(o.ManagedDevicesIntegration) {
		var ret ManagedDevicesIntegrationReference
		return ret
	}
	return *o.ManagedDevicesIntegration
}

// GetManagedDevicesIntegrationOk returns a tuple with the ManagedDevicesIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegrationLogin) GetManagedDevicesIntegrationOk() (*ManagedDevicesIntegrationReference, bool) {
	if o == nil || IsNil(o.ManagedDevicesIntegration) {
		return nil, false
	}
	return o.ManagedDevicesIntegration, true
}

// HasManagedDevicesIntegration returns a boolean if a field has been set.
func (o *ManagedDevicesIntegrationLogin) HasManagedDevicesIntegration() bool {
	if o != nil && !IsNil(o.ManagedDevicesIntegration) {
		return true
	}

	return false
}

// SetManagedDevicesIntegration gets a reference to the given ManagedDevicesIntegrationReference and assigns it to the ManagedDevicesIntegration field.
func (o *ManagedDevicesIntegrationLogin) SetManagedDevicesIntegration(v ManagedDevicesIntegrationReference) {
	o.ManagedDevicesIntegration = &v
}

// GetUsername returns the Username field value
func (o *ManagedDevicesIntegrationLogin) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegrationLogin) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ManagedDevicesIntegrationLogin) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ManagedDevicesIntegrationLogin) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegrationLogin) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ManagedDevicesIntegrationLogin) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ManagedDevicesIntegrationLogin) SetPassword(v string) {
	o.Password = &v
}

// GetMember returns the Member field value
func (o *ManagedDevicesIntegrationLogin) GetMember() MemberReference {
	if o == nil {
		var ret MemberReference
		return ret
	}

	return o.Member
}

// GetMemberOk returns a tuple with the Member field value
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegrationLogin) GetMemberOk() (*MemberReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Member, true
}

// SetMember sets field value
func (o *ManagedDevicesIntegrationLogin) SetMember(v MemberReference) {
	o.Member = v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ManagedDevicesIntegrationLogin) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDevicesIntegrationLogin) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ManagedDevicesIntegrationLogin) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ManagedDevicesIntegrationLogin) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ManagedDevicesIntegrationLogin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedDevicesIntegrationLogin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ManagedDevicesIntegration) {
		toSerialize["managedDevicesIntegration"] = o.ManagedDevicesIntegration
	}
	toSerialize["username"] = o.Username
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["member"] = o.Member
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ManagedDevicesIntegrationLogin) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"username",
		"member",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagedDevicesIntegrationLogin := _ManagedDevicesIntegrationLogin{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagedDevicesIntegrationLogin)

	if err != nil {
		return err
	}

	*o = ManagedDevicesIntegrationLogin(varManagedDevicesIntegrationLogin)

	return err
}

type NullableManagedDevicesIntegrationLogin struct {
	value *ManagedDevicesIntegrationLogin
	isSet bool
}

func (v NullableManagedDevicesIntegrationLogin) Get() *ManagedDevicesIntegrationLogin {
	return v.value
}

func (v *NullableManagedDevicesIntegrationLogin) Set(val *ManagedDevicesIntegrationLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedDevicesIntegrationLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedDevicesIntegrationLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedDevicesIntegrationLogin(val *ManagedDevicesIntegrationLogin) *NullableManagedDevicesIntegrationLogin {
	return &NullableManagedDevicesIntegrationLogin{value: val, isSet: true}
}

func (v NullableManagedDevicesIntegrationLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedDevicesIntegrationLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


