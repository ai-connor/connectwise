/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementNetworkSecurity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementNetworkSecurity{}

// ManagementNetworkSecurity struct for ManagementNetworkSecurity
type ManagementNetworkSecurity struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 30;
	Name string `json:"name"`
	//  Max length: 50;
	Username *string `json:"username,omitempty"`
	//  Max length: 50;
	Password *string `json:"password,omitempty"`
	//  Max length: 100;
	Site string `json:"site"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ManagementNetworkSecurity ManagementNetworkSecurity

// NewManagementNetworkSecurity instantiates a new ManagementNetworkSecurity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementNetworkSecurity(name string, site string) *ManagementNetworkSecurity {
	this := ManagementNetworkSecurity{}
	this.Name = name
	this.Site = site
	return &this
}

// NewManagementNetworkSecurityWithDefaults instantiates a new ManagementNetworkSecurity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementNetworkSecurityWithDefaults() *ManagementNetworkSecurity {
	this := ManagementNetworkSecurity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManagementNetworkSecurity) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementNetworkSecurity) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManagementNetworkSecurity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ManagementNetworkSecurity) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ManagementNetworkSecurity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ManagementNetworkSecurity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ManagementNetworkSecurity) SetName(v string) {
	o.Name = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ManagementNetworkSecurity) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementNetworkSecurity) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ManagementNetworkSecurity) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ManagementNetworkSecurity) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ManagementNetworkSecurity) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementNetworkSecurity) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ManagementNetworkSecurity) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ManagementNetworkSecurity) SetPassword(v string) {
	o.Password = &v
}

// GetSite returns the Site field value
func (o *ManagementNetworkSecurity) GetSite() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *ManagementNetworkSecurity) GetSiteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *ManagementNetworkSecurity) SetSite(v string) {
	o.Site = v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ManagementNetworkSecurity) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementNetworkSecurity) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ManagementNetworkSecurity) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ManagementNetworkSecurity) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ManagementNetworkSecurity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementNetworkSecurity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["site"] = o.Site
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ManagementNetworkSecurity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"site",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementNetworkSecurity := _ManagementNetworkSecurity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementNetworkSecurity)

	if err != nil {
		return err
	}

	*o = ManagementNetworkSecurity(varManagementNetworkSecurity)

	return err
}

type NullableManagementNetworkSecurity struct {
	value *ManagementNetworkSecurity
	isSet bool
}

func (v NullableManagementNetworkSecurity) Get() *ManagementNetworkSecurity {
	return v.value
}

func (v *NullableManagementNetworkSecurity) Set(val *ManagementNetworkSecurity) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementNetworkSecurity) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementNetworkSecurity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementNetworkSecurity(val *ManagementNetworkSecurity) *NullableManagementNetworkSecurity {
	return &NullableManagementNetworkSecurity{value: val, isSet: true}
}

func (v NullableManagementNetworkSecurity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementNetworkSecurity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


