/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the MarketingContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingContact{}

// MarketingContact struct for MarketingContact
type MarketingContact struct {
	Id *int32 `json:"id,omitempty"`
	GroupId NullableInt32 `json:"groupId,omitempty"`
	//  Max length: 50;
	Note *string `json:"note,omitempty"`
	UnsubscribeFlag NullableBool `json:"unsubscribeFlag,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewMarketingContact instantiates a new MarketingContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingContact() *MarketingContact {
	this := MarketingContact{}
	return &this
}

// NewMarketingContactWithDefaults instantiates a new MarketingContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingContactWithDefaults() *MarketingContact {
	this := MarketingContact{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarketingContact) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingContact) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarketingContact) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MarketingContact) SetId(v int32) {
	o.Id = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingContact) GetGroupId() int32 {
	if o == nil || IsNil(o.GroupId.Get()) {
		var ret int32
		return ret
	}
	return *o.GroupId.Get()
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingContact) GetGroupIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupId.Get(), o.GroupId.IsSet()
}

// HasGroupId returns a boolean if a field has been set.
func (o *MarketingContact) HasGroupId() bool {
	if o != nil && o.GroupId.IsSet() {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given NullableInt32 and assigns it to the GroupId field.
func (o *MarketingContact) SetGroupId(v int32) {
	o.GroupId.Set(&v)
}
// SetGroupIdNil sets the value for GroupId to be an explicit nil
func (o *MarketingContact) SetGroupIdNil() {
	o.GroupId.Set(nil)
}

// UnsetGroupId ensures that no value is present for GroupId, not even an explicit nil
func (o *MarketingContact) UnsetGroupId() {
	o.GroupId.Unset()
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *MarketingContact) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingContact) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *MarketingContact) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *MarketingContact) SetNote(v string) {
	o.Note = &v
}

// GetUnsubscribeFlag returns the UnsubscribeFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketingContact) GetUnsubscribeFlag() bool {
	if o == nil || IsNil(o.UnsubscribeFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UnsubscribeFlag.Get()
}

// GetUnsubscribeFlagOk returns a tuple with the UnsubscribeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketingContact) GetUnsubscribeFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnsubscribeFlag.Get(), o.UnsubscribeFlag.IsSet()
}

// HasUnsubscribeFlag returns a boolean if a field has been set.
func (o *MarketingContact) HasUnsubscribeFlag() bool {
	if o != nil && o.UnsubscribeFlag.IsSet() {
		return true
	}

	return false
}

// SetUnsubscribeFlag gets a reference to the given NullableBool and assigns it to the UnsubscribeFlag field.
func (o *MarketingContact) SetUnsubscribeFlag(v bool) {
	o.UnsubscribeFlag.Set(&v)
}
// SetUnsubscribeFlagNil sets the value for UnsubscribeFlag to be an explicit nil
func (o *MarketingContact) SetUnsubscribeFlagNil() {
	o.UnsubscribeFlag.Set(nil)
}

// UnsetUnsubscribeFlag ensures that no value is present for UnsubscribeFlag, not even an explicit nil
func (o *MarketingContact) UnsetUnsubscribeFlag() {
	o.UnsubscribeFlag.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *MarketingContact) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingContact) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *MarketingContact) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *MarketingContact) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o MarketingContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.GroupId.IsSet() {
		toSerialize["groupId"] = o.GroupId.Get()
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if o.UnsubscribeFlag.IsSet() {
		toSerialize["unsubscribeFlag"] = o.UnsubscribeFlag.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableMarketingContact struct {
	value *MarketingContact
	isSet bool
}

func (v NullableMarketingContact) Get() *MarketingContact {
	return v.value
}

func (v *NullableMarketingContact) Set(val *MarketingContact) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingContact) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingContact(val *MarketingContact) *NullableMarketingContact {
	return &NullableMarketingContact{value: val, isSet: true}
}

func (v NullableMarketingContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


