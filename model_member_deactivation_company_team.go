/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the MemberDeactivationCompanyTeam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberDeactivationCompanyTeam{}

// MemberDeactivationCompanyTeam struct for MemberDeactivationCompanyTeam
type MemberDeactivationCompanyTeam struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ReAssignToContact *ContactReference `json:"reAssignToContact,omitempty"`
	Count *int32 `json:"count,omitempty"`
	ReAssignToMember *MemberReference `json:"reAssignToMember,omitempty"`
}

// NewMemberDeactivationCompanyTeam instantiates a new MemberDeactivationCompanyTeam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberDeactivationCompanyTeam() *MemberDeactivationCompanyTeam {
	this := MemberDeactivationCompanyTeam{}
	return &this
}

// NewMemberDeactivationCompanyTeamWithDefaults instantiates a new MemberDeactivationCompanyTeam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberDeactivationCompanyTeamWithDefaults() *MemberDeactivationCompanyTeam {
	this := MemberDeactivationCompanyTeam{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MemberDeactivationCompanyTeam) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDeactivationCompanyTeam) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MemberDeactivationCompanyTeam) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MemberDeactivationCompanyTeam) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MemberDeactivationCompanyTeam) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDeactivationCompanyTeam) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MemberDeactivationCompanyTeam) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MemberDeactivationCompanyTeam) SetName(v string) {
	o.Name = &v
}

// GetReAssignToContact returns the ReAssignToContact field value if set, zero value otherwise.
func (o *MemberDeactivationCompanyTeam) GetReAssignToContact() ContactReference {
	if o == nil || IsNil(o.ReAssignToContact) {
		var ret ContactReference
		return ret
	}
	return *o.ReAssignToContact
}

// GetReAssignToContactOk returns a tuple with the ReAssignToContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDeactivationCompanyTeam) GetReAssignToContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.ReAssignToContact) {
		return nil, false
	}
	return o.ReAssignToContact, true
}

// HasReAssignToContact returns a boolean if a field has been set.
func (o *MemberDeactivationCompanyTeam) HasReAssignToContact() bool {
	if o != nil && !IsNil(o.ReAssignToContact) {
		return true
	}

	return false
}

// SetReAssignToContact gets a reference to the given ContactReference and assigns it to the ReAssignToContact field.
func (o *MemberDeactivationCompanyTeam) SetReAssignToContact(v ContactReference) {
	o.ReAssignToContact = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *MemberDeactivationCompanyTeam) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDeactivationCompanyTeam) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *MemberDeactivationCompanyTeam) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *MemberDeactivationCompanyTeam) SetCount(v int32) {
	o.Count = &v
}

// GetReAssignToMember returns the ReAssignToMember field value if set, zero value otherwise.
func (o *MemberDeactivationCompanyTeam) GetReAssignToMember() MemberReference {
	if o == nil || IsNil(o.ReAssignToMember) {
		var ret MemberReference
		return ret
	}
	return *o.ReAssignToMember
}

// GetReAssignToMemberOk returns a tuple with the ReAssignToMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDeactivationCompanyTeam) GetReAssignToMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ReAssignToMember) {
		return nil, false
	}
	return o.ReAssignToMember, true
}

// HasReAssignToMember returns a boolean if a field has been set.
func (o *MemberDeactivationCompanyTeam) HasReAssignToMember() bool {
	if o != nil && !IsNil(o.ReAssignToMember) {
		return true
	}

	return false
}

// SetReAssignToMember gets a reference to the given MemberReference and assigns it to the ReAssignToMember field.
func (o *MemberDeactivationCompanyTeam) SetReAssignToMember(v MemberReference) {
	o.ReAssignToMember = &v
}

func (o MemberDeactivationCompanyTeam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberDeactivationCompanyTeam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReAssignToContact) {
		toSerialize["reAssignToContact"] = o.ReAssignToContact
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.ReAssignToMember) {
		toSerialize["reAssignToMember"] = o.ReAssignToMember
	}
	return toSerialize, nil
}

type NullableMemberDeactivationCompanyTeam struct {
	value *MemberDeactivationCompanyTeam
	isSet bool
}

func (v NullableMemberDeactivationCompanyTeam) Get() *MemberDeactivationCompanyTeam {
	return v.value
}

func (v *NullableMemberDeactivationCompanyTeam) Set(val *MemberDeactivationCompanyTeam) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberDeactivationCompanyTeam) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberDeactivationCompanyTeam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberDeactivationCompanyTeam(val *MemberDeactivationCompanyTeam) *NullableMemberDeactivationCompanyTeam {
	return &NullableMemberDeactivationCompanyTeam{value: val, isSet: true}
}

func (v NullableMemberDeactivationCompanyTeam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberDeactivationCompanyTeam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


