/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the MemberForCalSync type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberForCalSync{}

// MemberForCalSync struct for MemberForCalSync
type MemberForCalSync struct {
	Id *int32 `json:"id,omitempty"`
	MemberId *string `json:"memberId,omitempty"`
	Office365Id *string `json:"office365Id,omitempty"`
	MapiName *string `json:"mapiName,omitempty"`
	CalendarSyncIntegrationFlag NullableBool `json:"calendarSyncIntegrationFlag,omitempty"`
}

// NewMemberForCalSync instantiates a new MemberForCalSync object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberForCalSync() *MemberForCalSync {
	this := MemberForCalSync{}
	return &this
}

// NewMemberForCalSyncWithDefaults instantiates a new MemberForCalSync object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberForCalSyncWithDefaults() *MemberForCalSync {
	this := MemberForCalSync{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MemberForCalSync) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberForCalSync) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MemberForCalSync) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MemberForCalSync) SetId(v int32) {
	o.Id = &v
}

// GetMemberId returns the MemberId field value if set, zero value otherwise.
func (o *MemberForCalSync) GetMemberId() string {
	if o == nil || IsNil(o.MemberId) {
		var ret string
		return ret
	}
	return *o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberForCalSync) GetMemberIdOk() (*string, bool) {
	if o == nil || IsNil(o.MemberId) {
		return nil, false
	}
	return o.MemberId, true
}

// HasMemberId returns a boolean if a field has been set.
func (o *MemberForCalSync) HasMemberId() bool {
	if o != nil && !IsNil(o.MemberId) {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given string and assigns it to the MemberId field.
func (o *MemberForCalSync) SetMemberId(v string) {
	o.MemberId = &v
}

// GetOffice365Id returns the Office365Id field value if set, zero value otherwise.
func (o *MemberForCalSync) GetOffice365Id() string {
	if o == nil || IsNil(o.Office365Id) {
		var ret string
		return ret
	}
	return *o.Office365Id
}

// GetOffice365IdOk returns a tuple with the Office365Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberForCalSync) GetOffice365IdOk() (*string, bool) {
	if o == nil || IsNil(o.Office365Id) {
		return nil, false
	}
	return o.Office365Id, true
}

// HasOffice365Id returns a boolean if a field has been set.
func (o *MemberForCalSync) HasOffice365Id() bool {
	if o != nil && !IsNil(o.Office365Id) {
		return true
	}

	return false
}

// SetOffice365Id gets a reference to the given string and assigns it to the Office365Id field.
func (o *MemberForCalSync) SetOffice365Id(v string) {
	o.Office365Id = &v
}

// GetMapiName returns the MapiName field value if set, zero value otherwise.
func (o *MemberForCalSync) GetMapiName() string {
	if o == nil || IsNil(o.MapiName) {
		var ret string
		return ret
	}
	return *o.MapiName
}

// GetMapiNameOk returns a tuple with the MapiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberForCalSync) GetMapiNameOk() (*string, bool) {
	if o == nil || IsNil(o.MapiName) {
		return nil, false
	}
	return o.MapiName, true
}

// HasMapiName returns a boolean if a field has been set.
func (o *MemberForCalSync) HasMapiName() bool {
	if o != nil && !IsNil(o.MapiName) {
		return true
	}

	return false
}

// SetMapiName gets a reference to the given string and assigns it to the MapiName field.
func (o *MemberForCalSync) SetMapiName(v string) {
	o.MapiName = &v
}

// GetCalendarSyncIntegrationFlag returns the CalendarSyncIntegrationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberForCalSync) GetCalendarSyncIntegrationFlag() bool {
	if o == nil || IsNil(o.CalendarSyncIntegrationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.CalendarSyncIntegrationFlag.Get()
}

// GetCalendarSyncIntegrationFlagOk returns a tuple with the CalendarSyncIntegrationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberForCalSync) GetCalendarSyncIntegrationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CalendarSyncIntegrationFlag.Get(), o.CalendarSyncIntegrationFlag.IsSet()
}

// HasCalendarSyncIntegrationFlag returns a boolean if a field has been set.
func (o *MemberForCalSync) HasCalendarSyncIntegrationFlag() bool {
	if o != nil && o.CalendarSyncIntegrationFlag.IsSet() {
		return true
	}

	return false
}

// SetCalendarSyncIntegrationFlag gets a reference to the given NullableBool and assigns it to the CalendarSyncIntegrationFlag field.
func (o *MemberForCalSync) SetCalendarSyncIntegrationFlag(v bool) {
	o.CalendarSyncIntegrationFlag.Set(&v)
}
// SetCalendarSyncIntegrationFlagNil sets the value for CalendarSyncIntegrationFlag to be an explicit nil
func (o *MemberForCalSync) SetCalendarSyncIntegrationFlagNil() {
	o.CalendarSyncIntegrationFlag.Set(nil)
}

// UnsetCalendarSyncIntegrationFlag ensures that no value is present for CalendarSyncIntegrationFlag, not even an explicit nil
func (o *MemberForCalSync) UnsetCalendarSyncIntegrationFlag() {
	o.CalendarSyncIntegrationFlag.Unset()
}

func (o MemberForCalSync) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberForCalSync) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MemberId) {
		toSerialize["memberId"] = o.MemberId
	}
	if !IsNil(o.Office365Id) {
		toSerialize["office365Id"] = o.Office365Id
	}
	if !IsNil(o.MapiName) {
		toSerialize["mapiName"] = o.MapiName
	}
	if o.CalendarSyncIntegrationFlag.IsSet() {
		toSerialize["calendarSyncIntegrationFlag"] = o.CalendarSyncIntegrationFlag.Get()
	}
	return toSerialize, nil
}

type NullableMemberForCalSync struct {
	value *MemberForCalSync
	isSet bool
}

func (v NullableMemberForCalSync) Get() *MemberForCalSync {
	return v.value
}

func (v *NullableMemberForCalSync) Set(val *MemberForCalSync) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberForCalSync) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberForCalSync) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberForCalSync(val *MemberForCalSync) *NullableMemberForCalSync {
	return &NullableMemberForCalSync{value: val, isSet: true}
}

func (v NullableMemberForCalSync) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberForCalSync) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


