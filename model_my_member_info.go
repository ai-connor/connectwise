/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the MyMemberInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MyMemberInfo{}

// MyMemberInfo struct for MyMemberInfo
type MyMemberInfo struct {
	Id *int32 `json:"id,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	MiddleInitial *string `json:"middleInitial,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	FullName *string `json:"fullName,omitempty"`
	DefaultEmail *string `json:"defaultEmail,omitempty"`
	Photo *DocumentReference `json:"photo,omitempty"`
	// F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
	LicenseClass NullableString `json:"licenseClass,omitempty"`
	InactiveFlag NullableBool `json:"inactiveFlag,omitempty"`
	TimeZone *TimeZoneSetupReference `json:"timeZone,omitempty"`
	UseBrowserLanguageFlag NullableBool `json:"useBrowserLanguageFlag,omitempty"`
	DefaultLocation *SystemLocationReference `json:"defaultLocation,omitempty"`
	DefaultDepartment *SystemDepartmentReference `json:"defaultDepartment,omitempty"`
	WorkRole *WorkRoleReference `json:"workRole,omitempty"`
	WorkType *WorkTypeReference `json:"workType,omitempty"`
	DailyCapacity NullableFloat64 `json:"dailyCapacity,omitempty"`
	RequireExpenseEntryFlag NullableBool `json:"requireExpenseEntryFlag,omitempty"`
	RequireTimeSheetEntryFlag NullableBool `json:"requireTimeSheetEntryFlag,omitempty"`
	RequireStartAndEndTimeOnTimeEntryFlag NullableBool `json:"requireStartAndEndTimeOnTimeEntryFlag,omitempty"`
	EnterTimeAgainstCompanyFlag NullableBool `json:"enterTimeAgainstCompanyFlag,omitempty"`
	AllowExpensesEnteredAgainstCompaniesFlag NullableBool `json:"allowExpensesEnteredAgainstCompaniesFlag,omitempty"`
	ServiceDefaultBoard *BoardReference `json:"serviceDefaultBoard,omitempty"`
	ServiceDefaultLocation *SystemLocationReference `json:"serviceDefaultLocation,omitempty"`
	ServiceDefaultDepartment *SystemDepartmentReference `json:"serviceDefaultDepartment,omitempty"`
	RestrictServiceDefaultLocationFlag NullableBool `json:"restrictServiceDefaultLocationFlag,omitempty"`
	RestrictServiceDefaultDepartmentFlag NullableBool `json:"restrictServiceDefaultDepartmentFlag,omitempty"`
	ExcludedServiceBoardIds []int32 `json:"excludedServiceBoardIds,omitempty"`
	ProjectDefaultLocation *SystemLocationReference `json:"projectDefaultLocation,omitempty"`
	ProjectDefaultDepartment *SystemDepartmentReference `json:"projectDefaultDepartment,omitempty"`
	ProjectDefaultBoard *ProjectBoardReference `json:"projectDefaultBoard,omitempty"`
	RestrictProjectDefaultLocationFlag NullableBool `json:"restrictProjectDefaultLocationFlag,omitempty"`
	RestrictProjectDefaultDepartmentFlag NullableBool `json:"restrictProjectDefaultDepartmentFlag,omitempty"`
	ExcludedProjectBoardIds []int32 `json:"excludedProjectBoardIds,omitempty"`
	ScheduleDefaultLocation *SystemLocationReference `json:"scheduleDefaultLocation,omitempty"`
	ScheduleDefaultDepartment *SystemDepartmentReference `json:"scheduleDefaultDepartment,omitempty"`
	ScheduleCapacity NullableFloat64 `json:"scheduleCapacity,omitempty"`
	ServiceLocation *ServiceLocationReference `json:"serviceLocation,omitempty"`
	SalesDefaultLocation *SystemLocationReference `json:"salesDefaultLocation,omitempty"`
	Warehouse *WarehouseReference `json:"warehouse,omitempty"`
	WarehouseBin *WarehouseBinReference `json:"warehouseBin,omitempty"`
	RestrictDefaultWarehouseFlag NullableBool `json:"restrictDefaultWarehouseFlag,omitempty"`
	RestrictDefaultWarehouseBinFlag NullableBool `json:"restrictDefaultWarehouseBinFlag,omitempty"`
	SsoSessionFlag NullableBool `json:"ssoSessionFlag,omitempty"`
	SsoClientId *string `json:"ssoClientId,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewMyMemberInfo instantiates a new MyMemberInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMyMemberInfo() *MyMemberInfo {
	this := MyMemberInfo{}
	return &this
}

// NewMyMemberInfoWithDefaults instantiates a new MyMemberInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMyMemberInfoWithDefaults() *MyMemberInfo {
	this := MyMemberInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MyMemberInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MyMemberInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MyMemberInfo) SetId(v int32) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MyMemberInfo) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MyMemberInfo) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MyMemberInfo) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *MyMemberInfo) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *MyMemberInfo) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *MyMemberInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleInitial returns the MiddleInitial field value if set, zero value otherwise.
func (o *MyMemberInfo) GetMiddleInitial() string {
	if o == nil || IsNil(o.MiddleInitial) {
		var ret string
		return ret
	}
	return *o.MiddleInitial
}

// GetMiddleInitialOk returns a tuple with the MiddleInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetMiddleInitialOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleInitial) {
		return nil, false
	}
	return o.MiddleInitial, true
}

// HasMiddleInitial returns a boolean if a field has been set.
func (o *MyMemberInfo) HasMiddleInitial() bool {
	if o != nil && !IsNil(o.MiddleInitial) {
		return true
	}

	return false
}

// SetMiddleInitial gets a reference to the given string and assigns it to the MiddleInitial field.
func (o *MyMemberInfo) SetMiddleInitial(v string) {
	o.MiddleInitial = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *MyMemberInfo) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *MyMemberInfo) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *MyMemberInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *MyMemberInfo) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *MyMemberInfo) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *MyMemberInfo) SetFullName(v string) {
	o.FullName = &v
}

// GetDefaultEmail returns the DefaultEmail field value if set, zero value otherwise.
func (o *MyMemberInfo) GetDefaultEmail() string {
	if o == nil || IsNil(o.DefaultEmail) {
		var ret string
		return ret
	}
	return *o.DefaultEmail
}

// GetDefaultEmailOk returns a tuple with the DefaultEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetDefaultEmailOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultEmail) {
		return nil, false
	}
	return o.DefaultEmail, true
}

// HasDefaultEmail returns a boolean if a field has been set.
func (o *MyMemberInfo) HasDefaultEmail() bool {
	if o != nil && !IsNil(o.DefaultEmail) {
		return true
	}

	return false
}

// SetDefaultEmail gets a reference to the given string and assigns it to the DefaultEmail field.
func (o *MyMemberInfo) SetDefaultEmail(v string) {
	o.DefaultEmail = &v
}

// GetPhoto returns the Photo field value if set, zero value otherwise.
func (o *MyMemberInfo) GetPhoto() DocumentReference {
	if o == nil || IsNil(o.Photo) {
		var ret DocumentReference
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetPhotoOk() (*DocumentReference, bool) {
	if o == nil || IsNil(o.Photo) {
		return nil, false
	}
	return o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *MyMemberInfo) HasPhoto() bool {
	if o != nil && !IsNil(o.Photo) {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given DocumentReference and assigns it to the Photo field.
func (o *MyMemberInfo) SetPhoto(v DocumentReference) {
	o.Photo = &v
}

// GetLicenseClass returns the LicenseClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetLicenseClass() string {
	if o == nil || IsNil(o.LicenseClass.Get()) {
		var ret string
		return ret
	}
	return *o.LicenseClass.Get()
}

// GetLicenseClassOk returns a tuple with the LicenseClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetLicenseClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseClass.Get(), o.LicenseClass.IsSet()
}

// HasLicenseClass returns a boolean if a field has been set.
func (o *MyMemberInfo) HasLicenseClass() bool {
	if o != nil && o.LicenseClass.IsSet() {
		return true
	}

	return false
}

// SetLicenseClass gets a reference to the given NullableString and assigns it to the LicenseClass field.
func (o *MyMemberInfo) SetLicenseClass(v string) {
	o.LicenseClass.Set(&v)
}
// SetLicenseClassNil sets the value for LicenseClass to be an explicit nil
func (o *MyMemberInfo) SetLicenseClassNil() {
	o.LicenseClass.Set(nil)
}

// UnsetLicenseClass ensures that no value is present for LicenseClass, not even an explicit nil
func (o *MyMemberInfo) UnsetLicenseClass() {
	o.LicenseClass.Unset()
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *MyMemberInfo) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}
// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *MyMemberInfo) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MyMemberInfo) GetTimeZone() TimeZoneSetupReference {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimeZoneSetupReference
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetTimeZoneOk() (*TimeZoneSetupReference, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MyMemberInfo) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZoneSetupReference and assigns it to the TimeZone field.
func (o *MyMemberInfo) SetTimeZone(v TimeZoneSetupReference) {
	o.TimeZone = &v
}

// GetUseBrowserLanguageFlag returns the UseBrowserLanguageFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetUseBrowserLanguageFlag() bool {
	if o == nil || IsNil(o.UseBrowserLanguageFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.UseBrowserLanguageFlag.Get()
}

// GetUseBrowserLanguageFlagOk returns a tuple with the UseBrowserLanguageFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetUseBrowserLanguageFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseBrowserLanguageFlag.Get(), o.UseBrowserLanguageFlag.IsSet()
}

// HasUseBrowserLanguageFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasUseBrowserLanguageFlag() bool {
	if o != nil && o.UseBrowserLanguageFlag.IsSet() {
		return true
	}

	return false
}

// SetUseBrowserLanguageFlag gets a reference to the given NullableBool and assigns it to the UseBrowserLanguageFlag field.
func (o *MyMemberInfo) SetUseBrowserLanguageFlag(v bool) {
	o.UseBrowserLanguageFlag.Set(&v)
}
// SetUseBrowserLanguageFlagNil sets the value for UseBrowserLanguageFlag to be an explicit nil
func (o *MyMemberInfo) SetUseBrowserLanguageFlagNil() {
	o.UseBrowserLanguageFlag.Set(nil)
}

// UnsetUseBrowserLanguageFlag ensures that no value is present for UseBrowserLanguageFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetUseBrowserLanguageFlag() {
	o.UseBrowserLanguageFlag.Unset()
}

// GetDefaultLocation returns the DefaultLocation field value if set, zero value otherwise.
func (o *MyMemberInfo) GetDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.DefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.DefaultLocation
}

// GetDefaultLocationOk returns a tuple with the DefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.DefaultLocation) {
		return nil, false
	}
	return o.DefaultLocation, true
}

// HasDefaultLocation returns a boolean if a field has been set.
func (o *MyMemberInfo) HasDefaultLocation() bool {
	if o != nil && !IsNil(o.DefaultLocation) {
		return true
	}

	return false
}

// SetDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the DefaultLocation field.
func (o *MyMemberInfo) SetDefaultLocation(v SystemLocationReference) {
	o.DefaultLocation = &v
}

// GetDefaultDepartment returns the DefaultDepartment field value if set, zero value otherwise.
func (o *MyMemberInfo) GetDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.DefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.DefaultDepartment
}

// GetDefaultDepartmentOk returns a tuple with the DefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.DefaultDepartment) {
		return nil, false
	}
	return o.DefaultDepartment, true
}

// HasDefaultDepartment returns a boolean if a field has been set.
func (o *MyMemberInfo) HasDefaultDepartment() bool {
	if o != nil && !IsNil(o.DefaultDepartment) {
		return true
	}

	return false
}

// SetDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the DefaultDepartment field.
func (o *MyMemberInfo) SetDefaultDepartment(v SystemDepartmentReference) {
	o.DefaultDepartment = &v
}

// GetWorkRole returns the WorkRole field value if set, zero value otherwise.
func (o *MyMemberInfo) GetWorkRole() WorkRoleReference {
	if o == nil || IsNil(o.WorkRole) {
		var ret WorkRoleReference
		return ret
	}
	return *o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil || IsNil(o.WorkRole) {
		return nil, false
	}
	return o.WorkRole, true
}

// HasWorkRole returns a boolean if a field has been set.
func (o *MyMemberInfo) HasWorkRole() bool {
	if o != nil && !IsNil(o.WorkRole) {
		return true
	}

	return false
}

// SetWorkRole gets a reference to the given WorkRoleReference and assigns it to the WorkRole field.
func (o *MyMemberInfo) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = &v
}

// GetWorkType returns the WorkType field value if set, zero value otherwise.
func (o *MyMemberInfo) GetWorkType() WorkTypeReference {
	if o == nil || IsNil(o.WorkType) {
		var ret WorkTypeReference
		return ret
	}
	return *o.WorkType
}

// GetWorkTypeOk returns a tuple with the WorkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetWorkTypeOk() (*WorkTypeReference, bool) {
	if o == nil || IsNil(o.WorkType) {
		return nil, false
	}
	return o.WorkType, true
}

// HasWorkType returns a boolean if a field has been set.
func (o *MyMemberInfo) HasWorkType() bool {
	if o != nil && !IsNil(o.WorkType) {
		return true
	}

	return false
}

// SetWorkType gets a reference to the given WorkTypeReference and assigns it to the WorkType field.
func (o *MyMemberInfo) SetWorkType(v WorkTypeReference) {
	o.WorkType = &v
}

// GetDailyCapacity returns the DailyCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetDailyCapacity() float64 {
	if o == nil || IsNil(o.DailyCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.DailyCapacity.Get()
}

// GetDailyCapacityOk returns a tuple with the DailyCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetDailyCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DailyCapacity.Get(), o.DailyCapacity.IsSet()
}

// HasDailyCapacity returns a boolean if a field has been set.
func (o *MyMemberInfo) HasDailyCapacity() bool {
	if o != nil && o.DailyCapacity.IsSet() {
		return true
	}

	return false
}

// SetDailyCapacity gets a reference to the given NullableFloat64 and assigns it to the DailyCapacity field.
func (o *MyMemberInfo) SetDailyCapacity(v float64) {
	o.DailyCapacity.Set(&v)
}
// SetDailyCapacityNil sets the value for DailyCapacity to be an explicit nil
func (o *MyMemberInfo) SetDailyCapacityNil() {
	o.DailyCapacity.Set(nil)
}

// UnsetDailyCapacity ensures that no value is present for DailyCapacity, not even an explicit nil
func (o *MyMemberInfo) UnsetDailyCapacity() {
	o.DailyCapacity.Unset()
}

// GetRequireExpenseEntryFlag returns the RequireExpenseEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRequireExpenseEntryFlag() bool {
	if o == nil || IsNil(o.RequireExpenseEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireExpenseEntryFlag.Get()
}

// GetRequireExpenseEntryFlagOk returns a tuple with the RequireExpenseEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRequireExpenseEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireExpenseEntryFlag.Get(), o.RequireExpenseEntryFlag.IsSet()
}

// HasRequireExpenseEntryFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRequireExpenseEntryFlag() bool {
	if o != nil && o.RequireExpenseEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireExpenseEntryFlag gets a reference to the given NullableBool and assigns it to the RequireExpenseEntryFlag field.
func (o *MyMemberInfo) SetRequireExpenseEntryFlag(v bool) {
	o.RequireExpenseEntryFlag.Set(&v)
}
// SetRequireExpenseEntryFlagNil sets the value for RequireExpenseEntryFlag to be an explicit nil
func (o *MyMemberInfo) SetRequireExpenseEntryFlagNil() {
	o.RequireExpenseEntryFlag.Set(nil)
}

// UnsetRequireExpenseEntryFlag ensures that no value is present for RequireExpenseEntryFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRequireExpenseEntryFlag() {
	o.RequireExpenseEntryFlag.Unset()
}

// GetRequireTimeSheetEntryFlag returns the RequireTimeSheetEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRequireTimeSheetEntryFlag() bool {
	if o == nil || IsNil(o.RequireTimeSheetEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireTimeSheetEntryFlag.Get()
}

// GetRequireTimeSheetEntryFlagOk returns a tuple with the RequireTimeSheetEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRequireTimeSheetEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireTimeSheetEntryFlag.Get(), o.RequireTimeSheetEntryFlag.IsSet()
}

// HasRequireTimeSheetEntryFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRequireTimeSheetEntryFlag() bool {
	if o != nil && o.RequireTimeSheetEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireTimeSheetEntryFlag gets a reference to the given NullableBool and assigns it to the RequireTimeSheetEntryFlag field.
func (o *MyMemberInfo) SetRequireTimeSheetEntryFlag(v bool) {
	o.RequireTimeSheetEntryFlag.Set(&v)
}
// SetRequireTimeSheetEntryFlagNil sets the value for RequireTimeSheetEntryFlag to be an explicit nil
func (o *MyMemberInfo) SetRequireTimeSheetEntryFlagNil() {
	o.RequireTimeSheetEntryFlag.Set(nil)
}

// UnsetRequireTimeSheetEntryFlag ensures that no value is present for RequireTimeSheetEntryFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRequireTimeSheetEntryFlag() {
	o.RequireTimeSheetEntryFlag.Unset()
}

// GetRequireStartAndEndTimeOnTimeEntryFlag returns the RequireStartAndEndTimeOnTimeEntryFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o == nil || IsNil(o.RequireStartAndEndTimeOnTimeEntryFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
}

// GetRequireStartAndEndTimeOnTimeEntryFlagOk returns a tuple with the RequireStartAndEndTimeOnTimeEntryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRequireStartAndEndTimeOnTimeEntryFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireStartAndEndTimeOnTimeEntryFlag.Get(), o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet()
}

// HasRequireStartAndEndTimeOnTimeEntryFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRequireStartAndEndTimeOnTimeEntryFlag() bool {
	if o != nil && o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		return true
	}

	return false
}

// SetRequireStartAndEndTimeOnTimeEntryFlag gets a reference to the given NullableBool and assigns it to the RequireStartAndEndTimeOnTimeEntryFlag field.
func (o *MyMemberInfo) SetRequireStartAndEndTimeOnTimeEntryFlag(v bool) {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(&v)
}
// SetRequireStartAndEndTimeOnTimeEntryFlagNil sets the value for RequireStartAndEndTimeOnTimeEntryFlag to be an explicit nil
func (o *MyMemberInfo) SetRequireStartAndEndTimeOnTimeEntryFlagNil() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Set(nil)
}

// UnsetRequireStartAndEndTimeOnTimeEntryFlag ensures that no value is present for RequireStartAndEndTimeOnTimeEntryFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRequireStartAndEndTimeOnTimeEntryFlag() {
	o.RequireStartAndEndTimeOnTimeEntryFlag.Unset()
}

// GetEnterTimeAgainstCompanyFlag returns the EnterTimeAgainstCompanyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetEnterTimeAgainstCompanyFlag() bool {
	if o == nil || IsNil(o.EnterTimeAgainstCompanyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.EnterTimeAgainstCompanyFlag.Get()
}

// GetEnterTimeAgainstCompanyFlagOk returns a tuple with the EnterTimeAgainstCompanyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetEnterTimeAgainstCompanyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnterTimeAgainstCompanyFlag.Get(), o.EnterTimeAgainstCompanyFlag.IsSet()
}

// HasEnterTimeAgainstCompanyFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasEnterTimeAgainstCompanyFlag() bool {
	if o != nil && o.EnterTimeAgainstCompanyFlag.IsSet() {
		return true
	}

	return false
}

// SetEnterTimeAgainstCompanyFlag gets a reference to the given NullableBool and assigns it to the EnterTimeAgainstCompanyFlag field.
func (o *MyMemberInfo) SetEnterTimeAgainstCompanyFlag(v bool) {
	o.EnterTimeAgainstCompanyFlag.Set(&v)
}
// SetEnterTimeAgainstCompanyFlagNil sets the value for EnterTimeAgainstCompanyFlag to be an explicit nil
func (o *MyMemberInfo) SetEnterTimeAgainstCompanyFlagNil() {
	o.EnterTimeAgainstCompanyFlag.Set(nil)
}

// UnsetEnterTimeAgainstCompanyFlag ensures that no value is present for EnterTimeAgainstCompanyFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetEnterTimeAgainstCompanyFlag() {
	o.EnterTimeAgainstCompanyFlag.Unset()
}

// GetAllowExpensesEnteredAgainstCompaniesFlag returns the AllowExpensesEnteredAgainstCompaniesFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o == nil || IsNil(o.AllowExpensesEnteredAgainstCompaniesFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
}

// GetAllowExpensesEnteredAgainstCompaniesFlagOk returns a tuple with the AllowExpensesEnteredAgainstCompaniesFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetAllowExpensesEnteredAgainstCompaniesFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowExpensesEnteredAgainstCompaniesFlag.Get(), o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet()
}

// HasAllowExpensesEnteredAgainstCompaniesFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasAllowExpensesEnteredAgainstCompaniesFlag() bool {
	if o != nil && o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		return true
	}

	return false
}

// SetAllowExpensesEnteredAgainstCompaniesFlag gets a reference to the given NullableBool and assigns it to the AllowExpensesEnteredAgainstCompaniesFlag field.
func (o *MyMemberInfo) SetAllowExpensesEnteredAgainstCompaniesFlag(v bool) {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(&v)
}
// SetAllowExpensesEnteredAgainstCompaniesFlagNil sets the value for AllowExpensesEnteredAgainstCompaniesFlag to be an explicit nil
func (o *MyMemberInfo) SetAllowExpensesEnteredAgainstCompaniesFlagNil() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Set(nil)
}

// UnsetAllowExpensesEnteredAgainstCompaniesFlag ensures that no value is present for AllowExpensesEnteredAgainstCompaniesFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetAllowExpensesEnteredAgainstCompaniesFlag() {
	o.AllowExpensesEnteredAgainstCompaniesFlag.Unset()
}

// GetServiceDefaultBoard returns the ServiceDefaultBoard field value if set, zero value otherwise.
func (o *MyMemberInfo) GetServiceDefaultBoard() BoardReference {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		var ret BoardReference
		return ret
	}
	return *o.ServiceDefaultBoard
}

// GetServiceDefaultBoardOk returns a tuple with the ServiceDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetServiceDefaultBoardOk() (*BoardReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultBoard) {
		return nil, false
	}
	return o.ServiceDefaultBoard, true
}

// HasServiceDefaultBoard returns a boolean if a field has been set.
func (o *MyMemberInfo) HasServiceDefaultBoard() bool {
	if o != nil && !IsNil(o.ServiceDefaultBoard) {
		return true
	}

	return false
}

// SetServiceDefaultBoard gets a reference to the given BoardReference and assigns it to the ServiceDefaultBoard field.
func (o *MyMemberInfo) SetServiceDefaultBoard(v BoardReference) {
	o.ServiceDefaultBoard = &v
}

// GetServiceDefaultLocation returns the ServiceDefaultLocation field value if set, zero value otherwise.
func (o *MyMemberInfo) GetServiceDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ServiceDefaultLocation
}

// GetServiceDefaultLocationOk returns a tuple with the ServiceDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetServiceDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultLocation) {
		return nil, false
	}
	return o.ServiceDefaultLocation, true
}

// HasServiceDefaultLocation returns a boolean if a field has been set.
func (o *MyMemberInfo) HasServiceDefaultLocation() bool {
	if o != nil && !IsNil(o.ServiceDefaultLocation) {
		return true
	}

	return false
}

// SetServiceDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ServiceDefaultLocation field.
func (o *MyMemberInfo) SetServiceDefaultLocation(v SystemLocationReference) {
	o.ServiceDefaultLocation = &v
}

// GetServiceDefaultDepartment returns the ServiceDefaultDepartment field value if set, zero value otherwise.
func (o *MyMemberInfo) GetServiceDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ServiceDefaultDepartment
}

// GetServiceDefaultDepartmentOk returns a tuple with the ServiceDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetServiceDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ServiceDefaultDepartment) {
		return nil, false
	}
	return o.ServiceDefaultDepartment, true
}

// HasServiceDefaultDepartment returns a boolean if a field has been set.
func (o *MyMemberInfo) HasServiceDefaultDepartment() bool {
	if o != nil && !IsNil(o.ServiceDefaultDepartment) {
		return true
	}

	return false
}

// SetServiceDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ServiceDefaultDepartment field.
func (o *MyMemberInfo) SetServiceDefaultDepartment(v SystemDepartmentReference) {
	o.ServiceDefaultDepartment = &v
}

// GetRestrictServiceDefaultLocationFlag returns the RestrictServiceDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRestrictServiceDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultLocationFlag.Get()
}

// GetRestrictServiceDefaultLocationFlagOk returns a tuple with the RestrictServiceDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRestrictServiceDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultLocationFlag.Get(), o.RestrictServiceDefaultLocationFlag.IsSet()
}

// HasRestrictServiceDefaultLocationFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRestrictServiceDefaultLocationFlag() bool {
	if o != nil && o.RestrictServiceDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultLocationFlag field.
func (o *MyMemberInfo) SetRestrictServiceDefaultLocationFlag(v bool) {
	o.RestrictServiceDefaultLocationFlag.Set(&v)
}
// SetRestrictServiceDefaultLocationFlagNil sets the value for RestrictServiceDefaultLocationFlag to be an explicit nil
func (o *MyMemberInfo) SetRestrictServiceDefaultLocationFlagNil() {
	o.RestrictServiceDefaultLocationFlag.Set(nil)
}

// UnsetRestrictServiceDefaultLocationFlag ensures that no value is present for RestrictServiceDefaultLocationFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRestrictServiceDefaultLocationFlag() {
	o.RestrictServiceDefaultLocationFlag.Unset()
}

// GetRestrictServiceDefaultDepartmentFlag returns the RestrictServiceDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRestrictServiceDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictServiceDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictServiceDefaultDepartmentFlag.Get()
}

// GetRestrictServiceDefaultDepartmentFlagOk returns a tuple with the RestrictServiceDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRestrictServiceDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictServiceDefaultDepartmentFlag.Get(), o.RestrictServiceDefaultDepartmentFlag.IsSet()
}

// HasRestrictServiceDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRestrictServiceDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictServiceDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictServiceDefaultDepartmentFlag field.
func (o *MyMemberInfo) SetRestrictServiceDefaultDepartmentFlag(v bool) {
	o.RestrictServiceDefaultDepartmentFlag.Set(&v)
}
// SetRestrictServiceDefaultDepartmentFlagNil sets the value for RestrictServiceDefaultDepartmentFlag to be an explicit nil
func (o *MyMemberInfo) SetRestrictServiceDefaultDepartmentFlagNil() {
	o.RestrictServiceDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictServiceDefaultDepartmentFlag ensures that no value is present for RestrictServiceDefaultDepartmentFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRestrictServiceDefaultDepartmentFlag() {
	o.RestrictServiceDefaultDepartmentFlag.Unset()
}

// GetExcludedServiceBoardIds returns the ExcludedServiceBoardIds field value if set, zero value otherwise.
func (o *MyMemberInfo) GetExcludedServiceBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedServiceBoardIds
}

// GetExcludedServiceBoardIdsOk returns a tuple with the ExcludedServiceBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetExcludedServiceBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedServiceBoardIds) {
		return nil, false
	}
	return o.ExcludedServiceBoardIds, true
}

// HasExcludedServiceBoardIds returns a boolean if a field has been set.
func (o *MyMemberInfo) HasExcludedServiceBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedServiceBoardIds) {
		return true
	}

	return false
}

// SetExcludedServiceBoardIds gets a reference to the given []int32 and assigns it to the ExcludedServiceBoardIds field.
func (o *MyMemberInfo) SetExcludedServiceBoardIds(v []int32) {
	o.ExcludedServiceBoardIds = v
}

// GetProjectDefaultLocation returns the ProjectDefaultLocation field value if set, zero value otherwise.
func (o *MyMemberInfo) GetProjectDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ProjectDefaultLocation
}

// GetProjectDefaultLocationOk returns a tuple with the ProjectDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetProjectDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultLocation) {
		return nil, false
	}
	return o.ProjectDefaultLocation, true
}

// HasProjectDefaultLocation returns a boolean if a field has been set.
func (o *MyMemberInfo) HasProjectDefaultLocation() bool {
	if o != nil && !IsNil(o.ProjectDefaultLocation) {
		return true
	}

	return false
}

// SetProjectDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ProjectDefaultLocation field.
func (o *MyMemberInfo) SetProjectDefaultLocation(v SystemLocationReference) {
	o.ProjectDefaultLocation = &v
}

// GetProjectDefaultDepartment returns the ProjectDefaultDepartment field value if set, zero value otherwise.
func (o *MyMemberInfo) GetProjectDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ProjectDefaultDepartment
}

// GetProjectDefaultDepartmentOk returns a tuple with the ProjectDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetProjectDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultDepartment) {
		return nil, false
	}
	return o.ProjectDefaultDepartment, true
}

// HasProjectDefaultDepartment returns a boolean if a field has been set.
func (o *MyMemberInfo) HasProjectDefaultDepartment() bool {
	if o != nil && !IsNil(o.ProjectDefaultDepartment) {
		return true
	}

	return false
}

// SetProjectDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ProjectDefaultDepartment field.
func (o *MyMemberInfo) SetProjectDefaultDepartment(v SystemDepartmentReference) {
	o.ProjectDefaultDepartment = &v
}

// GetProjectDefaultBoard returns the ProjectDefaultBoard field value if set, zero value otherwise.
func (o *MyMemberInfo) GetProjectDefaultBoard() ProjectBoardReference {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		var ret ProjectBoardReference
		return ret
	}
	return *o.ProjectDefaultBoard
}

// GetProjectDefaultBoardOk returns a tuple with the ProjectDefaultBoard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetProjectDefaultBoardOk() (*ProjectBoardReference, bool) {
	if o == nil || IsNil(o.ProjectDefaultBoard) {
		return nil, false
	}
	return o.ProjectDefaultBoard, true
}

// HasProjectDefaultBoard returns a boolean if a field has been set.
func (o *MyMemberInfo) HasProjectDefaultBoard() bool {
	if o != nil && !IsNil(o.ProjectDefaultBoard) {
		return true
	}

	return false
}

// SetProjectDefaultBoard gets a reference to the given ProjectBoardReference and assigns it to the ProjectDefaultBoard field.
func (o *MyMemberInfo) SetProjectDefaultBoard(v ProjectBoardReference) {
	o.ProjectDefaultBoard = &v
}

// GetRestrictProjectDefaultLocationFlag returns the RestrictProjectDefaultLocationFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRestrictProjectDefaultLocationFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultLocationFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultLocationFlag.Get()
}

// GetRestrictProjectDefaultLocationFlagOk returns a tuple with the RestrictProjectDefaultLocationFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRestrictProjectDefaultLocationFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultLocationFlag.Get(), o.RestrictProjectDefaultLocationFlag.IsSet()
}

// HasRestrictProjectDefaultLocationFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRestrictProjectDefaultLocationFlag() bool {
	if o != nil && o.RestrictProjectDefaultLocationFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultLocationFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultLocationFlag field.
func (o *MyMemberInfo) SetRestrictProjectDefaultLocationFlag(v bool) {
	o.RestrictProjectDefaultLocationFlag.Set(&v)
}
// SetRestrictProjectDefaultLocationFlagNil sets the value for RestrictProjectDefaultLocationFlag to be an explicit nil
func (o *MyMemberInfo) SetRestrictProjectDefaultLocationFlagNil() {
	o.RestrictProjectDefaultLocationFlag.Set(nil)
}

// UnsetRestrictProjectDefaultLocationFlag ensures that no value is present for RestrictProjectDefaultLocationFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRestrictProjectDefaultLocationFlag() {
	o.RestrictProjectDefaultLocationFlag.Unset()
}

// GetRestrictProjectDefaultDepartmentFlag returns the RestrictProjectDefaultDepartmentFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRestrictProjectDefaultDepartmentFlag() bool {
	if o == nil || IsNil(o.RestrictProjectDefaultDepartmentFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictProjectDefaultDepartmentFlag.Get()
}

// GetRestrictProjectDefaultDepartmentFlagOk returns a tuple with the RestrictProjectDefaultDepartmentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRestrictProjectDefaultDepartmentFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictProjectDefaultDepartmentFlag.Get(), o.RestrictProjectDefaultDepartmentFlag.IsSet()
}

// HasRestrictProjectDefaultDepartmentFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRestrictProjectDefaultDepartmentFlag() bool {
	if o != nil && o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictProjectDefaultDepartmentFlag gets a reference to the given NullableBool and assigns it to the RestrictProjectDefaultDepartmentFlag field.
func (o *MyMemberInfo) SetRestrictProjectDefaultDepartmentFlag(v bool) {
	o.RestrictProjectDefaultDepartmentFlag.Set(&v)
}
// SetRestrictProjectDefaultDepartmentFlagNil sets the value for RestrictProjectDefaultDepartmentFlag to be an explicit nil
func (o *MyMemberInfo) SetRestrictProjectDefaultDepartmentFlagNil() {
	o.RestrictProjectDefaultDepartmentFlag.Set(nil)
}

// UnsetRestrictProjectDefaultDepartmentFlag ensures that no value is present for RestrictProjectDefaultDepartmentFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRestrictProjectDefaultDepartmentFlag() {
	o.RestrictProjectDefaultDepartmentFlag.Unset()
}

// GetExcludedProjectBoardIds returns the ExcludedProjectBoardIds field value if set, zero value otherwise.
func (o *MyMemberInfo) GetExcludedProjectBoardIds() []int32 {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		var ret []int32
		return ret
	}
	return o.ExcludedProjectBoardIds
}

// GetExcludedProjectBoardIdsOk returns a tuple with the ExcludedProjectBoardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetExcludedProjectBoardIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedProjectBoardIds) {
		return nil, false
	}
	return o.ExcludedProjectBoardIds, true
}

// HasExcludedProjectBoardIds returns a boolean if a field has been set.
func (o *MyMemberInfo) HasExcludedProjectBoardIds() bool {
	if o != nil && !IsNil(o.ExcludedProjectBoardIds) {
		return true
	}

	return false
}

// SetExcludedProjectBoardIds gets a reference to the given []int32 and assigns it to the ExcludedProjectBoardIds field.
func (o *MyMemberInfo) SetExcludedProjectBoardIds(v []int32) {
	o.ExcludedProjectBoardIds = v
}

// GetScheduleDefaultLocation returns the ScheduleDefaultLocation field value if set, zero value otherwise.
func (o *MyMemberInfo) GetScheduleDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.ScheduleDefaultLocation
}

// GetScheduleDefaultLocationOk returns a tuple with the ScheduleDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetScheduleDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultLocation) {
		return nil, false
	}
	return o.ScheduleDefaultLocation, true
}

// HasScheduleDefaultLocation returns a boolean if a field has been set.
func (o *MyMemberInfo) HasScheduleDefaultLocation() bool {
	if o != nil && !IsNil(o.ScheduleDefaultLocation) {
		return true
	}

	return false
}

// SetScheduleDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the ScheduleDefaultLocation field.
func (o *MyMemberInfo) SetScheduleDefaultLocation(v SystemLocationReference) {
	o.ScheduleDefaultLocation = &v
}

// GetScheduleDefaultDepartment returns the ScheduleDefaultDepartment field value if set, zero value otherwise.
func (o *MyMemberInfo) GetScheduleDefaultDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.ScheduleDefaultDepartment
}

// GetScheduleDefaultDepartmentOk returns a tuple with the ScheduleDefaultDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetScheduleDefaultDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.ScheduleDefaultDepartment) {
		return nil, false
	}
	return o.ScheduleDefaultDepartment, true
}

// HasScheduleDefaultDepartment returns a boolean if a field has been set.
func (o *MyMemberInfo) HasScheduleDefaultDepartment() bool {
	if o != nil && !IsNil(o.ScheduleDefaultDepartment) {
		return true
	}

	return false
}

// SetScheduleDefaultDepartment gets a reference to the given SystemDepartmentReference and assigns it to the ScheduleDefaultDepartment field.
func (o *MyMemberInfo) SetScheduleDefaultDepartment(v SystemDepartmentReference) {
	o.ScheduleDefaultDepartment = &v
}

// GetScheduleCapacity returns the ScheduleCapacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetScheduleCapacity() float64 {
	if o == nil || IsNil(o.ScheduleCapacity.Get()) {
		var ret float64
		return ret
	}
	return *o.ScheduleCapacity.Get()
}

// GetScheduleCapacityOk returns a tuple with the ScheduleCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetScheduleCapacityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleCapacity.Get(), o.ScheduleCapacity.IsSet()
}

// HasScheduleCapacity returns a boolean if a field has been set.
func (o *MyMemberInfo) HasScheduleCapacity() bool {
	if o != nil && o.ScheduleCapacity.IsSet() {
		return true
	}

	return false
}

// SetScheduleCapacity gets a reference to the given NullableFloat64 and assigns it to the ScheduleCapacity field.
func (o *MyMemberInfo) SetScheduleCapacity(v float64) {
	o.ScheduleCapacity.Set(&v)
}
// SetScheduleCapacityNil sets the value for ScheduleCapacity to be an explicit nil
func (o *MyMemberInfo) SetScheduleCapacityNil() {
	o.ScheduleCapacity.Set(nil)
}

// UnsetScheduleCapacity ensures that no value is present for ScheduleCapacity, not even an explicit nil
func (o *MyMemberInfo) UnsetScheduleCapacity() {
	o.ScheduleCapacity.Unset()
}

// GetServiceLocation returns the ServiceLocation field value if set, zero value otherwise.
func (o *MyMemberInfo) GetServiceLocation() ServiceLocationReference {
	if o == nil || IsNil(o.ServiceLocation) {
		var ret ServiceLocationReference
		return ret
	}
	return *o.ServiceLocation
}

// GetServiceLocationOk returns a tuple with the ServiceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetServiceLocationOk() (*ServiceLocationReference, bool) {
	if o == nil || IsNil(o.ServiceLocation) {
		return nil, false
	}
	return o.ServiceLocation, true
}

// HasServiceLocation returns a boolean if a field has been set.
func (o *MyMemberInfo) HasServiceLocation() bool {
	if o != nil && !IsNil(o.ServiceLocation) {
		return true
	}

	return false
}

// SetServiceLocation gets a reference to the given ServiceLocationReference and assigns it to the ServiceLocation field.
func (o *MyMemberInfo) SetServiceLocation(v ServiceLocationReference) {
	o.ServiceLocation = &v
}

// GetSalesDefaultLocation returns the SalesDefaultLocation field value if set, zero value otherwise.
func (o *MyMemberInfo) GetSalesDefaultLocation() SystemLocationReference {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		var ret SystemLocationReference
		return ret
	}
	return *o.SalesDefaultLocation
}

// GetSalesDefaultLocationOk returns a tuple with the SalesDefaultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetSalesDefaultLocationOk() (*SystemLocationReference, bool) {
	if o == nil || IsNil(o.SalesDefaultLocation) {
		return nil, false
	}
	return o.SalesDefaultLocation, true
}

// HasSalesDefaultLocation returns a boolean if a field has been set.
func (o *MyMemberInfo) HasSalesDefaultLocation() bool {
	if o != nil && !IsNil(o.SalesDefaultLocation) {
		return true
	}

	return false
}

// SetSalesDefaultLocation gets a reference to the given SystemLocationReference and assigns it to the SalesDefaultLocation field.
func (o *MyMemberInfo) SetSalesDefaultLocation(v SystemLocationReference) {
	o.SalesDefaultLocation = &v
}

// GetWarehouse returns the Warehouse field value if set, zero value otherwise.
func (o *MyMemberInfo) GetWarehouse() WarehouseReference {
	if o == nil || IsNil(o.Warehouse) {
		var ret WarehouseReference
		return ret
	}
	return *o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil || IsNil(o.Warehouse) {
		return nil, false
	}
	return o.Warehouse, true
}

// HasWarehouse returns a boolean if a field has been set.
func (o *MyMemberInfo) HasWarehouse() bool {
	if o != nil && !IsNil(o.Warehouse) {
		return true
	}

	return false
}

// SetWarehouse gets a reference to the given WarehouseReference and assigns it to the Warehouse field.
func (o *MyMemberInfo) SetWarehouse(v WarehouseReference) {
	o.Warehouse = &v
}

// GetWarehouseBin returns the WarehouseBin field value if set, zero value otherwise.
func (o *MyMemberInfo) GetWarehouseBin() WarehouseBinReference {
	if o == nil || IsNil(o.WarehouseBin) {
		var ret WarehouseBinReference
		return ret
	}
	return *o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil || IsNil(o.WarehouseBin) {
		return nil, false
	}
	return o.WarehouseBin, true
}

// HasWarehouseBin returns a boolean if a field has been set.
func (o *MyMemberInfo) HasWarehouseBin() bool {
	if o != nil && !IsNil(o.WarehouseBin) {
		return true
	}

	return false
}

// SetWarehouseBin gets a reference to the given WarehouseBinReference and assigns it to the WarehouseBin field.
func (o *MyMemberInfo) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = &v
}

// GetRestrictDefaultWarehouseFlag returns the RestrictDefaultWarehouseFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRestrictDefaultWarehouseFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseFlag.Get()
}

// GetRestrictDefaultWarehouseFlagOk returns a tuple with the RestrictDefaultWarehouseFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRestrictDefaultWarehouseFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseFlag.Get(), o.RestrictDefaultWarehouseFlag.IsSet()
}

// HasRestrictDefaultWarehouseFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRestrictDefaultWarehouseFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseFlag field.
func (o *MyMemberInfo) SetRestrictDefaultWarehouseFlag(v bool) {
	o.RestrictDefaultWarehouseFlag.Set(&v)
}
// SetRestrictDefaultWarehouseFlagNil sets the value for RestrictDefaultWarehouseFlag to be an explicit nil
func (o *MyMemberInfo) SetRestrictDefaultWarehouseFlagNil() {
	o.RestrictDefaultWarehouseFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseFlag ensures that no value is present for RestrictDefaultWarehouseFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRestrictDefaultWarehouseFlag() {
	o.RestrictDefaultWarehouseFlag.Unset()
}

// GetRestrictDefaultWarehouseBinFlag returns the RestrictDefaultWarehouseBinFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetRestrictDefaultWarehouseBinFlag() bool {
	if o == nil || IsNil(o.RestrictDefaultWarehouseBinFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.RestrictDefaultWarehouseBinFlag.Get()
}

// GetRestrictDefaultWarehouseBinFlagOk returns a tuple with the RestrictDefaultWarehouseBinFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetRestrictDefaultWarehouseBinFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictDefaultWarehouseBinFlag.Get(), o.RestrictDefaultWarehouseBinFlag.IsSet()
}

// HasRestrictDefaultWarehouseBinFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasRestrictDefaultWarehouseBinFlag() bool {
	if o != nil && o.RestrictDefaultWarehouseBinFlag.IsSet() {
		return true
	}

	return false
}

// SetRestrictDefaultWarehouseBinFlag gets a reference to the given NullableBool and assigns it to the RestrictDefaultWarehouseBinFlag field.
func (o *MyMemberInfo) SetRestrictDefaultWarehouseBinFlag(v bool) {
	o.RestrictDefaultWarehouseBinFlag.Set(&v)
}
// SetRestrictDefaultWarehouseBinFlagNil sets the value for RestrictDefaultWarehouseBinFlag to be an explicit nil
func (o *MyMemberInfo) SetRestrictDefaultWarehouseBinFlagNil() {
	o.RestrictDefaultWarehouseBinFlag.Set(nil)
}

// UnsetRestrictDefaultWarehouseBinFlag ensures that no value is present for RestrictDefaultWarehouseBinFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetRestrictDefaultWarehouseBinFlag() {
	o.RestrictDefaultWarehouseBinFlag.Unset()
}

// GetSsoSessionFlag returns the SsoSessionFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MyMemberInfo) GetSsoSessionFlag() bool {
	if o == nil || IsNil(o.SsoSessionFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.SsoSessionFlag.Get()
}

// GetSsoSessionFlagOk returns a tuple with the SsoSessionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MyMemberInfo) GetSsoSessionFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SsoSessionFlag.Get(), o.SsoSessionFlag.IsSet()
}

// HasSsoSessionFlag returns a boolean if a field has been set.
func (o *MyMemberInfo) HasSsoSessionFlag() bool {
	if o != nil && o.SsoSessionFlag.IsSet() {
		return true
	}

	return false
}

// SetSsoSessionFlag gets a reference to the given NullableBool and assigns it to the SsoSessionFlag field.
func (o *MyMemberInfo) SetSsoSessionFlag(v bool) {
	o.SsoSessionFlag.Set(&v)
}
// SetSsoSessionFlagNil sets the value for SsoSessionFlag to be an explicit nil
func (o *MyMemberInfo) SetSsoSessionFlagNil() {
	o.SsoSessionFlag.Set(nil)
}

// UnsetSsoSessionFlag ensures that no value is present for SsoSessionFlag, not even an explicit nil
func (o *MyMemberInfo) UnsetSsoSessionFlag() {
	o.SsoSessionFlag.Unset()
}

// GetSsoClientId returns the SsoClientId field value if set, zero value otherwise.
func (o *MyMemberInfo) GetSsoClientId() string {
	if o == nil || IsNil(o.SsoClientId) {
		var ret string
		return ret
	}
	return *o.SsoClientId
}

// GetSsoClientIdOk returns a tuple with the SsoClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetSsoClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.SsoClientId) {
		return nil, false
	}
	return o.SsoClientId, true
}

// HasSsoClientId returns a boolean if a field has been set.
func (o *MyMemberInfo) HasSsoClientId() bool {
	if o != nil && !IsNil(o.SsoClientId) {
		return true
	}

	return false
}

// SetSsoClientId gets a reference to the given string and assigns it to the SsoClientId field.
func (o *MyMemberInfo) SetSsoClientId(v string) {
	o.SsoClientId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *MyMemberInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyMemberInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *MyMemberInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *MyMemberInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o MyMemberInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MyMemberInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleInitial) {
		toSerialize["middleInitial"] = o.MiddleInitial
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.DefaultEmail) {
		toSerialize["defaultEmail"] = o.DefaultEmail
	}
	if !IsNil(o.Photo) {
		toSerialize["photo"] = o.Photo
	}
	if o.LicenseClass.IsSet() {
		toSerialize["licenseClass"] = o.LicenseClass.Get()
	}
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if o.UseBrowserLanguageFlag.IsSet() {
		toSerialize["useBrowserLanguageFlag"] = o.UseBrowserLanguageFlag.Get()
	}
	if !IsNil(o.DefaultLocation) {
		toSerialize["defaultLocation"] = o.DefaultLocation
	}
	if !IsNil(o.DefaultDepartment) {
		toSerialize["defaultDepartment"] = o.DefaultDepartment
	}
	if !IsNil(o.WorkRole) {
		toSerialize["workRole"] = o.WorkRole
	}
	if !IsNil(o.WorkType) {
		toSerialize["workType"] = o.WorkType
	}
	if o.DailyCapacity.IsSet() {
		toSerialize["dailyCapacity"] = o.DailyCapacity.Get()
	}
	if o.RequireExpenseEntryFlag.IsSet() {
		toSerialize["requireExpenseEntryFlag"] = o.RequireExpenseEntryFlag.Get()
	}
	if o.RequireTimeSheetEntryFlag.IsSet() {
		toSerialize["requireTimeSheetEntryFlag"] = o.RequireTimeSheetEntryFlag.Get()
	}
	if o.RequireStartAndEndTimeOnTimeEntryFlag.IsSet() {
		toSerialize["requireStartAndEndTimeOnTimeEntryFlag"] = o.RequireStartAndEndTimeOnTimeEntryFlag.Get()
	}
	if o.EnterTimeAgainstCompanyFlag.IsSet() {
		toSerialize["enterTimeAgainstCompanyFlag"] = o.EnterTimeAgainstCompanyFlag.Get()
	}
	if o.AllowExpensesEnteredAgainstCompaniesFlag.IsSet() {
		toSerialize["allowExpensesEnteredAgainstCompaniesFlag"] = o.AllowExpensesEnteredAgainstCompaniesFlag.Get()
	}
	if !IsNil(o.ServiceDefaultBoard) {
		toSerialize["serviceDefaultBoard"] = o.ServiceDefaultBoard
	}
	if !IsNil(o.ServiceDefaultLocation) {
		toSerialize["serviceDefaultLocation"] = o.ServiceDefaultLocation
	}
	if !IsNil(o.ServiceDefaultDepartment) {
		toSerialize["serviceDefaultDepartment"] = o.ServiceDefaultDepartment
	}
	if o.RestrictServiceDefaultLocationFlag.IsSet() {
		toSerialize["restrictServiceDefaultLocationFlag"] = o.RestrictServiceDefaultLocationFlag.Get()
	}
	if o.RestrictServiceDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictServiceDefaultDepartmentFlag"] = o.RestrictServiceDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedServiceBoardIds) {
		toSerialize["excludedServiceBoardIds"] = o.ExcludedServiceBoardIds
	}
	if !IsNil(o.ProjectDefaultLocation) {
		toSerialize["projectDefaultLocation"] = o.ProjectDefaultLocation
	}
	if !IsNil(o.ProjectDefaultDepartment) {
		toSerialize["projectDefaultDepartment"] = o.ProjectDefaultDepartment
	}
	if !IsNil(o.ProjectDefaultBoard) {
		toSerialize["projectDefaultBoard"] = o.ProjectDefaultBoard
	}
	if o.RestrictProjectDefaultLocationFlag.IsSet() {
		toSerialize["restrictProjectDefaultLocationFlag"] = o.RestrictProjectDefaultLocationFlag.Get()
	}
	if o.RestrictProjectDefaultDepartmentFlag.IsSet() {
		toSerialize["restrictProjectDefaultDepartmentFlag"] = o.RestrictProjectDefaultDepartmentFlag.Get()
	}
	if !IsNil(o.ExcludedProjectBoardIds) {
		toSerialize["excludedProjectBoardIds"] = o.ExcludedProjectBoardIds
	}
	if !IsNil(o.ScheduleDefaultLocation) {
		toSerialize["scheduleDefaultLocation"] = o.ScheduleDefaultLocation
	}
	if !IsNil(o.ScheduleDefaultDepartment) {
		toSerialize["scheduleDefaultDepartment"] = o.ScheduleDefaultDepartment
	}
	if o.ScheduleCapacity.IsSet() {
		toSerialize["scheduleCapacity"] = o.ScheduleCapacity.Get()
	}
	if !IsNil(o.ServiceLocation) {
		toSerialize["serviceLocation"] = o.ServiceLocation
	}
	if !IsNil(o.SalesDefaultLocation) {
		toSerialize["salesDefaultLocation"] = o.SalesDefaultLocation
	}
	if !IsNil(o.Warehouse) {
		toSerialize["warehouse"] = o.Warehouse
	}
	if !IsNil(o.WarehouseBin) {
		toSerialize["warehouseBin"] = o.WarehouseBin
	}
	if o.RestrictDefaultWarehouseFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseFlag"] = o.RestrictDefaultWarehouseFlag.Get()
	}
	if o.RestrictDefaultWarehouseBinFlag.IsSet() {
		toSerialize["restrictDefaultWarehouseBinFlag"] = o.RestrictDefaultWarehouseBinFlag.Get()
	}
	if o.SsoSessionFlag.IsSet() {
		toSerialize["ssoSessionFlag"] = o.SsoSessionFlag.Get()
	}
	if !IsNil(o.SsoClientId) {
		toSerialize["ssoClientId"] = o.SsoClientId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableMyMemberInfo struct {
	value *MyMemberInfo
	isSet bool
}

func (v NullableMyMemberInfo) Get() *MyMemberInfo {
	return v.value
}

func (v *NullableMyMemberInfo) Set(val *MyMemberInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMyMemberInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMyMemberInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMyMemberInfo(val *MyMemberInfo) *NullableMyMemberInfo {
	return &NullableMyMemberInfo{value: val, isSet: true}
}

func (v NullableMyMemberInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMyMemberInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


