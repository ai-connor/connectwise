/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the OpportunityStageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpportunityStageInfo{}

// OpportunityStageInfo struct for OpportunityStageInfo
type OpportunityStageInfo struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Probability *OpportunityProbabilityReference `json:"probability,omitempty"`
	Color *string `json:"color,omitempty"`
	SequenceNumber NullableInt32 `json:"sequenceNumber,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewOpportunityStageInfo instantiates a new OpportunityStageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpportunityStageInfo() *OpportunityStageInfo {
	this := OpportunityStageInfo{}
	return &this
}

// NewOpportunityStageInfoWithDefaults instantiates a new OpportunityStageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpportunityStageInfoWithDefaults() *OpportunityStageInfo {
	this := OpportunityStageInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpportunityStageInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityStageInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpportunityStageInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OpportunityStageInfo) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpportunityStageInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityStageInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpportunityStageInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpportunityStageInfo) SetName(v string) {
	o.Name = &v
}

// GetProbability returns the Probability field value if set, zero value otherwise.
func (o *OpportunityStageInfo) GetProbability() OpportunityProbabilityReference {
	if o == nil || IsNil(o.Probability) {
		var ret OpportunityProbabilityReference
		return ret
	}
	return *o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityStageInfo) GetProbabilityOk() (*OpportunityProbabilityReference, bool) {
	if o == nil || IsNil(o.Probability) {
		return nil, false
	}
	return o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *OpportunityStageInfo) HasProbability() bool {
	if o != nil && !IsNil(o.Probability) {
		return true
	}

	return false
}

// SetProbability gets a reference to the given OpportunityProbabilityReference and assigns it to the Probability field.
func (o *OpportunityStageInfo) SetProbability(v OpportunityProbabilityReference) {
	o.Probability = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *OpportunityStageInfo) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityStageInfo) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *OpportunityStageInfo) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *OpportunityStageInfo) SetColor(v string) {
	o.Color = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpportunityStageInfo) GetSequenceNumber() int32 {
	if o == nil || IsNil(o.SequenceNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SequenceNumber.Get()
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpportunityStageInfo) GetSequenceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SequenceNumber.Get(), o.SequenceNumber.IsSet()
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *OpportunityStageInfo) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber.IsSet() {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given NullableInt32 and assigns it to the SequenceNumber field.
func (o *OpportunityStageInfo) SetSequenceNumber(v int32) {
	o.SequenceNumber.Set(&v)
}
// SetSequenceNumberNil sets the value for SequenceNumber to be an explicit nil
func (o *OpportunityStageInfo) SetSequenceNumberNil() {
	o.SequenceNumber.Set(nil)
}

// UnsetSequenceNumber ensures that no value is present for SequenceNumber, not even an explicit nil
func (o *OpportunityStageInfo) UnsetSequenceNumber() {
	o.SequenceNumber.Unset()
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *OpportunityStageInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpportunityStageInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *OpportunityStageInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *OpportunityStageInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o OpportunityStageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpportunityStageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Probability) {
		toSerialize["probability"] = o.Probability
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if o.SequenceNumber.IsSet() {
		toSerialize["sequenceNumber"] = o.SequenceNumber.Get()
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableOpportunityStageInfo struct {
	value *OpportunityStageInfo
	isSet bool
}

func (v NullableOpportunityStageInfo) Get() *OpportunityStageInfo {
	return v.value
}

func (v *NullableOpportunityStageInfo) Set(val *OpportunityStageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOpportunityStageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOpportunityStageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpportunityStageInfo(val *OpportunityStageInfo) *NullableOpportunityStageInfo {
	return &NullableOpportunityStageInfo{value: val, isSet: true}
}

func (v NullableOpportunityStageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpportunityStageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


