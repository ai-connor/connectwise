/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ProductDemand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductDemand{}

// ProductDemand struct for ProductDemand
type ProductDemand struct {
	ProductRecId *int32 `json:"productRecId,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	Cost NullableFloat64 `json:"cost,omitempty"`
}

// NewProductDemand instantiates a new ProductDemand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductDemand() *ProductDemand {
	this := ProductDemand{}
	return &this
}

// NewProductDemandWithDefaults instantiates a new ProductDemand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductDemandWithDefaults() *ProductDemand {
	this := ProductDemand{}
	return &this
}

// GetProductRecId returns the ProductRecId field value if set, zero value otherwise.
func (o *ProductDemand) GetProductRecId() int32 {
	if o == nil || IsNil(o.ProductRecId) {
		var ret int32
		return ret
	}
	return *o.ProductRecId
}

// GetProductRecIdOk returns a tuple with the ProductRecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDemand) GetProductRecIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductRecId) {
		return nil, false
	}
	return o.ProductRecId, true
}

// HasProductRecId returns a boolean if a field has been set.
func (o *ProductDemand) HasProductRecId() bool {
	if o != nil && !IsNil(o.ProductRecId) {
		return true
	}

	return false
}

// SetProductRecId gets a reference to the given int32 and assigns it to the ProductRecId field.
func (o *ProductDemand) SetProductRecId(v int32) {
	o.ProductRecId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ProductDemand) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDemand) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ProductDemand) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ProductDemand) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductDemand) GetCost() float64 {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret float64
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductDemand) GetCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *ProductDemand) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableFloat64 and assigns it to the Cost field.
func (o *ProductDemand) SetCost(v float64) {
	o.Cost.Set(&v)
}
// SetCostNil sets the value for Cost to be an explicit nil
func (o *ProductDemand) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *ProductDemand) UnsetCost() {
	o.Cost.Unset()
}

func (o ProductDemand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductDemand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductRecId) {
		toSerialize["productRecId"] = o.ProductRecId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	return toSerialize, nil
}

type NullableProductDemand struct {
	value *ProductDemand
	isSet bool
}

func (v NullableProductDemand) Get() *ProductDemand {
	return v.value
}

func (v *NullableProductDemand) Set(val *ProductDemand) {
	v.value = val
	v.isSet = true
}

func (v NullableProductDemand) IsSet() bool {
	return v.isSet
}

func (v *NullableProductDemand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductDemand(val *ProductDemand) *NullableProductDemand {
	return &NullableProductDemand{value: val, isSet: true}
}

func (v NullableProductDemand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductDemand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


