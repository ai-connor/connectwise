/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ProductPickingShippingDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductPickingShippingDetail{}

// ProductPickingShippingDetail struct for ProductPickingShippingDetail
type ProductPickingShippingDetail struct {
	Id *int32 `json:"id,omitempty"`
	PickedQuantity NullableInt32 `json:"pickedQuantity,omitempty"`
	ShippedQuantity NullableInt32 `json:"shippedQuantity,omitempty"`
	Warehouse WarehouseReference `json:"warehouse"`
	WarehouseBin WarehouseBinReference `json:"warehouseBin"`
	ShipmentMethod *ShipmentMethodReference `json:"shipmentMethod,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	SerialNumberIds []int32 `json:"serialNumberIds,omitempty"`
	TrackingNumber *string `json:"trackingNumber,omitempty"`
	ProductItem *ProductItemReference `json:"productItem,omitempty"`
	LineNumber NullableInt32 `json:"lineNumber,omitempty"`
	Quantity NullableInt32 `json:"quantity,omitempty"`
	ExpectedArrivalDate *time.Time `json:"expectedArrivalDate,omitempty"`
	ShipmentDate *time.Time `json:"shipmentDate,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ProductPickingShippingDetail ProductPickingShippingDetail

// NewProductPickingShippingDetail instantiates a new ProductPickingShippingDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductPickingShippingDetail(warehouse WarehouseReference, warehouseBin WarehouseBinReference) *ProductPickingShippingDetail {
	this := ProductPickingShippingDetail{}
	this.Warehouse = warehouse
	this.WarehouseBin = warehouseBin
	return &this
}

// NewProductPickingShippingDetailWithDefaults instantiates a new ProductPickingShippingDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductPickingShippingDetailWithDefaults() *ProductPickingShippingDetail {
	this := ProductPickingShippingDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProductPickingShippingDetail) SetId(v int32) {
	o.Id = &v
}

// GetPickedQuantity returns the PickedQuantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductPickingShippingDetail) GetPickedQuantity() int32 {
	if o == nil || IsNil(o.PickedQuantity.Get()) {
		var ret int32
		return ret
	}
	return *o.PickedQuantity.Get()
}

// GetPickedQuantityOk returns a tuple with the PickedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductPickingShippingDetail) GetPickedQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PickedQuantity.Get(), o.PickedQuantity.IsSet()
}

// HasPickedQuantity returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasPickedQuantity() bool {
	if o != nil && o.PickedQuantity.IsSet() {
		return true
	}

	return false
}

// SetPickedQuantity gets a reference to the given NullableInt32 and assigns it to the PickedQuantity field.
func (o *ProductPickingShippingDetail) SetPickedQuantity(v int32) {
	o.PickedQuantity.Set(&v)
}
// SetPickedQuantityNil sets the value for PickedQuantity to be an explicit nil
func (o *ProductPickingShippingDetail) SetPickedQuantityNil() {
	o.PickedQuantity.Set(nil)
}

// UnsetPickedQuantity ensures that no value is present for PickedQuantity, not even an explicit nil
func (o *ProductPickingShippingDetail) UnsetPickedQuantity() {
	o.PickedQuantity.Unset()
}

// GetShippedQuantity returns the ShippedQuantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductPickingShippingDetail) GetShippedQuantity() int32 {
	if o == nil || IsNil(o.ShippedQuantity.Get()) {
		var ret int32
		return ret
	}
	return *o.ShippedQuantity.Get()
}

// GetShippedQuantityOk returns a tuple with the ShippedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductPickingShippingDetail) GetShippedQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedQuantity.Get(), o.ShippedQuantity.IsSet()
}

// HasShippedQuantity returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasShippedQuantity() bool {
	if o != nil && o.ShippedQuantity.IsSet() {
		return true
	}

	return false
}

// SetShippedQuantity gets a reference to the given NullableInt32 and assigns it to the ShippedQuantity field.
func (o *ProductPickingShippingDetail) SetShippedQuantity(v int32) {
	o.ShippedQuantity.Set(&v)
}
// SetShippedQuantityNil sets the value for ShippedQuantity to be an explicit nil
func (o *ProductPickingShippingDetail) SetShippedQuantityNil() {
	o.ShippedQuantity.Set(nil)
}

// UnsetShippedQuantity ensures that no value is present for ShippedQuantity, not even an explicit nil
func (o *ProductPickingShippingDetail) UnsetShippedQuantity() {
	o.ShippedQuantity.Unset()
}

// GetWarehouse returns the Warehouse field value
func (o *ProductPickingShippingDetail) GetWarehouse() WarehouseReference {
	if o == nil {
		var ret WarehouseReference
		return ret
	}

	return o.Warehouse
}

// GetWarehouseOk returns a tuple with the Warehouse field value
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetWarehouseOk() (*WarehouseReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Warehouse, true
}

// SetWarehouse sets field value
func (o *ProductPickingShippingDetail) SetWarehouse(v WarehouseReference) {
	o.Warehouse = v
}

// GetWarehouseBin returns the WarehouseBin field value
func (o *ProductPickingShippingDetail) GetWarehouseBin() WarehouseBinReference {
	if o == nil {
		var ret WarehouseBinReference
		return ret
	}

	return o.WarehouseBin
}

// GetWarehouseBinOk returns a tuple with the WarehouseBin field value
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetWarehouseBinOk() (*WarehouseBinReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarehouseBin, true
}

// SetWarehouseBin sets field value
func (o *ProductPickingShippingDetail) SetWarehouseBin(v WarehouseBinReference) {
	o.WarehouseBin = v
}

// GetShipmentMethod returns the ShipmentMethod field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetShipmentMethod() ShipmentMethodReference {
	if o == nil || IsNil(o.ShipmentMethod) {
		var ret ShipmentMethodReference
		return ret
	}
	return *o.ShipmentMethod
}

// GetShipmentMethodOk returns a tuple with the ShipmentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetShipmentMethodOk() (*ShipmentMethodReference, bool) {
	if o == nil || IsNil(o.ShipmentMethod) {
		return nil, false
	}
	return o.ShipmentMethod, true
}

// HasShipmentMethod returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasShipmentMethod() bool {
	if o != nil && !IsNil(o.ShipmentMethod) {
		return true
	}

	return false
}

// SetShipmentMethod gets a reference to the given ShipmentMethodReference and assigns it to the ShipmentMethod field.
func (o *ProductPickingShippingDetail) SetShipmentMethod(v ShipmentMethodReference) {
	o.ShipmentMethod = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *ProductPickingShippingDetail) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSerialNumberIds returns the SerialNumberIds field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetSerialNumberIds() []int32 {
	if o == nil || IsNil(o.SerialNumberIds) {
		var ret []int32
		return ret
	}
	return o.SerialNumberIds
}

// GetSerialNumberIdsOk returns a tuple with the SerialNumberIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetSerialNumberIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.SerialNumberIds) {
		return nil, false
	}
	return o.SerialNumberIds, true
}

// HasSerialNumberIds returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasSerialNumberIds() bool {
	if o != nil && !IsNil(o.SerialNumberIds) {
		return true
	}

	return false
}

// SetSerialNumberIds gets a reference to the given []int32 and assigns it to the SerialNumberIds field.
func (o *ProductPickingShippingDetail) SetSerialNumberIds(v []int32) {
	o.SerialNumberIds = v
}

// GetTrackingNumber returns the TrackingNumber field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetTrackingNumber() string {
	if o == nil || IsNil(o.TrackingNumber) {
		var ret string
		return ret
	}
	return *o.TrackingNumber
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingNumber) {
		return nil, false
	}
	return o.TrackingNumber, true
}

// HasTrackingNumber returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasTrackingNumber() bool {
	if o != nil && !IsNil(o.TrackingNumber) {
		return true
	}

	return false
}

// SetTrackingNumber gets a reference to the given string and assigns it to the TrackingNumber field.
func (o *ProductPickingShippingDetail) SetTrackingNumber(v string) {
	o.TrackingNumber = &v
}

// GetProductItem returns the ProductItem field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetProductItem() ProductItemReference {
	if o == nil || IsNil(o.ProductItem) {
		var ret ProductItemReference
		return ret
	}
	return *o.ProductItem
}

// GetProductItemOk returns a tuple with the ProductItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetProductItemOk() (*ProductItemReference, bool) {
	if o == nil || IsNil(o.ProductItem) {
		return nil, false
	}
	return o.ProductItem, true
}

// HasProductItem returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasProductItem() bool {
	if o != nil && !IsNil(o.ProductItem) {
		return true
	}

	return false
}

// SetProductItem gets a reference to the given ProductItemReference and assigns it to the ProductItem field.
func (o *ProductPickingShippingDetail) SetProductItem(v ProductItemReference) {
	o.ProductItem = &v
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductPickingShippingDetail) GetLineNumber() int32 {
	if o == nil || IsNil(o.LineNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.LineNumber.Get()
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductPickingShippingDetail) GetLineNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineNumber.Get(), o.LineNumber.IsSet()
}

// HasLineNumber returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasLineNumber() bool {
	if o != nil && o.LineNumber.IsSet() {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given NullableInt32 and assigns it to the LineNumber field.
func (o *ProductPickingShippingDetail) SetLineNumber(v int32) {
	o.LineNumber.Set(&v)
}
// SetLineNumberNil sets the value for LineNumber to be an explicit nil
func (o *ProductPickingShippingDetail) SetLineNumberNil() {
	o.LineNumber.Set(nil)
}

// UnsetLineNumber ensures that no value is present for LineNumber, not even an explicit nil
func (o *ProductPickingShippingDetail) UnsetLineNumber() {
	o.LineNumber.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductPickingShippingDetail) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity.Get()) {
		var ret int32
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductPickingShippingDetail) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableInt32 and assigns it to the Quantity field.
func (o *ProductPickingShippingDetail) SetQuantity(v int32) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *ProductPickingShippingDetail) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *ProductPickingShippingDetail) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetExpectedArrivalDate returns the ExpectedArrivalDate field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetExpectedArrivalDate() time.Time {
	if o == nil || IsNil(o.ExpectedArrivalDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedArrivalDate
}

// GetExpectedArrivalDateOk returns a tuple with the ExpectedArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetExpectedArrivalDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpectedArrivalDate) {
		return nil, false
	}
	return o.ExpectedArrivalDate, true
}

// HasExpectedArrivalDate returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasExpectedArrivalDate() bool {
	if o != nil && !IsNil(o.ExpectedArrivalDate) {
		return true
	}

	return false
}

// SetExpectedArrivalDate gets a reference to the given time.Time and assigns it to the ExpectedArrivalDate field.
func (o *ProductPickingShippingDetail) SetExpectedArrivalDate(v time.Time) {
	o.ExpectedArrivalDate = &v
}

// GetShipmentDate returns the ShipmentDate field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetShipmentDate() time.Time {
	if o == nil || IsNil(o.ShipmentDate) {
		var ret time.Time
		return ret
	}
	return *o.ShipmentDate
}

// GetShipmentDateOk returns a tuple with the ShipmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetShipmentDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ShipmentDate) {
		return nil, false
	}
	return o.ShipmentDate, true
}

// HasShipmentDate returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasShipmentDate() bool {
	if o != nil && !IsNil(o.ShipmentDate) {
		return true
	}

	return false
}

// SetShipmentDate gets a reference to the given time.Time and assigns it to the ShipmentDate field.
func (o *ProductPickingShippingDetail) SetShipmentDate(v time.Time) {
	o.ShipmentDate = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ProductPickingShippingDetail) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPickingShippingDetail) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ProductPickingShippingDetail) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ProductPickingShippingDetail) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ProductPickingShippingDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductPickingShippingDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.PickedQuantity.IsSet() {
		toSerialize["pickedQuantity"] = o.PickedQuantity.Get()
	}
	if o.ShippedQuantity.IsSet() {
		toSerialize["shippedQuantity"] = o.ShippedQuantity.Get()
	}
	toSerialize["warehouse"] = o.Warehouse
	toSerialize["warehouseBin"] = o.WarehouseBin
	if !IsNil(o.ShipmentMethod) {
		toSerialize["shipmentMethod"] = o.ShipmentMethod
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.SerialNumberIds) {
		toSerialize["serialNumberIds"] = o.SerialNumberIds
	}
	if !IsNil(o.TrackingNumber) {
		toSerialize["trackingNumber"] = o.TrackingNumber
	}
	if !IsNil(o.ProductItem) {
		toSerialize["productItem"] = o.ProductItem
	}
	if o.LineNumber.IsSet() {
		toSerialize["lineNumber"] = o.LineNumber.Get()
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if !IsNil(o.ExpectedArrivalDate) {
		toSerialize["expectedArrivalDate"] = o.ExpectedArrivalDate
	}
	if !IsNil(o.ShipmentDate) {
		toSerialize["shipmentDate"] = o.ShipmentDate
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ProductPickingShippingDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"warehouse",
		"warehouseBin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductPickingShippingDetail := _ProductPickingShippingDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductPickingShippingDetail)

	if err != nil {
		return err
	}

	*o = ProductPickingShippingDetail(varProductPickingShippingDetail)

	return err
}

type NullableProductPickingShippingDetail struct {
	value *ProductPickingShippingDetail
	isSet bool
}

func (v NullableProductPickingShippingDetail) Get() *ProductPickingShippingDetail {
	return v.value
}

func (v *NullableProductPickingShippingDetail) Set(val *ProductPickingShippingDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableProductPickingShippingDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableProductPickingShippingDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductPickingShippingDetail(val *ProductPickingShippingDetail) *NullableProductPickingShippingDetail {
	return &NullableProductPickingShippingDetail{value: val, isSet: true}
}

func (v NullableProductPickingShippingDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductPickingShippingDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


