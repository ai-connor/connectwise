/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProjectBoardKanbanSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectBoardKanbanSetting{}

// ProjectBoardKanbanSetting struct for ProjectBoardKanbanSetting
type ProjectBoardKanbanSetting struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 50;
	Name string `json:"name"`
	//  Max length: 4;
	Color *string `json:"color,omitempty"`
	Order *int32 `json:"order,omitempty"`
	Statuses []ProjectBoardKanbanStatus `json:"statuses,omitempty"`
	//  Max length: 15;
	UpdatedBy *string `json:"updatedBy,omitempty"`
	LastUpdated *string `json:"lastUpdated,omitempty"`
}

type _ProjectBoardKanbanSetting ProjectBoardKanbanSetting

// NewProjectBoardKanbanSetting instantiates a new ProjectBoardKanbanSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectBoardKanbanSetting(name string) *ProjectBoardKanbanSetting {
	this := ProjectBoardKanbanSetting{}
	this.Name = name
	return &this
}

// NewProjectBoardKanbanSettingWithDefaults instantiates a new ProjectBoardKanbanSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectBoardKanbanSettingWithDefaults() *ProjectBoardKanbanSetting {
	this := ProjectBoardKanbanSetting{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectBoardKanbanSetting) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectBoardKanbanSetting) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectBoardKanbanSetting) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ProjectBoardKanbanSetting) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectBoardKanbanSetting) SetName(v string) {
	o.Name = v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ProjectBoardKanbanSetting) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ProjectBoardKanbanSetting) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ProjectBoardKanbanSetting) SetColor(v string) {
	o.Color = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ProjectBoardKanbanSetting) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ProjectBoardKanbanSetting) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ProjectBoardKanbanSetting) SetOrder(v int32) {
	o.Order = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *ProjectBoardKanbanSetting) GetStatuses() []ProjectBoardKanbanStatus {
	if o == nil || IsNil(o.Statuses) {
		var ret []ProjectBoardKanbanStatus
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetStatusesOk() ([]ProjectBoardKanbanStatus, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *ProjectBoardKanbanSetting) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []ProjectBoardKanbanStatus and assigns it to the Statuses field.
func (o *ProjectBoardKanbanSetting) SetStatuses(v []ProjectBoardKanbanStatus) {
	o.Statuses = v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ProjectBoardKanbanSetting) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ProjectBoardKanbanSetting) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *ProjectBoardKanbanSetting) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProjectBoardKanbanSetting) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBoardKanbanSetting) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProjectBoardKanbanSetting) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *ProjectBoardKanbanSetting) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

func (o ProjectBoardKanbanSetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectBoardKanbanSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

func (o *ProjectBoardKanbanSetting) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectBoardKanbanSetting := _ProjectBoardKanbanSetting{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProjectBoardKanbanSetting)

	if err != nil {
		return err
	}

	*o = ProjectBoardKanbanSetting(varProjectBoardKanbanSetting)

	return err
}

type NullableProjectBoardKanbanSetting struct {
	value *ProjectBoardKanbanSetting
	isSet bool
}

func (v NullableProjectBoardKanbanSetting) Get() *ProjectBoardKanbanSetting {
	return v.value
}

func (v *NullableProjectBoardKanbanSetting) Set(val *ProjectBoardKanbanSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectBoardKanbanSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectBoardKanbanSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectBoardKanbanSetting(val *ProjectBoardKanbanSetting) *NullableProjectBoardKanbanSetting {
	return &NullableProjectBoardKanbanSetting{value: val, isSet: true}
}

func (v NullableProjectBoardKanbanSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectBoardKanbanSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


