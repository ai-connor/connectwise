/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ProjectTemplateTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectTemplateTask{}

// ProjectTemplateTask struct for ProjectTemplateTask
type ProjectTemplateTask struct {
	Id *int32 `json:"id,omitempty"`
	TicketId NullableInt32 `json:"ticketId,omitempty"`
	Sequence NullableInt32 `json:"sequence,omitempty"`
	Description *string `json:"description,omitempty"`
	ConnectWiseId *string `json:"connectWiseId,omitempty"`
	ParentId NullableInt32 `json:"parentId,omitempty"`
	GrandParentId NullableInt32 `json:"grandParentId,omitempty"`
	ParentConnectWiseId *string `json:"parentConnectWiseId,omitempty"`
	GrandParentConnectWiseId *string `json:"grandParentConnectWiseId,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Code *ServiceCodeReference `json:"code,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewProjectTemplateTask instantiates a new ProjectTemplateTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectTemplateTask() *ProjectTemplateTask {
	this := ProjectTemplateTask{}
	return &this
}

// NewProjectTemplateTaskWithDefaults instantiates a new ProjectTemplateTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectTemplateTaskWithDefaults() *ProjectTemplateTask {
	this := ProjectTemplateTask{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectTemplateTask) SetId(v int32) {
	o.Id = &v
}

// GetTicketId returns the TicketId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTask) GetTicketId() int32 {
	if o == nil || IsNil(o.TicketId.Get()) {
		var ret int32
		return ret
	}
	return *o.TicketId.Get()
}

// GetTicketIdOk returns a tuple with the TicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTask) GetTicketIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TicketId.Get(), o.TicketId.IsSet()
}

// HasTicketId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasTicketId() bool {
	if o != nil && o.TicketId.IsSet() {
		return true
	}

	return false
}

// SetTicketId gets a reference to the given NullableInt32 and assigns it to the TicketId field.
func (o *ProjectTemplateTask) SetTicketId(v int32) {
	o.TicketId.Set(&v)
}
// SetTicketIdNil sets the value for TicketId to be an explicit nil
func (o *ProjectTemplateTask) SetTicketIdNil() {
	o.TicketId.Set(nil)
}

// UnsetTicketId ensures that no value is present for TicketId, not even an explicit nil
func (o *ProjectTemplateTask) UnsetTicketId() {
	o.TicketId.Unset()
}

// GetSequence returns the Sequence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTask) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence.Get()) {
		var ret int32
		return ret
	}
	return *o.Sequence.Get()
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTask) GetSequenceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sequence.Get(), o.Sequence.IsSet()
}

// HasSequence returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasSequence() bool {
	if o != nil && o.Sequence.IsSet() {
		return true
	}

	return false
}

// SetSequence gets a reference to the given NullableInt32 and assigns it to the Sequence field.
func (o *ProjectTemplateTask) SetSequence(v int32) {
	o.Sequence.Set(&v)
}
// SetSequenceNil sets the value for Sequence to be an explicit nil
func (o *ProjectTemplateTask) SetSequenceNil() {
	o.Sequence.Set(nil)
}

// UnsetSequence ensures that no value is present for Sequence, not even an explicit nil
func (o *ProjectTemplateTask) UnsetSequence() {
	o.Sequence.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectTemplateTask) SetDescription(v string) {
	o.Description = &v
}

// GetConnectWiseId returns the ConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetConnectWiseId() string {
	if o == nil || IsNil(o.ConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ConnectWiseId
}

// GetConnectWiseIdOk returns a tuple with the ConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseId) {
		return nil, false
	}
	return o.ConnectWiseId, true
}

// HasConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasConnectWiseId() bool {
	if o != nil && !IsNil(o.ConnectWiseId) {
		return true
	}

	return false
}

// SetConnectWiseId gets a reference to the given string and assigns it to the ConnectWiseId field.
func (o *ProjectTemplateTask) SetConnectWiseId(v string) {
	o.ConnectWiseId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTask) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTask) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *ProjectTemplateTask) SetParentId(v int32) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *ProjectTemplateTask) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *ProjectTemplateTask) UnsetParentId() {
	o.ParentId.Unset()
}

// GetGrandParentId returns the GrandParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTask) GetGrandParentId() int32 {
	if o == nil || IsNil(o.GrandParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.GrandParentId.Get()
}

// GetGrandParentIdOk returns a tuple with the GrandParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTask) GetGrandParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrandParentId.Get(), o.GrandParentId.IsSet()
}

// HasGrandParentId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasGrandParentId() bool {
	if o != nil && o.GrandParentId.IsSet() {
		return true
	}

	return false
}

// SetGrandParentId gets a reference to the given NullableInt32 and assigns it to the GrandParentId field.
func (o *ProjectTemplateTask) SetGrandParentId(v int32) {
	o.GrandParentId.Set(&v)
}
// SetGrandParentIdNil sets the value for GrandParentId to be an explicit nil
func (o *ProjectTemplateTask) SetGrandParentIdNil() {
	o.GrandParentId.Set(nil)
}

// UnsetGrandParentId ensures that no value is present for GrandParentId, not even an explicit nil
func (o *ProjectTemplateTask) UnsetGrandParentId() {
	o.GrandParentId.Unset()
}

// GetParentConnectWiseId returns the ParentConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetParentConnectWiseId() string {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ParentConnectWiseId
}

// GetParentConnectWiseIdOk returns a tuple with the ParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		return nil, false
	}
	return o.ParentConnectWiseId, true
}

// HasParentConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasParentConnectWiseId() bool {
	if o != nil && !IsNil(o.ParentConnectWiseId) {
		return true
	}

	return false
}

// SetParentConnectWiseId gets a reference to the given string and assigns it to the ParentConnectWiseId field.
func (o *ProjectTemplateTask) SetParentConnectWiseId(v string) {
	o.ParentConnectWiseId = &v
}

// GetGrandParentConnectWiseId returns the GrandParentConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetGrandParentConnectWiseId() string {
	if o == nil || IsNil(o.GrandParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.GrandParentConnectWiseId
}

// GetGrandParentConnectWiseIdOk returns a tuple with the GrandParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetGrandParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.GrandParentConnectWiseId) {
		return nil, false
	}
	return o.GrandParentConnectWiseId, true
}

// HasGrandParentConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasGrandParentConnectWiseId() bool {
	if o != nil && !IsNil(o.GrandParentConnectWiseId) {
		return true
	}

	return false
}

// SetGrandParentConnectWiseId gets a reference to the given string and assigns it to the GrandParentConnectWiseId field.
func (o *ProjectTemplateTask) SetGrandParentConnectWiseId(v string) {
	o.GrandParentConnectWiseId = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *ProjectTemplateTask) SetSummary(v string) {
	o.Summary = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetCode() ServiceCodeReference {
	if o == nil || IsNil(o.Code) {
		var ret ServiceCodeReference
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetCodeOk() (*ServiceCodeReference, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given ServiceCodeReference and assigns it to the Code field.
func (o *ProjectTemplateTask) SetCode(v ServiceCodeReference) {
	o.Code = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ProjectTemplateTask) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTask) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ProjectTemplateTask) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ProjectTemplateTask) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ProjectTemplateTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectTemplateTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.TicketId.IsSet() {
		toSerialize["ticketId"] = o.TicketId.Get()
	}
	if o.Sequence.IsSet() {
		toSerialize["sequence"] = o.Sequence.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ConnectWiseId) {
		toSerialize["connectWiseId"] = o.ConnectWiseId
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if o.GrandParentId.IsSet() {
		toSerialize["grandParentId"] = o.GrandParentId.Get()
	}
	if !IsNil(o.ParentConnectWiseId) {
		toSerialize["parentConnectWiseId"] = o.ParentConnectWiseId
	}
	if !IsNil(o.GrandParentConnectWiseId) {
		toSerialize["grandParentConnectWiseId"] = o.GrandParentConnectWiseId
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableProjectTemplateTask struct {
	value *ProjectTemplateTask
	isSet bool
}

func (v NullableProjectTemplateTask) Get() *ProjectTemplateTask {
	return v.value
}

func (v *NullableProjectTemplateTask) Set(val *ProjectTemplateTask) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectTemplateTask) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectTemplateTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectTemplateTask(val *ProjectTemplateTask) *NullableProjectTemplateTask {
	return &NullableProjectTemplateTask{value: val, isSet: true}
}

func (v NullableProjectTemplateTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectTemplateTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


