/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProjectTemplateTicket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectTemplateTicket{}

// ProjectTemplateTicket struct for ProjectTemplateTicket
type ProjectTemplateTicket struct {
	Id *int32 `json:"id,omitempty"`
	ProjectTemplateId NullableInt32 `json:"projectTemplateId,omitempty"`
	ProjectTemplatePhaseId NullableInt32 `json:"projectTemplatePhaseId,omitempty"`
	LineNumber NullableFloat64 `json:"lineNumber,omitempty"`
	//  Max length: 100;
	Description string `json:"description"`
	ConnectWiseId *string `json:"connectWiseId,omitempty"`
	ParentId NullableInt32 `json:"parentId,omitempty"`
	ParentConnectWiseId *string `json:"parentConnectWiseId,omitempty"`
	ProjectTemplatePhaseCwId *string `json:"projectTemplatePhaseCwId,omitempty"`
	Notes *string `json:"notes,omitempty"`
	InternalAnalysis *string `json:"internalAnalysis,omitempty"`
	Resolution *string `json:"resolution,omitempty"`
	BudgetHours NullableFloat64 `json:"budgetHours,omitempty"`
	Duration NullableInt32 `json:"duration,omitempty"`
	//  Max length: 50;
	WbsCode *string `json:"wbsCode,omitempty"`
	BillSeparatelyFlag NullableBool `json:"billSeparatelyFlag,omitempty"`
	MarkAsMilestoneFlag NullableBool `json:"markAsMilestoneFlag,omitempty"`
	//  Max length: 1;
	RecordType *string `json:"recordType,omitempty"`
	PmTmpProjectRecID NullableInt32 `json:"pmTmpProjectRecID,omitempty"`
	PredecessorType NullableString `json:"predecessorType,omitempty"`
	PredecessorId NullableInt32 `json:"predecessorId,omitempty"`
	PredecessorClosedFlag NullableBool `json:"predecessorClosedFlag,omitempty"`
	LagDays NullableInt32 `json:"lagDays,omitempty"`
	LagNonworkingDaysFlag NullableBool `json:"lagNonworkingDaysFlag,omitempty"`
	Priority *PriorityReference `json:"priority,omitempty"`
	Source *ServiceSourceReference `json:"source,omitempty"`
	WorkRole *WorkRoleReference `json:"workRole,omitempty"`
	WorkType *WorkTypeReference `json:"workType,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ProjectTemplateTicket ProjectTemplateTicket

// NewProjectTemplateTicket instantiates a new ProjectTemplateTicket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectTemplateTicket(description string) *ProjectTemplateTicket {
	this := ProjectTemplateTicket{}
	this.Description = description
	return &this
}

// NewProjectTemplateTicketWithDefaults instantiates a new ProjectTemplateTicket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectTemplateTicketWithDefaults() *ProjectTemplateTicket {
	this := ProjectTemplateTicket{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectTemplateTicket) SetId(v int32) {
	o.Id = &v
}

// GetProjectTemplateId returns the ProjectTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetProjectTemplateId() int32 {
	if o == nil || IsNil(o.ProjectTemplateId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectTemplateId.Get()
}

// GetProjectTemplateIdOk returns a tuple with the ProjectTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetProjectTemplateIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectTemplateId.Get(), o.ProjectTemplateId.IsSet()
}

// HasProjectTemplateId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasProjectTemplateId() bool {
	if o != nil && o.ProjectTemplateId.IsSet() {
		return true
	}

	return false
}

// SetProjectTemplateId gets a reference to the given NullableInt32 and assigns it to the ProjectTemplateId field.
func (o *ProjectTemplateTicket) SetProjectTemplateId(v int32) {
	o.ProjectTemplateId.Set(&v)
}
// SetProjectTemplateIdNil sets the value for ProjectTemplateId to be an explicit nil
func (o *ProjectTemplateTicket) SetProjectTemplateIdNil() {
	o.ProjectTemplateId.Set(nil)
}

// UnsetProjectTemplateId ensures that no value is present for ProjectTemplateId, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetProjectTemplateId() {
	o.ProjectTemplateId.Unset()
}

// GetProjectTemplatePhaseId returns the ProjectTemplatePhaseId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetProjectTemplatePhaseId() int32 {
	if o == nil || IsNil(o.ProjectTemplatePhaseId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectTemplatePhaseId.Get()
}

// GetProjectTemplatePhaseIdOk returns a tuple with the ProjectTemplatePhaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetProjectTemplatePhaseIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectTemplatePhaseId.Get(), o.ProjectTemplatePhaseId.IsSet()
}

// HasProjectTemplatePhaseId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasProjectTemplatePhaseId() bool {
	if o != nil && o.ProjectTemplatePhaseId.IsSet() {
		return true
	}

	return false
}

// SetProjectTemplatePhaseId gets a reference to the given NullableInt32 and assigns it to the ProjectTemplatePhaseId field.
func (o *ProjectTemplateTicket) SetProjectTemplatePhaseId(v int32) {
	o.ProjectTemplatePhaseId.Set(&v)
}
// SetProjectTemplatePhaseIdNil sets the value for ProjectTemplatePhaseId to be an explicit nil
func (o *ProjectTemplateTicket) SetProjectTemplatePhaseIdNil() {
	o.ProjectTemplatePhaseId.Set(nil)
}

// UnsetProjectTemplatePhaseId ensures that no value is present for ProjectTemplatePhaseId, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetProjectTemplatePhaseId() {
	o.ProjectTemplatePhaseId.Unset()
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetLineNumber() float64 {
	if o == nil || IsNil(o.LineNumber.Get()) {
		var ret float64
		return ret
	}
	return *o.LineNumber.Get()
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetLineNumberOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineNumber.Get(), o.LineNumber.IsSet()
}

// HasLineNumber returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasLineNumber() bool {
	if o != nil && o.LineNumber.IsSet() {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given NullableFloat64 and assigns it to the LineNumber field.
func (o *ProjectTemplateTicket) SetLineNumber(v float64) {
	o.LineNumber.Set(&v)
}
// SetLineNumberNil sets the value for LineNumber to be an explicit nil
func (o *ProjectTemplateTicket) SetLineNumberNil() {
	o.LineNumber.Set(nil)
}

// UnsetLineNumber ensures that no value is present for LineNumber, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetLineNumber() {
	o.LineNumber.Unset()
}

// GetDescription returns the Description field value
func (o *ProjectTemplateTicket) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ProjectTemplateTicket) SetDescription(v string) {
	o.Description = v
}

// GetConnectWiseId returns the ConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetConnectWiseId() string {
	if o == nil || IsNil(o.ConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ConnectWiseId
}

// GetConnectWiseIdOk returns a tuple with the ConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseId) {
		return nil, false
	}
	return o.ConnectWiseId, true
}

// HasConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasConnectWiseId() bool {
	if o != nil && !IsNil(o.ConnectWiseId) {
		return true
	}

	return false
}

// SetConnectWiseId gets a reference to the given string and assigns it to the ConnectWiseId field.
func (o *ProjectTemplateTicket) SetConnectWiseId(v string) {
	o.ConnectWiseId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *ProjectTemplateTicket) SetParentId(v int32) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *ProjectTemplateTicket) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetParentId() {
	o.ParentId.Unset()
}

// GetParentConnectWiseId returns the ParentConnectWiseId field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetParentConnectWiseId() string {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ParentConnectWiseId
}

// GetParentConnectWiseIdOk returns a tuple with the ParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		return nil, false
	}
	return o.ParentConnectWiseId, true
}

// HasParentConnectWiseId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasParentConnectWiseId() bool {
	if o != nil && !IsNil(o.ParentConnectWiseId) {
		return true
	}

	return false
}

// SetParentConnectWiseId gets a reference to the given string and assigns it to the ParentConnectWiseId field.
func (o *ProjectTemplateTicket) SetParentConnectWiseId(v string) {
	o.ParentConnectWiseId = &v
}

// GetProjectTemplatePhaseCwId returns the ProjectTemplatePhaseCwId field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetProjectTemplatePhaseCwId() string {
	if o == nil || IsNil(o.ProjectTemplatePhaseCwId) {
		var ret string
		return ret
	}
	return *o.ProjectTemplatePhaseCwId
}

// GetProjectTemplatePhaseCwIdOk returns a tuple with the ProjectTemplatePhaseCwId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetProjectTemplatePhaseCwIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectTemplatePhaseCwId) {
		return nil, false
	}
	return o.ProjectTemplatePhaseCwId, true
}

// HasProjectTemplatePhaseCwId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasProjectTemplatePhaseCwId() bool {
	if o != nil && !IsNil(o.ProjectTemplatePhaseCwId) {
		return true
	}

	return false
}

// SetProjectTemplatePhaseCwId gets a reference to the given string and assigns it to the ProjectTemplatePhaseCwId field.
func (o *ProjectTemplateTicket) SetProjectTemplatePhaseCwId(v string) {
	o.ProjectTemplatePhaseCwId = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *ProjectTemplateTicket) SetNotes(v string) {
	o.Notes = &v
}

// GetInternalAnalysis returns the InternalAnalysis field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetInternalAnalysis() string {
	if o == nil || IsNil(o.InternalAnalysis) {
		var ret string
		return ret
	}
	return *o.InternalAnalysis
}

// GetInternalAnalysisOk returns a tuple with the InternalAnalysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetInternalAnalysisOk() (*string, bool) {
	if o == nil || IsNil(o.InternalAnalysis) {
		return nil, false
	}
	return o.InternalAnalysis, true
}

// HasInternalAnalysis returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasInternalAnalysis() bool {
	if o != nil && !IsNil(o.InternalAnalysis) {
		return true
	}

	return false
}

// SetInternalAnalysis gets a reference to the given string and assigns it to the InternalAnalysis field.
func (o *ProjectTemplateTicket) SetInternalAnalysis(v string) {
	o.InternalAnalysis = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetResolution() string {
	if o == nil || IsNil(o.Resolution) {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetResolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Resolution) {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasResolution() bool {
	if o != nil && !IsNil(o.Resolution) {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *ProjectTemplateTicket) SetResolution(v string) {
	o.Resolution = &v
}

// GetBudgetHours returns the BudgetHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetBudgetHours() float64 {
	if o == nil || IsNil(o.BudgetHours.Get()) {
		var ret float64
		return ret
	}
	return *o.BudgetHours.Get()
}

// GetBudgetHoursOk returns a tuple with the BudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetBudgetHoursOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BudgetHours.Get(), o.BudgetHours.IsSet()
}

// HasBudgetHours returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasBudgetHours() bool {
	if o != nil && o.BudgetHours.IsSet() {
		return true
	}

	return false
}

// SetBudgetHours gets a reference to the given NullableFloat64 and assigns it to the BudgetHours field.
func (o *ProjectTemplateTicket) SetBudgetHours(v float64) {
	o.BudgetHours.Set(&v)
}
// SetBudgetHoursNil sets the value for BudgetHours to be an explicit nil
func (o *ProjectTemplateTicket) SetBudgetHoursNil() {
	o.BudgetHours.Set(nil)
}

// UnsetBudgetHours ensures that no value is present for BudgetHours, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetBudgetHours() {
	o.BudgetHours.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetDuration() int32 {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret int32
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableInt32 and assigns it to the Duration field.
func (o *ProjectTemplateTicket) SetDuration(v int32) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *ProjectTemplateTicket) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetDuration() {
	o.Duration.Unset()
}

// GetWbsCode returns the WbsCode field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetWbsCode() string {
	if o == nil || IsNil(o.WbsCode) {
		var ret string
		return ret
	}
	return *o.WbsCode
}

// GetWbsCodeOk returns a tuple with the WbsCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetWbsCodeOk() (*string, bool) {
	if o == nil || IsNil(o.WbsCode) {
		return nil, false
	}
	return o.WbsCode, true
}

// HasWbsCode returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasWbsCode() bool {
	if o != nil && !IsNil(o.WbsCode) {
		return true
	}

	return false
}

// SetWbsCode gets a reference to the given string and assigns it to the WbsCode field.
func (o *ProjectTemplateTicket) SetWbsCode(v string) {
	o.WbsCode = &v
}

// GetBillSeparatelyFlag returns the BillSeparatelyFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetBillSeparatelyFlag() bool {
	if o == nil || IsNil(o.BillSeparatelyFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.BillSeparatelyFlag.Get()
}

// GetBillSeparatelyFlagOk returns a tuple with the BillSeparatelyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetBillSeparatelyFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillSeparatelyFlag.Get(), o.BillSeparatelyFlag.IsSet()
}

// HasBillSeparatelyFlag returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasBillSeparatelyFlag() bool {
	if o != nil && o.BillSeparatelyFlag.IsSet() {
		return true
	}

	return false
}

// SetBillSeparatelyFlag gets a reference to the given NullableBool and assigns it to the BillSeparatelyFlag field.
func (o *ProjectTemplateTicket) SetBillSeparatelyFlag(v bool) {
	o.BillSeparatelyFlag.Set(&v)
}
// SetBillSeparatelyFlagNil sets the value for BillSeparatelyFlag to be an explicit nil
func (o *ProjectTemplateTicket) SetBillSeparatelyFlagNil() {
	o.BillSeparatelyFlag.Set(nil)
}

// UnsetBillSeparatelyFlag ensures that no value is present for BillSeparatelyFlag, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetBillSeparatelyFlag() {
	o.BillSeparatelyFlag.Unset()
}

// GetMarkAsMilestoneFlag returns the MarkAsMilestoneFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetMarkAsMilestoneFlag() bool {
	if o == nil || IsNil(o.MarkAsMilestoneFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.MarkAsMilestoneFlag.Get()
}

// GetMarkAsMilestoneFlagOk returns a tuple with the MarkAsMilestoneFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetMarkAsMilestoneFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarkAsMilestoneFlag.Get(), o.MarkAsMilestoneFlag.IsSet()
}

// HasMarkAsMilestoneFlag returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasMarkAsMilestoneFlag() bool {
	if o != nil && o.MarkAsMilestoneFlag.IsSet() {
		return true
	}

	return false
}

// SetMarkAsMilestoneFlag gets a reference to the given NullableBool and assigns it to the MarkAsMilestoneFlag field.
func (o *ProjectTemplateTicket) SetMarkAsMilestoneFlag(v bool) {
	o.MarkAsMilestoneFlag.Set(&v)
}
// SetMarkAsMilestoneFlagNil sets the value for MarkAsMilestoneFlag to be an explicit nil
func (o *ProjectTemplateTicket) SetMarkAsMilestoneFlagNil() {
	o.MarkAsMilestoneFlag.Set(nil)
}

// UnsetMarkAsMilestoneFlag ensures that no value is present for MarkAsMilestoneFlag, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetMarkAsMilestoneFlag() {
	o.MarkAsMilestoneFlag.Unset()
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *ProjectTemplateTicket) SetRecordType(v string) {
	o.RecordType = &v
}

// GetPmTmpProjectRecID returns the PmTmpProjectRecID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetPmTmpProjectRecID() int32 {
	if o == nil || IsNil(o.PmTmpProjectRecID.Get()) {
		var ret int32
		return ret
	}
	return *o.PmTmpProjectRecID.Get()
}

// GetPmTmpProjectRecIDOk returns a tuple with the PmTmpProjectRecID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetPmTmpProjectRecIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PmTmpProjectRecID.Get(), o.PmTmpProjectRecID.IsSet()
}

// HasPmTmpProjectRecID returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasPmTmpProjectRecID() bool {
	if o != nil && o.PmTmpProjectRecID.IsSet() {
		return true
	}

	return false
}

// SetPmTmpProjectRecID gets a reference to the given NullableInt32 and assigns it to the PmTmpProjectRecID field.
func (o *ProjectTemplateTicket) SetPmTmpProjectRecID(v int32) {
	o.PmTmpProjectRecID.Set(&v)
}
// SetPmTmpProjectRecIDNil sets the value for PmTmpProjectRecID to be an explicit nil
func (o *ProjectTemplateTicket) SetPmTmpProjectRecIDNil() {
	o.PmTmpProjectRecID.Set(nil)
}

// UnsetPmTmpProjectRecID ensures that no value is present for PmTmpProjectRecID, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetPmTmpProjectRecID() {
	o.PmTmpProjectRecID.Unset()
}

// GetPredecessorType returns the PredecessorType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetPredecessorType() string {
	if o == nil || IsNil(o.PredecessorType.Get()) {
		var ret string
		return ret
	}
	return *o.PredecessorType.Get()
}

// GetPredecessorTypeOk returns a tuple with the PredecessorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetPredecessorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredecessorType.Get(), o.PredecessorType.IsSet()
}

// HasPredecessorType returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasPredecessorType() bool {
	if o != nil && o.PredecessorType.IsSet() {
		return true
	}

	return false
}

// SetPredecessorType gets a reference to the given NullableString and assigns it to the PredecessorType field.
func (o *ProjectTemplateTicket) SetPredecessorType(v string) {
	o.PredecessorType.Set(&v)
}
// SetPredecessorTypeNil sets the value for PredecessorType to be an explicit nil
func (o *ProjectTemplateTicket) SetPredecessorTypeNil() {
	o.PredecessorType.Set(nil)
}

// UnsetPredecessorType ensures that no value is present for PredecessorType, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetPredecessorType() {
	o.PredecessorType.Unset()
}

// GetPredecessorId returns the PredecessorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetPredecessorId() int32 {
	if o == nil || IsNil(o.PredecessorId.Get()) {
		var ret int32
		return ret
	}
	return *o.PredecessorId.Get()
}

// GetPredecessorIdOk returns a tuple with the PredecessorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetPredecessorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredecessorId.Get(), o.PredecessorId.IsSet()
}

// HasPredecessorId returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasPredecessorId() bool {
	if o != nil && o.PredecessorId.IsSet() {
		return true
	}

	return false
}

// SetPredecessorId gets a reference to the given NullableInt32 and assigns it to the PredecessorId field.
func (o *ProjectTemplateTicket) SetPredecessorId(v int32) {
	o.PredecessorId.Set(&v)
}
// SetPredecessorIdNil sets the value for PredecessorId to be an explicit nil
func (o *ProjectTemplateTicket) SetPredecessorIdNil() {
	o.PredecessorId.Set(nil)
}

// UnsetPredecessorId ensures that no value is present for PredecessorId, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetPredecessorId() {
	o.PredecessorId.Unset()
}

// GetPredecessorClosedFlag returns the PredecessorClosedFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetPredecessorClosedFlag() bool {
	if o == nil || IsNil(o.PredecessorClosedFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.PredecessorClosedFlag.Get()
}

// GetPredecessorClosedFlagOk returns a tuple with the PredecessorClosedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetPredecessorClosedFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredecessorClosedFlag.Get(), o.PredecessorClosedFlag.IsSet()
}

// HasPredecessorClosedFlag returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasPredecessorClosedFlag() bool {
	if o != nil && o.PredecessorClosedFlag.IsSet() {
		return true
	}

	return false
}

// SetPredecessorClosedFlag gets a reference to the given NullableBool and assigns it to the PredecessorClosedFlag field.
func (o *ProjectTemplateTicket) SetPredecessorClosedFlag(v bool) {
	o.PredecessorClosedFlag.Set(&v)
}
// SetPredecessorClosedFlagNil sets the value for PredecessorClosedFlag to be an explicit nil
func (o *ProjectTemplateTicket) SetPredecessorClosedFlagNil() {
	o.PredecessorClosedFlag.Set(nil)
}

// UnsetPredecessorClosedFlag ensures that no value is present for PredecessorClosedFlag, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetPredecessorClosedFlag() {
	o.PredecessorClosedFlag.Unset()
}

// GetLagDays returns the LagDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetLagDays() int32 {
	if o == nil || IsNil(o.LagDays.Get()) {
		var ret int32
		return ret
	}
	return *o.LagDays.Get()
}

// GetLagDaysOk returns a tuple with the LagDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetLagDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LagDays.Get(), o.LagDays.IsSet()
}

// HasLagDays returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasLagDays() bool {
	if o != nil && o.LagDays.IsSet() {
		return true
	}

	return false
}

// SetLagDays gets a reference to the given NullableInt32 and assigns it to the LagDays field.
func (o *ProjectTemplateTicket) SetLagDays(v int32) {
	o.LagDays.Set(&v)
}
// SetLagDaysNil sets the value for LagDays to be an explicit nil
func (o *ProjectTemplateTicket) SetLagDaysNil() {
	o.LagDays.Set(nil)
}

// UnsetLagDays ensures that no value is present for LagDays, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetLagDays() {
	o.LagDays.Unset()
}

// GetLagNonworkingDaysFlag returns the LagNonworkingDaysFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectTemplateTicket) GetLagNonworkingDaysFlag() bool {
	if o == nil || IsNil(o.LagNonworkingDaysFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.LagNonworkingDaysFlag.Get()
}

// GetLagNonworkingDaysFlagOk returns a tuple with the LagNonworkingDaysFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectTemplateTicket) GetLagNonworkingDaysFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LagNonworkingDaysFlag.Get(), o.LagNonworkingDaysFlag.IsSet()
}

// HasLagNonworkingDaysFlag returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasLagNonworkingDaysFlag() bool {
	if o != nil && o.LagNonworkingDaysFlag.IsSet() {
		return true
	}

	return false
}

// SetLagNonworkingDaysFlag gets a reference to the given NullableBool and assigns it to the LagNonworkingDaysFlag field.
func (o *ProjectTemplateTicket) SetLagNonworkingDaysFlag(v bool) {
	o.LagNonworkingDaysFlag.Set(&v)
}
// SetLagNonworkingDaysFlagNil sets the value for LagNonworkingDaysFlag to be an explicit nil
func (o *ProjectTemplateTicket) SetLagNonworkingDaysFlagNil() {
	o.LagNonworkingDaysFlag.Set(nil)
}

// UnsetLagNonworkingDaysFlag ensures that no value is present for LagNonworkingDaysFlag, not even an explicit nil
func (o *ProjectTemplateTicket) UnsetLagNonworkingDaysFlag() {
	o.LagNonworkingDaysFlag.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetPriority() PriorityReference {
	if o == nil || IsNil(o.Priority) {
		var ret PriorityReference
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetPriorityOk() (*PriorityReference, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given PriorityReference and assigns it to the Priority field.
func (o *ProjectTemplateTicket) SetPriority(v PriorityReference) {
	o.Priority = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetSource() ServiceSourceReference {
	if o == nil || IsNil(o.Source) {
		var ret ServiceSourceReference
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetSourceOk() (*ServiceSourceReference, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given ServiceSourceReference and assigns it to the Source field.
func (o *ProjectTemplateTicket) SetSource(v ServiceSourceReference) {
	o.Source = &v
}

// GetWorkRole returns the WorkRole field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetWorkRole() WorkRoleReference {
	if o == nil || IsNil(o.WorkRole) {
		var ret WorkRoleReference
		return ret
	}
	return *o.WorkRole
}

// GetWorkRoleOk returns a tuple with the WorkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetWorkRoleOk() (*WorkRoleReference, bool) {
	if o == nil || IsNil(o.WorkRole) {
		return nil, false
	}
	return o.WorkRole, true
}

// HasWorkRole returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasWorkRole() bool {
	if o != nil && !IsNil(o.WorkRole) {
		return true
	}

	return false
}

// SetWorkRole gets a reference to the given WorkRoleReference and assigns it to the WorkRole field.
func (o *ProjectTemplateTicket) SetWorkRole(v WorkRoleReference) {
	o.WorkRole = &v
}

// GetWorkType returns the WorkType field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetWorkType() WorkTypeReference {
	if o == nil || IsNil(o.WorkType) {
		var ret WorkTypeReference
		return ret
	}
	return *o.WorkType
}

// GetWorkTypeOk returns a tuple with the WorkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetWorkTypeOk() (*WorkTypeReference, bool) {
	if o == nil || IsNil(o.WorkType) {
		return nil, false
	}
	return o.WorkType, true
}

// HasWorkType returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasWorkType() bool {
	if o != nil && !IsNil(o.WorkType) {
		return true
	}

	return false
}

// SetWorkType gets a reference to the given WorkTypeReference and assigns it to the WorkType field.
func (o *ProjectTemplateTicket) SetWorkType(v WorkTypeReference) {
	o.WorkType = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ProjectTemplateTicket) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateTicket) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ProjectTemplateTicket) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ProjectTemplateTicket) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ProjectTemplateTicket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectTemplateTicket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ProjectTemplateId.IsSet() {
		toSerialize["projectTemplateId"] = o.ProjectTemplateId.Get()
	}
	if o.ProjectTemplatePhaseId.IsSet() {
		toSerialize["projectTemplatePhaseId"] = o.ProjectTemplatePhaseId.Get()
	}
	if o.LineNumber.IsSet() {
		toSerialize["lineNumber"] = o.LineNumber.Get()
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.ConnectWiseId) {
		toSerialize["connectWiseId"] = o.ConnectWiseId
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if !IsNil(o.ParentConnectWiseId) {
		toSerialize["parentConnectWiseId"] = o.ParentConnectWiseId
	}
	if !IsNil(o.ProjectTemplatePhaseCwId) {
		toSerialize["projectTemplatePhaseCwId"] = o.ProjectTemplatePhaseCwId
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.InternalAnalysis) {
		toSerialize["internalAnalysis"] = o.InternalAnalysis
	}
	if !IsNil(o.Resolution) {
		toSerialize["resolution"] = o.Resolution
	}
	if o.BudgetHours.IsSet() {
		toSerialize["budgetHours"] = o.BudgetHours.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if !IsNil(o.WbsCode) {
		toSerialize["wbsCode"] = o.WbsCode
	}
	if o.BillSeparatelyFlag.IsSet() {
		toSerialize["billSeparatelyFlag"] = o.BillSeparatelyFlag.Get()
	}
	if o.MarkAsMilestoneFlag.IsSet() {
		toSerialize["markAsMilestoneFlag"] = o.MarkAsMilestoneFlag.Get()
	}
	if !IsNil(o.RecordType) {
		toSerialize["recordType"] = o.RecordType
	}
	if o.PmTmpProjectRecID.IsSet() {
		toSerialize["pmTmpProjectRecID"] = o.PmTmpProjectRecID.Get()
	}
	if o.PredecessorType.IsSet() {
		toSerialize["predecessorType"] = o.PredecessorType.Get()
	}
	if o.PredecessorId.IsSet() {
		toSerialize["predecessorId"] = o.PredecessorId.Get()
	}
	if o.PredecessorClosedFlag.IsSet() {
		toSerialize["predecessorClosedFlag"] = o.PredecessorClosedFlag.Get()
	}
	if o.LagDays.IsSet() {
		toSerialize["lagDays"] = o.LagDays.Get()
	}
	if o.LagNonworkingDaysFlag.IsSet() {
		toSerialize["lagNonworkingDaysFlag"] = o.LagNonworkingDaysFlag.Get()
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.WorkRole) {
		toSerialize["workRole"] = o.WorkRole
	}
	if !IsNil(o.WorkType) {
		toSerialize["workType"] = o.WorkType
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ProjectTemplateTicket) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectTemplateTicket := _ProjectTemplateTicket{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProjectTemplateTicket)

	if err != nil {
		return err
	}

	*o = ProjectTemplateTicket(varProjectTemplateTicket)

	return err
}

type NullableProjectTemplateTicket struct {
	value *ProjectTemplateTicket
	isSet bool
}

func (v NullableProjectTemplateTicket) Get() *ProjectTemplateTicket {
	return v.value
}

func (v *NullableProjectTemplateTicket) Set(val *ProjectTemplateTicket) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectTemplateTicket) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectTemplateTicket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectTemplateTicket(val *ProjectTemplateTicket) *NullableProjectTemplateTicket {
	return &NullableProjectTemplateTicket{value: val, isSet: true}
}

func (v NullableProjectTemplateTicket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectTemplateTicket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


