/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ProjectTemplateWorkPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectTemplateWorkPlan{}

// ProjectTemplateWorkPlan struct for ProjectTemplateWorkPlan
type ProjectTemplateWorkPlan struct {
	TemplateId *int32 `json:"templateId,omitempty"`
	Phases []TemplatePhase `json:"phases,omitempty"`
}

// NewProjectTemplateWorkPlan instantiates a new ProjectTemplateWorkPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectTemplateWorkPlan() *ProjectTemplateWorkPlan {
	this := ProjectTemplateWorkPlan{}
	return &this
}

// NewProjectTemplateWorkPlanWithDefaults instantiates a new ProjectTemplateWorkPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectTemplateWorkPlanWithDefaults() *ProjectTemplateWorkPlan {
	this := ProjectTemplateWorkPlan{}
	return &this
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *ProjectTemplateWorkPlan) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateWorkPlan) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ProjectTemplateWorkPlan) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *ProjectTemplateWorkPlan) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetPhases returns the Phases field value if set, zero value otherwise.
func (o *ProjectTemplateWorkPlan) GetPhases() []TemplatePhase {
	if o == nil || IsNil(o.Phases) {
		var ret []TemplatePhase
		return ret
	}
	return o.Phases
}

// GetPhasesOk returns a tuple with the Phases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectTemplateWorkPlan) GetPhasesOk() ([]TemplatePhase, bool) {
	if o == nil || IsNil(o.Phases) {
		return nil, false
	}
	return o.Phases, true
}

// HasPhases returns a boolean if a field has been set.
func (o *ProjectTemplateWorkPlan) HasPhases() bool {
	if o != nil && !IsNil(o.Phases) {
		return true
	}

	return false
}

// SetPhases gets a reference to the given []TemplatePhase and assigns it to the Phases field.
func (o *ProjectTemplateWorkPlan) SetPhases(v []TemplatePhase) {
	o.Phases = v
}

func (o ProjectTemplateWorkPlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectTemplateWorkPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	if !IsNil(o.Phases) {
		toSerialize["phases"] = o.Phases
	}
	return toSerialize, nil
}

type NullableProjectTemplateWorkPlan struct {
	value *ProjectTemplateWorkPlan
	isSet bool
}

func (v NullableProjectTemplateWorkPlan) Get() *ProjectTemplateWorkPlan {
	return v.value
}

func (v *NullableProjectTemplateWorkPlan) Set(val *ProjectTemplateWorkPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectTemplateWorkPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectTemplateWorkPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectTemplateWorkPlan(val *ProjectTemplateWorkPlan) *NullableProjectTemplateWorkPlan {
	return &NullableProjectTemplateWorkPlan{value: val, isSet: true}
}

func (v NullableProjectTemplateWorkPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectTemplateWorkPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


