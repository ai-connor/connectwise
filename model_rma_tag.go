/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RmaTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RmaTag{}

// RmaTag struct for RmaTag
type RmaTag struct {
	Id *int32 `json:"id,omitempty"`
	ServiceTicket *TicketReference `json:"serviceTicket,omitempty"`
	SalesOrder *SalesOrderReference `json:"salesOrder,omitempty"`
	Invoice *InvoiceReference `json:"invoice,omitempty"`
	Project *ProjectReference `json:"project,omitempty"`
	//  Max length: 150;
	Summary *string `json:"summary,omitempty"`
	Product IvItemReference `json:"product"`
	IvDescription *string `json:"ivDescription,omitempty"`
	//  Max length: 200;
	ProductDescription string `json:"productDescription"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	//  Max length: 100;
	MfgItemID *string `json:"mfgItemID,omitempty"`
	Status RmaStatusReference `json:"status"`
	ListPrice *float64 `json:"listPrice,omitempty"`
	UnitPrice NullableFloat64 `json:"unitPrice,omitempty"`
	Location SystemLocationReference `json:"location"`
	Department SystemDepartmentReference `json:"department"`
	//  Max length: 1000;
	ProblemDescription *string `json:"problemDescription,omitempty"`
	ReturnedCompany CompanyReference `json:"returnedCompany"`
	ReturnedContact *ContactReference `json:"returnedContact,omitempty"`
	ReturnedContactType *string `json:"returnedContactType,omitempty"`
	ReturnedContactPhone *string `json:"returnedContactPhone,omitempty"`
	ReturnedContactExtension *string `json:"returnedContactExtension,omitempty"`
	ReturnedContactEmail *string `json:"returnedContactEmail,omitempty"`
	//  Max length: 50;
	ReturnedContactAddressLine1 *string `json:"returnedContactAddressLine1,omitempty"`
	//  Max length: 50;
	ReturnedContactAddressLine2 *string `json:"returnedContactAddressLine2,omitempty"`
	//  Max length: 50;
	ReturnedContactCity *string `json:"returnedContactCity,omitempty"`
	//  Max length: 50;
	ReturnedContactState *string `json:"returnedContactState,omitempty"`
	//  Max length: 12;
	ReturnedContactZip *string `json:"returnedContactZip,omitempty"`
	ReturnedContactCountry *CountryReference `json:"returnedContactCountry,omitempty"`
	RmaDisposition RmaDispositionReference `json:"rmaDisposition"`
	ReturnedSite *SiteReference `json:"returnedSite,omitempty"`
	PurchasedCompany *CompanyReference `json:"purchasedCompany,omitempty"`
	PurchasedContact *ContactReference `json:"purchasedContact,omitempty"`
	PurchasedContactType *string `json:"purchasedContactType,omitempty"`
	PurchasedContactPhone *string `json:"purchasedContactPhone,omitempty"`
	PurchasedContactExtension *string `json:"purchasedContactExtension,omitempty"`
	PurchasedContactEmail *string `json:"purchasedContactEmail,omitempty"`
	//  Max length: 50;
	PurchasedContactAddressLine1 *string `json:"purchasedContactAddressLine1,omitempty"`
	//  Max length: 50;
	PurchasedContactAddressLine2 *string `json:"purchasedContactAddressLine2,omitempty"`
	//  Max length: 50;
	PurchasedContactCity *string `json:"purchasedContactCity,omitempty"`
	//  Max length: 50;
	PurchasedContactState *string `json:"purchasedContactState,omitempty"`
	//  Max length: 12;
	PurchasedContactZip *string `json:"purchasedContactZip,omitempty"`
	PurchasedContactCountry *CountryReference `json:"purchasedContactCountry,omitempty"`
	//  Max length: 50;
	PurchasedInvoiceNumber *string `json:"purchasedInvoiceNumber,omitempty"`
	PurchasedInvoiceDate *string `json:"purchasedInvoiceDate,omitempty"`
	//  Max length: 50;
	PurchasedOrderNumber *string `json:"purchasedOrderNumber,omitempty"`
	PurchasedVendorAction *RmaActionReference `json:"purchasedVendorAction,omitempty"`
	//  Max length: 50;
	PurchasedVendorRmaNumber *string `json:"purchasedVendorRmaNumber,omitempty"`
	PurchasedSite *SiteReference `json:"purchasedSite,omitempty"`
	//  Max length: 1000;
	PurchasedNotes *string `json:"purchasedNotes,omitempty"`
	WarrantyCompany *CompanyReference `json:"warrantyCompany,omitempty"`
	WarrantyContact *ContactReference `json:"warrantyContact,omitempty"`
	WarrantyContactType *string `json:"warrantyContactType,omitempty"`
	WarrantyContactPhone *string `json:"warrantyContactPhone,omitempty"`
	WarrantyContactEmail *string `json:"warrantyContactEmail,omitempty"`
	WarrantyContactExtension *string `json:"warrantyContactExtension,omitempty"`
	//  Max length: 50;
	WarrantyContactAddressLine1 *string `json:"warrantyContactAddressLine1,omitempty"`
	//  Max length: 50;
	WarrantyContactAddressLine2 *string `json:"warrantyContactAddressLine2,omitempty"`
	//  Max length: 50;
	WarrantyContactCity *string `json:"warrantyContactCity,omitempty"`
	//  Max length: 50;
	WarrantyContactState *string `json:"warrantyContactState,omitempty"`
	//  Max length: 12;
	WarrantyContactZip *string `json:"warrantyContactZip,omitempty"`
	WarrantyContactCountry *CountryReference `json:"warrantyContactCountry,omitempty"`
	WarrantySite *SiteReference `json:"warrantySite,omitempty"`
	//  Max length: 1000;
	WarrantyNotes *string `json:"warrantyNotes,omitempty"`
	RepairCompany *CompanyReference `json:"repairCompany,omitempty"`
	RepairContact *ContactReference `json:"repairContact,omitempty"`
	RepairContactType *string `json:"repairContactType,omitempty"`
	RepairContactPhone *string `json:"repairContactPhone,omitempty"`
	RepairContactExtension *string `json:"repairContactExtension,omitempty"`
	RepairContactEmail *string `json:"repairContactEmail,omitempty"`
	//  Max length: 50;
	RepairContactAddressLine1 *string `json:"repairContactAddressLine1,omitempty"`
	//  Max length: 50;
	RepairContactAddressLine2 *string `json:"repairContactAddressLine2,omitempty"`
	//  Max length: 50;
	RepairContactCity *string `json:"repairContactCity,omitempty"`
	//  Max length: 50;
	RepairContactState *string `json:"repairContactState,omitempty"`
	//  Max length: 12;
	RepairContactZip *string `json:"repairContactZip,omitempty"`
	RepairContactCountry *CountryReference `json:"repairContactCountry,omitempty"`
	//  Max length: 50;
	RepairOrderNumber *string `json:"repairOrderNumber,omitempty"`
	RepairSite *SiteReference `json:"repairSite,omitempty"`
	//  Max length: 1000;
	RepairNotes *string `json:"repairNotes,omitempty"`
	DropShipFlag NullableBool `json:"dropShipFlag,omitempty"`
	ShipMethod *ShipmentMethodReference `json:"shipMethod,omitempty"`
	ShippingDate *string `json:"shippingDate,omitempty"`
	//  Max length: 50;
	ShippingTrackingNumber *string `json:"shippingTrackingNumber,omitempty"`
	//  Max length: 1000;
	InternalNotes *string `json:"internalNotes,omitempty"`
	//  Max length: 1000;
	ClosingNotes *string `json:"closingNotes,omitempty"`
	DateClosed *string `json:"dateClosed,omitempty"`
	AccountManager *MemberReference `json:"accountManager,omitempty"`
	TechnicalContact *MemberReference `json:"technicalContact,omitempty"`
	Currency *CurrencyReference `json:"currency,omitempty"`
	ClosedBy *MemberReference `json:"closedBy,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
	CustomFields []CustomFieldValue `json:"customFields,omitempty"`
}

type _RmaTag RmaTag

// NewRmaTag instantiates a new RmaTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRmaTag(product IvItemReference, productDescription string, status RmaStatusReference, location SystemLocationReference, department SystemDepartmentReference, returnedCompany CompanyReference, rmaDisposition RmaDispositionReference) *RmaTag {
	this := RmaTag{}
	this.Product = product
	this.ProductDescription = productDescription
	this.Status = status
	this.Location = location
	this.Department = department
	this.ReturnedCompany = returnedCompany
	this.RmaDisposition = rmaDisposition
	return &this
}

// NewRmaTagWithDefaults instantiates a new RmaTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRmaTagWithDefaults() *RmaTag {
	this := RmaTag{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RmaTag) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RmaTag) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RmaTag) SetId(v int32) {
	o.Id = &v
}

// GetServiceTicket returns the ServiceTicket field value if set, zero value otherwise.
func (o *RmaTag) GetServiceTicket() TicketReference {
	if o == nil || IsNil(o.ServiceTicket) {
		var ret TicketReference
		return ret
	}
	return *o.ServiceTicket
}

// GetServiceTicketOk returns a tuple with the ServiceTicket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetServiceTicketOk() (*TicketReference, bool) {
	if o == nil || IsNil(o.ServiceTicket) {
		return nil, false
	}
	return o.ServiceTicket, true
}

// HasServiceTicket returns a boolean if a field has been set.
func (o *RmaTag) HasServiceTicket() bool {
	if o != nil && !IsNil(o.ServiceTicket) {
		return true
	}

	return false
}

// SetServiceTicket gets a reference to the given TicketReference and assigns it to the ServiceTicket field.
func (o *RmaTag) SetServiceTicket(v TicketReference) {
	o.ServiceTicket = &v
}

// GetSalesOrder returns the SalesOrder field value if set, zero value otherwise.
func (o *RmaTag) GetSalesOrder() SalesOrderReference {
	if o == nil || IsNil(o.SalesOrder) {
		var ret SalesOrderReference
		return ret
	}
	return *o.SalesOrder
}

// GetSalesOrderOk returns a tuple with the SalesOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetSalesOrderOk() (*SalesOrderReference, bool) {
	if o == nil || IsNil(o.SalesOrder) {
		return nil, false
	}
	return o.SalesOrder, true
}

// HasSalesOrder returns a boolean if a field has been set.
func (o *RmaTag) HasSalesOrder() bool {
	if o != nil && !IsNil(o.SalesOrder) {
		return true
	}

	return false
}

// SetSalesOrder gets a reference to the given SalesOrderReference and assigns it to the SalesOrder field.
func (o *RmaTag) SetSalesOrder(v SalesOrderReference) {
	o.SalesOrder = &v
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *RmaTag) GetInvoice() InvoiceReference {
	if o == nil || IsNil(o.Invoice) {
		var ret InvoiceReference
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetInvoiceOk() (*InvoiceReference, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// HasInvoice returns a boolean if a field has been set.
func (o *RmaTag) HasInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given InvoiceReference and assigns it to the Invoice field.
func (o *RmaTag) SetInvoice(v InvoiceReference) {
	o.Invoice = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *RmaTag) GetProject() ProjectReference {
	if o == nil || IsNil(o.Project) {
		var ret ProjectReference
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetProjectOk() (*ProjectReference, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *RmaTag) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given ProjectReference and assigns it to the Project field.
func (o *RmaTag) SetProject(v ProjectReference) {
	o.Project = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *RmaTag) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *RmaTag) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *RmaTag) SetSummary(v string) {
	o.Summary = &v
}

// GetProduct returns the Product field value
func (o *RmaTag) GetProduct() IvItemReference {
	if o == nil {
		var ret IvItemReference
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetProductOk() (*IvItemReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *RmaTag) SetProduct(v IvItemReference) {
	o.Product = v
}

// GetIvDescription returns the IvDescription field value if set, zero value otherwise.
func (o *RmaTag) GetIvDescription() string {
	if o == nil || IsNil(o.IvDescription) {
		var ret string
		return ret
	}
	return *o.IvDescription
}

// GetIvDescriptionOk returns a tuple with the IvDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetIvDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.IvDescription) {
		return nil, false
	}
	return o.IvDescription, true
}

// HasIvDescription returns a boolean if a field has been set.
func (o *RmaTag) HasIvDescription() bool {
	if o != nil && !IsNil(o.IvDescription) {
		return true
	}

	return false
}

// SetIvDescription gets a reference to the given string and assigns it to the IvDescription field.
func (o *RmaTag) SetIvDescription(v string) {
	o.IvDescription = &v
}

// GetProductDescription returns the ProductDescription field value
func (o *RmaTag) GetProductDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductDescription
}

// GetProductDescriptionOk returns a tuple with the ProductDescription field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetProductDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductDescription, true
}

// SetProductDescription sets field value
func (o *RmaTag) SetProductDescription(v string) {
	o.ProductDescription = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *RmaTag) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *RmaTag) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *RmaTag) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetMfgItemID returns the MfgItemID field value if set, zero value otherwise.
func (o *RmaTag) GetMfgItemID() string {
	if o == nil || IsNil(o.MfgItemID) {
		var ret string
		return ret
	}
	return *o.MfgItemID
}

// GetMfgItemIDOk returns a tuple with the MfgItemID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetMfgItemIDOk() (*string, bool) {
	if o == nil || IsNil(o.MfgItemID) {
		return nil, false
	}
	return o.MfgItemID, true
}

// HasMfgItemID returns a boolean if a field has been set.
func (o *RmaTag) HasMfgItemID() bool {
	if o != nil && !IsNil(o.MfgItemID) {
		return true
	}

	return false
}

// SetMfgItemID gets a reference to the given string and assigns it to the MfgItemID field.
func (o *RmaTag) SetMfgItemID(v string) {
	o.MfgItemID = &v
}

// GetStatus returns the Status field value
func (o *RmaTag) GetStatus() RmaStatusReference {
	if o == nil {
		var ret RmaStatusReference
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetStatusOk() (*RmaStatusReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RmaTag) SetStatus(v RmaStatusReference) {
	o.Status = v
}

// GetListPrice returns the ListPrice field value if set, zero value otherwise.
func (o *RmaTag) GetListPrice() float64 {
	if o == nil || IsNil(o.ListPrice) {
		var ret float64
		return ret
	}
	return *o.ListPrice
}

// GetListPriceOk returns a tuple with the ListPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetListPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.ListPrice) {
		return nil, false
	}
	return o.ListPrice, true
}

// HasListPrice returns a boolean if a field has been set.
func (o *RmaTag) HasListPrice() bool {
	if o != nil && !IsNil(o.ListPrice) {
		return true
	}

	return false
}

// SetListPrice gets a reference to the given float64 and assigns it to the ListPrice field.
func (o *RmaTag) SetListPrice(v float64) {
	o.ListPrice = &v
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RmaTag) GetUnitPrice() float64 {
	if o == nil || IsNil(o.UnitPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.UnitPrice.Get()
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RmaTag) GetUnitPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitPrice.Get(), o.UnitPrice.IsSet()
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *RmaTag) HasUnitPrice() bool {
	if o != nil && o.UnitPrice.IsSet() {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given NullableFloat64 and assigns it to the UnitPrice field.
func (o *RmaTag) SetUnitPrice(v float64) {
	o.UnitPrice.Set(&v)
}
// SetUnitPriceNil sets the value for UnitPrice to be an explicit nil
func (o *RmaTag) SetUnitPriceNil() {
	o.UnitPrice.Set(nil)
}

// UnsetUnitPrice ensures that no value is present for UnitPrice, not even an explicit nil
func (o *RmaTag) UnsetUnitPrice() {
	o.UnitPrice.Unset()
}

// GetLocation returns the Location field value
func (o *RmaTag) GetLocation() SystemLocationReference {
	if o == nil {
		var ret SystemLocationReference
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetLocationOk() (*SystemLocationReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *RmaTag) SetLocation(v SystemLocationReference) {
	o.Location = v
}

// GetDepartment returns the Department field value
func (o *RmaTag) GetDepartment() SystemDepartmentReference {
	if o == nil {
		var ret SystemDepartmentReference
		return ret
	}

	return o.Department
}

// GetDepartmentOk returns a tuple with the Department field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Department, true
}

// SetDepartment sets field value
func (o *RmaTag) SetDepartment(v SystemDepartmentReference) {
	o.Department = v
}

// GetProblemDescription returns the ProblemDescription field value if set, zero value otherwise.
func (o *RmaTag) GetProblemDescription() string {
	if o == nil || IsNil(o.ProblemDescription) {
		var ret string
		return ret
	}
	return *o.ProblemDescription
}

// GetProblemDescriptionOk returns a tuple with the ProblemDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetProblemDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ProblemDescription) {
		return nil, false
	}
	return o.ProblemDescription, true
}

// HasProblemDescription returns a boolean if a field has been set.
func (o *RmaTag) HasProblemDescription() bool {
	if o != nil && !IsNil(o.ProblemDescription) {
		return true
	}

	return false
}

// SetProblemDescription gets a reference to the given string and assigns it to the ProblemDescription field.
func (o *RmaTag) SetProblemDescription(v string) {
	o.ProblemDescription = &v
}

// GetReturnedCompany returns the ReturnedCompany field value
func (o *RmaTag) GetReturnedCompany() CompanyReference {
	if o == nil {
		var ret CompanyReference
		return ret
	}

	return o.ReturnedCompany
}

// GetReturnedCompanyOk returns a tuple with the ReturnedCompany field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedCompanyOk() (*CompanyReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnedCompany, true
}

// SetReturnedCompany sets field value
func (o *RmaTag) SetReturnedCompany(v CompanyReference) {
	o.ReturnedCompany = v
}

// GetReturnedContact returns the ReturnedContact field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContact() ContactReference {
	if o == nil || IsNil(o.ReturnedContact) {
		var ret ContactReference
		return ret
	}
	return *o.ReturnedContact
}

// GetReturnedContactOk returns a tuple with the ReturnedContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.ReturnedContact) {
		return nil, false
	}
	return o.ReturnedContact, true
}

// HasReturnedContact returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContact() bool {
	if o != nil && !IsNil(o.ReturnedContact) {
		return true
	}

	return false
}

// SetReturnedContact gets a reference to the given ContactReference and assigns it to the ReturnedContact field.
func (o *RmaTag) SetReturnedContact(v ContactReference) {
	o.ReturnedContact = &v
}

// GetReturnedContactType returns the ReturnedContactType field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactType() string {
	if o == nil || IsNil(o.ReturnedContactType) {
		var ret string
		return ret
	}
	return *o.ReturnedContactType
}

// GetReturnedContactTypeOk returns a tuple with the ReturnedContactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactType) {
		return nil, false
	}
	return o.ReturnedContactType, true
}

// HasReturnedContactType returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactType() bool {
	if o != nil && !IsNil(o.ReturnedContactType) {
		return true
	}

	return false
}

// SetReturnedContactType gets a reference to the given string and assigns it to the ReturnedContactType field.
func (o *RmaTag) SetReturnedContactType(v string) {
	o.ReturnedContactType = &v
}

// GetReturnedContactPhone returns the ReturnedContactPhone field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactPhone() string {
	if o == nil || IsNil(o.ReturnedContactPhone) {
		var ret string
		return ret
	}
	return *o.ReturnedContactPhone
}

// GetReturnedContactPhoneOk returns a tuple with the ReturnedContactPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactPhone) {
		return nil, false
	}
	return o.ReturnedContactPhone, true
}

// HasReturnedContactPhone returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactPhone() bool {
	if o != nil && !IsNil(o.ReturnedContactPhone) {
		return true
	}

	return false
}

// SetReturnedContactPhone gets a reference to the given string and assigns it to the ReturnedContactPhone field.
func (o *RmaTag) SetReturnedContactPhone(v string) {
	o.ReturnedContactPhone = &v
}

// GetReturnedContactExtension returns the ReturnedContactExtension field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactExtension() string {
	if o == nil || IsNil(o.ReturnedContactExtension) {
		var ret string
		return ret
	}
	return *o.ReturnedContactExtension
}

// GetReturnedContactExtensionOk returns a tuple with the ReturnedContactExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactExtension) {
		return nil, false
	}
	return o.ReturnedContactExtension, true
}

// HasReturnedContactExtension returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactExtension() bool {
	if o != nil && !IsNil(o.ReturnedContactExtension) {
		return true
	}

	return false
}

// SetReturnedContactExtension gets a reference to the given string and assigns it to the ReturnedContactExtension field.
func (o *RmaTag) SetReturnedContactExtension(v string) {
	o.ReturnedContactExtension = &v
}

// GetReturnedContactEmail returns the ReturnedContactEmail field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactEmail() string {
	if o == nil || IsNil(o.ReturnedContactEmail) {
		var ret string
		return ret
	}
	return *o.ReturnedContactEmail
}

// GetReturnedContactEmailOk returns a tuple with the ReturnedContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactEmail) {
		return nil, false
	}
	return o.ReturnedContactEmail, true
}

// HasReturnedContactEmail returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactEmail() bool {
	if o != nil && !IsNil(o.ReturnedContactEmail) {
		return true
	}

	return false
}

// SetReturnedContactEmail gets a reference to the given string and assigns it to the ReturnedContactEmail field.
func (o *RmaTag) SetReturnedContactEmail(v string) {
	o.ReturnedContactEmail = &v
}

// GetReturnedContactAddressLine1 returns the ReturnedContactAddressLine1 field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactAddressLine1() string {
	if o == nil || IsNil(o.ReturnedContactAddressLine1) {
		var ret string
		return ret
	}
	return *o.ReturnedContactAddressLine1
}

// GetReturnedContactAddressLine1Ok returns a tuple with the ReturnedContactAddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactAddressLine1) {
		return nil, false
	}
	return o.ReturnedContactAddressLine1, true
}

// HasReturnedContactAddressLine1 returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactAddressLine1() bool {
	if o != nil && !IsNil(o.ReturnedContactAddressLine1) {
		return true
	}

	return false
}

// SetReturnedContactAddressLine1 gets a reference to the given string and assigns it to the ReturnedContactAddressLine1 field.
func (o *RmaTag) SetReturnedContactAddressLine1(v string) {
	o.ReturnedContactAddressLine1 = &v
}

// GetReturnedContactAddressLine2 returns the ReturnedContactAddressLine2 field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactAddressLine2() string {
	if o == nil || IsNil(o.ReturnedContactAddressLine2) {
		var ret string
		return ret
	}
	return *o.ReturnedContactAddressLine2
}

// GetReturnedContactAddressLine2Ok returns a tuple with the ReturnedContactAddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactAddressLine2) {
		return nil, false
	}
	return o.ReturnedContactAddressLine2, true
}

// HasReturnedContactAddressLine2 returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactAddressLine2() bool {
	if o != nil && !IsNil(o.ReturnedContactAddressLine2) {
		return true
	}

	return false
}

// SetReturnedContactAddressLine2 gets a reference to the given string and assigns it to the ReturnedContactAddressLine2 field.
func (o *RmaTag) SetReturnedContactAddressLine2(v string) {
	o.ReturnedContactAddressLine2 = &v
}

// GetReturnedContactCity returns the ReturnedContactCity field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactCity() string {
	if o == nil || IsNil(o.ReturnedContactCity) {
		var ret string
		return ret
	}
	return *o.ReturnedContactCity
}

// GetReturnedContactCityOk returns a tuple with the ReturnedContactCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactCityOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactCity) {
		return nil, false
	}
	return o.ReturnedContactCity, true
}

// HasReturnedContactCity returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactCity() bool {
	if o != nil && !IsNil(o.ReturnedContactCity) {
		return true
	}

	return false
}

// SetReturnedContactCity gets a reference to the given string and assigns it to the ReturnedContactCity field.
func (o *RmaTag) SetReturnedContactCity(v string) {
	o.ReturnedContactCity = &v
}

// GetReturnedContactState returns the ReturnedContactState field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactState() string {
	if o == nil || IsNil(o.ReturnedContactState) {
		var ret string
		return ret
	}
	return *o.ReturnedContactState
}

// GetReturnedContactStateOk returns a tuple with the ReturnedContactState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactStateOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactState) {
		return nil, false
	}
	return o.ReturnedContactState, true
}

// HasReturnedContactState returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactState() bool {
	if o != nil && !IsNil(o.ReturnedContactState) {
		return true
	}

	return false
}

// SetReturnedContactState gets a reference to the given string and assigns it to the ReturnedContactState field.
func (o *RmaTag) SetReturnedContactState(v string) {
	o.ReturnedContactState = &v
}

// GetReturnedContactZip returns the ReturnedContactZip field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactZip() string {
	if o == nil || IsNil(o.ReturnedContactZip) {
		var ret string
		return ret
	}
	return *o.ReturnedContactZip
}

// GetReturnedContactZipOk returns a tuple with the ReturnedContactZip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactZipOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnedContactZip) {
		return nil, false
	}
	return o.ReturnedContactZip, true
}

// HasReturnedContactZip returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactZip() bool {
	if o != nil && !IsNil(o.ReturnedContactZip) {
		return true
	}

	return false
}

// SetReturnedContactZip gets a reference to the given string and assigns it to the ReturnedContactZip field.
func (o *RmaTag) SetReturnedContactZip(v string) {
	o.ReturnedContactZip = &v
}

// GetReturnedContactCountry returns the ReturnedContactCountry field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedContactCountry() CountryReference {
	if o == nil || IsNil(o.ReturnedContactCountry) {
		var ret CountryReference
		return ret
	}
	return *o.ReturnedContactCountry
}

// GetReturnedContactCountryOk returns a tuple with the ReturnedContactCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedContactCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.ReturnedContactCountry) {
		return nil, false
	}
	return o.ReturnedContactCountry, true
}

// HasReturnedContactCountry returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedContactCountry() bool {
	if o != nil && !IsNil(o.ReturnedContactCountry) {
		return true
	}

	return false
}

// SetReturnedContactCountry gets a reference to the given CountryReference and assigns it to the ReturnedContactCountry field.
func (o *RmaTag) SetReturnedContactCountry(v CountryReference) {
	o.ReturnedContactCountry = &v
}

// GetRmaDisposition returns the RmaDisposition field value
func (o *RmaTag) GetRmaDisposition() RmaDispositionReference {
	if o == nil {
		var ret RmaDispositionReference
		return ret
	}

	return o.RmaDisposition
}

// GetRmaDispositionOk returns a tuple with the RmaDisposition field value
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRmaDispositionOk() (*RmaDispositionReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RmaDisposition, true
}

// SetRmaDisposition sets field value
func (o *RmaTag) SetRmaDisposition(v RmaDispositionReference) {
	o.RmaDisposition = v
}

// GetReturnedSite returns the ReturnedSite field value if set, zero value otherwise.
func (o *RmaTag) GetReturnedSite() SiteReference {
	if o == nil || IsNil(o.ReturnedSite) {
		var ret SiteReference
		return ret
	}
	return *o.ReturnedSite
}

// GetReturnedSiteOk returns a tuple with the ReturnedSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetReturnedSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.ReturnedSite) {
		return nil, false
	}
	return o.ReturnedSite, true
}

// HasReturnedSite returns a boolean if a field has been set.
func (o *RmaTag) HasReturnedSite() bool {
	if o != nil && !IsNil(o.ReturnedSite) {
		return true
	}

	return false
}

// SetReturnedSite gets a reference to the given SiteReference and assigns it to the ReturnedSite field.
func (o *RmaTag) SetReturnedSite(v SiteReference) {
	o.ReturnedSite = &v
}

// GetPurchasedCompany returns the PurchasedCompany field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedCompany() CompanyReference {
	if o == nil || IsNil(o.PurchasedCompany) {
		var ret CompanyReference
		return ret
	}
	return *o.PurchasedCompany
}

// GetPurchasedCompanyOk returns a tuple with the PurchasedCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.PurchasedCompany) {
		return nil, false
	}
	return o.PurchasedCompany, true
}

// HasPurchasedCompany returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedCompany() bool {
	if o != nil && !IsNil(o.PurchasedCompany) {
		return true
	}

	return false
}

// SetPurchasedCompany gets a reference to the given CompanyReference and assigns it to the PurchasedCompany field.
func (o *RmaTag) SetPurchasedCompany(v CompanyReference) {
	o.PurchasedCompany = &v
}

// GetPurchasedContact returns the PurchasedContact field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContact() ContactReference {
	if o == nil || IsNil(o.PurchasedContact) {
		var ret ContactReference
		return ret
	}
	return *o.PurchasedContact
}

// GetPurchasedContactOk returns a tuple with the PurchasedContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.PurchasedContact) {
		return nil, false
	}
	return o.PurchasedContact, true
}

// HasPurchasedContact returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContact() bool {
	if o != nil && !IsNil(o.PurchasedContact) {
		return true
	}

	return false
}

// SetPurchasedContact gets a reference to the given ContactReference and assigns it to the PurchasedContact field.
func (o *RmaTag) SetPurchasedContact(v ContactReference) {
	o.PurchasedContact = &v
}

// GetPurchasedContactType returns the PurchasedContactType field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactType() string {
	if o == nil || IsNil(o.PurchasedContactType) {
		var ret string
		return ret
	}
	return *o.PurchasedContactType
}

// GetPurchasedContactTypeOk returns a tuple with the PurchasedContactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactType) {
		return nil, false
	}
	return o.PurchasedContactType, true
}

// HasPurchasedContactType returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactType() bool {
	if o != nil && !IsNil(o.PurchasedContactType) {
		return true
	}

	return false
}

// SetPurchasedContactType gets a reference to the given string and assigns it to the PurchasedContactType field.
func (o *RmaTag) SetPurchasedContactType(v string) {
	o.PurchasedContactType = &v
}

// GetPurchasedContactPhone returns the PurchasedContactPhone field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactPhone() string {
	if o == nil || IsNil(o.PurchasedContactPhone) {
		var ret string
		return ret
	}
	return *o.PurchasedContactPhone
}

// GetPurchasedContactPhoneOk returns a tuple with the PurchasedContactPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactPhone) {
		return nil, false
	}
	return o.PurchasedContactPhone, true
}

// HasPurchasedContactPhone returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactPhone() bool {
	if o != nil && !IsNil(o.PurchasedContactPhone) {
		return true
	}

	return false
}

// SetPurchasedContactPhone gets a reference to the given string and assigns it to the PurchasedContactPhone field.
func (o *RmaTag) SetPurchasedContactPhone(v string) {
	o.PurchasedContactPhone = &v
}

// GetPurchasedContactExtension returns the PurchasedContactExtension field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactExtension() string {
	if o == nil || IsNil(o.PurchasedContactExtension) {
		var ret string
		return ret
	}
	return *o.PurchasedContactExtension
}

// GetPurchasedContactExtensionOk returns a tuple with the PurchasedContactExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactExtension) {
		return nil, false
	}
	return o.PurchasedContactExtension, true
}

// HasPurchasedContactExtension returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactExtension() bool {
	if o != nil && !IsNil(o.PurchasedContactExtension) {
		return true
	}

	return false
}

// SetPurchasedContactExtension gets a reference to the given string and assigns it to the PurchasedContactExtension field.
func (o *RmaTag) SetPurchasedContactExtension(v string) {
	o.PurchasedContactExtension = &v
}

// GetPurchasedContactEmail returns the PurchasedContactEmail field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactEmail() string {
	if o == nil || IsNil(o.PurchasedContactEmail) {
		var ret string
		return ret
	}
	return *o.PurchasedContactEmail
}

// GetPurchasedContactEmailOk returns a tuple with the PurchasedContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactEmail) {
		return nil, false
	}
	return o.PurchasedContactEmail, true
}

// HasPurchasedContactEmail returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactEmail() bool {
	if o != nil && !IsNil(o.PurchasedContactEmail) {
		return true
	}

	return false
}

// SetPurchasedContactEmail gets a reference to the given string and assigns it to the PurchasedContactEmail field.
func (o *RmaTag) SetPurchasedContactEmail(v string) {
	o.PurchasedContactEmail = &v
}

// GetPurchasedContactAddressLine1 returns the PurchasedContactAddressLine1 field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactAddressLine1() string {
	if o == nil || IsNil(o.PurchasedContactAddressLine1) {
		var ret string
		return ret
	}
	return *o.PurchasedContactAddressLine1
}

// GetPurchasedContactAddressLine1Ok returns a tuple with the PurchasedContactAddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactAddressLine1) {
		return nil, false
	}
	return o.PurchasedContactAddressLine1, true
}

// HasPurchasedContactAddressLine1 returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactAddressLine1() bool {
	if o != nil && !IsNil(o.PurchasedContactAddressLine1) {
		return true
	}

	return false
}

// SetPurchasedContactAddressLine1 gets a reference to the given string and assigns it to the PurchasedContactAddressLine1 field.
func (o *RmaTag) SetPurchasedContactAddressLine1(v string) {
	o.PurchasedContactAddressLine1 = &v
}

// GetPurchasedContactAddressLine2 returns the PurchasedContactAddressLine2 field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactAddressLine2() string {
	if o == nil || IsNil(o.PurchasedContactAddressLine2) {
		var ret string
		return ret
	}
	return *o.PurchasedContactAddressLine2
}

// GetPurchasedContactAddressLine2Ok returns a tuple with the PurchasedContactAddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactAddressLine2) {
		return nil, false
	}
	return o.PurchasedContactAddressLine2, true
}

// HasPurchasedContactAddressLine2 returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactAddressLine2() bool {
	if o != nil && !IsNil(o.PurchasedContactAddressLine2) {
		return true
	}

	return false
}

// SetPurchasedContactAddressLine2 gets a reference to the given string and assigns it to the PurchasedContactAddressLine2 field.
func (o *RmaTag) SetPurchasedContactAddressLine2(v string) {
	o.PurchasedContactAddressLine2 = &v
}

// GetPurchasedContactCity returns the PurchasedContactCity field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactCity() string {
	if o == nil || IsNil(o.PurchasedContactCity) {
		var ret string
		return ret
	}
	return *o.PurchasedContactCity
}

// GetPurchasedContactCityOk returns a tuple with the PurchasedContactCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactCityOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactCity) {
		return nil, false
	}
	return o.PurchasedContactCity, true
}

// HasPurchasedContactCity returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactCity() bool {
	if o != nil && !IsNil(o.PurchasedContactCity) {
		return true
	}

	return false
}

// SetPurchasedContactCity gets a reference to the given string and assigns it to the PurchasedContactCity field.
func (o *RmaTag) SetPurchasedContactCity(v string) {
	o.PurchasedContactCity = &v
}

// GetPurchasedContactState returns the PurchasedContactState field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactState() string {
	if o == nil || IsNil(o.PurchasedContactState) {
		var ret string
		return ret
	}
	return *o.PurchasedContactState
}

// GetPurchasedContactStateOk returns a tuple with the PurchasedContactState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactStateOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactState) {
		return nil, false
	}
	return o.PurchasedContactState, true
}

// HasPurchasedContactState returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactState() bool {
	if o != nil && !IsNil(o.PurchasedContactState) {
		return true
	}

	return false
}

// SetPurchasedContactState gets a reference to the given string and assigns it to the PurchasedContactState field.
func (o *RmaTag) SetPurchasedContactState(v string) {
	o.PurchasedContactState = &v
}

// GetPurchasedContactZip returns the PurchasedContactZip field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactZip() string {
	if o == nil || IsNil(o.PurchasedContactZip) {
		var ret string
		return ret
	}
	return *o.PurchasedContactZip
}

// GetPurchasedContactZipOk returns a tuple with the PurchasedContactZip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactZipOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedContactZip) {
		return nil, false
	}
	return o.PurchasedContactZip, true
}

// HasPurchasedContactZip returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactZip() bool {
	if o != nil && !IsNil(o.PurchasedContactZip) {
		return true
	}

	return false
}

// SetPurchasedContactZip gets a reference to the given string and assigns it to the PurchasedContactZip field.
func (o *RmaTag) SetPurchasedContactZip(v string) {
	o.PurchasedContactZip = &v
}

// GetPurchasedContactCountry returns the PurchasedContactCountry field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedContactCountry() CountryReference {
	if o == nil || IsNil(o.PurchasedContactCountry) {
		var ret CountryReference
		return ret
	}
	return *o.PurchasedContactCountry
}

// GetPurchasedContactCountryOk returns a tuple with the PurchasedContactCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedContactCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.PurchasedContactCountry) {
		return nil, false
	}
	return o.PurchasedContactCountry, true
}

// HasPurchasedContactCountry returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedContactCountry() bool {
	if o != nil && !IsNil(o.PurchasedContactCountry) {
		return true
	}

	return false
}

// SetPurchasedContactCountry gets a reference to the given CountryReference and assigns it to the PurchasedContactCountry field.
func (o *RmaTag) SetPurchasedContactCountry(v CountryReference) {
	o.PurchasedContactCountry = &v
}

// GetPurchasedInvoiceNumber returns the PurchasedInvoiceNumber field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedInvoiceNumber() string {
	if o == nil || IsNil(o.PurchasedInvoiceNumber) {
		var ret string
		return ret
	}
	return *o.PurchasedInvoiceNumber
}

// GetPurchasedInvoiceNumberOk returns a tuple with the PurchasedInvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedInvoiceNumber) {
		return nil, false
	}
	return o.PurchasedInvoiceNumber, true
}

// HasPurchasedInvoiceNumber returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedInvoiceNumber() bool {
	if o != nil && !IsNil(o.PurchasedInvoiceNumber) {
		return true
	}

	return false
}

// SetPurchasedInvoiceNumber gets a reference to the given string and assigns it to the PurchasedInvoiceNumber field.
func (o *RmaTag) SetPurchasedInvoiceNumber(v string) {
	o.PurchasedInvoiceNumber = &v
}

// GetPurchasedInvoiceDate returns the PurchasedInvoiceDate field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedInvoiceDate() string {
	if o == nil || IsNil(o.PurchasedInvoiceDate) {
		var ret string
		return ret
	}
	return *o.PurchasedInvoiceDate
}

// GetPurchasedInvoiceDateOk returns a tuple with the PurchasedInvoiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedInvoiceDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedInvoiceDate) {
		return nil, false
	}
	return o.PurchasedInvoiceDate, true
}

// HasPurchasedInvoiceDate returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedInvoiceDate() bool {
	if o != nil && !IsNil(o.PurchasedInvoiceDate) {
		return true
	}

	return false
}

// SetPurchasedInvoiceDate gets a reference to the given string and assigns it to the PurchasedInvoiceDate field.
func (o *RmaTag) SetPurchasedInvoiceDate(v string) {
	o.PurchasedInvoiceDate = &v
}

// GetPurchasedOrderNumber returns the PurchasedOrderNumber field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedOrderNumber() string {
	if o == nil || IsNil(o.PurchasedOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchasedOrderNumber
}

// GetPurchasedOrderNumberOk returns a tuple with the PurchasedOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedOrderNumber) {
		return nil, false
	}
	return o.PurchasedOrderNumber, true
}

// HasPurchasedOrderNumber returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedOrderNumber() bool {
	if o != nil && !IsNil(o.PurchasedOrderNumber) {
		return true
	}

	return false
}

// SetPurchasedOrderNumber gets a reference to the given string and assigns it to the PurchasedOrderNumber field.
func (o *RmaTag) SetPurchasedOrderNumber(v string) {
	o.PurchasedOrderNumber = &v
}

// GetPurchasedVendorAction returns the PurchasedVendorAction field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedVendorAction() RmaActionReference {
	if o == nil || IsNil(o.PurchasedVendorAction) {
		var ret RmaActionReference
		return ret
	}
	return *o.PurchasedVendorAction
}

// GetPurchasedVendorActionOk returns a tuple with the PurchasedVendorAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedVendorActionOk() (*RmaActionReference, bool) {
	if o == nil || IsNil(o.PurchasedVendorAction) {
		return nil, false
	}
	return o.PurchasedVendorAction, true
}

// HasPurchasedVendorAction returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedVendorAction() bool {
	if o != nil && !IsNil(o.PurchasedVendorAction) {
		return true
	}

	return false
}

// SetPurchasedVendorAction gets a reference to the given RmaActionReference and assigns it to the PurchasedVendorAction field.
func (o *RmaTag) SetPurchasedVendorAction(v RmaActionReference) {
	o.PurchasedVendorAction = &v
}

// GetPurchasedVendorRmaNumber returns the PurchasedVendorRmaNumber field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedVendorRmaNumber() string {
	if o == nil || IsNil(o.PurchasedVendorRmaNumber) {
		var ret string
		return ret
	}
	return *o.PurchasedVendorRmaNumber
}

// GetPurchasedVendorRmaNumberOk returns a tuple with the PurchasedVendorRmaNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedVendorRmaNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedVendorRmaNumber) {
		return nil, false
	}
	return o.PurchasedVendorRmaNumber, true
}

// HasPurchasedVendorRmaNumber returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedVendorRmaNumber() bool {
	if o != nil && !IsNil(o.PurchasedVendorRmaNumber) {
		return true
	}

	return false
}

// SetPurchasedVendorRmaNumber gets a reference to the given string and assigns it to the PurchasedVendorRmaNumber field.
func (o *RmaTag) SetPurchasedVendorRmaNumber(v string) {
	o.PurchasedVendorRmaNumber = &v
}

// GetPurchasedSite returns the PurchasedSite field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedSite() SiteReference {
	if o == nil || IsNil(o.PurchasedSite) {
		var ret SiteReference
		return ret
	}
	return *o.PurchasedSite
}

// GetPurchasedSiteOk returns a tuple with the PurchasedSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.PurchasedSite) {
		return nil, false
	}
	return o.PurchasedSite, true
}

// HasPurchasedSite returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedSite() bool {
	if o != nil && !IsNil(o.PurchasedSite) {
		return true
	}

	return false
}

// SetPurchasedSite gets a reference to the given SiteReference and assigns it to the PurchasedSite field.
func (o *RmaTag) SetPurchasedSite(v SiteReference) {
	o.PurchasedSite = &v
}

// GetPurchasedNotes returns the PurchasedNotes field value if set, zero value otherwise.
func (o *RmaTag) GetPurchasedNotes() string {
	if o == nil || IsNil(o.PurchasedNotes) {
		var ret string
		return ret
	}
	return *o.PurchasedNotes
}

// GetPurchasedNotesOk returns a tuple with the PurchasedNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetPurchasedNotesOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedNotes) {
		return nil, false
	}
	return o.PurchasedNotes, true
}

// HasPurchasedNotes returns a boolean if a field has been set.
func (o *RmaTag) HasPurchasedNotes() bool {
	if o != nil && !IsNil(o.PurchasedNotes) {
		return true
	}

	return false
}

// SetPurchasedNotes gets a reference to the given string and assigns it to the PurchasedNotes field.
func (o *RmaTag) SetPurchasedNotes(v string) {
	o.PurchasedNotes = &v
}

// GetWarrantyCompany returns the WarrantyCompany field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyCompany() CompanyReference {
	if o == nil || IsNil(o.WarrantyCompany) {
		var ret CompanyReference
		return ret
	}
	return *o.WarrantyCompany
}

// GetWarrantyCompanyOk returns a tuple with the WarrantyCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.WarrantyCompany) {
		return nil, false
	}
	return o.WarrantyCompany, true
}

// HasWarrantyCompany returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyCompany() bool {
	if o != nil && !IsNil(o.WarrantyCompany) {
		return true
	}

	return false
}

// SetWarrantyCompany gets a reference to the given CompanyReference and assigns it to the WarrantyCompany field.
func (o *RmaTag) SetWarrantyCompany(v CompanyReference) {
	o.WarrantyCompany = &v
}

// GetWarrantyContact returns the WarrantyContact field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContact() ContactReference {
	if o == nil || IsNil(o.WarrantyContact) {
		var ret ContactReference
		return ret
	}
	return *o.WarrantyContact
}

// GetWarrantyContactOk returns a tuple with the WarrantyContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.WarrantyContact) {
		return nil, false
	}
	return o.WarrantyContact, true
}

// HasWarrantyContact returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContact() bool {
	if o != nil && !IsNil(o.WarrantyContact) {
		return true
	}

	return false
}

// SetWarrantyContact gets a reference to the given ContactReference and assigns it to the WarrantyContact field.
func (o *RmaTag) SetWarrantyContact(v ContactReference) {
	o.WarrantyContact = &v
}

// GetWarrantyContactType returns the WarrantyContactType field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactType() string {
	if o == nil || IsNil(o.WarrantyContactType) {
		var ret string
		return ret
	}
	return *o.WarrantyContactType
}

// GetWarrantyContactTypeOk returns a tuple with the WarrantyContactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactType) {
		return nil, false
	}
	return o.WarrantyContactType, true
}

// HasWarrantyContactType returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactType() bool {
	if o != nil && !IsNil(o.WarrantyContactType) {
		return true
	}

	return false
}

// SetWarrantyContactType gets a reference to the given string and assigns it to the WarrantyContactType field.
func (o *RmaTag) SetWarrantyContactType(v string) {
	o.WarrantyContactType = &v
}

// GetWarrantyContactPhone returns the WarrantyContactPhone field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactPhone() string {
	if o == nil || IsNil(o.WarrantyContactPhone) {
		var ret string
		return ret
	}
	return *o.WarrantyContactPhone
}

// GetWarrantyContactPhoneOk returns a tuple with the WarrantyContactPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactPhone) {
		return nil, false
	}
	return o.WarrantyContactPhone, true
}

// HasWarrantyContactPhone returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactPhone() bool {
	if o != nil && !IsNil(o.WarrantyContactPhone) {
		return true
	}

	return false
}

// SetWarrantyContactPhone gets a reference to the given string and assigns it to the WarrantyContactPhone field.
func (o *RmaTag) SetWarrantyContactPhone(v string) {
	o.WarrantyContactPhone = &v
}

// GetWarrantyContactEmail returns the WarrantyContactEmail field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactEmail() string {
	if o == nil || IsNil(o.WarrantyContactEmail) {
		var ret string
		return ret
	}
	return *o.WarrantyContactEmail
}

// GetWarrantyContactEmailOk returns a tuple with the WarrantyContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactEmail) {
		return nil, false
	}
	return o.WarrantyContactEmail, true
}

// HasWarrantyContactEmail returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactEmail() bool {
	if o != nil && !IsNil(o.WarrantyContactEmail) {
		return true
	}

	return false
}

// SetWarrantyContactEmail gets a reference to the given string and assigns it to the WarrantyContactEmail field.
func (o *RmaTag) SetWarrantyContactEmail(v string) {
	o.WarrantyContactEmail = &v
}

// GetWarrantyContactExtension returns the WarrantyContactExtension field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactExtension() string {
	if o == nil || IsNil(o.WarrantyContactExtension) {
		var ret string
		return ret
	}
	return *o.WarrantyContactExtension
}

// GetWarrantyContactExtensionOk returns a tuple with the WarrantyContactExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactExtension) {
		return nil, false
	}
	return o.WarrantyContactExtension, true
}

// HasWarrantyContactExtension returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactExtension() bool {
	if o != nil && !IsNil(o.WarrantyContactExtension) {
		return true
	}

	return false
}

// SetWarrantyContactExtension gets a reference to the given string and assigns it to the WarrantyContactExtension field.
func (o *RmaTag) SetWarrantyContactExtension(v string) {
	o.WarrantyContactExtension = &v
}

// GetWarrantyContactAddressLine1 returns the WarrantyContactAddressLine1 field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactAddressLine1() string {
	if o == nil || IsNil(o.WarrantyContactAddressLine1) {
		var ret string
		return ret
	}
	return *o.WarrantyContactAddressLine1
}

// GetWarrantyContactAddressLine1Ok returns a tuple with the WarrantyContactAddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactAddressLine1) {
		return nil, false
	}
	return o.WarrantyContactAddressLine1, true
}

// HasWarrantyContactAddressLine1 returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactAddressLine1() bool {
	if o != nil && !IsNil(o.WarrantyContactAddressLine1) {
		return true
	}

	return false
}

// SetWarrantyContactAddressLine1 gets a reference to the given string and assigns it to the WarrantyContactAddressLine1 field.
func (o *RmaTag) SetWarrantyContactAddressLine1(v string) {
	o.WarrantyContactAddressLine1 = &v
}

// GetWarrantyContactAddressLine2 returns the WarrantyContactAddressLine2 field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactAddressLine2() string {
	if o == nil || IsNil(o.WarrantyContactAddressLine2) {
		var ret string
		return ret
	}
	return *o.WarrantyContactAddressLine2
}

// GetWarrantyContactAddressLine2Ok returns a tuple with the WarrantyContactAddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactAddressLine2) {
		return nil, false
	}
	return o.WarrantyContactAddressLine2, true
}

// HasWarrantyContactAddressLine2 returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactAddressLine2() bool {
	if o != nil && !IsNil(o.WarrantyContactAddressLine2) {
		return true
	}

	return false
}

// SetWarrantyContactAddressLine2 gets a reference to the given string and assigns it to the WarrantyContactAddressLine2 field.
func (o *RmaTag) SetWarrantyContactAddressLine2(v string) {
	o.WarrantyContactAddressLine2 = &v
}

// GetWarrantyContactCity returns the WarrantyContactCity field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactCity() string {
	if o == nil || IsNil(o.WarrantyContactCity) {
		var ret string
		return ret
	}
	return *o.WarrantyContactCity
}

// GetWarrantyContactCityOk returns a tuple with the WarrantyContactCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactCityOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactCity) {
		return nil, false
	}
	return o.WarrantyContactCity, true
}

// HasWarrantyContactCity returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactCity() bool {
	if o != nil && !IsNil(o.WarrantyContactCity) {
		return true
	}

	return false
}

// SetWarrantyContactCity gets a reference to the given string and assigns it to the WarrantyContactCity field.
func (o *RmaTag) SetWarrantyContactCity(v string) {
	o.WarrantyContactCity = &v
}

// GetWarrantyContactState returns the WarrantyContactState field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactState() string {
	if o == nil || IsNil(o.WarrantyContactState) {
		var ret string
		return ret
	}
	return *o.WarrantyContactState
}

// GetWarrantyContactStateOk returns a tuple with the WarrantyContactState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactStateOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactState) {
		return nil, false
	}
	return o.WarrantyContactState, true
}

// HasWarrantyContactState returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactState() bool {
	if o != nil && !IsNil(o.WarrantyContactState) {
		return true
	}

	return false
}

// SetWarrantyContactState gets a reference to the given string and assigns it to the WarrantyContactState field.
func (o *RmaTag) SetWarrantyContactState(v string) {
	o.WarrantyContactState = &v
}

// GetWarrantyContactZip returns the WarrantyContactZip field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactZip() string {
	if o == nil || IsNil(o.WarrantyContactZip) {
		var ret string
		return ret
	}
	return *o.WarrantyContactZip
}

// GetWarrantyContactZipOk returns a tuple with the WarrantyContactZip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactZipOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyContactZip) {
		return nil, false
	}
	return o.WarrantyContactZip, true
}

// HasWarrantyContactZip returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactZip() bool {
	if o != nil && !IsNil(o.WarrantyContactZip) {
		return true
	}

	return false
}

// SetWarrantyContactZip gets a reference to the given string and assigns it to the WarrantyContactZip field.
func (o *RmaTag) SetWarrantyContactZip(v string) {
	o.WarrantyContactZip = &v
}

// GetWarrantyContactCountry returns the WarrantyContactCountry field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyContactCountry() CountryReference {
	if o == nil || IsNil(o.WarrantyContactCountry) {
		var ret CountryReference
		return ret
	}
	return *o.WarrantyContactCountry
}

// GetWarrantyContactCountryOk returns a tuple with the WarrantyContactCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyContactCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.WarrantyContactCountry) {
		return nil, false
	}
	return o.WarrantyContactCountry, true
}

// HasWarrantyContactCountry returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyContactCountry() bool {
	if o != nil && !IsNil(o.WarrantyContactCountry) {
		return true
	}

	return false
}

// SetWarrantyContactCountry gets a reference to the given CountryReference and assigns it to the WarrantyContactCountry field.
func (o *RmaTag) SetWarrantyContactCountry(v CountryReference) {
	o.WarrantyContactCountry = &v
}

// GetWarrantySite returns the WarrantySite field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantySite() SiteReference {
	if o == nil || IsNil(o.WarrantySite) {
		var ret SiteReference
		return ret
	}
	return *o.WarrantySite
}

// GetWarrantySiteOk returns a tuple with the WarrantySite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantySiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.WarrantySite) {
		return nil, false
	}
	return o.WarrantySite, true
}

// HasWarrantySite returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantySite() bool {
	if o != nil && !IsNil(o.WarrantySite) {
		return true
	}

	return false
}

// SetWarrantySite gets a reference to the given SiteReference and assigns it to the WarrantySite field.
func (o *RmaTag) SetWarrantySite(v SiteReference) {
	o.WarrantySite = &v
}

// GetWarrantyNotes returns the WarrantyNotes field value if set, zero value otherwise.
func (o *RmaTag) GetWarrantyNotes() string {
	if o == nil || IsNil(o.WarrantyNotes) {
		var ret string
		return ret
	}
	return *o.WarrantyNotes
}

// GetWarrantyNotesOk returns a tuple with the WarrantyNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetWarrantyNotesOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyNotes) {
		return nil, false
	}
	return o.WarrantyNotes, true
}

// HasWarrantyNotes returns a boolean if a field has been set.
func (o *RmaTag) HasWarrantyNotes() bool {
	if o != nil && !IsNil(o.WarrantyNotes) {
		return true
	}

	return false
}

// SetWarrantyNotes gets a reference to the given string and assigns it to the WarrantyNotes field.
func (o *RmaTag) SetWarrantyNotes(v string) {
	o.WarrantyNotes = &v
}

// GetRepairCompany returns the RepairCompany field value if set, zero value otherwise.
func (o *RmaTag) GetRepairCompany() CompanyReference {
	if o == nil || IsNil(o.RepairCompany) {
		var ret CompanyReference
		return ret
	}
	return *o.RepairCompany
}

// GetRepairCompanyOk returns a tuple with the RepairCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairCompanyOk() (*CompanyReference, bool) {
	if o == nil || IsNil(o.RepairCompany) {
		return nil, false
	}
	return o.RepairCompany, true
}

// HasRepairCompany returns a boolean if a field has been set.
func (o *RmaTag) HasRepairCompany() bool {
	if o != nil && !IsNil(o.RepairCompany) {
		return true
	}

	return false
}

// SetRepairCompany gets a reference to the given CompanyReference and assigns it to the RepairCompany field.
func (o *RmaTag) SetRepairCompany(v CompanyReference) {
	o.RepairCompany = &v
}

// GetRepairContact returns the RepairContact field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContact() ContactReference {
	if o == nil || IsNil(o.RepairContact) {
		var ret ContactReference
		return ret
	}
	return *o.RepairContact
}

// GetRepairContactOk returns a tuple with the RepairContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactOk() (*ContactReference, bool) {
	if o == nil || IsNil(o.RepairContact) {
		return nil, false
	}
	return o.RepairContact, true
}

// HasRepairContact returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContact() bool {
	if o != nil && !IsNil(o.RepairContact) {
		return true
	}

	return false
}

// SetRepairContact gets a reference to the given ContactReference and assigns it to the RepairContact field.
func (o *RmaTag) SetRepairContact(v ContactReference) {
	o.RepairContact = &v
}

// GetRepairContactType returns the RepairContactType field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactType() string {
	if o == nil || IsNil(o.RepairContactType) {
		var ret string
		return ret
	}
	return *o.RepairContactType
}

// GetRepairContactTypeOk returns a tuple with the RepairContactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactType) {
		return nil, false
	}
	return o.RepairContactType, true
}

// HasRepairContactType returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactType() bool {
	if o != nil && !IsNil(o.RepairContactType) {
		return true
	}

	return false
}

// SetRepairContactType gets a reference to the given string and assigns it to the RepairContactType field.
func (o *RmaTag) SetRepairContactType(v string) {
	o.RepairContactType = &v
}

// GetRepairContactPhone returns the RepairContactPhone field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactPhone() string {
	if o == nil || IsNil(o.RepairContactPhone) {
		var ret string
		return ret
	}
	return *o.RepairContactPhone
}

// GetRepairContactPhoneOk returns a tuple with the RepairContactPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactPhone) {
		return nil, false
	}
	return o.RepairContactPhone, true
}

// HasRepairContactPhone returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactPhone() bool {
	if o != nil && !IsNil(o.RepairContactPhone) {
		return true
	}

	return false
}

// SetRepairContactPhone gets a reference to the given string and assigns it to the RepairContactPhone field.
func (o *RmaTag) SetRepairContactPhone(v string) {
	o.RepairContactPhone = &v
}

// GetRepairContactExtension returns the RepairContactExtension field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactExtension() string {
	if o == nil || IsNil(o.RepairContactExtension) {
		var ret string
		return ret
	}
	return *o.RepairContactExtension
}

// GetRepairContactExtensionOk returns a tuple with the RepairContactExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactExtension) {
		return nil, false
	}
	return o.RepairContactExtension, true
}

// HasRepairContactExtension returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactExtension() bool {
	if o != nil && !IsNil(o.RepairContactExtension) {
		return true
	}

	return false
}

// SetRepairContactExtension gets a reference to the given string and assigns it to the RepairContactExtension field.
func (o *RmaTag) SetRepairContactExtension(v string) {
	o.RepairContactExtension = &v
}

// GetRepairContactEmail returns the RepairContactEmail field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactEmail() string {
	if o == nil || IsNil(o.RepairContactEmail) {
		var ret string
		return ret
	}
	return *o.RepairContactEmail
}

// GetRepairContactEmailOk returns a tuple with the RepairContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactEmail) {
		return nil, false
	}
	return o.RepairContactEmail, true
}

// HasRepairContactEmail returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactEmail() bool {
	if o != nil && !IsNil(o.RepairContactEmail) {
		return true
	}

	return false
}

// SetRepairContactEmail gets a reference to the given string and assigns it to the RepairContactEmail field.
func (o *RmaTag) SetRepairContactEmail(v string) {
	o.RepairContactEmail = &v
}

// GetRepairContactAddressLine1 returns the RepairContactAddressLine1 field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactAddressLine1() string {
	if o == nil || IsNil(o.RepairContactAddressLine1) {
		var ret string
		return ret
	}
	return *o.RepairContactAddressLine1
}

// GetRepairContactAddressLine1Ok returns a tuple with the RepairContactAddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.RepairContactAddressLine1) {
		return nil, false
	}
	return o.RepairContactAddressLine1, true
}

// HasRepairContactAddressLine1 returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactAddressLine1() bool {
	if o != nil && !IsNil(o.RepairContactAddressLine1) {
		return true
	}

	return false
}

// SetRepairContactAddressLine1 gets a reference to the given string and assigns it to the RepairContactAddressLine1 field.
func (o *RmaTag) SetRepairContactAddressLine1(v string) {
	o.RepairContactAddressLine1 = &v
}

// GetRepairContactAddressLine2 returns the RepairContactAddressLine2 field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactAddressLine2() string {
	if o == nil || IsNil(o.RepairContactAddressLine2) {
		var ret string
		return ret
	}
	return *o.RepairContactAddressLine2
}

// GetRepairContactAddressLine2Ok returns a tuple with the RepairContactAddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.RepairContactAddressLine2) {
		return nil, false
	}
	return o.RepairContactAddressLine2, true
}

// HasRepairContactAddressLine2 returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactAddressLine2() bool {
	if o != nil && !IsNil(o.RepairContactAddressLine2) {
		return true
	}

	return false
}

// SetRepairContactAddressLine2 gets a reference to the given string and assigns it to the RepairContactAddressLine2 field.
func (o *RmaTag) SetRepairContactAddressLine2(v string) {
	o.RepairContactAddressLine2 = &v
}

// GetRepairContactCity returns the RepairContactCity field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactCity() string {
	if o == nil || IsNil(o.RepairContactCity) {
		var ret string
		return ret
	}
	return *o.RepairContactCity
}

// GetRepairContactCityOk returns a tuple with the RepairContactCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactCityOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactCity) {
		return nil, false
	}
	return o.RepairContactCity, true
}

// HasRepairContactCity returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactCity() bool {
	if o != nil && !IsNil(o.RepairContactCity) {
		return true
	}

	return false
}

// SetRepairContactCity gets a reference to the given string and assigns it to the RepairContactCity field.
func (o *RmaTag) SetRepairContactCity(v string) {
	o.RepairContactCity = &v
}

// GetRepairContactState returns the RepairContactState field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactState() string {
	if o == nil || IsNil(o.RepairContactState) {
		var ret string
		return ret
	}
	return *o.RepairContactState
}

// GetRepairContactStateOk returns a tuple with the RepairContactState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactStateOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactState) {
		return nil, false
	}
	return o.RepairContactState, true
}

// HasRepairContactState returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactState() bool {
	if o != nil && !IsNil(o.RepairContactState) {
		return true
	}

	return false
}

// SetRepairContactState gets a reference to the given string and assigns it to the RepairContactState field.
func (o *RmaTag) SetRepairContactState(v string) {
	o.RepairContactState = &v
}

// GetRepairContactZip returns the RepairContactZip field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactZip() string {
	if o == nil || IsNil(o.RepairContactZip) {
		var ret string
		return ret
	}
	return *o.RepairContactZip
}

// GetRepairContactZipOk returns a tuple with the RepairContactZip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactZipOk() (*string, bool) {
	if o == nil || IsNil(o.RepairContactZip) {
		return nil, false
	}
	return o.RepairContactZip, true
}

// HasRepairContactZip returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactZip() bool {
	if o != nil && !IsNil(o.RepairContactZip) {
		return true
	}

	return false
}

// SetRepairContactZip gets a reference to the given string and assigns it to the RepairContactZip field.
func (o *RmaTag) SetRepairContactZip(v string) {
	o.RepairContactZip = &v
}

// GetRepairContactCountry returns the RepairContactCountry field value if set, zero value otherwise.
func (o *RmaTag) GetRepairContactCountry() CountryReference {
	if o == nil || IsNil(o.RepairContactCountry) {
		var ret CountryReference
		return ret
	}
	return *o.RepairContactCountry
}

// GetRepairContactCountryOk returns a tuple with the RepairContactCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairContactCountryOk() (*CountryReference, bool) {
	if o == nil || IsNil(o.RepairContactCountry) {
		return nil, false
	}
	return o.RepairContactCountry, true
}

// HasRepairContactCountry returns a boolean if a field has been set.
func (o *RmaTag) HasRepairContactCountry() bool {
	if o != nil && !IsNil(o.RepairContactCountry) {
		return true
	}

	return false
}

// SetRepairContactCountry gets a reference to the given CountryReference and assigns it to the RepairContactCountry field.
func (o *RmaTag) SetRepairContactCountry(v CountryReference) {
	o.RepairContactCountry = &v
}

// GetRepairOrderNumber returns the RepairOrderNumber field value if set, zero value otherwise.
func (o *RmaTag) GetRepairOrderNumber() string {
	if o == nil || IsNil(o.RepairOrderNumber) {
		var ret string
		return ret
	}
	return *o.RepairOrderNumber
}

// GetRepairOrderNumberOk returns a tuple with the RepairOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RepairOrderNumber) {
		return nil, false
	}
	return o.RepairOrderNumber, true
}

// HasRepairOrderNumber returns a boolean if a field has been set.
func (o *RmaTag) HasRepairOrderNumber() bool {
	if o != nil && !IsNil(o.RepairOrderNumber) {
		return true
	}

	return false
}

// SetRepairOrderNumber gets a reference to the given string and assigns it to the RepairOrderNumber field.
func (o *RmaTag) SetRepairOrderNumber(v string) {
	o.RepairOrderNumber = &v
}

// GetRepairSite returns the RepairSite field value if set, zero value otherwise.
func (o *RmaTag) GetRepairSite() SiteReference {
	if o == nil || IsNil(o.RepairSite) {
		var ret SiteReference
		return ret
	}
	return *o.RepairSite
}

// GetRepairSiteOk returns a tuple with the RepairSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairSiteOk() (*SiteReference, bool) {
	if o == nil || IsNil(o.RepairSite) {
		return nil, false
	}
	return o.RepairSite, true
}

// HasRepairSite returns a boolean if a field has been set.
func (o *RmaTag) HasRepairSite() bool {
	if o != nil && !IsNil(o.RepairSite) {
		return true
	}

	return false
}

// SetRepairSite gets a reference to the given SiteReference and assigns it to the RepairSite field.
func (o *RmaTag) SetRepairSite(v SiteReference) {
	o.RepairSite = &v
}

// GetRepairNotes returns the RepairNotes field value if set, zero value otherwise.
func (o *RmaTag) GetRepairNotes() string {
	if o == nil || IsNil(o.RepairNotes) {
		var ret string
		return ret
	}
	return *o.RepairNotes
}

// GetRepairNotesOk returns a tuple with the RepairNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetRepairNotesOk() (*string, bool) {
	if o == nil || IsNil(o.RepairNotes) {
		return nil, false
	}
	return o.RepairNotes, true
}

// HasRepairNotes returns a boolean if a field has been set.
func (o *RmaTag) HasRepairNotes() bool {
	if o != nil && !IsNil(o.RepairNotes) {
		return true
	}

	return false
}

// SetRepairNotes gets a reference to the given string and assigns it to the RepairNotes field.
func (o *RmaTag) SetRepairNotes(v string) {
	o.RepairNotes = &v
}

// GetDropShipFlag returns the DropShipFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RmaTag) GetDropShipFlag() bool {
	if o == nil || IsNil(o.DropShipFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.DropShipFlag.Get()
}

// GetDropShipFlagOk returns a tuple with the DropShipFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RmaTag) GetDropShipFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DropShipFlag.Get(), o.DropShipFlag.IsSet()
}

// HasDropShipFlag returns a boolean if a field has been set.
func (o *RmaTag) HasDropShipFlag() bool {
	if o != nil && o.DropShipFlag.IsSet() {
		return true
	}

	return false
}

// SetDropShipFlag gets a reference to the given NullableBool and assigns it to the DropShipFlag field.
func (o *RmaTag) SetDropShipFlag(v bool) {
	o.DropShipFlag.Set(&v)
}
// SetDropShipFlagNil sets the value for DropShipFlag to be an explicit nil
func (o *RmaTag) SetDropShipFlagNil() {
	o.DropShipFlag.Set(nil)
}

// UnsetDropShipFlag ensures that no value is present for DropShipFlag, not even an explicit nil
func (o *RmaTag) UnsetDropShipFlag() {
	o.DropShipFlag.Unset()
}

// GetShipMethod returns the ShipMethod field value if set, zero value otherwise.
func (o *RmaTag) GetShipMethod() ShipmentMethodReference {
	if o == nil || IsNil(o.ShipMethod) {
		var ret ShipmentMethodReference
		return ret
	}
	return *o.ShipMethod
}

// GetShipMethodOk returns a tuple with the ShipMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetShipMethodOk() (*ShipmentMethodReference, bool) {
	if o == nil || IsNil(o.ShipMethod) {
		return nil, false
	}
	return o.ShipMethod, true
}

// HasShipMethod returns a boolean if a field has been set.
func (o *RmaTag) HasShipMethod() bool {
	if o != nil && !IsNil(o.ShipMethod) {
		return true
	}

	return false
}

// SetShipMethod gets a reference to the given ShipmentMethodReference and assigns it to the ShipMethod field.
func (o *RmaTag) SetShipMethod(v ShipmentMethodReference) {
	o.ShipMethod = &v
}

// GetShippingDate returns the ShippingDate field value if set, zero value otherwise.
func (o *RmaTag) GetShippingDate() string {
	if o == nil || IsNil(o.ShippingDate) {
		var ret string
		return ret
	}
	return *o.ShippingDate
}

// GetShippingDateOk returns a tuple with the ShippingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetShippingDateOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingDate) {
		return nil, false
	}
	return o.ShippingDate, true
}

// HasShippingDate returns a boolean if a field has been set.
func (o *RmaTag) HasShippingDate() bool {
	if o != nil && !IsNil(o.ShippingDate) {
		return true
	}

	return false
}

// SetShippingDate gets a reference to the given string and assigns it to the ShippingDate field.
func (o *RmaTag) SetShippingDate(v string) {
	o.ShippingDate = &v
}

// GetShippingTrackingNumber returns the ShippingTrackingNumber field value if set, zero value otherwise.
func (o *RmaTag) GetShippingTrackingNumber() string {
	if o == nil || IsNil(o.ShippingTrackingNumber) {
		var ret string
		return ret
	}
	return *o.ShippingTrackingNumber
}

// GetShippingTrackingNumberOk returns a tuple with the ShippingTrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetShippingTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingTrackingNumber) {
		return nil, false
	}
	return o.ShippingTrackingNumber, true
}

// HasShippingTrackingNumber returns a boolean if a field has been set.
func (o *RmaTag) HasShippingTrackingNumber() bool {
	if o != nil && !IsNil(o.ShippingTrackingNumber) {
		return true
	}

	return false
}

// SetShippingTrackingNumber gets a reference to the given string and assigns it to the ShippingTrackingNumber field.
func (o *RmaTag) SetShippingTrackingNumber(v string) {
	o.ShippingTrackingNumber = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *RmaTag) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *RmaTag) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *RmaTag) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetClosingNotes returns the ClosingNotes field value if set, zero value otherwise.
func (o *RmaTag) GetClosingNotes() string {
	if o == nil || IsNil(o.ClosingNotes) {
		var ret string
		return ret
	}
	return *o.ClosingNotes
}

// GetClosingNotesOk returns a tuple with the ClosingNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetClosingNotesOk() (*string, bool) {
	if o == nil || IsNil(o.ClosingNotes) {
		return nil, false
	}
	return o.ClosingNotes, true
}

// HasClosingNotes returns a boolean if a field has been set.
func (o *RmaTag) HasClosingNotes() bool {
	if o != nil && !IsNil(o.ClosingNotes) {
		return true
	}

	return false
}

// SetClosingNotes gets a reference to the given string and assigns it to the ClosingNotes field.
func (o *RmaTag) SetClosingNotes(v string) {
	o.ClosingNotes = &v
}

// GetDateClosed returns the DateClosed field value if set, zero value otherwise.
func (o *RmaTag) GetDateClosed() string {
	if o == nil || IsNil(o.DateClosed) {
		var ret string
		return ret
	}
	return *o.DateClosed
}

// GetDateClosedOk returns a tuple with the DateClosed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetDateClosedOk() (*string, bool) {
	if o == nil || IsNil(o.DateClosed) {
		return nil, false
	}
	return o.DateClosed, true
}

// HasDateClosed returns a boolean if a field has been set.
func (o *RmaTag) HasDateClosed() bool {
	if o != nil && !IsNil(o.DateClosed) {
		return true
	}

	return false
}

// SetDateClosed gets a reference to the given string and assigns it to the DateClosed field.
func (o *RmaTag) SetDateClosed(v string) {
	o.DateClosed = &v
}

// GetAccountManager returns the AccountManager field value if set, zero value otherwise.
func (o *RmaTag) GetAccountManager() MemberReference {
	if o == nil || IsNil(o.AccountManager) {
		var ret MemberReference
		return ret
	}
	return *o.AccountManager
}

// GetAccountManagerOk returns a tuple with the AccountManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetAccountManagerOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.AccountManager) {
		return nil, false
	}
	return o.AccountManager, true
}

// HasAccountManager returns a boolean if a field has been set.
func (o *RmaTag) HasAccountManager() bool {
	if o != nil && !IsNil(o.AccountManager) {
		return true
	}

	return false
}

// SetAccountManager gets a reference to the given MemberReference and assigns it to the AccountManager field.
func (o *RmaTag) SetAccountManager(v MemberReference) {
	o.AccountManager = &v
}

// GetTechnicalContact returns the TechnicalContact field value if set, zero value otherwise.
func (o *RmaTag) GetTechnicalContact() MemberReference {
	if o == nil || IsNil(o.TechnicalContact) {
		var ret MemberReference
		return ret
	}
	return *o.TechnicalContact
}

// GetTechnicalContactOk returns a tuple with the TechnicalContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetTechnicalContactOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.TechnicalContact) {
		return nil, false
	}
	return o.TechnicalContact, true
}

// HasTechnicalContact returns a boolean if a field has been set.
func (o *RmaTag) HasTechnicalContact() bool {
	if o != nil && !IsNil(o.TechnicalContact) {
		return true
	}

	return false
}

// SetTechnicalContact gets a reference to the given MemberReference and assigns it to the TechnicalContact field.
func (o *RmaTag) SetTechnicalContact(v MemberReference) {
	o.TechnicalContact = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *RmaTag) GetCurrency() CurrencyReference {
	if o == nil || IsNil(o.Currency) {
		var ret CurrencyReference
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *RmaTag) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given CurrencyReference and assigns it to the Currency field.
func (o *RmaTag) SetCurrency(v CurrencyReference) {
	o.Currency = &v
}

// GetClosedBy returns the ClosedBy field value if set, zero value otherwise.
func (o *RmaTag) GetClosedBy() MemberReference {
	if o == nil || IsNil(o.ClosedBy) {
		var ret MemberReference
		return ret
	}
	return *o.ClosedBy
}

// GetClosedByOk returns a tuple with the ClosedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetClosedByOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.ClosedBy) {
		return nil, false
	}
	return o.ClosedBy, true
}

// HasClosedBy returns a boolean if a field has been set.
func (o *RmaTag) HasClosedBy() bool {
	if o != nil && !IsNil(o.ClosedBy) {
		return true
	}

	return false
}

// SetClosedBy gets a reference to the given MemberReference and assigns it to the ClosedBy field.
func (o *RmaTag) SetClosedBy(v MemberReference) {
	o.ClosedBy = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *RmaTag) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *RmaTag) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *RmaTag) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *RmaTag) GetCustomFields() []CustomFieldValue {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldValue
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaTag) GetCustomFieldsOk() ([]CustomFieldValue, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *RmaTag) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldValue and assigns it to the CustomFields field.
func (o *RmaTag) SetCustomFields(v []CustomFieldValue) {
	o.CustomFields = v
}

func (o RmaTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RmaTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ServiceTicket) {
		toSerialize["serviceTicket"] = o.ServiceTicket
	}
	if !IsNil(o.SalesOrder) {
		toSerialize["salesOrder"] = o.SalesOrder
	}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	toSerialize["product"] = o.Product
	if !IsNil(o.IvDescription) {
		toSerialize["ivDescription"] = o.IvDescription
	}
	toSerialize["productDescription"] = o.ProductDescription
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.MfgItemID) {
		toSerialize["mfgItemID"] = o.MfgItemID
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.ListPrice) {
		toSerialize["listPrice"] = o.ListPrice
	}
	if o.UnitPrice.IsSet() {
		toSerialize["unitPrice"] = o.UnitPrice.Get()
	}
	toSerialize["location"] = o.Location
	toSerialize["department"] = o.Department
	if !IsNil(o.ProblemDescription) {
		toSerialize["problemDescription"] = o.ProblemDescription
	}
	toSerialize["returnedCompany"] = o.ReturnedCompany
	if !IsNil(o.ReturnedContact) {
		toSerialize["returnedContact"] = o.ReturnedContact
	}
	if !IsNil(o.ReturnedContactType) {
		toSerialize["returnedContactType"] = o.ReturnedContactType
	}
	if !IsNil(o.ReturnedContactPhone) {
		toSerialize["returnedContactPhone"] = o.ReturnedContactPhone
	}
	if !IsNil(o.ReturnedContactExtension) {
		toSerialize["returnedContactExtension"] = o.ReturnedContactExtension
	}
	if !IsNil(o.ReturnedContactEmail) {
		toSerialize["returnedContactEmail"] = o.ReturnedContactEmail
	}
	if !IsNil(o.ReturnedContactAddressLine1) {
		toSerialize["returnedContactAddressLine1"] = o.ReturnedContactAddressLine1
	}
	if !IsNil(o.ReturnedContactAddressLine2) {
		toSerialize["returnedContactAddressLine2"] = o.ReturnedContactAddressLine2
	}
	if !IsNil(o.ReturnedContactCity) {
		toSerialize["returnedContactCity"] = o.ReturnedContactCity
	}
	if !IsNil(o.ReturnedContactState) {
		toSerialize["returnedContactState"] = o.ReturnedContactState
	}
	if !IsNil(o.ReturnedContactZip) {
		toSerialize["returnedContactZip"] = o.ReturnedContactZip
	}
	if !IsNil(o.ReturnedContactCountry) {
		toSerialize["returnedContactCountry"] = o.ReturnedContactCountry
	}
	toSerialize["rmaDisposition"] = o.RmaDisposition
	if !IsNil(o.ReturnedSite) {
		toSerialize["returnedSite"] = o.ReturnedSite
	}
	if !IsNil(o.PurchasedCompany) {
		toSerialize["purchasedCompany"] = o.PurchasedCompany
	}
	if !IsNil(o.PurchasedContact) {
		toSerialize["purchasedContact"] = o.PurchasedContact
	}
	if !IsNil(o.PurchasedContactType) {
		toSerialize["purchasedContactType"] = o.PurchasedContactType
	}
	if !IsNil(o.PurchasedContactPhone) {
		toSerialize["purchasedContactPhone"] = o.PurchasedContactPhone
	}
	if !IsNil(o.PurchasedContactExtension) {
		toSerialize["purchasedContactExtension"] = o.PurchasedContactExtension
	}
	if !IsNil(o.PurchasedContactEmail) {
		toSerialize["purchasedContactEmail"] = o.PurchasedContactEmail
	}
	if !IsNil(o.PurchasedContactAddressLine1) {
		toSerialize["purchasedContactAddressLine1"] = o.PurchasedContactAddressLine1
	}
	if !IsNil(o.PurchasedContactAddressLine2) {
		toSerialize["purchasedContactAddressLine2"] = o.PurchasedContactAddressLine2
	}
	if !IsNil(o.PurchasedContactCity) {
		toSerialize["purchasedContactCity"] = o.PurchasedContactCity
	}
	if !IsNil(o.PurchasedContactState) {
		toSerialize["purchasedContactState"] = o.PurchasedContactState
	}
	if !IsNil(o.PurchasedContactZip) {
		toSerialize["purchasedContactZip"] = o.PurchasedContactZip
	}
	if !IsNil(o.PurchasedContactCountry) {
		toSerialize["purchasedContactCountry"] = o.PurchasedContactCountry
	}
	if !IsNil(o.PurchasedInvoiceNumber) {
		toSerialize["purchasedInvoiceNumber"] = o.PurchasedInvoiceNumber
	}
	if !IsNil(o.PurchasedInvoiceDate) {
		toSerialize["purchasedInvoiceDate"] = o.PurchasedInvoiceDate
	}
	if !IsNil(o.PurchasedOrderNumber) {
		toSerialize["purchasedOrderNumber"] = o.PurchasedOrderNumber
	}
	if !IsNil(o.PurchasedVendorAction) {
		toSerialize["purchasedVendorAction"] = o.PurchasedVendorAction
	}
	if !IsNil(o.PurchasedVendorRmaNumber) {
		toSerialize["purchasedVendorRmaNumber"] = o.PurchasedVendorRmaNumber
	}
	if !IsNil(o.PurchasedSite) {
		toSerialize["purchasedSite"] = o.PurchasedSite
	}
	if !IsNil(o.PurchasedNotes) {
		toSerialize["purchasedNotes"] = o.PurchasedNotes
	}
	if !IsNil(o.WarrantyCompany) {
		toSerialize["warrantyCompany"] = o.WarrantyCompany
	}
	if !IsNil(o.WarrantyContact) {
		toSerialize["warrantyContact"] = o.WarrantyContact
	}
	if !IsNil(o.WarrantyContactType) {
		toSerialize["warrantyContactType"] = o.WarrantyContactType
	}
	if !IsNil(o.WarrantyContactPhone) {
		toSerialize["warrantyContactPhone"] = o.WarrantyContactPhone
	}
	if !IsNil(o.WarrantyContactEmail) {
		toSerialize["warrantyContactEmail"] = o.WarrantyContactEmail
	}
	if !IsNil(o.WarrantyContactExtension) {
		toSerialize["warrantyContactExtension"] = o.WarrantyContactExtension
	}
	if !IsNil(o.WarrantyContactAddressLine1) {
		toSerialize["warrantyContactAddressLine1"] = o.WarrantyContactAddressLine1
	}
	if !IsNil(o.WarrantyContactAddressLine2) {
		toSerialize["warrantyContactAddressLine2"] = o.WarrantyContactAddressLine2
	}
	if !IsNil(o.WarrantyContactCity) {
		toSerialize["warrantyContactCity"] = o.WarrantyContactCity
	}
	if !IsNil(o.WarrantyContactState) {
		toSerialize["warrantyContactState"] = o.WarrantyContactState
	}
	if !IsNil(o.WarrantyContactZip) {
		toSerialize["warrantyContactZip"] = o.WarrantyContactZip
	}
	if !IsNil(o.WarrantyContactCountry) {
		toSerialize["warrantyContactCountry"] = o.WarrantyContactCountry
	}
	if !IsNil(o.WarrantySite) {
		toSerialize["warrantySite"] = o.WarrantySite
	}
	if !IsNil(o.WarrantyNotes) {
		toSerialize["warrantyNotes"] = o.WarrantyNotes
	}
	if !IsNil(o.RepairCompany) {
		toSerialize["repairCompany"] = o.RepairCompany
	}
	if !IsNil(o.RepairContact) {
		toSerialize["repairContact"] = o.RepairContact
	}
	if !IsNil(o.RepairContactType) {
		toSerialize["repairContactType"] = o.RepairContactType
	}
	if !IsNil(o.RepairContactPhone) {
		toSerialize["repairContactPhone"] = o.RepairContactPhone
	}
	if !IsNil(o.RepairContactExtension) {
		toSerialize["repairContactExtension"] = o.RepairContactExtension
	}
	if !IsNil(o.RepairContactEmail) {
		toSerialize["repairContactEmail"] = o.RepairContactEmail
	}
	if !IsNil(o.RepairContactAddressLine1) {
		toSerialize["repairContactAddressLine1"] = o.RepairContactAddressLine1
	}
	if !IsNil(o.RepairContactAddressLine2) {
		toSerialize["repairContactAddressLine2"] = o.RepairContactAddressLine2
	}
	if !IsNil(o.RepairContactCity) {
		toSerialize["repairContactCity"] = o.RepairContactCity
	}
	if !IsNil(o.RepairContactState) {
		toSerialize["repairContactState"] = o.RepairContactState
	}
	if !IsNil(o.RepairContactZip) {
		toSerialize["repairContactZip"] = o.RepairContactZip
	}
	if !IsNil(o.RepairContactCountry) {
		toSerialize["repairContactCountry"] = o.RepairContactCountry
	}
	if !IsNil(o.RepairOrderNumber) {
		toSerialize["repairOrderNumber"] = o.RepairOrderNumber
	}
	if !IsNil(o.RepairSite) {
		toSerialize["repairSite"] = o.RepairSite
	}
	if !IsNil(o.RepairNotes) {
		toSerialize["repairNotes"] = o.RepairNotes
	}
	if o.DropShipFlag.IsSet() {
		toSerialize["dropShipFlag"] = o.DropShipFlag.Get()
	}
	if !IsNil(o.ShipMethod) {
		toSerialize["shipMethod"] = o.ShipMethod
	}
	if !IsNil(o.ShippingDate) {
		toSerialize["shippingDate"] = o.ShippingDate
	}
	if !IsNil(o.ShippingTrackingNumber) {
		toSerialize["shippingTrackingNumber"] = o.ShippingTrackingNumber
	}
	if !IsNil(o.InternalNotes) {
		toSerialize["internalNotes"] = o.InternalNotes
	}
	if !IsNil(o.ClosingNotes) {
		toSerialize["closingNotes"] = o.ClosingNotes
	}
	if !IsNil(o.DateClosed) {
		toSerialize["dateClosed"] = o.DateClosed
	}
	if !IsNil(o.AccountManager) {
		toSerialize["accountManager"] = o.AccountManager
	}
	if !IsNil(o.TechnicalContact) {
		toSerialize["technicalContact"] = o.TechnicalContact
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ClosedBy) {
		toSerialize["closedBy"] = o.ClosedBy
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *RmaTag) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"product",
		"productDescription",
		"status",
		"location",
		"department",
		"returnedCompany",
		"rmaDisposition",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRmaTag := _RmaTag{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRmaTag)

	if err != nil {
		return err
	}

	*o = RmaTag(varRmaTag)

	return err
}

type NullableRmaTag struct {
	value *RmaTag
	isSet bool
}

func (v NullableRmaTag) Get() *RmaTag {
	return v.value
}

func (v *NullableRmaTag) Set(val *RmaTag) {
	v.value = val
	v.isSet = true
}

func (v NullableRmaTag) IsSet() bool {
	return v.isSet
}

func (v *NullableRmaTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRmaTag(val *RmaTag) *NullableRmaTag {
	return &NullableRmaTag{value: val, isSet: true}
}

func (v NullableRmaTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRmaTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


