/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the SalesOrderRecap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesOrderRecap{}

// SalesOrderRecap struct for SalesOrderRecap
type SalesOrderRecap struct {
	Id *int32 `json:"id,omitempty"`
	BillableAmount *float64 `json:"billableAmount,omitempty"`
	Cost *float64 `json:"cost,omitempty"`
	Margin *float64 `json:"margin,omitempty"`
	Percent *float64 `json:"percent,omitempty"`
}

// NewSalesOrderRecap instantiates a new SalesOrderRecap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesOrderRecap() *SalesOrderRecap {
	this := SalesOrderRecap{}
	return &this
}

// NewSalesOrderRecapWithDefaults instantiates a new SalesOrderRecap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesOrderRecapWithDefaults() *SalesOrderRecap {
	this := SalesOrderRecap{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SalesOrderRecap) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrderRecap) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SalesOrderRecap) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SalesOrderRecap) SetId(v int32) {
	o.Id = &v
}

// GetBillableAmount returns the BillableAmount field value if set, zero value otherwise.
func (o *SalesOrderRecap) GetBillableAmount() float64 {
	if o == nil || IsNil(o.BillableAmount) {
		var ret float64
		return ret
	}
	return *o.BillableAmount
}

// GetBillableAmountOk returns a tuple with the BillableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrderRecap) GetBillableAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.BillableAmount) {
		return nil, false
	}
	return o.BillableAmount, true
}

// HasBillableAmount returns a boolean if a field has been set.
func (o *SalesOrderRecap) HasBillableAmount() bool {
	if o != nil && !IsNil(o.BillableAmount) {
		return true
	}

	return false
}

// SetBillableAmount gets a reference to the given float64 and assigns it to the BillableAmount field.
func (o *SalesOrderRecap) SetBillableAmount(v float64) {
	o.BillableAmount = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *SalesOrderRecap) GetCost() float64 {
	if o == nil || IsNil(o.Cost) {
		var ret float64
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrderRecap) GetCostOk() (*float64, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *SalesOrderRecap) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float64 and assigns it to the Cost field.
func (o *SalesOrderRecap) SetCost(v float64) {
	o.Cost = &v
}

// GetMargin returns the Margin field value if set, zero value otherwise.
func (o *SalesOrderRecap) GetMargin() float64 {
	if o == nil || IsNil(o.Margin) {
		var ret float64
		return ret
	}
	return *o.Margin
}

// GetMarginOk returns a tuple with the Margin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrderRecap) GetMarginOk() (*float64, bool) {
	if o == nil || IsNil(o.Margin) {
		return nil, false
	}
	return o.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (o *SalesOrderRecap) HasMargin() bool {
	if o != nil && !IsNil(o.Margin) {
		return true
	}

	return false
}

// SetMargin gets a reference to the given float64 and assigns it to the Margin field.
func (o *SalesOrderRecap) SetMargin(v float64) {
	o.Margin = &v
}

// GetPercent returns the Percent field value if set, zero value otherwise.
func (o *SalesOrderRecap) GetPercent() float64 {
	if o == nil || IsNil(o.Percent) {
		var ret float64
		return ret
	}
	return *o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrderRecap) GetPercentOk() (*float64, bool) {
	if o == nil || IsNil(o.Percent) {
		return nil, false
	}
	return o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *SalesOrderRecap) HasPercent() bool {
	if o != nil && !IsNil(o.Percent) {
		return true
	}

	return false
}

// SetPercent gets a reference to the given float64 and assigns it to the Percent field.
func (o *SalesOrderRecap) SetPercent(v float64) {
	o.Percent = &v
}

func (o SalesOrderRecap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesOrderRecap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.BillableAmount) {
		toSerialize["billableAmount"] = o.BillableAmount
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Margin) {
		toSerialize["margin"] = o.Margin
	}
	if !IsNil(o.Percent) {
		toSerialize["percent"] = o.Percent
	}
	return toSerialize, nil
}

type NullableSalesOrderRecap struct {
	value *SalesOrderRecap
	isSet bool
}

func (v NullableSalesOrderRecap) Get() *SalesOrderRecap {
	return v.value
}

func (v *NullableSalesOrderRecap) Set(val *SalesOrderRecap) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesOrderRecap) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesOrderRecap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesOrderRecap(val *SalesOrderRecap) *NullableSalesOrderRecap {
	return &NullableSalesOrderRecap{value: val, isSet: true}
}

func (v NullableSalesOrderRecap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesOrderRecap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


