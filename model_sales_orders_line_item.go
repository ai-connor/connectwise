/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SalesOrdersLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesOrdersLineItem{}

// SalesOrdersLineItem struct for SalesOrdersLineItem
type SalesOrdersLineItem struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 100;
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	SalesOrder SalesOrderReference `json:"salesOrder"`
	BillStatus *string `json:"billStatus,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	QuantityCancelled *int32 `json:"quantityCancelled,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _SalesOrdersLineItem SalesOrdersLineItem

// NewSalesOrdersLineItem instantiates a new SalesOrdersLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesOrdersLineItem(salesOrder SalesOrderReference) *SalesOrdersLineItem {
	this := SalesOrdersLineItem{}
	this.SalesOrder = salesOrder
	return &this
}

// NewSalesOrdersLineItemWithDefaults instantiates a new SalesOrdersLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesOrdersLineItemWithDefaults() *SalesOrdersLineItem {
	this := SalesOrdersLineItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SalesOrdersLineItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SalesOrdersLineItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SalesOrdersLineItem) SetId(v int32) {
	o.Id = &v
}

// GetPurchaseOrderNumber returns the PurchaseOrderNumber field value if set, zero value otherwise.
func (o *SalesOrdersLineItem) GetPurchaseOrderNumber() string {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNumber
}

// GetPurchaseOrderNumberOk returns a tuple with the PurchaseOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetPurchaseOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		return nil, false
	}
	return o.PurchaseOrderNumber, true
}

// HasPurchaseOrderNumber returns a boolean if a field has been set.
func (o *SalesOrdersLineItem) HasPurchaseOrderNumber() bool {
	if o != nil && !IsNil(o.PurchaseOrderNumber) {
		return true
	}

	return false
}

// SetPurchaseOrderNumber gets a reference to the given string and assigns it to the PurchaseOrderNumber field.
func (o *SalesOrdersLineItem) SetPurchaseOrderNumber(v string) {
	o.PurchaseOrderNumber = &v
}

// GetSalesOrder returns the SalesOrder field value
func (o *SalesOrdersLineItem) GetSalesOrder() SalesOrderReference {
	if o == nil {
		var ret SalesOrderReference
		return ret
	}

	return o.SalesOrder
}

// GetSalesOrderOk returns a tuple with the SalesOrder field value
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetSalesOrderOk() (*SalesOrderReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesOrder, true
}

// SetSalesOrder sets field value
func (o *SalesOrdersLineItem) SetSalesOrder(v SalesOrderReference) {
	o.SalesOrder = v
}

// GetBillStatus returns the BillStatus field value if set, zero value otherwise.
func (o *SalesOrdersLineItem) GetBillStatus() string {
	if o == nil || IsNil(o.BillStatus) {
		var ret string
		return ret
	}
	return *o.BillStatus
}

// GetBillStatusOk returns a tuple with the BillStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetBillStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BillStatus) {
		return nil, false
	}
	return o.BillStatus, true
}

// HasBillStatus returns a boolean if a field has been set.
func (o *SalesOrdersLineItem) HasBillStatus() bool {
	if o != nil && !IsNil(o.BillStatus) {
		return true
	}

	return false
}

// SetBillStatus gets a reference to the given string and assigns it to the BillStatus field.
func (o *SalesOrdersLineItem) SetBillStatus(v string) {
	o.BillStatus = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *SalesOrdersLineItem) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *SalesOrdersLineItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *SalesOrdersLineItem) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetQuantityCancelled returns the QuantityCancelled field value if set, zero value otherwise.
func (o *SalesOrdersLineItem) GetQuantityCancelled() int32 {
	if o == nil || IsNil(o.QuantityCancelled) {
		var ret int32
		return ret
	}
	return *o.QuantityCancelled
}

// GetQuantityCancelledOk returns a tuple with the QuantityCancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetQuantityCancelledOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityCancelled) {
		return nil, false
	}
	return o.QuantityCancelled, true
}

// HasQuantityCancelled returns a boolean if a field has been set.
func (o *SalesOrdersLineItem) HasQuantityCancelled() bool {
	if o != nil && !IsNil(o.QuantityCancelled) {
		return true
	}

	return false
}

// SetQuantityCancelled gets a reference to the given int32 and assigns it to the QuantityCancelled field.
func (o *SalesOrdersLineItem) SetQuantityCancelled(v int32) {
	o.QuantityCancelled = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *SalesOrdersLineItem) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersLineItem) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *SalesOrdersLineItem) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *SalesOrdersLineItem) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o SalesOrdersLineItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesOrdersLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PurchaseOrderNumber) {
		toSerialize["purchaseOrderNumber"] = o.PurchaseOrderNumber
	}
	toSerialize["salesOrder"] = o.SalesOrder
	if !IsNil(o.BillStatus) {
		toSerialize["billStatus"] = o.BillStatus
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.QuantityCancelled) {
		toSerialize["quantityCancelled"] = o.QuantityCancelled
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *SalesOrdersLineItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"salesOrder",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesOrdersLineItem := _SalesOrdersLineItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSalesOrdersLineItem)

	if err != nil {
		return err
	}

	*o = SalesOrdersLineItem(varSalesOrdersLineItem)

	return err
}

type NullableSalesOrdersLineItem struct {
	value *SalesOrdersLineItem
	isSet bool
}

func (v NullableSalesOrdersLineItem) Get() *SalesOrdersLineItem {
	return v.value
}

func (v *NullableSalesOrdersLineItem) Set(val *SalesOrdersLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesOrdersLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesOrdersLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesOrdersLineItem(val *SalesOrdersLineItem) *NullableSalesOrdersLineItem {
	return &NullableSalesOrdersLineItem{value: val, isSet: true}
}

func (v NullableSalesOrdersLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesOrdersLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


