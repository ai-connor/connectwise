/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SalesQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesQuota{}

// SalesQuota struct for SalesQuota
type SalesQuota struct {
	Id *int32 `json:"id,omitempty"`
	Member MemberReference `json:"member"`
	ForecastYear NullableInt32 `json:"forecastYear,omitempty"`
	Location SystemLocationReference `json:"location"`
	Department *SystemDepartmentReference `json:"department,omitempty"`
	Category *ProductCategoryReference `json:"category,omitempty"`
	SubCategory *ProductSubCategoryReference `json:"subCategory,omitempty"`
	JanuaryRevenue NullableFloat64 `json:"januaryRevenue,omitempty"`
	JanuaryMargin NullableFloat64 `json:"januaryMargin,omitempty"`
	FebruaryRevenue NullableFloat64 `json:"februaryRevenue,omitempty"`
	FebruaryMargin NullableFloat64 `json:"februaryMargin,omitempty"`
	MarchRevenue NullableFloat64 `json:"marchRevenue,omitempty"`
	MarchMargin NullableFloat64 `json:"marchMargin,omitempty"`
	AprilRevenue NullableFloat64 `json:"aprilRevenue,omitempty"`
	AprilMargin NullableFloat64 `json:"aprilMargin,omitempty"`
	MayRevenue NullableFloat64 `json:"mayRevenue,omitempty"`
	MayMargin NullableFloat64 `json:"mayMargin,omitempty"`
	JuneRevenue NullableFloat64 `json:"juneRevenue,omitempty"`
	JuneMargin NullableFloat64 `json:"juneMargin,omitempty"`
	JulyRevenue NullableFloat64 `json:"julyRevenue,omitempty"`
	JulyMargin NullableFloat64 `json:"julyMargin,omitempty"`
	AugustRevenue NullableFloat64 `json:"augustRevenue,omitempty"`
	AugustMargin NullableFloat64 `json:"augustMargin,omitempty"`
	SeptemberRevenue NullableFloat64 `json:"septemberRevenue,omitempty"`
	SeptemberMargin NullableFloat64 `json:"septemberMargin,omitempty"`
	OctoberRevenue NullableFloat64 `json:"octoberRevenue,omitempty"`
	OctoberMargin NullableFloat64 `json:"octoberMargin,omitempty"`
	NovemberRevenue NullableFloat64 `json:"novemberRevenue,omitempty"`
	NovemberMargin NullableFloat64 `json:"novemberMargin,omitempty"`
	DecemberRevenue NullableFloat64 `json:"decemberRevenue,omitempty"`
	DecemberMargin NullableFloat64 `json:"decemberMargin,omitempty"`
	Currency *CurrencyReference `json:"currency,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _SalesQuota SalesQuota

// NewSalesQuota instantiates a new SalesQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesQuota(member MemberReference, location SystemLocationReference) *SalesQuota {
	this := SalesQuota{}
	this.Member = member
	this.Location = location
	return &this
}

// NewSalesQuotaWithDefaults instantiates a new SalesQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesQuotaWithDefaults() *SalesQuota {
	this := SalesQuota{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SalesQuota) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SalesQuota) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SalesQuota) SetId(v int32) {
	o.Id = &v
}

// GetMember returns the Member field value
func (o *SalesQuota) GetMember() MemberReference {
	if o == nil {
		var ret MemberReference
		return ret
	}

	return o.Member
}

// GetMemberOk returns a tuple with the Member field value
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetMemberOk() (*MemberReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Member, true
}

// SetMember sets field value
func (o *SalesQuota) SetMember(v MemberReference) {
	o.Member = v
}

// GetForecastYear returns the ForecastYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetForecastYear() int32 {
	if o == nil || IsNil(o.ForecastYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ForecastYear.Get()
}

// GetForecastYearOk returns a tuple with the ForecastYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetForecastYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForecastYear.Get(), o.ForecastYear.IsSet()
}

// HasForecastYear returns a boolean if a field has been set.
func (o *SalesQuota) HasForecastYear() bool {
	if o != nil && o.ForecastYear.IsSet() {
		return true
	}

	return false
}

// SetForecastYear gets a reference to the given NullableInt32 and assigns it to the ForecastYear field.
func (o *SalesQuota) SetForecastYear(v int32) {
	o.ForecastYear.Set(&v)
}
// SetForecastYearNil sets the value for ForecastYear to be an explicit nil
func (o *SalesQuota) SetForecastYearNil() {
	o.ForecastYear.Set(nil)
}

// UnsetForecastYear ensures that no value is present for ForecastYear, not even an explicit nil
func (o *SalesQuota) UnsetForecastYear() {
	o.ForecastYear.Unset()
}

// GetLocation returns the Location field value
func (o *SalesQuota) GetLocation() SystemLocationReference {
	if o == nil {
		var ret SystemLocationReference
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetLocationOk() (*SystemLocationReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *SalesQuota) SetLocation(v SystemLocationReference) {
	o.Location = v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *SalesQuota) GetDepartment() SystemDepartmentReference {
	if o == nil || IsNil(o.Department) {
		var ret SystemDepartmentReference
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetDepartmentOk() (*SystemDepartmentReference, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *SalesQuota) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given SystemDepartmentReference and assigns it to the Department field.
func (o *SalesQuota) SetDepartment(v SystemDepartmentReference) {
	o.Department = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SalesQuota) GetCategory() ProductCategoryReference {
	if o == nil || IsNil(o.Category) {
		var ret ProductCategoryReference
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetCategoryOk() (*ProductCategoryReference, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SalesQuota) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given ProductCategoryReference and assigns it to the Category field.
func (o *SalesQuota) SetCategory(v ProductCategoryReference) {
	o.Category = &v
}

// GetSubCategory returns the SubCategory field value if set, zero value otherwise.
func (o *SalesQuota) GetSubCategory() ProductSubCategoryReference {
	if o == nil || IsNil(o.SubCategory) {
		var ret ProductSubCategoryReference
		return ret
	}
	return *o.SubCategory
}

// GetSubCategoryOk returns a tuple with the SubCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetSubCategoryOk() (*ProductSubCategoryReference, bool) {
	if o == nil || IsNil(o.SubCategory) {
		return nil, false
	}
	return o.SubCategory, true
}

// HasSubCategory returns a boolean if a field has been set.
func (o *SalesQuota) HasSubCategory() bool {
	if o != nil && !IsNil(o.SubCategory) {
		return true
	}

	return false
}

// SetSubCategory gets a reference to the given ProductSubCategoryReference and assigns it to the SubCategory field.
func (o *SalesQuota) SetSubCategory(v ProductSubCategoryReference) {
	o.SubCategory = &v
}

// GetJanuaryRevenue returns the JanuaryRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetJanuaryRevenue() float64 {
	if o == nil || IsNil(o.JanuaryRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.JanuaryRevenue.Get()
}

// GetJanuaryRevenueOk returns a tuple with the JanuaryRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetJanuaryRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JanuaryRevenue.Get(), o.JanuaryRevenue.IsSet()
}

// HasJanuaryRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasJanuaryRevenue() bool {
	if o != nil && o.JanuaryRevenue.IsSet() {
		return true
	}

	return false
}

// SetJanuaryRevenue gets a reference to the given NullableFloat64 and assigns it to the JanuaryRevenue field.
func (o *SalesQuota) SetJanuaryRevenue(v float64) {
	o.JanuaryRevenue.Set(&v)
}
// SetJanuaryRevenueNil sets the value for JanuaryRevenue to be an explicit nil
func (o *SalesQuota) SetJanuaryRevenueNil() {
	o.JanuaryRevenue.Set(nil)
}

// UnsetJanuaryRevenue ensures that no value is present for JanuaryRevenue, not even an explicit nil
func (o *SalesQuota) UnsetJanuaryRevenue() {
	o.JanuaryRevenue.Unset()
}

// GetJanuaryMargin returns the JanuaryMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetJanuaryMargin() float64 {
	if o == nil || IsNil(o.JanuaryMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.JanuaryMargin.Get()
}

// GetJanuaryMarginOk returns a tuple with the JanuaryMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetJanuaryMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JanuaryMargin.Get(), o.JanuaryMargin.IsSet()
}

// HasJanuaryMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasJanuaryMargin() bool {
	if o != nil && o.JanuaryMargin.IsSet() {
		return true
	}

	return false
}

// SetJanuaryMargin gets a reference to the given NullableFloat64 and assigns it to the JanuaryMargin field.
func (o *SalesQuota) SetJanuaryMargin(v float64) {
	o.JanuaryMargin.Set(&v)
}
// SetJanuaryMarginNil sets the value for JanuaryMargin to be an explicit nil
func (o *SalesQuota) SetJanuaryMarginNil() {
	o.JanuaryMargin.Set(nil)
}

// UnsetJanuaryMargin ensures that no value is present for JanuaryMargin, not even an explicit nil
func (o *SalesQuota) UnsetJanuaryMargin() {
	o.JanuaryMargin.Unset()
}

// GetFebruaryRevenue returns the FebruaryRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetFebruaryRevenue() float64 {
	if o == nil || IsNil(o.FebruaryRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.FebruaryRevenue.Get()
}

// GetFebruaryRevenueOk returns a tuple with the FebruaryRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetFebruaryRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FebruaryRevenue.Get(), o.FebruaryRevenue.IsSet()
}

// HasFebruaryRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasFebruaryRevenue() bool {
	if o != nil && o.FebruaryRevenue.IsSet() {
		return true
	}

	return false
}

// SetFebruaryRevenue gets a reference to the given NullableFloat64 and assigns it to the FebruaryRevenue field.
func (o *SalesQuota) SetFebruaryRevenue(v float64) {
	o.FebruaryRevenue.Set(&v)
}
// SetFebruaryRevenueNil sets the value for FebruaryRevenue to be an explicit nil
func (o *SalesQuota) SetFebruaryRevenueNil() {
	o.FebruaryRevenue.Set(nil)
}

// UnsetFebruaryRevenue ensures that no value is present for FebruaryRevenue, not even an explicit nil
func (o *SalesQuota) UnsetFebruaryRevenue() {
	o.FebruaryRevenue.Unset()
}

// GetFebruaryMargin returns the FebruaryMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetFebruaryMargin() float64 {
	if o == nil || IsNil(o.FebruaryMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.FebruaryMargin.Get()
}

// GetFebruaryMarginOk returns a tuple with the FebruaryMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetFebruaryMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FebruaryMargin.Get(), o.FebruaryMargin.IsSet()
}

// HasFebruaryMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasFebruaryMargin() bool {
	if o != nil && o.FebruaryMargin.IsSet() {
		return true
	}

	return false
}

// SetFebruaryMargin gets a reference to the given NullableFloat64 and assigns it to the FebruaryMargin field.
func (o *SalesQuota) SetFebruaryMargin(v float64) {
	o.FebruaryMargin.Set(&v)
}
// SetFebruaryMarginNil sets the value for FebruaryMargin to be an explicit nil
func (o *SalesQuota) SetFebruaryMarginNil() {
	o.FebruaryMargin.Set(nil)
}

// UnsetFebruaryMargin ensures that no value is present for FebruaryMargin, not even an explicit nil
func (o *SalesQuota) UnsetFebruaryMargin() {
	o.FebruaryMargin.Unset()
}

// GetMarchRevenue returns the MarchRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetMarchRevenue() float64 {
	if o == nil || IsNil(o.MarchRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.MarchRevenue.Get()
}

// GetMarchRevenueOk returns a tuple with the MarchRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetMarchRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarchRevenue.Get(), o.MarchRevenue.IsSet()
}

// HasMarchRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasMarchRevenue() bool {
	if o != nil && o.MarchRevenue.IsSet() {
		return true
	}

	return false
}

// SetMarchRevenue gets a reference to the given NullableFloat64 and assigns it to the MarchRevenue field.
func (o *SalesQuota) SetMarchRevenue(v float64) {
	o.MarchRevenue.Set(&v)
}
// SetMarchRevenueNil sets the value for MarchRevenue to be an explicit nil
func (o *SalesQuota) SetMarchRevenueNil() {
	o.MarchRevenue.Set(nil)
}

// UnsetMarchRevenue ensures that no value is present for MarchRevenue, not even an explicit nil
func (o *SalesQuota) UnsetMarchRevenue() {
	o.MarchRevenue.Unset()
}

// GetMarchMargin returns the MarchMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetMarchMargin() float64 {
	if o == nil || IsNil(o.MarchMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.MarchMargin.Get()
}

// GetMarchMarginOk returns a tuple with the MarchMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetMarchMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarchMargin.Get(), o.MarchMargin.IsSet()
}

// HasMarchMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasMarchMargin() bool {
	if o != nil && o.MarchMargin.IsSet() {
		return true
	}

	return false
}

// SetMarchMargin gets a reference to the given NullableFloat64 and assigns it to the MarchMargin field.
func (o *SalesQuota) SetMarchMargin(v float64) {
	o.MarchMargin.Set(&v)
}
// SetMarchMarginNil sets the value for MarchMargin to be an explicit nil
func (o *SalesQuota) SetMarchMarginNil() {
	o.MarchMargin.Set(nil)
}

// UnsetMarchMargin ensures that no value is present for MarchMargin, not even an explicit nil
func (o *SalesQuota) UnsetMarchMargin() {
	o.MarchMargin.Unset()
}

// GetAprilRevenue returns the AprilRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetAprilRevenue() float64 {
	if o == nil || IsNil(o.AprilRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.AprilRevenue.Get()
}

// GetAprilRevenueOk returns a tuple with the AprilRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetAprilRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AprilRevenue.Get(), o.AprilRevenue.IsSet()
}

// HasAprilRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasAprilRevenue() bool {
	if o != nil && o.AprilRevenue.IsSet() {
		return true
	}

	return false
}

// SetAprilRevenue gets a reference to the given NullableFloat64 and assigns it to the AprilRevenue field.
func (o *SalesQuota) SetAprilRevenue(v float64) {
	o.AprilRevenue.Set(&v)
}
// SetAprilRevenueNil sets the value for AprilRevenue to be an explicit nil
func (o *SalesQuota) SetAprilRevenueNil() {
	o.AprilRevenue.Set(nil)
}

// UnsetAprilRevenue ensures that no value is present for AprilRevenue, not even an explicit nil
func (o *SalesQuota) UnsetAprilRevenue() {
	o.AprilRevenue.Unset()
}

// GetAprilMargin returns the AprilMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetAprilMargin() float64 {
	if o == nil || IsNil(o.AprilMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.AprilMargin.Get()
}

// GetAprilMarginOk returns a tuple with the AprilMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetAprilMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AprilMargin.Get(), o.AprilMargin.IsSet()
}

// HasAprilMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasAprilMargin() bool {
	if o != nil && o.AprilMargin.IsSet() {
		return true
	}

	return false
}

// SetAprilMargin gets a reference to the given NullableFloat64 and assigns it to the AprilMargin field.
func (o *SalesQuota) SetAprilMargin(v float64) {
	o.AprilMargin.Set(&v)
}
// SetAprilMarginNil sets the value for AprilMargin to be an explicit nil
func (o *SalesQuota) SetAprilMarginNil() {
	o.AprilMargin.Set(nil)
}

// UnsetAprilMargin ensures that no value is present for AprilMargin, not even an explicit nil
func (o *SalesQuota) UnsetAprilMargin() {
	o.AprilMargin.Unset()
}

// GetMayRevenue returns the MayRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetMayRevenue() float64 {
	if o == nil || IsNil(o.MayRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.MayRevenue.Get()
}

// GetMayRevenueOk returns a tuple with the MayRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetMayRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MayRevenue.Get(), o.MayRevenue.IsSet()
}

// HasMayRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasMayRevenue() bool {
	if o != nil && o.MayRevenue.IsSet() {
		return true
	}

	return false
}

// SetMayRevenue gets a reference to the given NullableFloat64 and assigns it to the MayRevenue field.
func (o *SalesQuota) SetMayRevenue(v float64) {
	o.MayRevenue.Set(&v)
}
// SetMayRevenueNil sets the value for MayRevenue to be an explicit nil
func (o *SalesQuota) SetMayRevenueNil() {
	o.MayRevenue.Set(nil)
}

// UnsetMayRevenue ensures that no value is present for MayRevenue, not even an explicit nil
func (o *SalesQuota) UnsetMayRevenue() {
	o.MayRevenue.Unset()
}

// GetMayMargin returns the MayMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetMayMargin() float64 {
	if o == nil || IsNil(o.MayMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.MayMargin.Get()
}

// GetMayMarginOk returns a tuple with the MayMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetMayMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MayMargin.Get(), o.MayMargin.IsSet()
}

// HasMayMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasMayMargin() bool {
	if o != nil && o.MayMargin.IsSet() {
		return true
	}

	return false
}

// SetMayMargin gets a reference to the given NullableFloat64 and assigns it to the MayMargin field.
func (o *SalesQuota) SetMayMargin(v float64) {
	o.MayMargin.Set(&v)
}
// SetMayMarginNil sets the value for MayMargin to be an explicit nil
func (o *SalesQuota) SetMayMarginNil() {
	o.MayMargin.Set(nil)
}

// UnsetMayMargin ensures that no value is present for MayMargin, not even an explicit nil
func (o *SalesQuota) UnsetMayMargin() {
	o.MayMargin.Unset()
}

// GetJuneRevenue returns the JuneRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetJuneRevenue() float64 {
	if o == nil || IsNil(o.JuneRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.JuneRevenue.Get()
}

// GetJuneRevenueOk returns a tuple with the JuneRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetJuneRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JuneRevenue.Get(), o.JuneRevenue.IsSet()
}

// HasJuneRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasJuneRevenue() bool {
	if o != nil && o.JuneRevenue.IsSet() {
		return true
	}

	return false
}

// SetJuneRevenue gets a reference to the given NullableFloat64 and assigns it to the JuneRevenue field.
func (o *SalesQuota) SetJuneRevenue(v float64) {
	o.JuneRevenue.Set(&v)
}
// SetJuneRevenueNil sets the value for JuneRevenue to be an explicit nil
func (o *SalesQuota) SetJuneRevenueNil() {
	o.JuneRevenue.Set(nil)
}

// UnsetJuneRevenue ensures that no value is present for JuneRevenue, not even an explicit nil
func (o *SalesQuota) UnsetJuneRevenue() {
	o.JuneRevenue.Unset()
}

// GetJuneMargin returns the JuneMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetJuneMargin() float64 {
	if o == nil || IsNil(o.JuneMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.JuneMargin.Get()
}

// GetJuneMarginOk returns a tuple with the JuneMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetJuneMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JuneMargin.Get(), o.JuneMargin.IsSet()
}

// HasJuneMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasJuneMargin() bool {
	if o != nil && o.JuneMargin.IsSet() {
		return true
	}

	return false
}

// SetJuneMargin gets a reference to the given NullableFloat64 and assigns it to the JuneMargin field.
func (o *SalesQuota) SetJuneMargin(v float64) {
	o.JuneMargin.Set(&v)
}
// SetJuneMarginNil sets the value for JuneMargin to be an explicit nil
func (o *SalesQuota) SetJuneMarginNil() {
	o.JuneMargin.Set(nil)
}

// UnsetJuneMargin ensures that no value is present for JuneMargin, not even an explicit nil
func (o *SalesQuota) UnsetJuneMargin() {
	o.JuneMargin.Unset()
}

// GetJulyRevenue returns the JulyRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetJulyRevenue() float64 {
	if o == nil || IsNil(o.JulyRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.JulyRevenue.Get()
}

// GetJulyRevenueOk returns a tuple with the JulyRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetJulyRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JulyRevenue.Get(), o.JulyRevenue.IsSet()
}

// HasJulyRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasJulyRevenue() bool {
	if o != nil && o.JulyRevenue.IsSet() {
		return true
	}

	return false
}

// SetJulyRevenue gets a reference to the given NullableFloat64 and assigns it to the JulyRevenue field.
func (o *SalesQuota) SetJulyRevenue(v float64) {
	o.JulyRevenue.Set(&v)
}
// SetJulyRevenueNil sets the value for JulyRevenue to be an explicit nil
func (o *SalesQuota) SetJulyRevenueNil() {
	o.JulyRevenue.Set(nil)
}

// UnsetJulyRevenue ensures that no value is present for JulyRevenue, not even an explicit nil
func (o *SalesQuota) UnsetJulyRevenue() {
	o.JulyRevenue.Unset()
}

// GetJulyMargin returns the JulyMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetJulyMargin() float64 {
	if o == nil || IsNil(o.JulyMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.JulyMargin.Get()
}

// GetJulyMarginOk returns a tuple with the JulyMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetJulyMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JulyMargin.Get(), o.JulyMargin.IsSet()
}

// HasJulyMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasJulyMargin() bool {
	if o != nil && o.JulyMargin.IsSet() {
		return true
	}

	return false
}

// SetJulyMargin gets a reference to the given NullableFloat64 and assigns it to the JulyMargin field.
func (o *SalesQuota) SetJulyMargin(v float64) {
	o.JulyMargin.Set(&v)
}
// SetJulyMarginNil sets the value for JulyMargin to be an explicit nil
func (o *SalesQuota) SetJulyMarginNil() {
	o.JulyMargin.Set(nil)
}

// UnsetJulyMargin ensures that no value is present for JulyMargin, not even an explicit nil
func (o *SalesQuota) UnsetJulyMargin() {
	o.JulyMargin.Unset()
}

// GetAugustRevenue returns the AugustRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetAugustRevenue() float64 {
	if o == nil || IsNil(o.AugustRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.AugustRevenue.Get()
}

// GetAugustRevenueOk returns a tuple with the AugustRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetAugustRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AugustRevenue.Get(), o.AugustRevenue.IsSet()
}

// HasAugustRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasAugustRevenue() bool {
	if o != nil && o.AugustRevenue.IsSet() {
		return true
	}

	return false
}

// SetAugustRevenue gets a reference to the given NullableFloat64 and assigns it to the AugustRevenue field.
func (o *SalesQuota) SetAugustRevenue(v float64) {
	o.AugustRevenue.Set(&v)
}
// SetAugustRevenueNil sets the value for AugustRevenue to be an explicit nil
func (o *SalesQuota) SetAugustRevenueNil() {
	o.AugustRevenue.Set(nil)
}

// UnsetAugustRevenue ensures that no value is present for AugustRevenue, not even an explicit nil
func (o *SalesQuota) UnsetAugustRevenue() {
	o.AugustRevenue.Unset()
}

// GetAugustMargin returns the AugustMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetAugustMargin() float64 {
	if o == nil || IsNil(o.AugustMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.AugustMargin.Get()
}

// GetAugustMarginOk returns a tuple with the AugustMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetAugustMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AugustMargin.Get(), o.AugustMargin.IsSet()
}

// HasAugustMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasAugustMargin() bool {
	if o != nil && o.AugustMargin.IsSet() {
		return true
	}

	return false
}

// SetAugustMargin gets a reference to the given NullableFloat64 and assigns it to the AugustMargin field.
func (o *SalesQuota) SetAugustMargin(v float64) {
	o.AugustMargin.Set(&v)
}
// SetAugustMarginNil sets the value for AugustMargin to be an explicit nil
func (o *SalesQuota) SetAugustMarginNil() {
	o.AugustMargin.Set(nil)
}

// UnsetAugustMargin ensures that no value is present for AugustMargin, not even an explicit nil
func (o *SalesQuota) UnsetAugustMargin() {
	o.AugustMargin.Unset()
}

// GetSeptemberRevenue returns the SeptemberRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetSeptemberRevenue() float64 {
	if o == nil || IsNil(o.SeptemberRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.SeptemberRevenue.Get()
}

// GetSeptemberRevenueOk returns a tuple with the SeptemberRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetSeptemberRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeptemberRevenue.Get(), o.SeptemberRevenue.IsSet()
}

// HasSeptemberRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasSeptemberRevenue() bool {
	if o != nil && o.SeptemberRevenue.IsSet() {
		return true
	}

	return false
}

// SetSeptemberRevenue gets a reference to the given NullableFloat64 and assigns it to the SeptemberRevenue field.
func (o *SalesQuota) SetSeptemberRevenue(v float64) {
	o.SeptemberRevenue.Set(&v)
}
// SetSeptemberRevenueNil sets the value for SeptemberRevenue to be an explicit nil
func (o *SalesQuota) SetSeptemberRevenueNil() {
	o.SeptemberRevenue.Set(nil)
}

// UnsetSeptemberRevenue ensures that no value is present for SeptemberRevenue, not even an explicit nil
func (o *SalesQuota) UnsetSeptemberRevenue() {
	o.SeptemberRevenue.Unset()
}

// GetSeptemberMargin returns the SeptemberMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetSeptemberMargin() float64 {
	if o == nil || IsNil(o.SeptemberMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.SeptemberMargin.Get()
}

// GetSeptemberMarginOk returns a tuple with the SeptemberMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetSeptemberMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeptemberMargin.Get(), o.SeptemberMargin.IsSet()
}

// HasSeptemberMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasSeptemberMargin() bool {
	if o != nil && o.SeptemberMargin.IsSet() {
		return true
	}

	return false
}

// SetSeptemberMargin gets a reference to the given NullableFloat64 and assigns it to the SeptemberMargin field.
func (o *SalesQuota) SetSeptemberMargin(v float64) {
	o.SeptemberMargin.Set(&v)
}
// SetSeptemberMarginNil sets the value for SeptemberMargin to be an explicit nil
func (o *SalesQuota) SetSeptemberMarginNil() {
	o.SeptemberMargin.Set(nil)
}

// UnsetSeptemberMargin ensures that no value is present for SeptemberMargin, not even an explicit nil
func (o *SalesQuota) UnsetSeptemberMargin() {
	o.SeptemberMargin.Unset()
}

// GetOctoberRevenue returns the OctoberRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetOctoberRevenue() float64 {
	if o == nil || IsNil(o.OctoberRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.OctoberRevenue.Get()
}

// GetOctoberRevenueOk returns a tuple with the OctoberRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetOctoberRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.OctoberRevenue.Get(), o.OctoberRevenue.IsSet()
}

// HasOctoberRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasOctoberRevenue() bool {
	if o != nil && o.OctoberRevenue.IsSet() {
		return true
	}

	return false
}

// SetOctoberRevenue gets a reference to the given NullableFloat64 and assigns it to the OctoberRevenue field.
func (o *SalesQuota) SetOctoberRevenue(v float64) {
	o.OctoberRevenue.Set(&v)
}
// SetOctoberRevenueNil sets the value for OctoberRevenue to be an explicit nil
func (o *SalesQuota) SetOctoberRevenueNil() {
	o.OctoberRevenue.Set(nil)
}

// UnsetOctoberRevenue ensures that no value is present for OctoberRevenue, not even an explicit nil
func (o *SalesQuota) UnsetOctoberRevenue() {
	o.OctoberRevenue.Unset()
}

// GetOctoberMargin returns the OctoberMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetOctoberMargin() float64 {
	if o == nil || IsNil(o.OctoberMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.OctoberMargin.Get()
}

// GetOctoberMarginOk returns a tuple with the OctoberMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetOctoberMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.OctoberMargin.Get(), o.OctoberMargin.IsSet()
}

// HasOctoberMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasOctoberMargin() bool {
	if o != nil && o.OctoberMargin.IsSet() {
		return true
	}

	return false
}

// SetOctoberMargin gets a reference to the given NullableFloat64 and assigns it to the OctoberMargin field.
func (o *SalesQuota) SetOctoberMargin(v float64) {
	o.OctoberMargin.Set(&v)
}
// SetOctoberMarginNil sets the value for OctoberMargin to be an explicit nil
func (o *SalesQuota) SetOctoberMarginNil() {
	o.OctoberMargin.Set(nil)
}

// UnsetOctoberMargin ensures that no value is present for OctoberMargin, not even an explicit nil
func (o *SalesQuota) UnsetOctoberMargin() {
	o.OctoberMargin.Unset()
}

// GetNovemberRevenue returns the NovemberRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetNovemberRevenue() float64 {
	if o == nil || IsNil(o.NovemberRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.NovemberRevenue.Get()
}

// GetNovemberRevenueOk returns a tuple with the NovemberRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetNovemberRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NovemberRevenue.Get(), o.NovemberRevenue.IsSet()
}

// HasNovemberRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasNovemberRevenue() bool {
	if o != nil && o.NovemberRevenue.IsSet() {
		return true
	}

	return false
}

// SetNovemberRevenue gets a reference to the given NullableFloat64 and assigns it to the NovemberRevenue field.
func (o *SalesQuota) SetNovemberRevenue(v float64) {
	o.NovemberRevenue.Set(&v)
}
// SetNovemberRevenueNil sets the value for NovemberRevenue to be an explicit nil
func (o *SalesQuota) SetNovemberRevenueNil() {
	o.NovemberRevenue.Set(nil)
}

// UnsetNovemberRevenue ensures that no value is present for NovemberRevenue, not even an explicit nil
func (o *SalesQuota) UnsetNovemberRevenue() {
	o.NovemberRevenue.Unset()
}

// GetNovemberMargin returns the NovemberMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetNovemberMargin() float64 {
	if o == nil || IsNil(o.NovemberMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.NovemberMargin.Get()
}

// GetNovemberMarginOk returns a tuple with the NovemberMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetNovemberMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NovemberMargin.Get(), o.NovemberMargin.IsSet()
}

// HasNovemberMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasNovemberMargin() bool {
	if o != nil && o.NovemberMargin.IsSet() {
		return true
	}

	return false
}

// SetNovemberMargin gets a reference to the given NullableFloat64 and assigns it to the NovemberMargin field.
func (o *SalesQuota) SetNovemberMargin(v float64) {
	o.NovemberMargin.Set(&v)
}
// SetNovemberMarginNil sets the value for NovemberMargin to be an explicit nil
func (o *SalesQuota) SetNovemberMarginNil() {
	o.NovemberMargin.Set(nil)
}

// UnsetNovemberMargin ensures that no value is present for NovemberMargin, not even an explicit nil
func (o *SalesQuota) UnsetNovemberMargin() {
	o.NovemberMargin.Unset()
}

// GetDecemberRevenue returns the DecemberRevenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetDecemberRevenue() float64 {
	if o == nil || IsNil(o.DecemberRevenue.Get()) {
		var ret float64
		return ret
	}
	return *o.DecemberRevenue.Get()
}

// GetDecemberRevenueOk returns a tuple with the DecemberRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetDecemberRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DecemberRevenue.Get(), o.DecemberRevenue.IsSet()
}

// HasDecemberRevenue returns a boolean if a field has been set.
func (o *SalesQuota) HasDecemberRevenue() bool {
	if o != nil && o.DecemberRevenue.IsSet() {
		return true
	}

	return false
}

// SetDecemberRevenue gets a reference to the given NullableFloat64 and assigns it to the DecemberRevenue field.
func (o *SalesQuota) SetDecemberRevenue(v float64) {
	o.DecemberRevenue.Set(&v)
}
// SetDecemberRevenueNil sets the value for DecemberRevenue to be an explicit nil
func (o *SalesQuota) SetDecemberRevenueNil() {
	o.DecemberRevenue.Set(nil)
}

// UnsetDecemberRevenue ensures that no value is present for DecemberRevenue, not even an explicit nil
func (o *SalesQuota) UnsetDecemberRevenue() {
	o.DecemberRevenue.Unset()
}

// GetDecemberMargin returns the DecemberMargin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SalesQuota) GetDecemberMargin() float64 {
	if o == nil || IsNil(o.DecemberMargin.Get()) {
		var ret float64
		return ret
	}
	return *o.DecemberMargin.Get()
}

// GetDecemberMarginOk returns a tuple with the DecemberMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SalesQuota) GetDecemberMarginOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DecemberMargin.Get(), o.DecemberMargin.IsSet()
}

// HasDecemberMargin returns a boolean if a field has been set.
func (o *SalesQuota) HasDecemberMargin() bool {
	if o != nil && o.DecemberMargin.IsSet() {
		return true
	}

	return false
}

// SetDecemberMargin gets a reference to the given NullableFloat64 and assigns it to the DecemberMargin field.
func (o *SalesQuota) SetDecemberMargin(v float64) {
	o.DecemberMargin.Set(&v)
}
// SetDecemberMarginNil sets the value for DecemberMargin to be an explicit nil
func (o *SalesQuota) SetDecemberMarginNil() {
	o.DecemberMargin.Set(nil)
}

// UnsetDecemberMargin ensures that no value is present for DecemberMargin, not even an explicit nil
func (o *SalesQuota) UnsetDecemberMargin() {
	o.DecemberMargin.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *SalesQuota) GetCurrency() CurrencyReference {
	if o == nil || IsNil(o.Currency) {
		var ret CurrencyReference
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetCurrencyOk() (*CurrencyReference, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *SalesQuota) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given CurrencyReference and assigns it to the Currency field.
func (o *SalesQuota) SetCurrency(v CurrencyReference) {
	o.Currency = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *SalesQuota) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesQuota) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *SalesQuota) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *SalesQuota) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o SalesQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["member"] = o.Member
	if o.ForecastYear.IsSet() {
		toSerialize["forecastYear"] = o.ForecastYear.Get()
	}
	toSerialize["location"] = o.Location
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.SubCategory) {
		toSerialize["subCategory"] = o.SubCategory
	}
	if o.JanuaryRevenue.IsSet() {
		toSerialize["januaryRevenue"] = o.JanuaryRevenue.Get()
	}
	if o.JanuaryMargin.IsSet() {
		toSerialize["januaryMargin"] = o.JanuaryMargin.Get()
	}
	if o.FebruaryRevenue.IsSet() {
		toSerialize["februaryRevenue"] = o.FebruaryRevenue.Get()
	}
	if o.FebruaryMargin.IsSet() {
		toSerialize["februaryMargin"] = o.FebruaryMargin.Get()
	}
	if o.MarchRevenue.IsSet() {
		toSerialize["marchRevenue"] = o.MarchRevenue.Get()
	}
	if o.MarchMargin.IsSet() {
		toSerialize["marchMargin"] = o.MarchMargin.Get()
	}
	if o.AprilRevenue.IsSet() {
		toSerialize["aprilRevenue"] = o.AprilRevenue.Get()
	}
	if o.AprilMargin.IsSet() {
		toSerialize["aprilMargin"] = o.AprilMargin.Get()
	}
	if o.MayRevenue.IsSet() {
		toSerialize["mayRevenue"] = o.MayRevenue.Get()
	}
	if o.MayMargin.IsSet() {
		toSerialize["mayMargin"] = o.MayMargin.Get()
	}
	if o.JuneRevenue.IsSet() {
		toSerialize["juneRevenue"] = o.JuneRevenue.Get()
	}
	if o.JuneMargin.IsSet() {
		toSerialize["juneMargin"] = o.JuneMargin.Get()
	}
	if o.JulyRevenue.IsSet() {
		toSerialize["julyRevenue"] = o.JulyRevenue.Get()
	}
	if o.JulyMargin.IsSet() {
		toSerialize["julyMargin"] = o.JulyMargin.Get()
	}
	if o.AugustRevenue.IsSet() {
		toSerialize["augustRevenue"] = o.AugustRevenue.Get()
	}
	if o.AugustMargin.IsSet() {
		toSerialize["augustMargin"] = o.AugustMargin.Get()
	}
	if o.SeptemberRevenue.IsSet() {
		toSerialize["septemberRevenue"] = o.SeptemberRevenue.Get()
	}
	if o.SeptemberMargin.IsSet() {
		toSerialize["septemberMargin"] = o.SeptemberMargin.Get()
	}
	if o.OctoberRevenue.IsSet() {
		toSerialize["octoberRevenue"] = o.OctoberRevenue.Get()
	}
	if o.OctoberMargin.IsSet() {
		toSerialize["octoberMargin"] = o.OctoberMargin.Get()
	}
	if o.NovemberRevenue.IsSet() {
		toSerialize["novemberRevenue"] = o.NovemberRevenue.Get()
	}
	if o.NovemberMargin.IsSet() {
		toSerialize["novemberMargin"] = o.NovemberMargin.Get()
	}
	if o.DecemberRevenue.IsSet() {
		toSerialize["decemberRevenue"] = o.DecemberRevenue.Get()
	}
	if o.DecemberMargin.IsSet() {
		toSerialize["decemberMargin"] = o.DecemberMargin.Get()
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *SalesQuota) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"member",
		"location",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesQuota := _SalesQuota{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSalesQuota)

	if err != nil {
		return err
	}

	*o = SalesQuota(varSalesQuota)

	return err
}

type NullableSalesQuota struct {
	value *SalesQuota
	isSet bool
}

func (v NullableSalesQuota) Get() *SalesQuota {
	return v.value
}

func (v *NullableSalesQuota) Set(val *SalesQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesQuota(val *SalesQuota) *NullableSalesQuota {
	return &NullableSalesQuota{value: val, isSet: true}
}

func (v NullableSalesQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


