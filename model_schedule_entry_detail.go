/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ScheduleEntryDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduleEntryDetail{}

// ScheduleEntryDetail struct for ScheduleEntryDetail
type ScheduleEntryDetail struct {
	Id *int32 `json:"id,omitempty"`
	ScheduleEntry *ScheduleEntryReference `json:"scheduleEntry,omitempty"`
	DateStart *string `json:"dateStart,omitempty"`
	DateEnd *string `json:"dateEnd,omitempty"`
	HoursScheduled *float64 `json:"hoursScheduled,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewScheduleEntryDetail instantiates a new ScheduleEntryDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleEntryDetail() *ScheduleEntryDetail {
	this := ScheduleEntryDetail{}
	return &this
}

// NewScheduleEntryDetailWithDefaults instantiates a new ScheduleEntryDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleEntryDetailWithDefaults() *ScheduleEntryDetail {
	this := ScheduleEntryDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScheduleEntryDetail) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryDetail) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScheduleEntryDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ScheduleEntryDetail) SetId(v int32) {
	o.Id = &v
}

// GetScheduleEntry returns the ScheduleEntry field value if set, zero value otherwise.
func (o *ScheduleEntryDetail) GetScheduleEntry() ScheduleEntryReference {
	if o == nil || IsNil(o.ScheduleEntry) {
		var ret ScheduleEntryReference
		return ret
	}
	return *o.ScheduleEntry
}

// GetScheduleEntryOk returns a tuple with the ScheduleEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryDetail) GetScheduleEntryOk() (*ScheduleEntryReference, bool) {
	if o == nil || IsNil(o.ScheduleEntry) {
		return nil, false
	}
	return o.ScheduleEntry, true
}

// HasScheduleEntry returns a boolean if a field has been set.
func (o *ScheduleEntryDetail) HasScheduleEntry() bool {
	if o != nil && !IsNil(o.ScheduleEntry) {
		return true
	}

	return false
}

// SetScheduleEntry gets a reference to the given ScheduleEntryReference and assigns it to the ScheduleEntry field.
func (o *ScheduleEntryDetail) SetScheduleEntry(v ScheduleEntryReference) {
	o.ScheduleEntry = &v
}

// GetDateStart returns the DateStart field value if set, zero value otherwise.
func (o *ScheduleEntryDetail) GetDateStart() string {
	if o == nil || IsNil(o.DateStart) {
		var ret string
		return ret
	}
	return *o.DateStart
}

// GetDateStartOk returns a tuple with the DateStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryDetail) GetDateStartOk() (*string, bool) {
	if o == nil || IsNil(o.DateStart) {
		return nil, false
	}
	return o.DateStart, true
}

// HasDateStart returns a boolean if a field has been set.
func (o *ScheduleEntryDetail) HasDateStart() bool {
	if o != nil && !IsNil(o.DateStart) {
		return true
	}

	return false
}

// SetDateStart gets a reference to the given string and assigns it to the DateStart field.
func (o *ScheduleEntryDetail) SetDateStart(v string) {
	o.DateStart = &v
}

// GetDateEnd returns the DateEnd field value if set, zero value otherwise.
func (o *ScheduleEntryDetail) GetDateEnd() string {
	if o == nil || IsNil(o.DateEnd) {
		var ret string
		return ret
	}
	return *o.DateEnd
}

// GetDateEndOk returns a tuple with the DateEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryDetail) GetDateEndOk() (*string, bool) {
	if o == nil || IsNil(o.DateEnd) {
		return nil, false
	}
	return o.DateEnd, true
}

// HasDateEnd returns a boolean if a field has been set.
func (o *ScheduleEntryDetail) HasDateEnd() bool {
	if o != nil && !IsNil(o.DateEnd) {
		return true
	}

	return false
}

// SetDateEnd gets a reference to the given string and assigns it to the DateEnd field.
func (o *ScheduleEntryDetail) SetDateEnd(v string) {
	o.DateEnd = &v
}

// GetHoursScheduled returns the HoursScheduled field value if set, zero value otherwise.
func (o *ScheduleEntryDetail) GetHoursScheduled() float64 {
	if o == nil || IsNil(o.HoursScheduled) {
		var ret float64
		return ret
	}
	return *o.HoursScheduled
}

// GetHoursScheduledOk returns a tuple with the HoursScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryDetail) GetHoursScheduledOk() (*float64, bool) {
	if o == nil || IsNil(o.HoursScheduled) {
		return nil, false
	}
	return o.HoursScheduled, true
}

// HasHoursScheduled returns a boolean if a field has been set.
func (o *ScheduleEntryDetail) HasHoursScheduled() bool {
	if o != nil && !IsNil(o.HoursScheduled) {
		return true
	}

	return false
}

// SetHoursScheduled gets a reference to the given float64 and assigns it to the HoursScheduled field.
func (o *ScheduleEntryDetail) SetHoursScheduled(v float64) {
	o.HoursScheduled = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ScheduleEntryDetail) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEntryDetail) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ScheduleEntryDetail) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ScheduleEntryDetail) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ScheduleEntryDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduleEntryDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ScheduleEntry) {
		toSerialize["scheduleEntry"] = o.ScheduleEntry
	}
	if !IsNil(o.DateStart) {
		toSerialize["dateStart"] = o.DateStart
	}
	if !IsNil(o.DateEnd) {
		toSerialize["dateEnd"] = o.DateEnd
	}
	if !IsNil(o.HoursScheduled) {
		toSerialize["hoursScheduled"] = o.HoursScheduled
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableScheduleEntryDetail struct {
	value *ScheduleEntryDetail
	isSet bool
}

func (v NullableScheduleEntryDetail) Get() *ScheduleEntryDetail {
	return v.value
}

func (v *NullableScheduleEntryDetail) Set(val *ScheduleEntryDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleEntryDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleEntryDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleEntryDetail(val *ScheduleEntryDetail) *NullableScheduleEntryDetail {
	return &NullableScheduleEntryDetail{value: val, isSet: true}
}

func (v NullableScheduleEntryDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleEntryDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


