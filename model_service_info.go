/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ServiceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceInfo{}

// ServiceInfo struct for ServiceInfo
type ServiceInfo struct {
	Id *int32 `json:"id,omitempty"`
	HeaderColor *string `json:"headerColor,omitempty"`
	MemberColor *string `json:"memberColor,omitempty"`
	ContactColor *string `json:"contactColor,omitempty"`
	UnknownColor *string `json:"unknownColor,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

// NewServiceInfo instantiates a new ServiceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceInfo() *ServiceInfo {
	this := ServiceInfo{}
	return &this
}

// NewServiceInfoWithDefaults instantiates a new ServiceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceInfoWithDefaults() *ServiceInfo {
	this := ServiceInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceInfo) SetId(v int32) {
	o.Id = &v
}

// GetHeaderColor returns the HeaderColor field value if set, zero value otherwise.
func (o *ServiceInfo) GetHeaderColor() string {
	if o == nil || IsNil(o.HeaderColor) {
		var ret string
		return ret
	}
	return *o.HeaderColor
}

// GetHeaderColorOk returns a tuple with the HeaderColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInfo) GetHeaderColorOk() (*string, bool) {
	if o == nil || IsNil(o.HeaderColor) {
		return nil, false
	}
	return o.HeaderColor, true
}

// HasHeaderColor returns a boolean if a field has been set.
func (o *ServiceInfo) HasHeaderColor() bool {
	if o != nil && !IsNil(o.HeaderColor) {
		return true
	}

	return false
}

// SetHeaderColor gets a reference to the given string and assigns it to the HeaderColor field.
func (o *ServiceInfo) SetHeaderColor(v string) {
	o.HeaderColor = &v
}

// GetMemberColor returns the MemberColor field value if set, zero value otherwise.
func (o *ServiceInfo) GetMemberColor() string {
	if o == nil || IsNil(o.MemberColor) {
		var ret string
		return ret
	}
	return *o.MemberColor
}

// GetMemberColorOk returns a tuple with the MemberColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInfo) GetMemberColorOk() (*string, bool) {
	if o == nil || IsNil(o.MemberColor) {
		return nil, false
	}
	return o.MemberColor, true
}

// HasMemberColor returns a boolean if a field has been set.
func (o *ServiceInfo) HasMemberColor() bool {
	if o != nil && !IsNil(o.MemberColor) {
		return true
	}

	return false
}

// SetMemberColor gets a reference to the given string and assigns it to the MemberColor field.
func (o *ServiceInfo) SetMemberColor(v string) {
	o.MemberColor = &v
}

// GetContactColor returns the ContactColor field value if set, zero value otherwise.
func (o *ServiceInfo) GetContactColor() string {
	if o == nil || IsNil(o.ContactColor) {
		var ret string
		return ret
	}
	return *o.ContactColor
}

// GetContactColorOk returns a tuple with the ContactColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInfo) GetContactColorOk() (*string, bool) {
	if o == nil || IsNil(o.ContactColor) {
		return nil, false
	}
	return o.ContactColor, true
}

// HasContactColor returns a boolean if a field has been set.
func (o *ServiceInfo) HasContactColor() bool {
	if o != nil && !IsNil(o.ContactColor) {
		return true
	}

	return false
}

// SetContactColor gets a reference to the given string and assigns it to the ContactColor field.
func (o *ServiceInfo) SetContactColor(v string) {
	o.ContactColor = &v
}

// GetUnknownColor returns the UnknownColor field value if set, zero value otherwise.
func (o *ServiceInfo) GetUnknownColor() string {
	if o == nil || IsNil(o.UnknownColor) {
		var ret string
		return ret
	}
	return *o.UnknownColor
}

// GetUnknownColorOk returns a tuple with the UnknownColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInfo) GetUnknownColorOk() (*string, bool) {
	if o == nil || IsNil(o.UnknownColor) {
		return nil, false
	}
	return o.UnknownColor, true
}

// HasUnknownColor returns a boolean if a field has been set.
func (o *ServiceInfo) HasUnknownColor() bool {
	if o != nil && !IsNil(o.UnknownColor) {
		return true
	}

	return false
}

// SetUnknownColor gets a reference to the given string and assigns it to the UnknownColor field.
func (o *ServiceInfo) SetUnknownColor(v string) {
	o.UnknownColor = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ServiceInfo) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInfo) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ServiceInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ServiceInfo) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ServiceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.HeaderColor) {
		toSerialize["headerColor"] = o.HeaderColor
	}
	if !IsNil(o.MemberColor) {
		toSerialize["memberColor"] = o.MemberColor
	}
	if !IsNil(o.ContactColor) {
		toSerialize["contactColor"] = o.ContactColor
	}
	if !IsNil(o.UnknownColor) {
		toSerialize["unknownColor"] = o.UnknownColor
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

type NullableServiceInfo struct {
	value *ServiceInfo
	isSet bool
}

func (v NullableServiceInfo) Get() *ServiceInfo {
	return v.value
}

func (v *NullableServiceInfo) Set(val *ServiceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceInfo(val *ServiceInfo) *NullableServiceInfo {
	return &NullableServiceInfo{value: val, isSet: true}
}

func (v NullableServiceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


