/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceSurvey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceSurvey{}

// ServiceSurvey struct for ServiceSurvey
type ServiceSurvey struct {
	Id *int32 `json:"id,omitempty"`
	//  Max length: 50;
	Name string `json:"name"`
	InactiveFlag NullableBool `json:"inactiveFlag,omitempty"`
	HeaderIncludeLogoFlag NullableBool `json:"headerIncludeLogoFlag,omitempty"`
	//  Max length: 4000;
	HeaderText *string `json:"headerText,omitempty"`
	HeaderTextVisibleFlag NullableBool `json:"headerTextVisibleFlag,omitempty"`
	//  Max length: 500;
	FooterText *string `json:"footerText,omitempty"`
	FooterTextVisibleFlag NullableBool `json:"footerTextVisibleFlag,omitempty"`
	//  Max length: 4000;
	ThankYouText *string `json:"thankYouText,omitempty"`
	NotifyWho *GenericIdIdentifierReference `json:"notifyWho,omitempty"`
	NotifyWhoVisibleFlag NullableBool `json:"notifyWhoVisibleFlag,omitempty"`
	NotifyMember *MemberReference `json:"notifyMember,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _ServiceSurvey ServiceSurvey

// NewServiceSurvey instantiates a new ServiceSurvey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSurvey(name string) *ServiceSurvey {
	this := ServiceSurvey{}
	this.Name = name
	return &this
}

// NewServiceSurveyWithDefaults instantiates a new ServiceSurvey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSurveyWithDefaults() *ServiceSurvey {
	this := ServiceSurvey{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceSurvey) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceSurvey) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceSurvey) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ServiceSurvey) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceSurvey) SetName(v string) {
	o.Name = v
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurvey) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurvey) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *ServiceSurvey) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *ServiceSurvey) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}
// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *ServiceSurvey) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *ServiceSurvey) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetHeaderIncludeLogoFlag returns the HeaderIncludeLogoFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurvey) GetHeaderIncludeLogoFlag() bool {
	if o == nil || IsNil(o.HeaderIncludeLogoFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HeaderIncludeLogoFlag.Get()
}

// GetHeaderIncludeLogoFlagOk returns a tuple with the HeaderIncludeLogoFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurvey) GetHeaderIncludeLogoFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HeaderIncludeLogoFlag.Get(), o.HeaderIncludeLogoFlag.IsSet()
}

// HasHeaderIncludeLogoFlag returns a boolean if a field has been set.
func (o *ServiceSurvey) HasHeaderIncludeLogoFlag() bool {
	if o != nil && o.HeaderIncludeLogoFlag.IsSet() {
		return true
	}

	return false
}

// SetHeaderIncludeLogoFlag gets a reference to the given NullableBool and assigns it to the HeaderIncludeLogoFlag field.
func (o *ServiceSurvey) SetHeaderIncludeLogoFlag(v bool) {
	o.HeaderIncludeLogoFlag.Set(&v)
}
// SetHeaderIncludeLogoFlagNil sets the value for HeaderIncludeLogoFlag to be an explicit nil
func (o *ServiceSurvey) SetHeaderIncludeLogoFlagNil() {
	o.HeaderIncludeLogoFlag.Set(nil)
}

// UnsetHeaderIncludeLogoFlag ensures that no value is present for HeaderIncludeLogoFlag, not even an explicit nil
func (o *ServiceSurvey) UnsetHeaderIncludeLogoFlag() {
	o.HeaderIncludeLogoFlag.Unset()
}

// GetHeaderText returns the HeaderText field value if set, zero value otherwise.
func (o *ServiceSurvey) GetHeaderText() string {
	if o == nil || IsNil(o.HeaderText) {
		var ret string
		return ret
	}
	return *o.HeaderText
}

// GetHeaderTextOk returns a tuple with the HeaderText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetHeaderTextOk() (*string, bool) {
	if o == nil || IsNil(o.HeaderText) {
		return nil, false
	}
	return o.HeaderText, true
}

// HasHeaderText returns a boolean if a field has been set.
func (o *ServiceSurvey) HasHeaderText() bool {
	if o != nil && !IsNil(o.HeaderText) {
		return true
	}

	return false
}

// SetHeaderText gets a reference to the given string and assigns it to the HeaderText field.
func (o *ServiceSurvey) SetHeaderText(v string) {
	o.HeaderText = &v
}

// GetHeaderTextVisibleFlag returns the HeaderTextVisibleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurvey) GetHeaderTextVisibleFlag() bool {
	if o == nil || IsNil(o.HeaderTextVisibleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.HeaderTextVisibleFlag.Get()
}

// GetHeaderTextVisibleFlagOk returns a tuple with the HeaderTextVisibleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurvey) GetHeaderTextVisibleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HeaderTextVisibleFlag.Get(), o.HeaderTextVisibleFlag.IsSet()
}

// HasHeaderTextVisibleFlag returns a boolean if a field has been set.
func (o *ServiceSurvey) HasHeaderTextVisibleFlag() bool {
	if o != nil && o.HeaderTextVisibleFlag.IsSet() {
		return true
	}

	return false
}

// SetHeaderTextVisibleFlag gets a reference to the given NullableBool and assigns it to the HeaderTextVisibleFlag field.
func (o *ServiceSurvey) SetHeaderTextVisibleFlag(v bool) {
	o.HeaderTextVisibleFlag.Set(&v)
}
// SetHeaderTextVisibleFlagNil sets the value for HeaderTextVisibleFlag to be an explicit nil
func (o *ServiceSurvey) SetHeaderTextVisibleFlagNil() {
	o.HeaderTextVisibleFlag.Set(nil)
}

// UnsetHeaderTextVisibleFlag ensures that no value is present for HeaderTextVisibleFlag, not even an explicit nil
func (o *ServiceSurvey) UnsetHeaderTextVisibleFlag() {
	o.HeaderTextVisibleFlag.Unset()
}

// GetFooterText returns the FooterText field value if set, zero value otherwise.
func (o *ServiceSurvey) GetFooterText() string {
	if o == nil || IsNil(o.FooterText) {
		var ret string
		return ret
	}
	return *o.FooterText
}

// GetFooterTextOk returns a tuple with the FooterText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetFooterTextOk() (*string, bool) {
	if o == nil || IsNil(o.FooterText) {
		return nil, false
	}
	return o.FooterText, true
}

// HasFooterText returns a boolean if a field has been set.
func (o *ServiceSurvey) HasFooterText() bool {
	if o != nil && !IsNil(o.FooterText) {
		return true
	}

	return false
}

// SetFooterText gets a reference to the given string and assigns it to the FooterText field.
func (o *ServiceSurvey) SetFooterText(v string) {
	o.FooterText = &v
}

// GetFooterTextVisibleFlag returns the FooterTextVisibleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurvey) GetFooterTextVisibleFlag() bool {
	if o == nil || IsNil(o.FooterTextVisibleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.FooterTextVisibleFlag.Get()
}

// GetFooterTextVisibleFlagOk returns a tuple with the FooterTextVisibleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurvey) GetFooterTextVisibleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.FooterTextVisibleFlag.Get(), o.FooterTextVisibleFlag.IsSet()
}

// HasFooterTextVisibleFlag returns a boolean if a field has been set.
func (o *ServiceSurvey) HasFooterTextVisibleFlag() bool {
	if o != nil && o.FooterTextVisibleFlag.IsSet() {
		return true
	}

	return false
}

// SetFooterTextVisibleFlag gets a reference to the given NullableBool and assigns it to the FooterTextVisibleFlag field.
func (o *ServiceSurvey) SetFooterTextVisibleFlag(v bool) {
	o.FooterTextVisibleFlag.Set(&v)
}
// SetFooterTextVisibleFlagNil sets the value for FooterTextVisibleFlag to be an explicit nil
func (o *ServiceSurvey) SetFooterTextVisibleFlagNil() {
	o.FooterTextVisibleFlag.Set(nil)
}

// UnsetFooterTextVisibleFlag ensures that no value is present for FooterTextVisibleFlag, not even an explicit nil
func (o *ServiceSurvey) UnsetFooterTextVisibleFlag() {
	o.FooterTextVisibleFlag.Unset()
}

// GetThankYouText returns the ThankYouText field value if set, zero value otherwise.
func (o *ServiceSurvey) GetThankYouText() string {
	if o == nil || IsNil(o.ThankYouText) {
		var ret string
		return ret
	}
	return *o.ThankYouText
}

// GetThankYouTextOk returns a tuple with the ThankYouText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetThankYouTextOk() (*string, bool) {
	if o == nil || IsNil(o.ThankYouText) {
		return nil, false
	}
	return o.ThankYouText, true
}

// HasThankYouText returns a boolean if a field has been set.
func (o *ServiceSurvey) HasThankYouText() bool {
	if o != nil && !IsNil(o.ThankYouText) {
		return true
	}

	return false
}

// SetThankYouText gets a reference to the given string and assigns it to the ThankYouText field.
func (o *ServiceSurvey) SetThankYouText(v string) {
	o.ThankYouText = &v
}

// GetNotifyWho returns the NotifyWho field value if set, zero value otherwise.
func (o *ServiceSurvey) GetNotifyWho() GenericIdIdentifierReference {
	if o == nil || IsNil(o.NotifyWho) {
		var ret GenericIdIdentifierReference
		return ret
	}
	return *o.NotifyWho
}

// GetNotifyWhoOk returns a tuple with the NotifyWho field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetNotifyWhoOk() (*GenericIdIdentifierReference, bool) {
	if o == nil || IsNil(o.NotifyWho) {
		return nil, false
	}
	return o.NotifyWho, true
}

// HasNotifyWho returns a boolean if a field has been set.
func (o *ServiceSurvey) HasNotifyWho() bool {
	if o != nil && !IsNil(o.NotifyWho) {
		return true
	}

	return false
}

// SetNotifyWho gets a reference to the given GenericIdIdentifierReference and assigns it to the NotifyWho field.
func (o *ServiceSurvey) SetNotifyWho(v GenericIdIdentifierReference) {
	o.NotifyWho = &v
}

// GetNotifyWhoVisibleFlag returns the NotifyWhoVisibleFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceSurvey) GetNotifyWhoVisibleFlag() bool {
	if o == nil || IsNil(o.NotifyWhoVisibleFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.NotifyWhoVisibleFlag.Get()
}

// GetNotifyWhoVisibleFlagOk returns a tuple with the NotifyWhoVisibleFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceSurvey) GetNotifyWhoVisibleFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyWhoVisibleFlag.Get(), o.NotifyWhoVisibleFlag.IsSet()
}

// HasNotifyWhoVisibleFlag returns a boolean if a field has been set.
func (o *ServiceSurvey) HasNotifyWhoVisibleFlag() bool {
	if o != nil && o.NotifyWhoVisibleFlag.IsSet() {
		return true
	}

	return false
}

// SetNotifyWhoVisibleFlag gets a reference to the given NullableBool and assigns it to the NotifyWhoVisibleFlag field.
func (o *ServiceSurvey) SetNotifyWhoVisibleFlag(v bool) {
	o.NotifyWhoVisibleFlag.Set(&v)
}
// SetNotifyWhoVisibleFlagNil sets the value for NotifyWhoVisibleFlag to be an explicit nil
func (o *ServiceSurvey) SetNotifyWhoVisibleFlagNil() {
	o.NotifyWhoVisibleFlag.Set(nil)
}

// UnsetNotifyWhoVisibleFlag ensures that no value is present for NotifyWhoVisibleFlag, not even an explicit nil
func (o *ServiceSurvey) UnsetNotifyWhoVisibleFlag() {
	o.NotifyWhoVisibleFlag.Unset()
}

// GetNotifyMember returns the NotifyMember field value if set, zero value otherwise.
func (o *ServiceSurvey) GetNotifyMember() MemberReference {
	if o == nil || IsNil(o.NotifyMember) {
		var ret MemberReference
		return ret
	}
	return *o.NotifyMember
}

// GetNotifyMemberOk returns a tuple with the NotifyMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetNotifyMemberOk() (*MemberReference, bool) {
	if o == nil || IsNil(o.NotifyMember) {
		return nil, false
	}
	return o.NotifyMember, true
}

// HasNotifyMember returns a boolean if a field has been set.
func (o *ServiceSurvey) HasNotifyMember() bool {
	if o != nil && !IsNil(o.NotifyMember) {
		return true
	}

	return false
}

// SetNotifyMember gets a reference to the given MemberReference and assigns it to the NotifyMember field.
func (o *ServiceSurvey) SetNotifyMember(v MemberReference) {
	o.NotifyMember = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ServiceSurvey) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSurvey) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ServiceSurvey) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *ServiceSurvey) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o ServiceSurvey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceSurvey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if o.HeaderIncludeLogoFlag.IsSet() {
		toSerialize["headerIncludeLogoFlag"] = o.HeaderIncludeLogoFlag.Get()
	}
	if !IsNil(o.HeaderText) {
		toSerialize["headerText"] = o.HeaderText
	}
	if o.HeaderTextVisibleFlag.IsSet() {
		toSerialize["headerTextVisibleFlag"] = o.HeaderTextVisibleFlag.Get()
	}
	if !IsNil(o.FooterText) {
		toSerialize["footerText"] = o.FooterText
	}
	if o.FooterTextVisibleFlag.IsSet() {
		toSerialize["footerTextVisibleFlag"] = o.FooterTextVisibleFlag.Get()
	}
	if !IsNil(o.ThankYouText) {
		toSerialize["thankYouText"] = o.ThankYouText
	}
	if !IsNil(o.NotifyWho) {
		toSerialize["notifyWho"] = o.NotifyWho
	}
	if o.NotifyWhoVisibleFlag.IsSet() {
		toSerialize["notifyWhoVisibleFlag"] = o.NotifyWhoVisibleFlag.Get()
	}
	if !IsNil(o.NotifyMember) {
		toSerialize["notifyMember"] = o.NotifyMember
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *ServiceSurvey) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceSurvey := _ServiceSurvey{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceSurvey)

	if err != nil {
		return err
	}

	*o = ServiceSurvey(varServiceSurvey)

	return err
}

type NullableServiceSurvey struct {
	value *ServiceSurvey
	isSet bool
}

func (v NullableServiceSurvey) Get() *ServiceSurvey {
	return v.value
}

func (v *NullableServiceSurvey) Set(val *ServiceSurvey) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSurvey) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSurvey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSurvey(val *ServiceSurvey) *NullableServiceSurvey {
	return &NullableServiceSurvey{value: val, isSet: true}
}

func (v NullableServiceSurvey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSurvey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


