/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SsoConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SsoConfiguration{}

// SsoConfiguration struct for SsoConfiguration
type SsoConfiguration struct {
	// Unique identifier of the SSO Configuration
	Id *int32 `json:"id,omitempty"`
	// Descriptor of the SSO Configuration Max length: 100;
	Name string `json:"name"`
	// Type of SSO Configuration
	SsoType NullableString `json:"ssoType"`
	// Whether the SSO configuration is not active
	InactiveFlag NullableBool `json:"inactiveFlag,omitempty"`
	// SAML Identity Provider Id Max length: 1000;
	SamlEntityId *string `json:"samlEntityId,omitempty"`
	// Sign in url for the SAML Identity Provider Max length: 1000;
	SamlSignInUrl *string `json:"samlSignInUrl,omitempty"`
	// Public certificate for Identity Provider signatures
	SamlIdpCertificate *string `json:"samlIdpCertificate,omitempty"`
	// Name of the SAML certificate. Metadata on SAML_Idp_Certificate
	SamlCertificateName *string `json:"samlCertificateName,omitempty"`
	// Who the SAML certificate was issued to. Metadata on SAML_Idp_Certificate
	SamlCertificateIssuedTo *string `json:"samlCertificateIssuedTo,omitempty"`
	// Thumbprint of the SAML certificate. Metadata on SAML_Idp_Certificate
	SamlCertificateThumbprint *string `json:"samlCertificateThumbprint,omitempty"`
	// Date when the SAML certificate becomes valid. Metadata on SAML_Idp_Certificate
	SamlCertificateValidFrom *time.Time `json:"samlCertificateValidFrom,omitempty"`
	// Date when the SAML certificate is no longer valid. Metadata on SAML_Idp_Certificate
	SamlCertificateValidTo *time.Time `json:"samlCertificateValidTo,omitempty"`
	// The locations where the SAML Idp Configuration is used
	LocationIds []int32 `json:"locationIds"`
	// Client identity for this configuration of ConnectWise SSO Max length: 1000;
	ClientId *string `json:"clientId,omitempty"`
	// Sign in URL for ConnectWise SSO
	StsBaseUrl *string `json:"stsBaseUrl,omitempty"`
	// User Admin Url for ConnectWise SSO
	StsUserAdminUrl *string `json:"stsUserAdminUrl,omitempty"`
	Token *string `json:"token,omitempty"`
	SubmittedMemberCount *int32 `json:"submittedMemberCount,omitempty"`
	AllMembersSubmitted *bool `json:"allMembersSubmitted,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
	IsSsoOnByDefault *bool `json:"isSsoOnByDefault,omitempty"`
}

type _SsoConfiguration SsoConfiguration

// NewSsoConfiguration instantiates a new SsoConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSsoConfiguration(name string, ssoType NullableString, locationIds []int32) *SsoConfiguration {
	this := SsoConfiguration{}
	this.Name = name
	this.SsoType = ssoType
	this.LocationIds = locationIds
	return &this
}

// NewSsoConfigurationWithDefaults instantiates a new SsoConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSsoConfigurationWithDefaults() *SsoConfiguration {
	this := SsoConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SsoConfiguration) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SsoConfiguration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SsoConfiguration) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *SsoConfiguration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SsoConfiguration) SetName(v string) {
	o.Name = v
}

// GetSsoType returns the SsoType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SsoConfiguration) GetSsoType() string {
	if o == nil || o.SsoType.Get() == nil {
		var ret string
		return ret
	}

	return *o.SsoType.Get()
}

// GetSsoTypeOk returns a tuple with the SsoType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SsoConfiguration) GetSsoTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SsoType.Get(), o.SsoType.IsSet()
}

// SetSsoType sets field value
func (o *SsoConfiguration) SetSsoType(v string) {
	o.SsoType.Set(&v)
}

// GetInactiveFlag returns the InactiveFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SsoConfiguration) GetInactiveFlag() bool {
	if o == nil || IsNil(o.InactiveFlag.Get()) {
		var ret bool
		return ret
	}
	return *o.InactiveFlag.Get()
}

// GetInactiveFlagOk returns a tuple with the InactiveFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SsoConfiguration) GetInactiveFlagOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InactiveFlag.Get(), o.InactiveFlag.IsSet()
}

// HasInactiveFlag returns a boolean if a field has been set.
func (o *SsoConfiguration) HasInactiveFlag() bool {
	if o != nil && o.InactiveFlag.IsSet() {
		return true
	}

	return false
}

// SetInactiveFlag gets a reference to the given NullableBool and assigns it to the InactiveFlag field.
func (o *SsoConfiguration) SetInactiveFlag(v bool) {
	o.InactiveFlag.Set(&v)
}
// SetInactiveFlagNil sets the value for InactiveFlag to be an explicit nil
func (o *SsoConfiguration) SetInactiveFlagNil() {
	o.InactiveFlag.Set(nil)
}

// UnsetInactiveFlag ensures that no value is present for InactiveFlag, not even an explicit nil
func (o *SsoConfiguration) UnsetInactiveFlag() {
	o.InactiveFlag.Unset()
}

// GetSamlEntityId returns the SamlEntityId field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlEntityId() string {
	if o == nil || IsNil(o.SamlEntityId) {
		var ret string
		return ret
	}
	return *o.SamlEntityId
}

// GetSamlEntityIdOk returns a tuple with the SamlEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.SamlEntityId) {
		return nil, false
	}
	return o.SamlEntityId, true
}

// HasSamlEntityId returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlEntityId() bool {
	if o != nil && !IsNil(o.SamlEntityId) {
		return true
	}

	return false
}

// SetSamlEntityId gets a reference to the given string and assigns it to the SamlEntityId field.
func (o *SsoConfiguration) SetSamlEntityId(v string) {
	o.SamlEntityId = &v
}

// GetSamlSignInUrl returns the SamlSignInUrl field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlSignInUrl() string {
	if o == nil || IsNil(o.SamlSignInUrl) {
		var ret string
		return ret
	}
	return *o.SamlSignInUrl
}

// GetSamlSignInUrlOk returns a tuple with the SamlSignInUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlSignInUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SamlSignInUrl) {
		return nil, false
	}
	return o.SamlSignInUrl, true
}

// HasSamlSignInUrl returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlSignInUrl() bool {
	if o != nil && !IsNil(o.SamlSignInUrl) {
		return true
	}

	return false
}

// SetSamlSignInUrl gets a reference to the given string and assigns it to the SamlSignInUrl field.
func (o *SsoConfiguration) SetSamlSignInUrl(v string) {
	o.SamlSignInUrl = &v
}

// GetSamlIdpCertificate returns the SamlIdpCertificate field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlIdpCertificate() string {
	if o == nil || IsNil(o.SamlIdpCertificate) {
		var ret string
		return ret
	}
	return *o.SamlIdpCertificate
}

// GetSamlIdpCertificateOk returns a tuple with the SamlIdpCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlIdpCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.SamlIdpCertificate) {
		return nil, false
	}
	return o.SamlIdpCertificate, true
}

// HasSamlIdpCertificate returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlIdpCertificate() bool {
	if o != nil && !IsNil(o.SamlIdpCertificate) {
		return true
	}

	return false
}

// SetSamlIdpCertificate gets a reference to the given string and assigns it to the SamlIdpCertificate field.
func (o *SsoConfiguration) SetSamlIdpCertificate(v string) {
	o.SamlIdpCertificate = &v
}

// GetSamlCertificateName returns the SamlCertificateName field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlCertificateName() string {
	if o == nil || IsNil(o.SamlCertificateName) {
		var ret string
		return ret
	}
	return *o.SamlCertificateName
}

// GetSamlCertificateNameOk returns a tuple with the SamlCertificateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlCertificateNameOk() (*string, bool) {
	if o == nil || IsNil(o.SamlCertificateName) {
		return nil, false
	}
	return o.SamlCertificateName, true
}

// HasSamlCertificateName returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlCertificateName() bool {
	if o != nil && !IsNil(o.SamlCertificateName) {
		return true
	}

	return false
}

// SetSamlCertificateName gets a reference to the given string and assigns it to the SamlCertificateName field.
func (o *SsoConfiguration) SetSamlCertificateName(v string) {
	o.SamlCertificateName = &v
}

// GetSamlCertificateIssuedTo returns the SamlCertificateIssuedTo field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlCertificateIssuedTo() string {
	if o == nil || IsNil(o.SamlCertificateIssuedTo) {
		var ret string
		return ret
	}
	return *o.SamlCertificateIssuedTo
}

// GetSamlCertificateIssuedToOk returns a tuple with the SamlCertificateIssuedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlCertificateIssuedToOk() (*string, bool) {
	if o == nil || IsNil(o.SamlCertificateIssuedTo) {
		return nil, false
	}
	return o.SamlCertificateIssuedTo, true
}

// HasSamlCertificateIssuedTo returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlCertificateIssuedTo() bool {
	if o != nil && !IsNil(o.SamlCertificateIssuedTo) {
		return true
	}

	return false
}

// SetSamlCertificateIssuedTo gets a reference to the given string and assigns it to the SamlCertificateIssuedTo field.
func (o *SsoConfiguration) SetSamlCertificateIssuedTo(v string) {
	o.SamlCertificateIssuedTo = &v
}

// GetSamlCertificateThumbprint returns the SamlCertificateThumbprint field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlCertificateThumbprint() string {
	if o == nil || IsNil(o.SamlCertificateThumbprint) {
		var ret string
		return ret
	}
	return *o.SamlCertificateThumbprint
}

// GetSamlCertificateThumbprintOk returns a tuple with the SamlCertificateThumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlCertificateThumbprintOk() (*string, bool) {
	if o == nil || IsNil(o.SamlCertificateThumbprint) {
		return nil, false
	}
	return o.SamlCertificateThumbprint, true
}

// HasSamlCertificateThumbprint returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlCertificateThumbprint() bool {
	if o != nil && !IsNil(o.SamlCertificateThumbprint) {
		return true
	}

	return false
}

// SetSamlCertificateThumbprint gets a reference to the given string and assigns it to the SamlCertificateThumbprint field.
func (o *SsoConfiguration) SetSamlCertificateThumbprint(v string) {
	o.SamlCertificateThumbprint = &v
}

// GetSamlCertificateValidFrom returns the SamlCertificateValidFrom field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlCertificateValidFrom() time.Time {
	if o == nil || IsNil(o.SamlCertificateValidFrom) {
		var ret time.Time
		return ret
	}
	return *o.SamlCertificateValidFrom
}

// GetSamlCertificateValidFromOk returns a tuple with the SamlCertificateValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlCertificateValidFromOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SamlCertificateValidFrom) {
		return nil, false
	}
	return o.SamlCertificateValidFrom, true
}

// HasSamlCertificateValidFrom returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlCertificateValidFrom() bool {
	if o != nil && !IsNil(o.SamlCertificateValidFrom) {
		return true
	}

	return false
}

// SetSamlCertificateValidFrom gets a reference to the given time.Time and assigns it to the SamlCertificateValidFrom field.
func (o *SsoConfiguration) SetSamlCertificateValidFrom(v time.Time) {
	o.SamlCertificateValidFrom = &v
}

// GetSamlCertificateValidTo returns the SamlCertificateValidTo field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSamlCertificateValidTo() time.Time {
	if o == nil || IsNil(o.SamlCertificateValidTo) {
		var ret time.Time
		return ret
	}
	return *o.SamlCertificateValidTo
}

// GetSamlCertificateValidToOk returns a tuple with the SamlCertificateValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSamlCertificateValidToOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SamlCertificateValidTo) {
		return nil, false
	}
	return o.SamlCertificateValidTo, true
}

// HasSamlCertificateValidTo returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSamlCertificateValidTo() bool {
	if o != nil && !IsNil(o.SamlCertificateValidTo) {
		return true
	}

	return false
}

// SetSamlCertificateValidTo gets a reference to the given time.Time and assigns it to the SamlCertificateValidTo field.
func (o *SsoConfiguration) SetSamlCertificateValidTo(v time.Time) {
	o.SamlCertificateValidTo = &v
}

// GetLocationIds returns the LocationIds field value
func (o *SsoConfiguration) GetLocationIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LocationIds
}

// GetLocationIdsOk returns a tuple with the LocationIds field value
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetLocationIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationIds, true
}

// SetLocationIds sets field value
func (o *SsoConfiguration) SetLocationIds(v []int32) {
	o.LocationIds = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *SsoConfiguration) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *SsoConfiguration) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *SsoConfiguration) SetClientId(v string) {
	o.ClientId = &v
}

// GetStsBaseUrl returns the StsBaseUrl field value if set, zero value otherwise.
func (o *SsoConfiguration) GetStsBaseUrl() string {
	if o == nil || IsNil(o.StsBaseUrl) {
		var ret string
		return ret
	}
	return *o.StsBaseUrl
}

// GetStsBaseUrlOk returns a tuple with the StsBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetStsBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StsBaseUrl) {
		return nil, false
	}
	return o.StsBaseUrl, true
}

// HasStsBaseUrl returns a boolean if a field has been set.
func (o *SsoConfiguration) HasStsBaseUrl() bool {
	if o != nil && !IsNil(o.StsBaseUrl) {
		return true
	}

	return false
}

// SetStsBaseUrl gets a reference to the given string and assigns it to the StsBaseUrl field.
func (o *SsoConfiguration) SetStsBaseUrl(v string) {
	o.StsBaseUrl = &v
}

// GetStsUserAdminUrl returns the StsUserAdminUrl field value if set, zero value otherwise.
func (o *SsoConfiguration) GetStsUserAdminUrl() string {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		var ret string
		return ret
	}
	return *o.StsUserAdminUrl
}

// GetStsUserAdminUrlOk returns a tuple with the StsUserAdminUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetStsUserAdminUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StsUserAdminUrl) {
		return nil, false
	}
	return o.StsUserAdminUrl, true
}

// HasStsUserAdminUrl returns a boolean if a field has been set.
func (o *SsoConfiguration) HasStsUserAdminUrl() bool {
	if o != nil && !IsNil(o.StsUserAdminUrl) {
		return true
	}

	return false
}

// SetStsUserAdminUrl gets a reference to the given string and assigns it to the StsUserAdminUrl field.
func (o *SsoConfiguration) SetStsUserAdminUrl(v string) {
	o.StsUserAdminUrl = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SsoConfiguration) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SsoConfiguration) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SsoConfiguration) SetToken(v string) {
	o.Token = &v
}

// GetSubmittedMemberCount returns the SubmittedMemberCount field value if set, zero value otherwise.
func (o *SsoConfiguration) GetSubmittedMemberCount() int32 {
	if o == nil || IsNil(o.SubmittedMemberCount) {
		var ret int32
		return ret
	}
	return *o.SubmittedMemberCount
}

// GetSubmittedMemberCountOk returns a tuple with the SubmittedMemberCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetSubmittedMemberCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SubmittedMemberCount) {
		return nil, false
	}
	return o.SubmittedMemberCount, true
}

// HasSubmittedMemberCount returns a boolean if a field has been set.
func (o *SsoConfiguration) HasSubmittedMemberCount() bool {
	if o != nil && !IsNil(o.SubmittedMemberCount) {
		return true
	}

	return false
}

// SetSubmittedMemberCount gets a reference to the given int32 and assigns it to the SubmittedMemberCount field.
func (o *SsoConfiguration) SetSubmittedMemberCount(v int32) {
	o.SubmittedMemberCount = &v
}

// GetAllMembersSubmitted returns the AllMembersSubmitted field value if set, zero value otherwise.
func (o *SsoConfiguration) GetAllMembersSubmitted() bool {
	if o == nil || IsNil(o.AllMembersSubmitted) {
		var ret bool
		return ret
	}
	return *o.AllMembersSubmitted
}

// GetAllMembersSubmittedOk returns a tuple with the AllMembersSubmitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetAllMembersSubmittedOk() (*bool, bool) {
	if o == nil || IsNil(o.AllMembersSubmitted) {
		return nil, false
	}
	return o.AllMembersSubmitted, true
}

// HasAllMembersSubmitted returns a boolean if a field has been set.
func (o *SsoConfiguration) HasAllMembersSubmitted() bool {
	if o != nil && !IsNil(o.AllMembersSubmitted) {
		return true
	}

	return false
}

// SetAllMembersSubmitted gets a reference to the given bool and assigns it to the AllMembersSubmitted field.
func (o *SsoConfiguration) SetAllMembersSubmitted(v bool) {
	o.AllMembersSubmitted = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *SsoConfiguration) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *SsoConfiguration) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *SsoConfiguration) SetInfo(v map[string]string) {
	o.Info = &v
}

// GetIsSsoOnByDefault returns the IsSsoOnByDefault field value if set, zero value otherwise.
func (o *SsoConfiguration) GetIsSsoOnByDefault() bool {
	if o == nil || IsNil(o.IsSsoOnByDefault) {
		var ret bool
		return ret
	}
	return *o.IsSsoOnByDefault
}

// GetIsSsoOnByDefaultOk returns a tuple with the IsSsoOnByDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfiguration) GetIsSsoOnByDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSsoOnByDefault) {
		return nil, false
	}
	return o.IsSsoOnByDefault, true
}

// HasIsSsoOnByDefault returns a boolean if a field has been set.
func (o *SsoConfiguration) HasIsSsoOnByDefault() bool {
	if o != nil && !IsNil(o.IsSsoOnByDefault) {
		return true
	}

	return false
}

// SetIsSsoOnByDefault gets a reference to the given bool and assigns it to the IsSsoOnByDefault field.
func (o *SsoConfiguration) SetIsSsoOnByDefault(v bool) {
	o.IsSsoOnByDefault = &v
}

func (o SsoConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SsoConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	toSerialize["ssoType"] = o.SsoType.Get()
	if o.InactiveFlag.IsSet() {
		toSerialize["inactiveFlag"] = o.InactiveFlag.Get()
	}
	if !IsNil(o.SamlEntityId) {
		toSerialize["samlEntityId"] = o.SamlEntityId
	}
	if !IsNil(o.SamlSignInUrl) {
		toSerialize["samlSignInUrl"] = o.SamlSignInUrl
	}
	if !IsNil(o.SamlIdpCertificate) {
		toSerialize["samlIdpCertificate"] = o.SamlIdpCertificate
	}
	if !IsNil(o.SamlCertificateName) {
		toSerialize["samlCertificateName"] = o.SamlCertificateName
	}
	if !IsNil(o.SamlCertificateIssuedTo) {
		toSerialize["samlCertificateIssuedTo"] = o.SamlCertificateIssuedTo
	}
	if !IsNil(o.SamlCertificateThumbprint) {
		toSerialize["samlCertificateThumbprint"] = o.SamlCertificateThumbprint
	}
	if !IsNil(o.SamlCertificateValidFrom) {
		toSerialize["samlCertificateValidFrom"] = o.SamlCertificateValidFrom
	}
	if !IsNil(o.SamlCertificateValidTo) {
		toSerialize["samlCertificateValidTo"] = o.SamlCertificateValidTo
	}
	toSerialize["locationIds"] = o.LocationIds
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.StsBaseUrl) {
		toSerialize["stsBaseUrl"] = o.StsBaseUrl
	}
	if !IsNil(o.StsUserAdminUrl) {
		toSerialize["stsUserAdminUrl"] = o.StsUserAdminUrl
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.SubmittedMemberCount) {
		toSerialize["submittedMemberCount"] = o.SubmittedMemberCount
	}
	if !IsNil(o.AllMembersSubmitted) {
		toSerialize["allMembersSubmitted"] = o.AllMembersSubmitted
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	if !IsNil(o.IsSsoOnByDefault) {
		toSerialize["isSsoOnByDefault"] = o.IsSsoOnByDefault
	}
	return toSerialize, nil
}

func (o *SsoConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"ssoType",
		"locationIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSsoConfiguration := _SsoConfiguration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSsoConfiguration)

	if err != nil {
		return err
	}

	*o = SsoConfiguration(varSsoConfiguration)

	return err
}

type NullableSsoConfiguration struct {
	value *SsoConfiguration
	isSet bool
}

func (v NullableSsoConfiguration) Get() *SsoConfiguration {
	return v.value
}

func (v *NullableSsoConfiguration) Set(val *SsoConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableSsoConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableSsoConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsoConfiguration(val *SsoConfiguration) *NullableSsoConfiguration {
	return &NullableSsoConfiguration{value: val, isSet: true}
}

func (v NullableSsoConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsoConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


