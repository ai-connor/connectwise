/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
)

// checks if the ValidatePortalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidatePortalResponse{}

// ValidatePortalResponse struct for ValidatePortalResponse
type ValidatePortalResponse struct {
	Success *bool `json:"success,omitempty"`
	ContactId *int32 `json:"contactId,omitempty"`
}

// NewValidatePortalResponse instantiates a new ValidatePortalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatePortalResponse() *ValidatePortalResponse {
	this := ValidatePortalResponse{}
	return &this
}

// NewValidatePortalResponseWithDefaults instantiates a new ValidatePortalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatePortalResponseWithDefaults() *ValidatePortalResponse {
	this := ValidatePortalResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ValidatePortalResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatePortalResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ValidatePortalResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ValidatePortalResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetContactId returns the ContactId field value if set, zero value otherwise.
func (o *ValidatePortalResponse) GetContactId() int32 {
	if o == nil || IsNil(o.ContactId) {
		var ret int32
		return ret
	}
	return *o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatePortalResponse) GetContactIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContactId) {
		return nil, false
	}
	return o.ContactId, true
}

// HasContactId returns a boolean if a field has been set.
func (o *ValidatePortalResponse) HasContactId() bool {
	if o != nil && !IsNil(o.ContactId) {
		return true
	}

	return false
}

// SetContactId gets a reference to the given int32 and assigns it to the ContactId field.
func (o *ValidatePortalResponse) SetContactId(v int32) {
	o.ContactId = &v
}

func (o ValidatePortalResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidatePortalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ContactId) {
		toSerialize["contactId"] = o.ContactId
	}
	return toSerialize, nil
}

type NullableValidatePortalResponse struct {
	value *ValidatePortalResponse
	isSet bool
}

func (v NullableValidatePortalResponse) Get() *ValidatePortalResponse {
	return v.value
}

func (v *NullableValidatePortalResponse) Set(val *ValidatePortalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatePortalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatePortalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatePortalResponse(val *ValidatePortalResponse) *NullableValidatePortalResponse {
	return &NullableValidatePortalResponse{value: val, isSet: true}
}

func (v NullableValidatePortalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatePortalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


