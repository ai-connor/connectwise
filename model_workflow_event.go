/*
Connectwise Manage Public Endpoints

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cwapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the WorkflowEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowEvent{}

// WorkflowEvent struct for WorkflowEvent
type WorkflowEvent struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	EventCondition string `json:"eventCondition"`
	// Required when exectionTimes is set to MultipleTimes or Continuously
	FrequencyUnit NullableString `json:"frequencyUnit,omitempty"`
	// Required when exectionTimes is set to MultipleTimes or Continuously
	FrequencyOfExecution NullableInt32 `json:"frequencyOfExecution,omitempty"`
	// Required when exectionTimes is set to MultipleTimes
	MaxNumberOfExecution NullableInt32 `json:"maxNumberOfExecution,omitempty"`
	// Defaults to Once when not specified
	ExecutionTime NullableString `json:"executionTime,omitempty"`
	DateTestedUTC *time.Time `json:"dateTestedUTC,omitempty"`
	TestRecordsMatched NullableInt32 `json:"testRecordsMatched,omitempty"`
	ConnectWiseID *string `json:"connectWiseID,omitempty"`
	// WF_NotifyHeader_RecID
	ParentId NullableInt32 `json:"parentId,omitempty"`
	ParentConnectWiseId *string `json:"parentConnectWiseId,omitempty"`
	Info *map[string]string `json:"_info,omitempty"`
}

type _WorkflowEvent WorkflowEvent

// NewWorkflowEvent instantiates a new WorkflowEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowEvent(eventCondition string) *WorkflowEvent {
	this := WorkflowEvent{}
	this.EventCondition = eventCondition
	return &this
}

// NewWorkflowEventWithDefaults instantiates a new WorkflowEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowEventWithDefaults() *WorkflowEvent {
	this := WorkflowEvent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowEvent) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WorkflowEvent) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowEvent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowEvent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowEvent) SetName(v string) {
	o.Name = &v
}

// GetEventCondition returns the EventCondition field value
func (o *WorkflowEvent) GetEventCondition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventCondition
}

// GetEventConditionOk returns a tuple with the EventCondition field value
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetEventConditionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventCondition, true
}

// SetEventCondition sets field value
func (o *WorkflowEvent) SetEventCondition(v string) {
	o.EventCondition = v
}

// GetFrequencyUnit returns the FrequencyUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowEvent) GetFrequencyUnit() string {
	if o == nil || IsNil(o.FrequencyUnit.Get()) {
		var ret string
		return ret
	}
	return *o.FrequencyUnit.Get()
}

// GetFrequencyUnitOk returns a tuple with the FrequencyUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowEvent) GetFrequencyUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FrequencyUnit.Get(), o.FrequencyUnit.IsSet()
}

// HasFrequencyUnit returns a boolean if a field has been set.
func (o *WorkflowEvent) HasFrequencyUnit() bool {
	if o != nil && o.FrequencyUnit.IsSet() {
		return true
	}

	return false
}

// SetFrequencyUnit gets a reference to the given NullableString and assigns it to the FrequencyUnit field.
func (o *WorkflowEvent) SetFrequencyUnit(v string) {
	o.FrequencyUnit.Set(&v)
}
// SetFrequencyUnitNil sets the value for FrequencyUnit to be an explicit nil
func (o *WorkflowEvent) SetFrequencyUnitNil() {
	o.FrequencyUnit.Set(nil)
}

// UnsetFrequencyUnit ensures that no value is present for FrequencyUnit, not even an explicit nil
func (o *WorkflowEvent) UnsetFrequencyUnit() {
	o.FrequencyUnit.Unset()
}

// GetFrequencyOfExecution returns the FrequencyOfExecution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowEvent) GetFrequencyOfExecution() int32 {
	if o == nil || IsNil(o.FrequencyOfExecution.Get()) {
		var ret int32
		return ret
	}
	return *o.FrequencyOfExecution.Get()
}

// GetFrequencyOfExecutionOk returns a tuple with the FrequencyOfExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowEvent) GetFrequencyOfExecutionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FrequencyOfExecution.Get(), o.FrequencyOfExecution.IsSet()
}

// HasFrequencyOfExecution returns a boolean if a field has been set.
func (o *WorkflowEvent) HasFrequencyOfExecution() bool {
	if o != nil && o.FrequencyOfExecution.IsSet() {
		return true
	}

	return false
}

// SetFrequencyOfExecution gets a reference to the given NullableInt32 and assigns it to the FrequencyOfExecution field.
func (o *WorkflowEvent) SetFrequencyOfExecution(v int32) {
	o.FrequencyOfExecution.Set(&v)
}
// SetFrequencyOfExecutionNil sets the value for FrequencyOfExecution to be an explicit nil
func (o *WorkflowEvent) SetFrequencyOfExecutionNil() {
	o.FrequencyOfExecution.Set(nil)
}

// UnsetFrequencyOfExecution ensures that no value is present for FrequencyOfExecution, not even an explicit nil
func (o *WorkflowEvent) UnsetFrequencyOfExecution() {
	o.FrequencyOfExecution.Unset()
}

// GetMaxNumberOfExecution returns the MaxNumberOfExecution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowEvent) GetMaxNumberOfExecution() int32 {
	if o == nil || IsNil(o.MaxNumberOfExecution.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxNumberOfExecution.Get()
}

// GetMaxNumberOfExecutionOk returns a tuple with the MaxNumberOfExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowEvent) GetMaxNumberOfExecutionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxNumberOfExecution.Get(), o.MaxNumberOfExecution.IsSet()
}

// HasMaxNumberOfExecution returns a boolean if a field has been set.
func (o *WorkflowEvent) HasMaxNumberOfExecution() bool {
	if o != nil && o.MaxNumberOfExecution.IsSet() {
		return true
	}

	return false
}

// SetMaxNumberOfExecution gets a reference to the given NullableInt32 and assigns it to the MaxNumberOfExecution field.
func (o *WorkflowEvent) SetMaxNumberOfExecution(v int32) {
	o.MaxNumberOfExecution.Set(&v)
}
// SetMaxNumberOfExecutionNil sets the value for MaxNumberOfExecution to be an explicit nil
func (o *WorkflowEvent) SetMaxNumberOfExecutionNil() {
	o.MaxNumberOfExecution.Set(nil)
}

// UnsetMaxNumberOfExecution ensures that no value is present for MaxNumberOfExecution, not even an explicit nil
func (o *WorkflowEvent) UnsetMaxNumberOfExecution() {
	o.MaxNumberOfExecution.Unset()
}

// GetExecutionTime returns the ExecutionTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowEvent) GetExecutionTime() string {
	if o == nil || IsNil(o.ExecutionTime.Get()) {
		var ret string
		return ret
	}
	return *o.ExecutionTime.Get()
}

// GetExecutionTimeOk returns a tuple with the ExecutionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowEvent) GetExecutionTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExecutionTime.Get(), o.ExecutionTime.IsSet()
}

// HasExecutionTime returns a boolean if a field has been set.
func (o *WorkflowEvent) HasExecutionTime() bool {
	if o != nil && o.ExecutionTime.IsSet() {
		return true
	}

	return false
}

// SetExecutionTime gets a reference to the given NullableString and assigns it to the ExecutionTime field.
func (o *WorkflowEvent) SetExecutionTime(v string) {
	o.ExecutionTime.Set(&v)
}
// SetExecutionTimeNil sets the value for ExecutionTime to be an explicit nil
func (o *WorkflowEvent) SetExecutionTimeNil() {
	o.ExecutionTime.Set(nil)
}

// UnsetExecutionTime ensures that no value is present for ExecutionTime, not even an explicit nil
func (o *WorkflowEvent) UnsetExecutionTime() {
	o.ExecutionTime.Unset()
}

// GetDateTestedUTC returns the DateTestedUTC field value if set, zero value otherwise.
func (o *WorkflowEvent) GetDateTestedUTC() time.Time {
	if o == nil || IsNil(o.DateTestedUTC) {
		var ret time.Time
		return ret
	}
	return *o.DateTestedUTC
}

// GetDateTestedUTCOk returns a tuple with the DateTestedUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetDateTestedUTCOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateTestedUTC) {
		return nil, false
	}
	return o.DateTestedUTC, true
}

// HasDateTestedUTC returns a boolean if a field has been set.
func (o *WorkflowEvent) HasDateTestedUTC() bool {
	if o != nil && !IsNil(o.DateTestedUTC) {
		return true
	}

	return false
}

// SetDateTestedUTC gets a reference to the given time.Time and assigns it to the DateTestedUTC field.
func (o *WorkflowEvent) SetDateTestedUTC(v time.Time) {
	o.DateTestedUTC = &v
}

// GetTestRecordsMatched returns the TestRecordsMatched field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowEvent) GetTestRecordsMatched() int32 {
	if o == nil || IsNil(o.TestRecordsMatched.Get()) {
		var ret int32
		return ret
	}
	return *o.TestRecordsMatched.Get()
}

// GetTestRecordsMatchedOk returns a tuple with the TestRecordsMatched field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowEvent) GetTestRecordsMatchedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestRecordsMatched.Get(), o.TestRecordsMatched.IsSet()
}

// HasTestRecordsMatched returns a boolean if a field has been set.
func (o *WorkflowEvent) HasTestRecordsMatched() bool {
	if o != nil && o.TestRecordsMatched.IsSet() {
		return true
	}

	return false
}

// SetTestRecordsMatched gets a reference to the given NullableInt32 and assigns it to the TestRecordsMatched field.
func (o *WorkflowEvent) SetTestRecordsMatched(v int32) {
	o.TestRecordsMatched.Set(&v)
}
// SetTestRecordsMatchedNil sets the value for TestRecordsMatched to be an explicit nil
func (o *WorkflowEvent) SetTestRecordsMatchedNil() {
	o.TestRecordsMatched.Set(nil)
}

// UnsetTestRecordsMatched ensures that no value is present for TestRecordsMatched, not even an explicit nil
func (o *WorkflowEvent) UnsetTestRecordsMatched() {
	o.TestRecordsMatched.Unset()
}

// GetConnectWiseID returns the ConnectWiseID field value if set, zero value otherwise.
func (o *WorkflowEvent) GetConnectWiseID() string {
	if o == nil || IsNil(o.ConnectWiseID) {
		var ret string
		return ret
	}
	return *o.ConnectWiseID
}

// GetConnectWiseIDOk returns a tuple with the ConnectWiseID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetConnectWiseIDOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectWiseID) {
		return nil, false
	}
	return o.ConnectWiseID, true
}

// HasConnectWiseID returns a boolean if a field has been set.
func (o *WorkflowEvent) HasConnectWiseID() bool {
	if o != nil && !IsNil(o.ConnectWiseID) {
		return true
	}

	return false
}

// SetConnectWiseID gets a reference to the given string and assigns it to the ConnectWiseID field.
func (o *WorkflowEvent) SetConnectWiseID(v string) {
	o.ConnectWiseID = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowEvent) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowEvent) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *WorkflowEvent) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *WorkflowEvent) SetParentId(v int32) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *WorkflowEvent) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *WorkflowEvent) UnsetParentId() {
	o.ParentId.Unset()
}

// GetParentConnectWiseId returns the ParentConnectWiseId field value if set, zero value otherwise.
func (o *WorkflowEvent) GetParentConnectWiseId() string {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		var ret string
		return ret
	}
	return *o.ParentConnectWiseId
}

// GetParentConnectWiseIdOk returns a tuple with the ParentConnectWiseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetParentConnectWiseIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentConnectWiseId) {
		return nil, false
	}
	return o.ParentConnectWiseId, true
}

// HasParentConnectWiseId returns a boolean if a field has been set.
func (o *WorkflowEvent) HasParentConnectWiseId() bool {
	if o != nil && !IsNil(o.ParentConnectWiseId) {
		return true
	}

	return false
}

// SetParentConnectWiseId gets a reference to the given string and assigns it to the ParentConnectWiseId field.
func (o *WorkflowEvent) SetParentConnectWiseId(v string) {
	o.ParentConnectWiseId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *WorkflowEvent) GetInfo() map[string]string {
	if o == nil || IsNil(o.Info) {
		var ret map[string]string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEvent) GetInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *WorkflowEvent) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given map[string]string and assigns it to the Info field.
func (o *WorkflowEvent) SetInfo(v map[string]string) {
	o.Info = &v
}

func (o WorkflowEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["eventCondition"] = o.EventCondition
	if o.FrequencyUnit.IsSet() {
		toSerialize["frequencyUnit"] = o.FrequencyUnit.Get()
	}
	if o.FrequencyOfExecution.IsSet() {
		toSerialize["frequencyOfExecution"] = o.FrequencyOfExecution.Get()
	}
	if o.MaxNumberOfExecution.IsSet() {
		toSerialize["maxNumberOfExecution"] = o.MaxNumberOfExecution.Get()
	}
	if o.ExecutionTime.IsSet() {
		toSerialize["executionTime"] = o.ExecutionTime.Get()
	}
	if !IsNil(o.DateTestedUTC) {
		toSerialize["dateTestedUTC"] = o.DateTestedUTC
	}
	if o.TestRecordsMatched.IsSet() {
		toSerialize["testRecordsMatched"] = o.TestRecordsMatched.Get()
	}
	if !IsNil(o.ConnectWiseID) {
		toSerialize["connectWiseID"] = o.ConnectWiseID
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if !IsNil(o.ParentConnectWiseId) {
		toSerialize["parentConnectWiseId"] = o.ParentConnectWiseId
	}
	if !IsNil(o.Info) {
		toSerialize["_info"] = o.Info
	}
	return toSerialize, nil
}

func (o *WorkflowEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventCondition",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowEvent := _WorkflowEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowEvent)

	if err != nil {
		return err
	}

	*o = WorkflowEvent(varWorkflowEvent)

	return err
}

type NullableWorkflowEvent struct {
	value *WorkflowEvent
	isSet bool
}

func (v NullableWorkflowEvent) Get() *WorkflowEvent {
	return v.value
}

func (v *NullableWorkflowEvent) Set(val *WorkflowEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowEvent(val *WorkflowEvent) *NullableWorkflowEvent {
	return &NullableWorkflowEvent{value: val, isSet: true}
}

func (v NullableWorkflowEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


